#!/bin/bash
#
# RIYOUHYOU_BEPPYOU_YOBO.SEARCH
# 利用票別表（介護）　検索用CGI
#
# Written by K.Aoyama :20131129

#--------------------------------------------------------------
# ログ
source /home/hands/E-LIFE/CAREPLAN/CGI/CAREPLAN.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null
mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).$HOSTNAME.$(date +%Y%m%d) ; set -xv
#--------------------------------------------------------------

KYOUTSU_TBL=${home_dir}/TBL

#--------------------------------------------------------------
rm -f $tmp-*
#--------------------------------------------------------------

#--------------------------------------------------------------
function error_exit {
  rm -f $tmp-*
  exit 0
}
#--------------------------------------------------------------

#--------------------------------------------------------------
# 変数の定義
namedata=$1

# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------------

# テスト
kaigodo=2
kyufuwariai=90

#--------------------------------------------------------------
# 入力データのチェック
# ユーザＩＤ
[ -z "${USER_ID}" -o "${USER_ID}" = "_" ] && error_exit "ログインユーザが不明です"
# 利用者
[ -z "${Riyoushaid}" -o "${Riyoushaid}" = "_" ] && error_exit "利用者が不明です"
curseirekiyear=$(date +%Y)
curmonth=$(date +%m)

# 対象年
[ -z "${hdTaishouYear}" -o "${hdTaishouYear}" = "_" ] && ${hdTaishouYear}=$curseirekiyear
# 対象月
[ -z "${taishoumonth}" -o "${taishoumonth}" = "_" ] && ${taishoumonth}=$curmonth
# 介護度
[ -z "${kaigodo}" -o "${kaigodo}" = "_" ] && error_exit "介護度が不明です"

#--------------------------------------------------------------
# マスター取得
#--------------------------------------------------------------
# 介護度マスタを抽出
cat ${KYOUTSU_TBL}/CONFIG/KAIGODO_MASTER                  |
LANG=C sort -k1,1                                         > ${tmp}-base_kaigodo

kaigokijungendogaku=$(awk '$1=="'${kaigodo}'"{print $3}' ${tmp}-base_kaigodo)

# 地域単価を抽出
cat ${KYOUTSU_TBL}/CONFIG/KAIGOHOKEN_TIIKI_TANKA          |
LANG=C sort -k1,2                                         > ${tmp}-base_tiikitanka

# 事業所マスタを抽出
cat ${KYOUTSU_TBL}/JIGYOUSHO/JIGYOUSHO_MASTER             |
# 1:事業者コード 2:サービス事業者タイプ 3:地域区分 4:事業所名 5:割引率
self 1 4 7 3 9                                               |
LANG=C sort -k2,3 > ${tmp}-jigyousho_base

cat ${tmp}-jigyousho_base                                 |
# 1:事業者コード 2:サービス事業者タイプ	3:地域区分 4:地域単価 5:事業所名 6:割引率
join1 key=2/3 ${tmp}-base_tiikitanka -                    |
LANG=C sort -k1,3  |
self 1 4 5 6  > ${tmp}-jigyousho_master

cp -p ${tmp}-jigyousho_master ${work_dir}/jigyousho_master

# 各サービスコードマスタを抽出
# 訪問介護
# 1:サービスコード種類 2:サービスコード項目 3:サービス名 4:集計単位
cat ${KYOUTSU_TBL}/SERVICECODE/SERVICECODE_HOUMONKAIGO_YOBO     |
self 2 3 4 NF-1 > ${tmp}-servicecode_houmonkaigo

# 訪問看護

# 通所介護

# 通所リハビリ

cat ${tmp}-servicecode_houmonkaigo ${tmp}-servicecode_houmonkango ${tmp}-servicecode_tsushokaigo ${tmp}-servicecode_tsushorihabiri |
LANG=C sort -k1,2   > ${tmp}-servicecode

cp -p ${tmp}-servicecode ${work_dir}/servicecode

# 利用票ファイルの取得
cat ${pompa_dir}/GETSUGAKU_RIYOU_YOBO/${Riyoushaid}/SERVICE_YOTEI_YOBO   |
#--------------------------------------------------------------
# 利用者ID
awk '$2=="'${Riyoushaid}'"'   |
#--------------------------------------------------------------
# 日付
# --------------------------
# 
awk '$3=="'${hdTaishouYear}'"&&$4=="'$taishoumonth'"'  |
# --------------------------
#--------------------------------------------------------------
# 1:利用者ID       2:利用年 3:利用月 4:事業者サービス区分 5:事業者ID
# 6:サービスコード 7:単位   8:回数   9:単位合計           10:付随費用
self 2 3 4 6 10 7 12 12 13 11 |
self 4 6 0                    |
LANG=C sort -k1,2             |
tee ${work_dir}/beppyou0      |
join1 key=1/2 ${tmp}-servicecode -  |
delf 1 2                      |
# 予防サービスは月毎に単位数を計算するサービスがあるため、その対応
# 1:サービスコード名   2:集計単位区分 3:利用者ID       4:利用年 5:利用月
# 6:事業者サービス区分 7:事業者ID     8:サービスコード 9:単位数 10:回数
# 11:単位合計          12:付随費用
self 3 4 5 6 7 8 1 2 9 10 11 12  |
tee ${work_dir}/beppyou1 |
LANG=C sort -k5,5 |
join1 key=5 ${tmp}-jigyousho_master -   |
LANG=C sort -k1,5 |
# 1:利用者ID      2:利用年   3:利用月    4:事業者サービス区分 5:事業者ID
# 6:地域単価      7:事業所名 8:割引率    9:サービスコード     10:サービスコード名
# 11:集計単位区分 12:単位    13:単位合計 14:付随費用          15:介護保険区分
awk '{if($8=="_"){$8=0};$13=int($12*(100-$8)/100);print $0}'      > $tmp-beppyou_work1

cp -p $tmp-beppyou_work1 $work_dir/beppyou_work1

cat $tmp-beppyou_work1 |
# 集計単位が回数、日数分のもの
awk '$11!="m"'         |
# 1:利用者ID      2:利用年   3:利用月 4:事業者サービス区分 5:事業者ID
# 6:地域単価      7:事業所名 8:割引率 9:サービスコード     10:サービスコード名
# 11:集計単位区分 12:単位    13:回数  14:単位合計          15:付随費用
sm2 +count 1 12 13 14 |
delf 11               |
tee ${work_dir}/beppyou3_1 |
LANG=C sort -k6nr,6nr    |
# 1:利用者ID        2:利用年   3:利用月    4:事業者サービス区分 5:事業者ID
# 6:地域単価        7:事業所名 8:割引率    9:サービスコード     10:サービスコード名
# 11:単位           12:回数    13:単位合計 14:付随費用          15:基準内限度額対象単位
# 16:基準外対象単位
# 区分基準限度単位数を超えた場合、地域単価が高いサービスから単位数を割り振る
awk 'BEGIN {gendogaku='${kaigokijungendogaku}'}{gendogaku=gendogaku-$13;if(gendogaku>0){kijunnaigendogaku=$13;kijungaigendogaku=0}else{kijunnaigendogaku=$13+gendogaku;if(kijunnaigendogaku<0){kijunnaigendogaku=0};kijungaigendogaku=$13-kijunnaigendogaku};print $0,kijunnaigendogaku,kijungaigendogaku}'    |
tee ${work_dir}/beppyou_gendo_1 |
LANG=C sort -k1,7  |
# 介護保険対象は区分限度額内、利用者負担は10%＋区分限度額超の対象分。
awk '{$17=int($13*$6);kaigotaisho=int($15*$6*(100-'${kyufuwariai}')/100);$18=int($15*$6)-kaigotaisho;if($18-int($18)>0){$18=$18+1};$19=kaigotaisho;$20=kaigotaisho+int($16*$6);$21=int($11*(100-$8)/100);print $0}'  |
self 1 2 3 4 5 6 7 8 9 10 11 21 12 13 14 15 16 17 18 19 20   |
sm4 1 8 9 12 13 21 |
tee ${work_dir}/beppyou4_1 |
# 1:利用者ID              2:利用年          3:利用月  4:事業者サービス区分 5:事業者ID
# 6:地域単価              7:事業所名        8:割引率  9:サービスコード     10:サービスコード名
# 11:単位                 12:単位（割引後） 13:回数   14:単位合計          15:付随費用
# 16:基準内限度額対象単位 17:基準外対象単位 18:請求額 19:介護保険給付額    20:個人負担額（保険対象内）
# 21:個人負担額（全額）
sm5 1 12 13 21      >  ${tmp}-riyouhyoubeppyou_record_1


cat $tmp-beppyou_work1 |
# 集計単位が月額のもの
awk '$11=="m"'         |
# 1:利用者ID      2:利用年   3:利用月 4:事業者サービス区分 5:事業者ID
# 6:地域単価      7:事業所名 8:割引率 9:サービスコード     10:サービスコード名
# 11:集計単位区分 12:単位    13:回数  14:単位合計          15:付随費用
sm2 +count 1 13 14 14 |
self 1/12 14 13 15    |
delf 11               |
tee ${work_dir}/beppyou3_2 |
LANG=C sort -k6nr,6nr    |
# 1:利用者ID        2:利用年   3:利用月    4:事業者サービス区分 5:事業者ID
# 6:地域単価        7:事業所名 8:割引率    9:サービスコード     10:サービスコード名
# 11:単位           12:回数    13:単位合計 14:付随費用          15:基準内限度額対象単位
# 16:基準外対象単位
# 区分基準限度単位数を超えた場合、地域単価が高いサービスから単位数を割り振る
awk 'BEGIN {gendogaku='${kaigokijungendogaku}'}{gendogaku=gendogaku-$13;if(gendogaku>0){kijunnaigendogaku=$13;kijungaigendogaku=0}else{kijunnaigendogaku=$13+gendogaku;if(kijunnaigendogaku<0){kijunnaigendogaku=0};kijungaigendogaku=$13-kijunnaigendogaku};print $0,kijunnaigendogaku,kijungaigendogaku}'    |
tee ${work_dir}/beppyou_gendo_2 |
LANG=C sort -k1,7  |
# 介護保険対象は区分限度額内、利用者負担は10%＋区分限度額超の対象分。
awk '{$17=int($13*$6);kaigotaisho=int($15*$6*(100-'${kyufuwariai}')/100);$18=int($15*$6)-kaigotaisho;if($18-int($18)>0){$18=$18+1};$19=kaigotaisho;$20=kaigotaisho+int($16*$6);$21=int($11*(100-$8)/100);print $0}'  |
self 1 2 3 4 5 6 7 8 9 10 11 21 12 13 14 15 16 17 18 19 20   |
sm4 1 8 9 12 13 21 |
tee ${work_dir}/beppyou4_2 |
# 1:利用者ID              2:利用年          3:利用月  4:事業者サービス区分 5:事業者ID
# 6:地域単価              7:事業所名        8:割引率  9:サービスコード     10:サービスコード名
# 11:単位                 12:単位（割引後） 13:回数   14:単位合計          15:付随費用
# 16:基準内限度額対象単位 17:基準外対象単位 18:請求額 19:介護保険給付額    20:個人負担額（保険対象内）
# 21:個人負担額（全額）
sm5 1 12 13 21      >  ${tmp}-riyouhyoubeppyou_record_2

cat ${tmp}-riyouhyoubeppyou_record_1 ${tmp}-riyouhyoubeppyou_record_2 > ${tmp}-riyouhyoubeppyou_record

cp ${tmp}-riyouhyoubeppyou_record ${work_dir}/riyouhyoubeppyou_record

cat ${tmp}-riyouhyoubeppyou_record

## 終了
#rm -f $tmp-*
exit 0
