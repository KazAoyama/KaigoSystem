#!/bin/bash
#
# CAREPLAN_RENRAKU_TSUIKA.DISPLAY : 連絡事項登録表示
#
# Usage : CAREPLAN_RENRAKU_TSUIKA.DISPLAY
#
# Written by K.Aoyama(HANDS.LAB)

# ログ
source /home/hands/E-LIFE/CAREPLAN/CGI/CAREPLAN.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null

mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date +%Y%m%d) ; set -xv

rm -f $tmp-*

# ディレクトリ設定
tbl_dir="${home_dir}/TBL"
user_data_dir="/DATA/E-LIFE/UNEI/RIYOUSHA"
kengen_dir="${home_dir}/TBL/KENGEN_KANRI"

# 変数の定義
namedata=$1
result_data=$2
opt_data=$3
today="$(date +%Y%m%d)"

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------


echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu
echo ${Riyoushaid} > ${tmp}-riyoushaid

#--------------------------------------------------------------
# ログインUSER名と施設の取得
cat ${tbl_dir}/JYUUGYOUIN_MASTER/USER_MASTER  |
tee ${tmp}-jugyoin        |
# 1:USER_ID 2:ユーザー名
awk '$1=="'${userid}'"'   |
# 1:USER_ID 2:ユーザー名
self 2                    > ${tmp}-usermei


self 1 2 ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst

cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst

# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou
#-----------------------------------------------------------




[ -z "${MODE}" ] && MODE="init"
#--------------------------------------------------------------

#--------------------------------------------------------------
### モードによる表示の分岐
case "${MODE}" in

  # 初期表示
  init | to_reset) 
    : > $tmp-listdata
  ;;

  # 検索
  search) 
    if [ "$(gyo ${result_data})" != 0 ] ; then
      cat ${result_data}        > $tmp-listdata
    else
    : > $tmp-listdata
    fi
  ;;


  # 更新
  regist)
    # 結果判定
    result=$(awk '$1=="result"{print $2}' ${result_data})
#    result_all="$(gyo ${listdata})"
    if [ "${result}" = "ok" ] ; then
      message="更新完了"
    else
      message=$(awk '$1=="message"{print $2}' ${result_data})
      [ -z "${message}" ] && message="処理エラー"
    fi
    if [ "$(gyo ${opt_data})" != 0 ] ; then
      cat ${opt_data}        > $tmp-listdata
    else
    # 空のリストデータを作成する
      : > $tmp-listdata
    fi

  ;;

esac


#--------------------------------------------------------------
# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
cat << FIN > $tmp-html2
    <script type="text/javascript" language="javascript">
      alert('${message}');
    </script>
FIN
##else
##cat << FIN > $tmp-html2
##    <script type="text/javascript" language="javascript">
##      window.close();
##    </script>
##FIN
fi
#--------------------------------------------------------------

#--------------------------------------------------------
# 基本データのネーム変換
eval $(name-source ${tmp}-listdata)
#--------------------------------------------------------

[ -z "${inputDate}" -o "${inputDate}" = "_" ] && inputDate=$(echo "${hdRenrakuDate}" | self 1.1.4 1.5.2 1.7.2 | awk '{print $1"-"$2"-"$3}')
#[ -z "${inputDate}" -o "${inputDate}" = "_" ] && inputDate=$(mdate today | self 1.1.4 1.5.2 1.7.2 | awk '{print $1"-"$2"-"$3}')

taishoudate=$(echo ${inputDate} | awk '{print substr($1,1,4)substr($1,6,2)substr($1,9,2)}')

[ "$checkMoushiokuri" = "on" ] && flgMoushiokuri="checked"
[ "$checkHoumonkaigoFlg" = "on" ] && flgHoumonkaigo="checked"

# 事業所利用者ステータスから利用者を抽出
# 利用者以外
echo "99999999" "職員連絡" > $tmp-shokuin-renraku
# 過去の人対応
cat ${user_data_dir}/JIGYOUSHO_RIYOUSHA_STATUS |
awk '$1=="'${shisetsu}'"' |
LANG=C sort -k2,2 |
join1 key=2 <(self 1 2 ${user_data_dir}/RIYOUSHA_MASTER) |
self 2 3          |
awk '$1=="'${relStaff}'"{print $1,$2}' > $tmp-select_staff

cat ${user_data_dir}/JIGYOUSHO_RIYOUSHA_STATUS |
awk '$1=="'${shisetsu}'"&&$(NF-2)!="9"&&$3<="'${taishoudate}'"&&"'${taishoudate}'"<=$4' |
LANG=C sort -k2,2 |
join1 key=2 <(self 1 2 3 ${user_data_dir}/RIYOUSHA_MASTER) |
# 利用者ID 利用者名
self 2 3 4 |
cat - $tmp-select_staff |
LANG=C sort -k1,2 |
getlast 1 2 |
LANG=C sort -k3,3 |
self 1 2    |
cat $tmp-shokuin-renraku - |
awk '{if($1=="'${relStaff}'"){print $1,$2,"selected"}else{print $1,$2,"@"}}' > $tmp-rel_staff


# 施設利用者ステータスから施設を抽出
:> $tmp-shisetsu_list



[ -z "${relStaff}" -o "${relStaff}" = "_" ] && relStaff="99999999"
   if [ "${relStaff}" != "99999999" ] ; then
      relShisetsuFirst=$(echo "${relShisetsu}" | self 1.1.4)
      relShisetsuSecond=$(echo "${relShisetsu}" | self 1.5.2)
      # 過去の人対応
      cat ${user_data_dir}/SHISETSU_RIYOUSHA_STATUS |
      awk '$(NF-2)!="9"'              |
      awk '$1=="'${relShisetsuFirst}'"&&$2=="'${relShisetsuSecond}'"{print $1,$2}' > $tmp-shisetsu_list_select

      cat ${user_data_dir}/SHISETSU_RIYOUSHA_STATUS |
      awk '$(NF-2)!="9"&&$7<="'${taishoudate}'"&&"'${taishoudate}'"<=$8'              |
      awk '$6=="'${relStaff}'"{print $1,$2}' |
      cat - $tmp-shisetsu_list_select |
      LANG=C sort -k1,2 -u |
      join1 key=1 $tmp-shisetsu_mst > $tmp-shisetsu_list
   else
      cat ${user_data_dir}/JIGYOUSHO_RIYOUSHA_STATUS |
      awk '$(NF-2)!="9"&&$1=="'${shisetsu}'"&&$3<="'${taishoudate}'"&&"'${taishoudate}'"<=$4{print $2}' |
      LANG=C sort -k1,1 |
      getlast 1 1 > $tmp-riyousha_id
      cat ${user_data_dir}/SHISETSU_RIYOUSHA_STATUS |
      awk '$(NF-2)!="9"&&$7<="'${taishoudate}'"&&"'${taishoudate}'"<=$8'              |
      LANG=C sort -k6,6               |
      join1 key=6 $tmp-riyousha_id |
      awk '{print $1,$2}' |
      LANG=C sort -k1,2 -u |
      join1 key=1 $tmp-shisetsu_mst > $tmp-shisetsu_list
   fi

# 建屋考慮
cat ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM |
self 1 2 |
getlast 1 2 |
join1 key=1 $tmp-shisetsu_mst > $tmp-shisetsu_tateya_mst

[ -z "${relStaff}" -o "${relStaff}" = "_" ] && cp $tmp-shisetsu_tateya_mst $tmp-shisetsu_list
   
# 施設を選択
echo "aaaa" "事業所内" "aa" > $tmp-shisetsu-renraku
cat $tmp-shisetsu-renraku $tmp-shisetsu_list |
awk '{if($3=="01"){print $1$3,$2"(シニア)",$3}else if($3=="02"){print $1$3,$2"(ケア)",$3}else{print $1$3,$2,$3}}' |
awk '{if($1=="'${relShisetsu}'"){print $1,$2,"selected"}else{print $1,$2,"@"}}' > $tmp-rel_shisetsu


# 事業所を選択
cat ${home_dir}/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER |
awk '$(NF-2)!="9"&&$1!="'${shisetsu}'"{print $1,$2}' > $tmp-group-jigyousho_master

echo "_" "自事業所" > $tmp-ji-jigyousho

cat $tmp-ji-jigyousho $tmp-group-jigyousho_master |
awk '{if($1=="'$relJigyousho'"){select="selected"}else{select="@"};print $0,select}' > $tmp-jigyousho_list

echo "CAREPLAN_MENU.CGI" > $tmp-cgi
# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
awk '$2=="0000"||$2=="'$shisetsu'"'         |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -k7,7                                          |
join0 key=7 $tmp-cgi                                       > ${tmp}-kengenlist

cat << FIN | sed 's/ _$/ @/g' > $tmp-calsed
###RIYOUSHAID### $Riyoushaid
###USERID### $userid
###PASSWORD### $password
###SHISETSUID### $shisetsu
###INPUTDATE###   $inputDate
###INPUTTIME###   $inputTime
###CAREPLANRENRAKUID###   $CareplanRenrakuID
###CAREPLANRENRAKUDETAIL###   $CareplanRenrakuDetail
###HDRENRAKUDATE###   $hdRenrakuDate
###HDKENSAKUDATE### $hdkensakudate
###CHECKMOUSHIOKURI### $flgMoushiokuri
###CHECKHOUMONKAIGOFLG### $flgHoumonkaigo
###RELAITESAKI###  ${relAitesaki}
###SELECT_SHISETSU### $select_shisetsu
###HDSHISETSUKENSAKU### $hdShisetsuKensaku
###HDCAREMANAGERKENSAKU### $hdCaremanagerKensaku
FIN

#-----------------------------------------------------------
# 登録・印刷ボタンの表示
# 施設名はログインユーザーの権限のある施設を取得
self 9 $tmp-kengenlist |
LANG=C sort -k1,1      |
tail -1                > $tmp-dispkengen

# 他事業所で登録された連絡ノートの場合は修正は出来ない。
[ ! -z "${relJigyousho}" -a "${relJigyousho}" != "_" -a "${relJigyousho}" = "${shisetsu}" ] && echo "1" > $tmp-dispkengen


# 権限がない人は新規登録や出力が出来ない
if [ $(cat $tmp-dispkengen) = "3" ] ;then
  if [ "$checkHoumonkaigoFlg" = "s" ] ; then
    echo "###TOUROKUDISP### none" >> $tmp-calsed
  else
    echo "###TOUROKUDISP### @" >> $tmp-calsed
  fi
  echo "###PRINTDISP### @"   >> $tmp-calsed
elif [ $(cat $tmp-dispkengen) = "2" ] ;then
  if [ "$checkHoumonkaigoFlg" = "s" ] ; then
    echo "###TOUROKUDISP### none" >> $tmp-calsed
  else
    echo "###TOUROKUDISP### @" >> $tmp-calsed
  fi
  echo "###PRINTDISP### none"   >> $tmp-calsed
else
  echo "###TOUROKUDISP### none" >> $tmp-calsed
  echo "###PRINTDISP### none"   >> $tmp-calsed
fi

cat $tmp-calsed      |
sed 's/\\n/###KAIGYO###/g'     >  $tmp-calsed_kaigyozumi

# HTMLの作成
cat ${html_dir}/CAREPLAN_RENRAKU_TSUIKA.html |
calsed -f $tmp-calsed_kaigyozumi - |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -l###RELSTAFF### - ${tmp}-rel_staff |
mojihame -l###RELSHISETSU### - ${tmp}-rel_shisetsu |
mojihame -l###RELJIGYOUSHO### - ${tmp}-jigyousho_list |
sed 's/###KAIGYO###/\n/g'     |
sed 's/###SPACE###/ /g'       |
sed 's/"_"/""/g'              |
tee $tmp-html |
#--------------------------------------------------------------
#--------------------------------------------------------------
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |
#formhame -d"_" - ${namedata}  |
cat -
#--------------------------------------------------------------

rm -f ${tmp}-*
exit 0
