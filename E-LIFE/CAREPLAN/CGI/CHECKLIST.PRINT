#!/bin/bash
#
# CHECKLIST.DISPLAY : チェックリスト(予防)表示
#
# Usage : CHECKLIST.DISPLAY
#
# Written by K.Aoyama(HANDS.LAB)

# ログ
source /home/hands/E-LIFE/CAREPLAN/CGI/CAREPLAN.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null

mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date +%Y%m%d) ; set -xv

rm -f $tmp-*

# ディレクトリ設定
test_tbl_dir="${home_dir}/TEST/TBL"
kengen_dir="${home_dir}/TBL/KENGEN_KANRI"

# 変数の定義
namedata=$1
result_data=$2
opt_data=$3
today="$(date +%Y%m%d)"

cp -p ${namedata} $work_dir/namedata_checklist

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------


echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu
echo ${Riyoushaid} > ${tmp}-riyoushaid

# ログインUSER名と施設の取得（仮）
cat ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
# 1:USER_ID 2:ユーザー名
join1 key=1 ${tmp}-user                            |
# 1:USER_ID 2:ユーザー名
self 2                                             > ${tmp}-usermei

self 1 2 ${home_dir}/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst

cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst

cat $tmp-disp_shisetsu_mst |
# 1:施設コード 2:施設名
join1 key=1 ${tmp}-shisetsu                        |
self 2                                             > ${tmp}-user_shisetsu

# 元号
cat ${home_dir}/TBL/ZEIRITSU_GENGOU_MASTER/GENGOU  |
LANG=C sort -k3,3nr                                |
awk '$5!="9"{print $2,substr($3,1,4)-1}'        > $tmp-gengou_mst

# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou


# 本日の日付
curday=$(mdate today | self 1)

# 介護保険情報
# 1:利用者ID            2:介護度              3:保険者名                    4:認定年和暦              5:認定年
# 6:認定月              7:認定日              8:認定年月日西暦              9:認定有効期間開始年和暦  10:認定有効期間開始年
# 11:認定有効期間開始月 12:認定有効期間開始日 13:認定有効期間開始年月日西暦     14:認定有効期間終了年和暦 15:認定有効期間終了年
# 16:認定有効期間終了月 17:認定有効期間終了日 18:認定有効期間終了年月日西暦
self 1 3 5 14/28 ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KAIGOHOKEN   |
#self 1 3 5 14/28 ${home_dir}/CAREPLAN/TMP/RIYOUSHA_KAIGOHOKEN   |
awk '$13<="'${curday}'"&&$18>="'${curday}'"'                  |
# 1:利用者ID               2:介護度 3:保険者名 4:認定年月日 5:有効期間開始年月日
# 6:認定有効期間終了年月日
self 1/3 8 13 18                        > $tmp-riyousha_kaigohoken

cp $tmp-riyousha_kaigohoken $work_dir/riyousha_kaigohoken

# 元号マスタ
self 1/4 ${home_dir}/TBL/ZEIRITSU_GENGOU_MASTER/GENGOU                  > $tmp-gengou_master
self 1 2 $tmp-gengou_master                        > $tmp-gengou_master2

cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KIHON          |
join1 key=1 ${tmp}-riyoushaid                      |
# 1:利用者名 2:誕生日和暦 3:誕生日年 4:誕生日月 5:誕生日
# 6:住所
self 2 5 6 7 8 14                                  |
LANG=C sort -k2,2                                  |
# 1:利用者名 2:誕生日和暦 3:和暦名 4:和暦開始 5:和暦終了
# 6:誕生日年 7:誕生日月   8:誕生日 9:住所
join1 key=2 $tmp-gengou_master -        |
# 1:利用者名 2:和暦名 3:誕生日年 4:誕生日月 5:誕生日
# 6:住所
self 1 3 6 7 8 9                                   |
awk '{print $1,$2$3"年"$4"月"$5"日",$6}'                       > ${tmp}-riyousha_kihon
Riyoushamei=$(self 1 ${tmp}-riyousha_kihon)

#--------------------------------------------------------------

#--------------------------------------------------------------
    if [ "$(gyo ${result_data})" != 0 ] ; then
       cat $result_data > $tmp-listdata
    else
    # 空のリストデータを作成する
       : > $tmp-listdata
    fi

  # 検索結果
#  search)
#    if [ "$(gyo ${result_data})" != 0 ] ; then
#      cat ${result_data}        |
      # 1:ID         2:入力内容 3:入力者 4:入力者名 5:最終>更新日時
      # 6:最終更新者
#      LANG=C sort -k6,6nr       |
#      self 1 2 3 4 5            |
#      rank                      |
#      head -10                  > $tmp-listdata
#    else
#      : > $tmp-listdata
#    fi
#  ;;

cp $tmp-listdata $work_dir/listdata_checklist

#--------------------------------------------------------------
# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
cat << FIN > $tmp-html2
    <script type="text/javascript" language="javascript">
      alert('${message}');
    </script>
FIN
fi
#--------------------------------------------------------------

# 基本チェックデータ取得
awk '$1=="k"' $tmp-listdata    |
delf 1           > $tmp-listdata_kihon

# チェックリストデータ取得
awk '$1=="l"{print $4,$5,$6,$7,$8,$9}' $tmp-listdata    > $tmp-listdata_list

if [ "$(gyo $tmp-listdata_list)" = "0" ] ; then
    cat ${home_dir}/TBL/CONFIG/CHECKLIST_YOBO           |
# 1:チェックリストID 2:チェック内容 3:チェックカテゴリ値 4:YES時の値 5:No時の値
    awk '{print $0,"_"}'                                > $tmp-listdata_list
fi

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source $tmp-listdata_kihon)
#--------------------------------------------------------

[ -z "${KihonCheckListShinchou}" -o "${KihonCheckListShinchou}" = "_" ] && KihonCheckListShinchou=0
[ -z "${KihonCheckListTaiju}" -o "${KihonCheckListTaiju}" = "_" ] && KihonCheckListTaiju=0
[ -z "${KihonCheckListBMI}" -o "${KihonCheckListBMI}" = "_" ] && KihonCheckListBMI=0
[ -z "${hdKinyubi}" -o "${hdKinyubi}" = "_" ] && hdKinyubi=$(mdate today | self 1)
# 日付表示処理
[ -z "${Kinyubi}" -o "${Kinyubi}" = "_" ] && Kinyubi=$(mdate today | self 1 | awk '{print substr($1,1,4),substr($1,5,2),substr($1,7,2)}' | 1bai 2 3 | awk '{print $1"年"$2"月"$3"日"}')

dispKinyubi=$(echo $hdKinyubi | awk '{print substr($1,1,4)"/"substr($1,5,2)"/"substr($1,7,2)}')

echo "42" > $tmp-cgi
# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -k4,4                                          |
join0 key=4 $tmp-cgi                                       > ${tmp}-kengenlist

cat << FIN | sed 's/ _$/ @/g' > $tmp-calsed
###RIYOUSHAID### $Riyoushaid
###RIYOUSHAMEI### $Riyoushamei
###KINYUBI### $Kinyubi
###HDKINYUBI### $hdKinyubi
###SHINCHOU###  $KihonCheckListShinchou
###TAIJU###     $KihonCheckListTaiju
###BMI###       $KihonCheckListBMI
###RIYOUSHAID### $Riyoushaid
###HDKEIKAKUSAKUSEIDATE###   $hdKeikakuSakuseiDate
###KEIKAKUSAKUSEIDATE### $KeikakuSakuseiDate
###USERID### $USER_ID
###SHISETSUID### $shisetsu
###PASSWORD### $password
###SELECT_SHISETSU### $select_shisetsu
###DOMAIN### $domain
FIN

#-----------------------------------------------------------
# 登録・印刷ボタンの表示
# 施設名はログインユーザーの権限のある施設を取得
self 9 $tmp-kengenlist > $tmp-dispkengen

# 権限がない人は新規登録や出力が出来ない
if [ $(cat $tmp-dispkengen) = "3" ] ;then
  echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed
  echo "###TOUROKUDISP### @" >> $tmp-calsed
  echo "###PRINTDISP### @"   >> $tmp-calsed
elif [$(cat $tmp-dispkengen) = "2" ] ;then
  echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed
  echo "###TOUROKUDISP### @" >> $tmp-calsed
  echo "###PRINTDISP### none"   >> $tmp-calsed
else
  echo "###SHINKITOUROKUDISP### none" >> $tmp-calsed
  echo "###TOUROKUDISP### none" >> $tmp-calsed
  echo "###PRINTDISP### none"   >> $tmp-calsed
fi


cat $tmp-calsed      |
sed 's/\\n/###KAIGYO###/g'     >  $tmp-calsed_kaigyozumi

# HTMLの作成
cat ${html_dir}/PRINT_CHECKLIST.html |
calsed -f $tmp-calsed_kaigyozumi - |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -l###GENGOU### - $tmp-gengou_mst |
mojihame -l###CHECKLISTDATA### - $tmp-listdata_list  |
sed 's/###KAIGYO###/\n/g'     |
sed 's/###SPACE###/ /g'       |
tee $tmp-html |
#--------------------------------------------------------------
#--------------------------------------------------------------
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |
cat - > $tmp-checklist-base_pdf.html

cp $tmp-checklist-base_pdf.html $work_dir/checklist-base_pdf.html

mkdir -p ${home_dir}/CAREPLAN/DOWNLOAD/${Riyoushaid}

# 過去のPDFを一旦消す
rm ${home_dir}/CAREPLAN/DOWNLOAD/${Riyoushaid}/CHECKLIST_YOBO.pdf

/home/hands/E-LIFE/TOOL/wkhtmltopdf-amd64 --margin-bottom 2 --margin-left 5 --margin-right 5 --margin-top 2 $tmp-checklist-base_pdf.html ${home_dir}/CAREPLAN/DOWNLOAD/${Riyoushaid}/CHECKLIST_YOBO.pdf

# HTML の出力
cat << EOF > ${tmp}-html.html
<HTML>
  <HEAD>
    <SCRIPT type="text/javascript" language="Javascript">
      //<![CDATA[
      window.onload=init
      function init(){
           window.open("/E-LIFE/CAREPLAN/DOWNLOAD/${Riyoushaid}/CHECKLIST_YOBO.pdf","pdfprint");
           window.self.close();
      }
      //]]>
    </SCRIPT>
  </HEAD>
</HTML>
EOF

cat ${tmp}-html.html

#--------------------------------------------------------------
#formhame -d"_" - ${namedata}

rm -f ${tmp}-*
exit 0
