#!/bin/bash
#
# KYOTAKUSHIEN_MENU_YOBO.DISPLAY : 居宅支援メニュー（介護）MENU表示
#
# Usage : KYOTAKUSHIEN_MENU_YOBO.DISPLAY
#
# Written by K.Aoyama(HANDS.LAB)

# ログ
source /home/hands/E-LIFE/CAREPLAN/CGI/CAREPLAN.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null

mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date +%Y%m%d) ; set -xv



rm -f $tmp-*


# ディレクトリ設定
test_tbl_dir="${home_dir}/TEST/TBL"
kengen_dir="${home_dir}/TBL/KENGEN_KANRI"

# 変数の定義
namedata=$1
checkfile=$2
result_data=$3
today="$(date +%Y%m%d)"

cp -p ${namedata} $work_dir/namedata_menu

# 対象日付
curday=$(mdate today | self 1)

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------

[ -z "$hdkensakudate" -o "$hdkensakudate" = "_" ] && hdkensakudate=$(mdate today | self 1)
# 仮日付は今日。
curday=$hdkensakudate

echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu

# ログインUSER名と施設の取得（仮）
self 1 2 ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
tee $tmp-user_mst                                  |
# 1:USER_ID 2:ユーザー名
join1 key=1 ${tmp}-user                            |
# 1:USER_ID 2:ユーザー名
self 2                                             > ${tmp}-usermei

self 1 2 ${home_dir}/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst

cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst

# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou

# 施設検索内容(2015/04/30)
[ -z "${hdShisetsuKensaku}" -o "${hdShisetsuKensaku}" = "_" ] && hdShisetsuKensaku="0"
self 1 6 ${data_dir}/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
if [ "${hdShisetsuKensaku}" = "0" ] ; then
  cat -
else
  awk '$1=="'${hdShisetsuKensaku}'"'
fi |
self 2 |
LANG=C sort -k1,1 > $tmp-shisetsu_riyousha

cat ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON |
tee $tmp-shisetsu_mst                              |
# 1:施設コード 2:施設名
join1 key=1 ${tmp}-shisetsu                        |
self 2                                             > ${tmp}-user_shisetsu


# 居宅、訪問介護事業施設をはずす
cat $tmp-shisetsu_mst                              |
awk 'substr($1,1,1)!="1"'                          |
self 1 2                                           |
# 検索項目による絞込み
awk '{if($1=="'${hdShisetsuKensaku}'"){$3="selected"}else{$3="@"};print $0}'> $tmp-shisetsulist

# 退職者対応
awk '$(NF-2)!="9"' ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_KIHON    |
awk '$4<="'$today'"&&"'$today'"<=$5'               |
LANG=C sort -k1,1                                   |
self 1                                             > $tmp-yuko-jyuugyouin

# ケアマネ抽出
#cat ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_SHISETSU |
# 施設で絞込み + 特別所属（20140602）
cat ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_SHISETSU ${home_dir}/TBL/JYUUGYOUIN_MASTER/EXTRA_USER_SHISETSU |
LANG=C sort -k2,2                                   |
join1 key=2 ${tmp}-shisetsu                         |
awk '$6=="1"{print $1}'                             |
LANG=C sort -k1,1                                   |
join1 key=1 $tmp-user_mst                           |
join0 key=1 $tmp-yuko-jyuugyouin                   |
# 検索項目によるケアマネ絞込み(2015/04/30)
if [ -z "${hdCaremanagerKensaku}" -o "${hdCaremanagerKensaku}" = "_" ]; then
   awk '{if($1=="'${userid}'"){$3="selected"}else{$3="@"};print $0;}'
else
   awk '{if($1=="'${hdCaremanagerKensaku}'"){$3="selected"}else{$3="@"};print $0;}'
fi > $tmp-caremanagerlist


# 元号マスタ
cat ${home_dir}/TBL/ZEIRITSU_GENGOU_MASTER/GENGOU  |
awk '$5!="9"{print $1,$2,$3,$4}'                   > $tmp-gengou_master
self 1 2 $tmp-gengou_master                        > $tmp-gengou_master2

[ -z "${MODE}" ] && MODE="init"
#--------------------------------------------------------------

#--------------------------------------------------------------
### モードによる表示の分岐
case "${MODE}" in

  # 初期表示
  init | to_reset)
    if [ "$(gyo ${result_data})" != 0 ] ; then
      cat ${result_data}        > $tmp-listdata
    else
    # 空のリストデータを作成する
      : > $tmp-listdata
    fi
  ;;

  # 検索結果
  search)
    if [ "$(gyo ${result_data})" != 0 ] ; then
      cat ${result_data}        > $tmp-listdata
      # 1:ID         2:入力内容 3:入力者 4:入力者名 5:最終>更新日時
      # 6:最終更新者
#      LANG=C sort -k6,6nr       |
#      self 1 2 3 4 5            |
#      rank                      |
#      head -10                  > $tmp-listdata
    else
      : > $tmp-listdata
    fi
  ;;

esac

#--------------------------------------------------------------
# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
cat << FIN > $tmp-html2
    <script type="text/javascript" language="javascript">
      alert('${message}');
    </script>
FIN
fi
#--------------------------------------------------------------

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source $tmp-listdata)
#--------------------------------------------------------

# ログインユーザのみ表示（デフォルト）対応（2014/06/23）
cat $tmp-user_mst                      |
# ケアマネ検索によるユーザ絞込み(2015/04/30)
if [ -z "${hdCaremanagerKensaku}" -o "${hdCaremanagerKensaku}" = "_" ] ; then
   awk '$1=="'${userid}'"'
elif [ "${hdCaremanagerKensaku}" = "0" ]; then
   cat -
else
   awk '$1=="'${hdCaremanagerKensaku}'"'
fi > $tmp-user_mst_login
#awk '$1=="'${userid}'"'                > $tmp-user_mst_login

cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KYOTAKU_JIGYOUSHO  |
awk '$(NF-2)!="9"'                     |
awk '"'$curday'"<$7{print $1,$4,$5}'   |
LANG=C sort -k2,2                                         |
tee $tmp-user_caremanager_notlogin1                            |
#join2 +_ key=2 $tmp-user_mst                              |
# ログインユーザのみ表示（デフォルト）対応（2014/06/23）
join1 key=2 $tmp-user_mst_login                              |
delf 2                                                    |
LANG=C sort -k1,1 > $tmp-user_caremanager

# 利用者が特定されているときの対応(2014/6/27)
cat $tmp-user_caremanager_notlogin1                       |
join1 key=2 $tmp-user_mst                                 |
delf 2                                                    |
LANG=C sort -k1,1 > $tmp-user_caremanager_notlogin

[ -s $tmp-user_caremanager ] || echo "_" "_" "_" > $tmp-user_caremanager
[ -s $tmp-user_caremanager_notlogin ] || echo "_" "_" "_" > $tmp-user_caremanager_notlogin

# テスト
USER_ID=${userid}

# ユーザ居宅支援事業所紐付け
cat ${data_dir}/UNEI/RIYOUSHA/JIGYOUSHO_RIYOUSHA_STATUS   |
awk '"'$curday'"<$4&&$1=="'${shisetsu}'"{print $2}'  |
LANG=C sort -k1,1                      > $tmp-jigyousho_user

# 介護保険情報
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KAIGOHOKEN         |
awk '$23<="'$curday'"&&"'$curday'"<=$28&&$3>="1"&&$3<="2"'  |
self 1                                         |
LANG=C sort -k1,1             > $tmp-taishou_kaigo


# 対象者
#cat ${home_dir}/TBL/RIYOUSHA/RIYOUSHA_MASTER |
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_MASTER |
awk '$(NF-2)!="9"'     |
LANG=C sort -k1,1                             |
join0 key=1 $tmp-taishou_kaigo                |
join0 key=1 $tmp-jigyousho_user               > $tmp-taishousha

# <<<<<<<<<対象者選択修正（2014/7/4）
cat $tmp-taishousha |
awk '$1!="'${Riyoushaid}'"{print $1,$2,$3,"@","white"}'  |
LANG=C sort -k1,1       |
join1 key=1 $tmp-user_caremanager |
# 施設検索によるユーザ絞込み(2015/04/30)
if [ "${hdShisetsuKensaku}" = "0" ] ; then
  cat -
else
  join0 key=1 $tmp-shisetsu_riyousha
fi > $tmp-taishousha_noselect

cat $tmp-taishousha |
awk '$1=="'${Riyoushaid}'"{print $1,$2,$3,"@","skyblue"}'  |
LANG=C sort -k1,1       |
join1 key=1 $tmp-user_caremanager_notlogin  > $tmp-taishousha_select

#awk '$(NF-2)!="9"'     |
#if [ -z "${Riyoushaid}" -o "${Riyoushaid}" = "_" ] ; then
#  cat -
#else
#  awk '$1=="'${Riyoushaid}'"'
#fi |
# 50音表示順対応（2014/06/23）
#awk '{print $1,$2,"@"}' |
#awk '{print $1,$2,$3,"@"}' |
cat $tmp-taishousha_noselect $tmp-taishousha_select |
#LANG=C sort -k1,1       |
#join2 +_ key=1 $tmp-user_caremanager          |
# ログインユーザのみ表示（デフォルト）対応（2014/06/23）
#if [ -z "${Riyoushaid}" -o "${Riyoushaid}" = "_" ] ; then
#  join1 key=1 $tmp-user_caremanager
#else
#  join1 key=1 $tmp-user_caremanager_notlogin
#fi |
#awk '{if($2=="_"){$5=$3}else{$5=$2};print $0}'          |
# 50音表示順対応（2014/06/23）
awk '{if($2=="_"){$6=$3}else{$6=$2};print $0}'          |
# 50音表示順対応（2014/06/23）
LANG=C sort -k5,5                             |
#delf 2 3                                      |
# 50音表示順対応（2014/06/23）
delf 2 3 5                                     > $tmp-taishoushalist
#LANG=C sort -k1,1 > $tmp-taishoushalist


# ケアプラン作成日が設定されていない場合、最新のデータを表示
if [ -z "$hdKeikakuSakuseiDate" -o "$hdKeikakuSakuseiDate" = "_" -o "$hdKeikakuSakuseiDate" = " " ] ; then
    cat ${apdata_dir}/CAREPLAN_YOBO/${Riyoushaid}/CAREPLAN_DATE |
    awk '$(NF-2)!="9"'                                           |
    delf 6/8                                                     |
    # 1:利用者ID 2:ケアプラン計画作成日(西暦) 3:ケアプラン計画作成日(和暦) 4:ケアプラン作成者ID 5:ケアプラン作成事業者
    getlast 1 1                                                  >  ${tmp}-careplan_date
    hdKeikakuSakuseiDate=$(self 2 ${tmp}-careplan_date)
    KeikakuSakuseiDate=$(self 3 ${tmp}-careplan_date)
fi


dispKeikakuSakuseiDate=$(echo $hdKeikakuSakuseiDate | awk '$1!=""{print "\""substr($1,1,4)"/"substr($1,5,2)"/"substr($1,7,2)"\""}')

#hdkensakudate=$(mdate today | self 1)

# 和暦変換（変更日）
# 元号マスタ
cat ${home_dir}/TBL/ZEIRITSU_GENGOU_MASTER/GENGOU  |
awk '$5!="9"{print $1,$2,$3,$4}'                   |
awk '$3<="'$hdkensakudate'"&&"'$hdkensakudate'"<=$4' |
awk '{print $2,"'$hdkensakudate'",substr($3,1,4)-1}'    |
awk '{print $1,substr($2,1,4)-$3,int(substr($2,5,2)),int(substr($2,7,2))}'  |
awk '{print $1$2"年"$3"月"$4"日"}'                          > $tmp-kensakudate

dispkensakudate=$(cat $tmp-kensakudate)


cat << FIN | sed 's/ _$/ @/g' > $tmp-calsed1
###RIYOUSHAID### $Riyoushaid
###HDKEIKAKUSAKUSEIDATE### $hdKeikakuSakuseiDate
###KEIKAKUSAKUSEIDATE### $KeikakuSakuseiDate
###SELECT_SHISETSU### $select_shisetsu
###KENSAKUDATE### $dispkensakudate
###HDKENSAKUDATE### $hdkensakudate
###HDSHISETSUKENSAKU### $hdShisetsuKensaku
###HDCAREMANAGERKENSAKU### $hdCaremanagerKensaku
###USERID### $USER_ID
###PASSWORD### $password
###SHISETSUID### $shisetsu
###DROPDOWN_ACTIVE7### active
FIN

cat ${tmp}-calsed1 ${checkfile} > ${tmp}-calsed

cat $tmp-calsed      |
sed 's/\\n/###KAIGYO###/g'     >  $tmp-calsed_kaigyozumi

# HTMLの作成
cat ${html_dir}/KYOTAKUSHIEN_MENU_YOBO1.html ${home_dir}/KYOUTSU/HTML/MENUBAR.html ${html_dir}/KYOTAKUSHIEN_MENU_YOBO2.html |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -l###TAISHOUSHA### - ${tmp}-taishoushalist |
mojihame -l###SHISETSULIST### - ${tmp}-shisetsulist |
mojihame -l###CAREMANAGERLIST### - $tmp-caremanagerlist |
calsed -f $tmp-calsed_kaigyozumi - |
sed 's/###KAIGYO###/\n/g'     |
sed 's/###SPACE###/ /g'       |
tee $tmp-html |
#--------------------------------------------------------------
#--------------------------------------------------------------
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |
cat -
#--------------------------------------------------------------
#formhame -d"_" - ${namedata}

rm -f ${tmp}-*
exit 0
