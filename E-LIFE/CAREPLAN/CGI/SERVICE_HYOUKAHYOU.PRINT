#!/bin/bash
#
# SERVICE_HYOUKAHYOU.PRINT : チェックリスト(予防)表示
#
# Usage : SERVICE_HYOUKAHYOU.DISPLAY
#
# Written by K.Aoyama(HANDS.LAB)

# ログ
source /home/hands/E-LIFE/CAREPLAN/CGI/CAREPLAN.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null

mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date +%Y%m%d) ; set -xv


rm -f $tmp-*

# ディレクトリ設定
test_tbl_dir="${home_dir}/TEST/TBL"
kengen_dir="${home_dir}/SYSTEM_SETTEI/POMPA/KENGEN_KANRI"

# 変数の定義
namedata=$1
result_data=$2
today="$(date +%Y%m%d)"

cp -p ${namedata} $work_dir/namedata_checklist

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------


echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu
echo ${Riyoushaid} > ${tmp}-riyoushaid

# ログインUSER名と施設の取得（仮）
cat ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
tee $tmp-user_mst                                  |
# 1:USER_ID 2:ユーザー名
join1 key=1 ${tmp}-user                            |
# 1:USER_ID 2:ユーザー名
self 2                                             > ${tmp}-usermei

cat ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON |
# 1:施設コード 2:施設名
join1 key=1 ${tmp}-shisetsu                        |
self 2                                             > ${tmp}-user_shisetsu


# 元号マスタ
cat ${home_dir}/TBL/ZEIRITSU_GENGOU_MASTER/GENGOU  |
awk '$5!="9"{print $1,$2,substr($3,1,4)}'                   > $tmp-gengou_master
self 1 2 $tmp-gengou_master                        > $tmp-gengou_master2

lcalc '$1,$2,$3-1' $tmp-gengou_master              |
LANG=C sort -k3,3r                                 > $tmp-gengou_mst


# 入居者情報(仮)
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KIHON          |
join1 key=1 ${tmp}-riyoushaid                      |
# 1:利用者名 2:誕生日和暦 3:誕生日年 4:誕生日月 5:誕生日
# 6:住所
self 2 5 6 7 8 14                                  |
LANG=C sort -k2,2                                  |
# 1:利用者名 2:誕生日和暦 3:和暦名 4:和暦開始 5:和暦終了
# 6:誕生日年 7:誕生日月   8:誕生日 9:住所
join1 key=2 $tmp-gengou_master2 -        |
# 1:利用者名 2:和暦名 3:誕生日年 4:誕生日月 5:誕生日
# 6:住所
self 1 3 4 5 6 7                                   |
awk '{print $1,$2$3"年"$4"月"$5"日",$6}'                       > ${tmp}-riyousha_kihon
Riyoushamei=$(self 1 ${tmp}-riyousha_kihon)

# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou


[ -z "${MODE}" ] && MODE="init"
#--------------------------------------------------------------

#--------------------------------------------------------------
if [ "$(gyo ${result_data})" != 0 ] ; then
    cat $result_data > $tmp-listdata
else
# 空のリストデータを作成する
    : > $tmp-listdata
fi


: > ${tmp}-careplan_sakuseishaname
# ケアプラン作成日が設定されていない場合、最新のデータを表示
if [ -z "$hdKeikakuSakuseiDate" -o "$hdKeikakuSakuseiDate" = "_" ] ; then
    cat ${apdata_dir}/CAREPLAN_YOBO/${Riyoushaid}/CAREPLAN_DATE |
    awk '$(NF-2)!="9"'                                           |
    delf 6/8                                                     |
    # 1:利用者ID 2:ケアプラン計画作成日(西暦) 3:ケアプラン計画作成日(和暦) 4:ケ>アプラン作成者ID 5:ケアプラン作成事業者
    getlast 1 1                                                  >  ${tmp}-careplan_date
    hdKeikakuSakuseiDate=$(self 2 ${tmp}-careplan_date)
    KeikakuSakuseiDate=$(self 3 ${tmp}-careplan_date)
else
    cat ${apdata_dir}/CAREPLAN_YOBO/${Riyoushaid}/CAREPLAN_DATE |
    awk '$(NF-2)!="9"'                                           |
    delf 6/8                                                     |
    # 1:利用者ID 2:ケアプラン計画作成日(西暦) 3:ケアプラン計画作成日(和暦) 4:ケ>アプラン作成者ID 5:ケアプラン作成事業者
    awk '$2=="'$hdKeikakuSakuseiDate'"'                          >  ${tmp}-careplan_date
fi
KeikakuSakuseishaID=$(self 4 ${tmp}-careplan_date)
cat $tmp-user_mst                |
awk '$1=="'$KeikakuSakuseishaID'"{print $2}'                 > ${tmp}-careplan_sakuseishaname

# 基本チェックデータ取得
awk '$1=="k"' $tmp-listdata    |
delf 1           > $tmp-listdata_hyouka

# チェックリストデータ取得
awk '$1=="l"{print $5,$6,$7,$8,$9,$10,$11,$12,$13}' $tmp-listdata   |
sed 's/\\n/<br>/g'  |
sed 's/ _ / @ /g'   |
sed 's/ _ / @ /g'   |
sed 's/ _$/ @/g'    > $tmp-listdata_hyoukalist

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source $tmp-listdata_hyouka)
#--------------------------------------------------------

dispHyoukabi=$(echo "$hdHyoukabi" | awk '$1!="" {print "\""substr($1,1,4)"/"substr($1,5,2)"/"substr($1,7,2)"\""}')

dispHoukatsu=$(echo $Houkatsu | sed 's/\\n/<br>/g')
dispGeneralHoushin=$(echo $GeneralHoushin | sed 's/\\n/<br>/g')

cat << FIN | sed 's/ _$/ @/g' > $tmp-calsed
###RIYOUSHAMEI### $Riyoushamei
###HDKEIKAKUSAKUSEIDATE###   $hdKeikakuSakuseiDate
###HYOUKABI### $dispHyoukabi
###HDHYOUKABI### $hdHyoukabi
###GENERALHOUSHIN###  $dispGeneralHoushin
###HOUKATSU###     $dispHoukatsu
###PLANTYPE###       $PlanType
###PLAN###       $Plan
###RIYOUSHAID### $Riyoushaid
###KEIKAKUSAKUSEIDATE### $KeikakuSakuseiDate
###USERID### $USER_ID
###PASSWORD### $password
###SHISETSUID### $shisetsu
###SELECT_SHISETSU### $select_shisetsu
###DOMAIN### $domain
FIN


cat $tmp-calsed      |
sed 's/\\n/###KAIGYO###/g'     >  $tmp-calsed_kaigyozumi

# HTMLの作成
cat ${html_dir}/PRINT_SERVICE_HYOUKAHYOU.html |
calsed -f $tmp-calsed_kaigyozumi - |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -l###CAREPLANSAKUSEISHA### - ${tmp}-careplan_sakuseishaname |
mojihame -l###SERVICE_HYOUKADATA### - $tmp-listdata_hyoukalist  |
mojihame -l###RIYOUSHAKIHON### - ${tmp}-riyousha_kihon |
mojihame -l###GENGOU### - $tmp-gengou_mst |
sed 's/###KAIGYO###/\n/g'     |
sed 's/###SPACE###/ /g'       |
tee $tmp-html |
#--------------------------------------------------------------
#--------------------------------------------------------------
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |
cat - > $tmp-servicehyouka_base_pdf.html

cp $tmp-servicehyouka_base_pdf.html $work_dir/servicehyouka_base_pdf.html

case "${MODE}" in
  #一括印刷
  allprint )
  /home/hands/E-LIFE/TOOL/wkhtmltopdf-amd64 --margin-bottom 2 --margin-left 3 --margin-right 3 --margin-top 2 --orientation Landscape $tmp-servicehyouka_base_pdf.html ${home_dir}/CAREPLAN/DOWNLOAD/IKKATSU_YOBO/$USER_ID/${Riyoushaid}_F_SERVICEHYOUKAHYOU.pdf
  ;;

  # 個別印刷
  * )
  mkdir -p ${home_dir}/CAREPLAN/DOWNLOAD/${Riyoushaid}

  # 過去のPDFを一旦消す
  rm ${home_dir}/CAREPLAN/DOWNLOAD/${Riyoushaid}/SERVIEHYOUKAHYOU.pdf
  /home/hands/E-LIFE/TOOL/wkhtmltopdf-amd64 --margin-bottom 1 --margin-left 3 --margin-right 3 --margin-top 10 --orientation Landscape $tmp-servicehyouka_base_pdf.html ${home_dir}/CAREPLAN/DOWNLOAD/${Riyoushaid}/SERVICEHYOUKAHYOU.pdf
#--------------------------------------------------------------

  # HTML の出力
cat << EOF > ${tmp}-html.html
<HTML>
  <HEAD>
    <SCRIPT type="text/javascript" language="Javascript">
      //<![CDATA[
      window.onload=init
      function init(){
           window.open("/E-LIFE/CAREPLAN/DOWNLOAD/${Riyoushaid}/SERVICEHYOUKAHYOU.pdf","pdfprint");
           window.self.close();
      }
      //]]>
    </SCRIPT>
  </HEAD>
</HTML>
EOF

  cat ${tmp}-html.html
;;
esac

#--------------------------------------------------------------

rm -f ${tmp}-*
exit 0
