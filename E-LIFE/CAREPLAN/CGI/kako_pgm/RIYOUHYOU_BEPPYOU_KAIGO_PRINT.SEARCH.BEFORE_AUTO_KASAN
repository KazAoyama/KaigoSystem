#!/bin/bash
#
# RIYOUHYOU_BEPPYOU_KAIGO.SEARCH
# 利用票別表（介護）　検索用CGI
#
# Written by K.Aoyama :20131129

#--------------------------------------------------------------
# ログ
source /home/hands/E-LIFE/CAREPLAN/CGI/CAREPLAN.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null
mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).$HOSTNAME.$(date +%Y%m%d) ; set -xv
#--------------------------------------------------------------

KYOUTSU_TBL=${home_dir}/TBL

#--------------------------------------------------------------
rm -f $tmp-*
#--------------------------------------------------------------

#--------------------------------------------------------------
function error_exit {
  rm -f $tmp-*
  exit 0
}
#--------------------------------------------------------------

#--------------------------------------------------------------
# 変数の定義
namedata=$1

# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------------

# テスト
kyufuwariai=90

#--------------------------------------------------------------
# 入力データのチェック
# ユーザＩＤ
[ -z "${USER_ID}" -o "${USER_ID}" = "_" ] && error_exit "ログインユーザが不明です"
# 利用者
[ -z "${Riyoushaid}" -o "${Riyoushaid}" = "_" ] && error_exit "利用者が不明です"

echo "${Riyoushaid}" > $tmp-riyoushaid

curseirekiyear=$(date +%Y)
curmonth=$(date +%m)

# 対象年
[ -z "${hdTaishouYear}" -o "${hdTaishouYear}" = "_" ] && ${hdTaishouYear}=$curseirekiyear
# 対象月
[ -z "${hdTaishouMonth}" -o "${hdTaishouMonth}" = "_" ] && ${hdTaishouMonth}=$curmonth

# 本日の日付
curday=$(mdate ${hdTaishouYear}${hdTaishouMonth}"01" | self 1)

# 今月の最初の日付
firstday=$(mdate ${hdTaishouYear}${hdTaishouMonth}m | tateyoko | head -1)
# 今月の最後の日付
lastday=$(mdate ${hdTaishouYear}${hdTaishouMonth}m | tateyoko | tail -1)

#--------------------------------------------------------------
# マスター取得
#--------------------------------------------------------------
# 介護保険情報
# 1:利用者ID            2:介護度              3:保険者名                    4:認定年和暦              5:認定年
# 6:認定月              7:認定日              8:認定年月日西暦              9:認定有効期間開始年和暦  10:認定有効期間開始年
# 11:認定有効期間開始月 12:認定有効期間開始日 13:認定有効期間開始年月日西暦     14:認定有効期間>終了年和暦 15:認定有効期間終了年
# 16:認定有効期間終了月 17:認定有効期間終了日 18:認定有効期間終了年月日西暦
#self 1 3 5 14/28 ${home_dir}/CAREPLAN/TMP/RIYOUSHA_KAIGOHOKEN   |
self 1 3 5 14/28 ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KAIGOHOKEN   |
join1 key=1 ${tmp}-riyoushaid   >     $tmp-riyousha_kaigohoken_master

cat $tmp-riyousha_kaigohoken_master                           |
awk '$13<="'${curday}'"&&$18>="'${curday}'"'                  |
# 1:利用者ID               2:介護度 3:保険者名 4:認定年月日 5:有効期間開始年月日
# 6:認定有効期間終了年月日
self 1/3 8 13 18                        |
LANG=C sort -k5,6                       |
getlast 1 1                             > $tmp-cur_riyousha_kaigohoken

# 月初めの介護度を取得
cat $tmp-riyousha_kaigohoken_master                           |
awk '$13<="'${firstday}'"&&$18>="'${firstday}'"'              |
self 1/3 8 13 18                        |
LANG=C sort -k5,6                       |
getlast 1 1                             > $tmp-first_riyousha_kaigohoken

# 月終わりの介護度を取得
cat $tmp-riyousha_kaigohoken_master                           |
awk '$13<="'${lastday}'"&&$18>="'${lastday}'"'              |
self 1/3 8 13 18                        |
LANG=C sort -k5,6                       |
getlast 1 1                             > $tmp-last_riyousha_kaigohoken

prekaigodo=$(self 2 $tmp-first_riyousha_kaigohoken)
curkaigodo=$(self 2 $tmp-cur_riyousha_kaigohoken)
postkaigodo=$(self 2 $tmp-last_riyousha_kaigohoken)


if [ ${prekaigodo} -eq ${postkaigodo} ] ; then
   kaigodo=$curkaigodo
elif [ ${prekaigodo} -gt ${postkaigodo}  ] ; then
   kaigodo=$prekaigodo
else
   kaigodo=$postkaigodo
fi
# 介護度マスタを抽出
cat ${KYOUTSU_TBL}/CONFIG/KAIGODO_MASTER                  |
awk '$4<="'$curday'"&&$5>"'$curday'"{print $1,$2,$3}'     |
LANG=C sort -k1,1                                         > ${tmp}-base_kaigodo

kaigokijungendogaku=$(awk '$1=="'${kaigodo}'"{print $3}' ${tmp}-base_kaigodo)

# 地域単価を抽出
cat ${KYOUTSU_TBL}/CONFIG/KAIGOHOKEN_TIIKI_TANKA          |
awk '$4<="'$curday'"&&$5>="'$curday'"{print $1,$2,$3}'    |
LANG=C sort -k1,2                                         > ${tmp}-base_tiikitanka

# 事業所マスタを抽出
cat ${KYOUTSU_TBL}/JIGYOUSHO_MASTER/JIGYOUSHO_MASTER             |
# 1:事業者コード 2:サービス事業者タイプ 3:地域区分 4:事業所名 5:割引率
tee $tmp-jigyousho_mst                                       |
self 1 4 7 3 9                                               |
LANG=C sort -k2,3 > ${tmp}-jigyousho_base

cat ${tmp}-jigyousho_base                                 |
# 1:事業者コード 2:サービス事業者タイプ	3:地域区分 4:地域単価 5:事業所名 6:割引率
join1 key=2/3 ${tmp}-base_tiikitanka -                    |
LANG=C sort -k1,3  |
self 1 4 5 6  > ${tmp}-jigyousho_master

cp -p ${tmp}-jigyousho_master ${work_dir}/jigyousho_master

cat $tmp-jigyousho_mst |
LANG=C sort -k1,1      |
self 1 2               > $tmp-jigyousho_id_no

# 時期によって有効なサービスコードの年月日を出す。
ls -F ${KYOUTSU_TBL}/SERVICECODE |
grep / |
sed 's/\///g' |
LANG=C sort -k1,1    |
awk '{print "1",$0}' |
ychange num=1 |
awk '$2<="'$curday'"&&"'$curday'"<$3{print $2}'      > $tmp-dir_date

dir_date=$(cat $tmp-dir_date)


# 各サービスコードマスタを抽出
# 訪問介護
cat ${KYOUTSU_TBL}/SERVICECODE/$dir_date/SERVICECODE_HOUMONKAIGO     |
self 2 3 4  > ${tmp}-servicecode_houmonkaigo

# 訪問看護
cat ${KYOUTSU_TBL}/SERVICECODE/$dir_date/SERVICECODE_HOUMONKANGO     |
self 2 3 4  > ${tmp}-servicecode_houmonkango

# 通所介護
cat ${KYOUTSU_TBL}/SERVICECODE/$dir_date/SERVICECODE_TSUSHOKAIGO     |
self 2 3 4  > ${tmp}-servicecode_tsushokaigo

# 通所リハビリ
cat ${KYOUTSU_TBL}/SERVICECODE/$dir_date/SERVICECODE_TSUSHORIHABIRI     |
self 2 3 4  > ${tmp}-servicecode_tsushorihabiri

# 訪問入浴サービス区分レコード取得
cat ${KYOUTSU_TBL}/SERVICECODE/${dir_date}/SERVICECODE_HOUMONNYUYOKU    |
self 2 3 4  > ${tmp}-servicecode_houmonnyuyoku

# 短期入所生活介護
cat ${KYOUTSU_TBL}/SERVICECODE/${dir_date}/SERVICECODE_TANKI_NYUKYO_SEIKATSU_KAIGO    |
self 2 3 4  > ${tmp}-servicecode_tankinyukyoseikatsu

# 短期入所療養介護老短
cat ${KYOUTSU_TBL}/SERVICECODE/${dir_date}/SERVICECODE_TANKI_NYUSHO_RYOUYOU_ROUTAN    |
self 2 3 4  > ${tmp}-servicecode_tankinyushoryouyouroutan

# 短期入所療養介護療養型
cat ${KYOUTSU_TBL}/SERVICECODE/${dir_date}/SERVICECODE_TANKI_NYUSHO_RYOUYOU_ROUTANIGAI    |
self 2 3 4  > ${tmp}-servicecode_tankinyushoryouyouroutanigai

# 訪問リハビリ
cat ${KYOUTSU_TBL}/SERVICECODE/${dir_date}/SERVICECODE_HOUMONRIHABIRI    |
self 2 3 4  > ${tmp}-servicecode_houmonrihabiri

# 福祉用具レンタル
cat ${KYOUTSU_TBL}/SERVICECODE/${dir_date}/SERVICECODE_FUKUSHIYOUGU_TAIYO   |
self 2 3 4  > ${tmp}-servicecode_fukushiyougutaiyo

# 居宅療養管理
cat ${KYOUTSU_TBL}/SERVICECODE/${dir_date}/SERVICECODE_KYOTAKU_RYOUYOU_KANRI  |
self 2 3 4 > ${tmp}-servicecode_kyotakuryouyou

# 定期巡回・随時対応
cat ${KYOUTSU_TBL}/SERVICECODE/${dir_date}/SERVICECODE_TEIKI_ZUIJI_HOUMONKAIGO |
self 2 3 4 > ${tmp}-servicecode_teiki_zuiji

# 夜間訪問介護
cat ${KYOUTSU_TBL}/SERVICECODE/${dir_date}/SERVICECODE_YAKAN_HOUMONKAIGO |
self 2 3 4 > $tmp-servicecode_yakan_houmon

# 認知症通所介護
cat ${KYOUTSU_TBL}/SERVICECODE/${dir_date}/SERVICECODE_NINCHI_TSUSHOKAIGO |
self 2 3 4 > $tmp-servicecode_ninchi_tsusho

# 小規模多機能
cat ${KYOUTSU_TBL}/SERVICECODE/${dir_date}/SERVICECODE_SHOUKIBO_TAKINOU  |
self 2 3 4 > $tmp-servicecode_shoukibo

# 認知症対応型（短期利用外）
cat ${KYOUTSU_TBL}/SERVICECODE/${dir_date}/SERVICECODE_NINCHISHOU_TAIOU_TANKIGAI   |
self 2 3 4 > $tmp-servicecode_nintchi_taiou_tankigai

# 認知症対応型（短期利用）
cat ${KYOUTSU_TBL}/SERVICECODE/${dir_date}/SERVICECODE_NINCHISHOU_TAIOU_TANKI |
self 2 3 4 > $tmp-servicecode_nintchi_taiou_tanki

# 複合型サービス
cat ${KYOUTSU_TBL}/SERVICECODE/${dir_date}/SERVICECODE_FUKUGOUGATA |
self 2 3 4 > $tmp-servicecode_fukugougata


# 限度額考慮加算のサービスコード
cat ${KYOUTSU_TBL}/SERVICECODE/$dir_date/SERVICECODE_ADD_KAIGO       |
awk '$26=="1"{print $1,$2,$3}' > ${tmp}-servicecode_add_gendo

cat ${tmp}-servicecode_houmonkaigo ${tmp}-servicecode_houmonkango ${tmp}-servicecode_tsushokaigo ${tmp}-servicecode_tsushorihabiri ${tmp}-servicecode_houmonnyuyoku ${tmp}-servicecode_tankinyukyoseikatsu ${tmp}-servicecode_tankinyushoryouyouroutan ${tmp}-servicecode_tankinyushoryouyouroutanigai ${tmp}-servicecode_houmonrihabiri ${tmp}-servicecode_fukushiyougutaiyo ${tmp}-servicecode_kyotakuryouyou ${tmp}-servicecode_teiki_zuiji $tmp-servicecode_yakan_houmon $tmp-servicecode_ninchi_tsusho $tmp-servicecode_shoukibo $tmp-servicecode_nintchi_taiou_tankigai $tmp-servicecode_nintchi_taiou_tanki $tmp-servicecode_fukugougata ${tmp}-servicecode_add_gendo |
LANG=C sort -k1,2   > ${tmp}-servicecode

cp -p ${tmp}-servicecode ${work_dir}/servicecode

# 加算
cat ${KYOUTSU_TBL}/SERVICECODE/$dir_date/SERVICECODE_ADD_KAIGO       |
self 1 2 NF-2 |
# 1:サービスタイプ 2:サービスコード 3:単価
LANG=C sort -k1,2                          > $tmp-servicecode_master

# 展開情報設定の加算部分を抽出(通所介護)
cat ${data_dir}/CAREPLAN/CAREPLAN_KAIGO/${Riyoushaid}/TENKAIJOUHOU_SETTEI_KAIGO |
awk '$19!="9"'        |
LANG=C sort -k1n,2n   |
getlast 1 1           |
awk '{print $2}' > ${tmp}-latest_date

cp ${tmp}-latest_date $work_dir/latest_date

cat ${data_dir}/CAREPLAN/CAREPLAN_KAIGO/${Riyoushaid}/TENKAIJOUHOU_SETTEI_KAIGO |
awk '$19!="9"'        |
LANG=C sort -k2,2     |
join1 key=2 ${tmp}-latest_date      |
# 1:事業者ID 2:加算
awk '$1=="'$Riyoushaid'"&&$3!="_"{print $8,$12}'   |
LANG=C sort -k1,1                                  > $tmp-tsusho_add

cp $tmp-tsusho_add $work_dir/tsuho_add

# サービス加算マスタを抽出
cat ${KYOUTSU_TBL}/JIGYOUSHO_MASTER/JIGYOUSHO_ADD |
LANG=C sort -k1,1                          |
# 1:事業所ＩＤ 2:加算サービスコード 3:加算サービス名 4:集計単位 5:計算単位
# 6:単位数
delf NF-2/NF                               > $tmp-service_add_master
# 集計単位によって分ける
cat $tmp-service_add_master                |
awk '$4=="m"'                              |
delf NF                                    > $tmp-service_add_master_monthly
cat $tmp-service_add_master                |
awk '$4=="d"&&$8=="0"'                     |
delf NF                                    > $tmp-service_add_master_taishougai_daily
cat $tmp-service_add_master                |
awk '$4=="d"&&$8=="1"'                     |
LANG=C sort -k1,1                          |
join2 +_ key=1 $tmp-tsusho_add             |
# 以下の加算は展開情報設定で設定済みのため除く
# 通所介護機能訓練加算(認知症通所は5050) 2014/6/6
awk '$3!="5050"&&$3!="5051"&&$3!="5052"'     |
# 通所介護入浴加算
awk '$3!="5301"'     |
# 通所栄養改善加算
awk '$3!="5605"'     |
# 通所口腔機能向上加算
awk '$3!="5606"'     |
# 認知通所口腔機能
awk '$3!="5607"'    |
# 通所若年性認知症加算
awk '$3!="6109"'     |
delf 2 NF                                   > $tmp-service_add_master_taishounai_daily

cp $tmp-service_add_master_taishougai_daily $work_dir/add_master_daily
cp $tmp-service_add_master_monthly $work_dir/add_master_monthly

#########テスト##########

: > $tmp-base_kaigo
if [ -s ${pompa_dir}/GETSUGAKU_RIYOU_KAIGO/${Riyoushaid}/RIYOUHYOU_BASE_KAIGO ] ; then
#--------------------------------------------------------------
# ファイルの取得
cat ${pompa_dir}/GETSUGAKU_RIYOU_KAIGO/${Riyoushaid}/RIYOUHYOU_BASE_KAIGO |
#--------------------------------------------------------------
# 利用者ID
awk '$1=="'${Riyoushaid}'"'   |
# 対象年月
# --------------------------
awk '$2=="'${hdTaishouYear}'"&&$3=="'${hdTaishouMonth}'"'    |
awk '$5=="1"' > $tmp-base_kaigo
fi

kakuteiflg="0"
[ $(gyo $tmp-base_kaigo) -eq 1 ] && kakuteiflg="1"


# 月の前ゼロ付与
matchTaishouMonth=$(echo $hdTaishouMonth | maezero 1.2)

riyouhyou_timestamp=0
if [ -s ${pompa_dir}/GETSUGAKU_RIYOU_KAIGO/${Riyoushaid}/RIYOUHYOU_RECORD_KAIGO ] ; then
  riyouhyou_timestamp=$(ls --full-time ${pompa_dir}/GETSUGAKU_RIYOU_KAIGO/${Riyoushaid}/RIYOUHYOU_RECORD_KAIGO | awk '{gsub(/-/,"",$6);gsub(/:/,"",$7);print $6substr($7,1,6)}')
fi

# 空ファイルの作成
: > ${tmp}-riyouhyoubeppyou_record

# 利用票別表ファイルの取得
if [ -s ${pompa_dir}/GETSUGAKU_RIYOU_KAIGO/${Riyoushaid}/RIYOUHYOUBEPPYOU_RECORD_KAIGO ] ; then

# 利用票が更新が最近の場合そちらを優先させるため、タイムスタンプを取得
beppyou_timestamp=$(ls --full-time ${pompa_dir}/GETSUGAKU_RIYOU_KAIGO/${Riyoushaid}/RIYOUHYOUBEPPYOU_RECORD_KAIGO | awk '{gsub(/-/,"",$6);gsub(/:/,"",$7);print $6substr($7,1,6)}')

if [ $beppyou_timestamp -gt $riyouhyou_timestamp ] ; then

cat ${pompa_dir}/GETSUGAKU_RIYOU_KAIGO/${Riyoushaid}/RIYOUHYOUBEPPYOU_RECORD_KAIGO   |
#--------------------------------------------------------------
# 利用者ID
awk '$2=="'${Riyoushaid}'"'   |
#--------------------------------------------------------------
# 日付
# --------------------------
#
awk '$3=="'${hdTaishouYear}'"&&$4=="'$hdTaishouMonth'"'  |
# --------------------------
#--------------------------------------------------------------
# 表示順番を整える
LANG=C sort -k1n,1n     |
# 表示順番項目を除く
delf 1                  |
self 24 1/23 25/27      |
# 1:明細表示コード    2:利用者ID          3:対象年                4:対象月                5:事業者タイプ
# 6:事業者コード      7:事業者名          8:サービスコード        9:サービス名            10:サービス単位
# 11:割引パーセント   12:割引後単位       13:サービス回数         14:単位数*回数          15:種類限度額超単位
# 16:種類限度額内単位 17:区分基準限度額超 18:区分基準限度額内     19:地域単価             20:費用総額
# 21:給付率           22:介護保険内費用   23:介護保険内利用者負担 24:介護保険外利用者負担 25:有効フラグ
# 26:処理時刻         27:ユーザID
awk '{print $1,$2,$3,$4,$5,$6,$19,$7,$11,$8,$9,$10,$12,$13,$14,"_",$18,$17,$20,$22,$23,$24,$15,$16}'    |
# 1:明細表示コード                2:利用者ID              3:利用年          4:利用月  5:事業者サービス区分
# 6:事業者ID                  7:地域単価              8:事業所名        9:割引率  10:サービスコード
# 11:サービスコード名         12:単位                 13:単位（割引後） 14:回数   15:単位合計
# 16:付随費用                 17:基準内限度額対象単位 18:基準外対象単位 19:請求額 20:介護保険給付額
# 21:個人負担額（保険対象内） 22:個人負担額（全額） 23:種類限度額超 24:種類限度額内 25:給付率
tee $work_dir/riyouhyoubeppyou_record0   |
# 区分限度額外のものは基準内限度額単位からは外す
############ 2014/7/17 修正 #################
awk '{if($1=="a"){$15="("$15")";$17="("$17")"};print $0}'   > $tmp-riyouhyoubeppyou_record_kaigo_1

#cat $tmp-riyouhyoubeppyou_record_kaigo_1  |
#awk '$1=="j"'          |
#awk '$1=="t"'          |
#sm5 1 13 14 24          |
#tail -1                 > $tmp-riyouhyoubeppyou_record_kaigo_2

cat $tmp-riyouhyoubeppyou_record_kaigo_1 |
awk '$1=="t"'          |
sm5 1 13 14 24          |
tail -1                 |
self 19/NF-1              > $tmp-riyouhyoubeppyou_record_kaigo_2_work1

cat $tmp-riyouhyoubeppyou_record_kaigo_1 |
awk '$1=="j"'          |
sm5 1 13 14 24          |
tail -1                 |
self 1/18 24              > $tmp-riyouhyoubeppyou_record_kaigo_2_work2

ycat $tmp-riyouhyoubeppyou_record_kaigo_2_work2 $tmp-riyouhyoubeppyou_record_kaigo_2_work1 |
self 1/18 20/24 19 > $tmp-riyouhyoubeppyou_record_kaigo_2

############ 2014/6/12 修正 #################
cat $tmp-riyouhyoubeppyou_record_kaigo_1 $tmp-riyouhyoubeppyou_record_kaigo_2 |
awk '{print $0,"1","'${kyufuwariai}'"}'   |
tee $work_dir/riyouhyoubeppyou_record1   |
self 2/26 1             |
awk '{print "l",$0}'    >  ${tmp}-riyouhyoubeppyou_record
[ $(plus ${PIPESTATUS[@]}) -ne 0 ] && error_exit "利用票別表レコード作成エラー１"

fi

fi


if [ $(gyo ${tmp}-riyouhyoubeppyou_record) -eq 0 ] ; then

# 利用票別表ファイルが既に存在する場合はそちらを優先して取得
# 利用票ファイルの取得（4/10大幅変更）
#cat ${pompa_dir}/GETSUGAKU_RIYOU_KAIGO/${Riyoushaid}/SERVICE_YOTEI_KAIGO   |
cat ${pompa_dir}/GETSUGAKU_RIYOU_KAIGO/${Riyoushaid}/RIYOUHYOU_RECORD_KAIGO   |
#--------------------------------------------------------------
# 利用者ID
awk '$2=="'${Riyoushaid}'"&&$(NF-2)!="9"'   |
#--------------------------------------------------------------
# 日付
# --------------------------
#
awk '$3=="'${hdTaishouYear}'"&&$4=="'$hdTaishouMonth'"'  |
# 介護保険対象外は省く
#awk '$15=="1"'              |
# --------------------------
#--------------------------------------------------------------
# 1:利用者ID       2:利用年 3:利用月 4:事業者サービス区分 5:事業者ID
# 6:サービスコード 7:単位   8:回数 9:付随費用  10:介護保険対象
# 確定していたら実績のほうを確認（2014/05/15修正）
if [ "$kakuteiflg" = "0" ] ; then
self 2 3 4 5 14 6 16 9 17 15
else
self 2 3 4 5 14 6 16 11 17 15
fi |
# 1:利用者ID       2:利用年 3:利用月 4:事業者サービス区分 5:事業者ID
# 6:サービスコード 7:単位   8:回数   9:単位合計           10:付随費用
# 介護保険対象
# 通所介護、口腔、栄養加算は２回まで 2014/05/15修正
awk '{if($4=="15"&&($6=="5605"||$6=="5606")&&$8>2){$8="2"};print $0}'   |
# 認知通所介護、口腔、栄養加算は２回まで 2014/06/06修正
awk '{if($4=="72"&&($6=="5606"||$6=="5607")&&$8>2){$8="2"};print $0}'   |
# 月額で選択できるもの対応（2014/7/3）今回は通所リハ
awk '{if($4=="16"&&($6=="5400"||$6=="5601")){$8="1"};print $0;}'                  |
lcalc '$1,$2,$3,$4,$5,$6,$7,$8,$7*$8,$9,$10'   |
# もし介護の方でも月集計がある場合はここでやる
self 4 6 0                    |
LANG=C sort -k1,2             |
tee ${work_dir}/beppyou0      |
# 選択できて、限度額対象外の加算対応（2014/5/19）
tee $tmp-add_taishougai_record_check |
# 訪問看護特別管理加算1(2014/5/19)
awk '$1!="13"||($2!="4000")' |
# 訪問看護特別管理加算2(2014/5/19)
awk '$1!="13"||($2!="4001")' |
# 訪問看護緊急加算(2014/5/19)
awk '$1!="13"||($2!="3100")' |
awk '$1!="13"||($2!="3200")' |
# 訪問看護ターミナル加算(2014/5/19)
awk '$1!="13"||($2!="7000")' |
join1 key=1/2 ${tmp}-servicecode -  |
delf 1 2                      |
# 1:サービスコード名 2:利用者ID       3:利用年 4:利用月 5:事業者サービス区分
# 6:事業者ID         7:サービスコード 8:単位   9:回数   10:単位合計
# 11:付随費用 12:介護保険
self 2 3 4 5 6 7 1 8 9 10 11 12  |
# 1:利用者ID       2:利用年           3:利用月 4:事業者サービス区分 5:事業者ID
# 6:サービスコード 7:サービスコード名 8:単位   9:回数               10:単位合計
# 11:付随費用 12:介護保険
tee ${work_dir}/beppyou1 |
LANG=C sort -k5,5 |
join1 key=5 ${tmp}-jigyousho_master -   |
# 1:利用者ID 2:利用年     3:利用月    4:事業者サービス区分 5:事業者ID
# 6:地域単価 7:事業所名称 8:割引率    9:サービスコード     10:サービスコード名
# 11:単位    12:回数      13:単位合計 14:付随費用 15:介護保険対象
LANG=C sort -k1,5 |
awk '{if($8=="_"){$8=0};print $0}'      |
lcalc '$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13*(100-$8)/100,$14,$15'      |
marume 13.0       |
# まとめ対応（2014/07/22）
LANG=C sort -k1,9 |
sm2 1 11 12 15 |
awk '{$15="1";print $0}' > $tmp-beppyou_add_work0
# 1:利用者ID 2:利用年   3:利用月    4:事業者サービス区分 5:事業者ID
# 6:地域単価 7:事業所名 8:割引率    9:サービスコード     10:サービスコード名
# 11:単位    12:回数    13:単位合計 14:付随費用 15:介護保険対象
[ $(plus ${PIPESTATUS[@]}) -ne 0 ] && error_exit "利用票別表レコード作成エラー２"

cp $tmp-beppyou_add_work0 $work_dir/beppyou_add_work0

# 加算レコードの追加（基準内回数単位）
cat $tmp-beppyou_add_work0    |
# 1:利用者ID 2:利用年   3:利用月 4:事業者サービス区分 5:事業者ID
# 6:地域単価 7:事業所名 8:割引率 9:単位               10:回数
self 1 2 3 4 5 6 7 8 11 12         |
sm2 1 8 9 10                   |
LANG=C sort -k5,5             |
# 1:利用者ID           2:利用年         3:利用月   4:事業者サービス区分 5:事業者ID
# 6:加算サービスコード 7:加算サービス名 8:集計単位 9:計算単位           10:単位数
# 11:地域単価          12:事業所名      13:単位    14:回数
tee $work_dir/kasan_daily_tmp1   |
self 5 1/NF                      |
join1 key=1 - $tmp-service_add_master_taishounai_daily       |
# 1:利用者ID            2:利用年          3:利用月     4:事業者サービス区分 5:事業者ID
# 6:地域単価            7:事業所名        8:割り引き率 9:単位               10:回数
# 11:加算サービスコード 12:加算サービス名 13:集計単位  14:計算単位          15:単位数
# 加算計算時に既にある加算は省く（4000は緊急時加算）
awk '$11!="4000"&&$11!="4001"&&$11!="4002"'  |
# 加算計算時に既にある加算は省く（610*は提供体制強化）
awk '$4=="15"&&($11!="6101"&&$11!="6102"&&$11!="6103")'  |
# 加算計算時に既にある加算は省く（610*は提供体制強化）認知
awk '$4=="72"&&($11!="6101"&&$11!="6102"&&$11!="6103")'  |
delf 1                                            |
self 1/5 11/15 6/10                               |
# 1:利用者ID           2:利用年         3:利用月      4:事業者サービス区分 5:事業者ID
# 6:加算サービスコード 7:加算サービス名 8:集計単位    9:計算単位           10:単位数
# 11:地域単価          12:事業所名      13:割り引き率 14:単位              15:回数
# 16:新合計単位数
tee $work_dir/numly_check                       |
#awk '{if($9=="a"){tmpg=$10*(100-$13)/100;tmpg1=int(tmpg*10);if(substr(tmpg1,length(tmpg1),1)<5){goukeitani=int(tmpg)*$15;}else{goukeitani=int(tmpg+1)*$15;}}else{tmpg=$10*$14*(100-$13)/100;tmpg1=int(tmpg*10);if(substr(tmpg1,length(tmpg1),1)<5){goukeitani=int(tmpg)*$15;$10=int($10*$14)}else{goukeitani=int(tmpg+1)*$15;$10=int($10*$14)+1}};print $0,goukeitani}'   |
awk '{if($9=="p"){$10=$10*$14};print $0}'   |
marume 10.0                      |
awk '{$16=$10*(100-$13)/100;print $0}'   |
tee $work_dir/kasan_check0       |
marume 16.0        |
tee $work_dir/kasan_check1       |
awk '{$17=$16*$15; print $0}'    |
delf 16            |
marume 16.0        |
self 1/5 11/13 6 7 10 15 16 |
awk '{print $0,"0","1"}'    > $tmp-kasan_numly_record_kijunnai
[ $(plus ${PIPESTATUS[@]}) -ne 0 ] && error_exit "利用票別表加算レコード作成エラー"

cp $tmp-kasan_numly_record_kijunnai $work_dir/kasan_numly_record_kijunnai

# 加算レコードの追加（基準外回数単位）
cat $tmp-beppyou_add_work0    |
# 1:利用者ID 2:利用年   3:利用月 4:事業者サービス区分 5:事業者ID
# 6:地域単価 7:事業所名 8:割引率 9:単位               10:回数
self 1 2 3 4 5 6 7 8 11 12         |
sm2 1 8 9 10                   |
LANG=C sort -k5,5             |
# 1:利用者ID           2:利用年         3:利用月   4:事業者サービス区分 5:事業者ID
# 6:加算サービスコード 7:加算サービス名 8:集計単位 9:計算単位           10:単位数
# 11:地域単価          12:事業所名      13:単位    14:回数
tee $work_dir/kasan_daily_tmp2   |
self 5 1/NF                      |
join1 key=1 - $tmp-service_add_master_taishougai_daily       |
# 1:利用者ID            2:利用年          3:利用月     4:事業者サービス区分 5:事業者ID
# 6:地域単価            7:事業所名        8:割り引き率 9:単位               10:回数
# 11:加算サービスコード 12:加算サービス名 13:集計単位  14:計算単位          15:単位数
# 加算計算時に既にある加算は省く（4000は緊急時加算）
awk '$11!="4000"&&$11!="4001"&&$11!="4002"'  |
# 加算計算時に既にある加算は省く（610*は提供体制強化）
awk '$4=="15"&&($11!="6101"&&$11!="6102"&&$11!="6103")'  |
# 認知通所加算計算時に既にある加算は省く（610*は提供体制強化）
awk '$4=="72"&&($11!="6101"&&$11!="6102"&&$11!="6103")'  |
delf 1                                            |
self 1/5 11/15 6/10                               |
# 1:利用者ID           2:利用年         3:利用月      4:事業者サービス区分 5:事業者ID
# 6:加算サービスコード 7:加算サービス名 8:集計単位    9:計算単位           10:単位数
# 11:地域単価          12:事業所名      13:割り引き率 14:単位              15:回数
# 16:新合計単位数
tee $work_dir/numly_check2                       |
#awk '{if($9=="a"){tmpg=$10*(100-$13)/100;tmpg1=int(tmpg*10);if(substr(tmpg1,length(tmpg1),1)<5){goukeitani=int(tmpg)*$15;}else{goukeitani=int(tmpg+1)*$15;}}else{tmpg=$10*$14*(100-$13)/100;tmpg1=int(tmpg*10);if(substr(tmpg1,length(tmpg1),1)<5){goukeitani=int(tmpg)*$15;$10=int($10*$14)}else{goukeitani=int(tmpg+1)*$15;$10=int($10*$14)+1}};print $0,goukeitani}'   |
awk '{if($9=="p"){$10=$10*$14};print $0}'   |
marume 10.0                      |
awk '{$16=$10*(100-$13)/100;print $0}'   |
tee $work_dir/kasan_check2       |
marume 16.0        |
tee $work_dir/kasan_check3       |
awk '{$17=$16*$15; print $0}'    |
delf 16            |
marume 16.0        |
self 1/5 11/13 6 7 10 15 16 |
# 限度額計算をスキップするため、基準内限度額を合計単位数、基準外限度額を０でセット。
awk '{print $0,"0","1",$13,"0"}'    > $tmp-kasan_numly_record_kijungai
[ $(plus ${PIPESTATUS[@]}) -ne 0 ] && error_exit "利用票別表加算レコード作成エラー"

cp $tmp-kasan_numly_record_kijungai $work_dir/kasan_numly_record_kijungai

cat $tmp-beppyou_add_work0 $tmp-kasan_numly_record_kijunnai  |
LANG=C sort -k6nr,6nr    |
# 1:利用者ID              2:利用年          3:利用月    4:事業者サービス区分 5:事業者ID
# 6:地域単価              7:事業所名        8:割引率    9:サービスコード     10:サービスコード名
# 11:単位                 12:回数           13:単位合計 14:付随費用          15:介護保険区分
# 16:基準内限度額対象単位 17:基準外対象単位
# 区分基準限度単位数を超えた場合、地域単価が高いサービスから単位数を割り振る
# 介護保険外の場合はレコードから省く
awk 'BEGIN {gendogaku='${kaigokijungendogaku}'};$15=="1"{gendogaku=gendogaku-$13;if(gendogaku>0){kijunnaigendogaku=$13;kijungaigendogaku=0}else{kijunnaigendogaku=$13+gendogaku;if(kijunnaigendogaku<0){kijunnaigendogaku=0};kijungaigendogaku=$13-kijunnaigendogaku};print $0,kijunnaigendogaku,kijungaigendogaku}'    > $tmp-gendogaku_anbun_syuuryou

cat $tmp-gendogaku_anbun_syuuryou $tmp-kasan_numly_record_kijungai |
# 1:利用者ID        2:利用年   3:利用月    4:事業者サービス区分 5:事業者ID
# 6:地域単価        7:事業所名 8:割引率    9:サービスコード     10:サービスコード名
# 11:単位           12:回数    13:単位合計 14:付随費用          15:基準内限度額対象単位
# 16:基準外対象単位
self 1/14 16/NF               |
tee ${work_dir}/beppyou_gendo |
LANG=C sort -k1,7  |
# 介護保険対象は区分限度額内、利用者負担は10%＋区分限度額超の対象分。
# 介護保険給付基準内限度額＝基準内限度対象単位*地域単価*90/100 切り下げ
# 利用者請求基準内限度額＝基準内限度対象単位*地域単価－介護保険給付基準内限度額
##awk '{$17=int($13*$6);kaigotaisho=int($15*$6*(100-'${kyufuwariai}')/100);$18=int($15*$6)-kaigotaisho;if($18-int($18)>0){$18=$18+1};$19=kaigotaisho;$20=kaigotaisho+int($16*$6);$21=int($11*(100-$8)/100);print $0}'  |
#awk '{$17=int($13*$6);kijunnaigendogaku=int($15*$6);kaigotaisho=int(kijunnaigendogaku*'${kyufuwariai}'/100);$18=kaigotaisho;$19=kijunnaigendogaku-kaigotaisho;$20=int($16*$6);$21=$11*(100-$8)/100;print $0,"n"}'  |
awk '{$17=int($13*$6);kijunnaigendogaku=int($15*$6);kaigotaisho=int(kijunnaigendogaku*'${kyufuwariai}'/100);$18=kaigotaisho;$19=kijunnaigendogaku-kaigotaisho;$20=$17-kijunnaigendogaku;$21=$11*(100-$8)/100;print $0,"n"}'  |
tee $work_dir/kasan_check2  |
marume 21.0              |
tee ${work_dir}/beppyou4 |
self 22 1/11 21 12/20   |
sm4 2 9 10 13 14 22 |
awk '{if(NF==21){print "j",$0}else{print $0}}'  |
tee ${work_dir}/beppyou5 |
# 1:明細表示コード                2:利用者ID              3:利用年          4:利用月  5:事業者サービス区分
# 6:事業者ID                  7:地域単価              8:事業所名        9:割引率  10:サービスコード
# 11:サービスコード名         12:単位                 13:単位（割引後） 14:回数   15:単位合計
# 16:付随費用                 17:基準内限度額対象単位 18:基準外対象単位 19:請求額 20:介護保険給付額
# 21:個人負担額（保険対象内） 22:個人負担額（全額） 23:種類限度額超 24:種類限度額内 25:パーセント
###### 種類限度額内単位は単位額合計をセット
awk '{print $0,"0",$15,"1"}'  >  $tmp-beppyou_add_work1
[ $(plus ${PIPESTATUS[@]}) -ne 0 ] && error_exit "利用票別表レコード作成エラー２"


cp $tmp-kasan_numly_record $work_dir/kasan_numly_record


# 加算レコードの追加（月単位）
cat $tmp-beppyou_add_work1    |
getlast 2 6                   |
self 6 1/NF                   |
LANG=C sort -k1,1             |
tee $work_dir/monthly_add1    |
# 1:事業者コード       2:明細表示コード            3:利用者ID              4:利用年          5:利用月
# 6:事業者サービス区分 7:事業者ID                  8:地域単価              9:事業所名        10:割引率
# 11:サービスコード    12:サービスコード名         13:単位                 14:単位（割引後） 15:回数
# 16:単位合計          17:付随費用                 18:基準内限度額対象単位 19:基準外対象単位 20:請求額
# 21:介護保険給付額    22:個人負担額（保険対象内） 23:個人負担額（全額）   24:種類限度額超   25:種類限度額内
# 26:パーセント        27:加算サービスコード       28:加算サービス名       29:集計単位       30:計算単位
# 31:単位数 32:介護度
join1 key=1 - $tmp-service_add_master_monthly      > $tmp-monthly_add_taishougai_work1

### 選択可能限度額対象外対応(2014/5/19)
cat $tmp-monthly_add_taishougai_work1 |
awk 'substr($27,1,1)!="6"' $tmp-monthly_add_taishougai_work1  > $tmp-monthly_select_add_taishougai

self 6 27 0 $tmp-monthly_select_add_taishougai |
LANG=C sort -k1,2                     |
join0 key=1/2 $tmp-add_taishougai_record_check |
delf 1 2                              > $tmp-monthly_selected_add_taishougai 

cat $tmp-monthly_add_taishougai_work1 |
awk 'substr($27,1,1)=="6"' $tmp-monthly_add_taishougai_work1 > $tmp-monthly_auto_add_taishougai

cat $tmp-monthly_selected_add_taishougai $tmp-monthly_auto_add_taishougai  |
### 選択可能限度額対象外対応(2014/5/19)
tee $work_dir/monthly_add2    |
self 2/7 27/NF 8/26           |
# 1:明細表示コード  2:利用者ID                  3:利用年                4:利用月          5:事業者サービス区分
# 6:事業者ID        7:加算サービスコード        8:加算サービス名        9:集計単位        10:計算単位
# 11:単位数         12:介護度                   13:地域単価             14:事業所名       15:割引率
# 16:サービスコード 17:サービスコード名         18:単位                 19:単位（割引後） 20:回数
# 21:単位合計       22:付随費用                 23:基準内限度額対象単位 24:基準外対象単位 25:請求額
# 26:介護保険給付額 27:個人負担額（保険対象内） 28:個人負担額（全額）   29:種類限度額超   30:種類限度額内
# 31:パーセント
# パーセンテージの場合の四捨五入計算
awk '{if($10=="p"){addtani=$21*$11;$31=$11;}else{addtani=$11};$18=addtani;$1="a";$16=$7;$17=$8;print $0}' |
marume 18.0                   |
# 介護度チェックをここでしたほうがいいかも
delf 12                       |
self 1/6 12/NF                |
# 1:明細表示コード            2:利用者ID              3:利用年          4:利用月        5:事業者サービス区分
# 6:事業者ID                  7:地域単価              8:事業所名        9:割引率        10:サービスコード
# 11:サービスコード名         12:単位                 13:単位（割引後） 14:回数         15:単位合計
# 16:付随費用                 17:基準内限度額対象単位 18:基準外対象単位 19:請求額       20:介護保険給付額
# 21:個人負担額（保険対象内） 22:個人負担額（全額）   23:種類限度額超   24:種類限度額内 25:パーセント
# 加算レコードの計算、生成
####### 種類限度額内単位は基準内限度単位をセット
#awk '{$13=int($12*(100-$9)/100);$14="1";$15=$13*$14;$16="0";if(($17-$15)>0){$17=$15;$18="0"}else{$17="0";$18=$15};$19=int($15*$7);$20=int($19*'${kyufuwariai}'/100);kaigotaisho=$19-$20;$21=kaigotaisho;$22=int($18*$7);$23="0";$24=$15;print $0}'                     >  $tmp-kasan_monthly_record
# 2014/5/2修正
awk '{$13=int($12*(100-$9)/100);$14="1";$15=$13*$14;$16="0";$17=$15;$18="0";$19=int($15*$7);$20=int($19*'${kyufuwariai}'/100);kaigotaisho=$19-$20;$21=kaigotaisho;$22=int($18*$7);$23="0";$24=$15;print $0}'                     >  $tmp-kasan_monthly_record
[ $(plus ${PIPESTATUS[@]}) -ne 0 ] && error_exit "利用票別表加算レコード作成エラー"

cp $tmp-kasan_monthly_record $work_dir/kasan_monthly_record

cat $tmp-beppyou_add_work1 $tmp-kasan_monthly_record | 
##################### 2014/5/4 修正した部分 ########################
##################### 2014/6/12 修正した部分 ########################
# 基準単位外単位を含めて単位総額を計算するために一旦、限度単位数を退避させる。
# 15:種類支給限度額 17:区分支給限度額
awk '{$27=$25;$25=$15;$26=$17;print $0}'     |
#################### 2014/7/8 修正した部分 ########################
# 事業所合計に処遇改善加算分も加える
awk '{if($1=="a"){$15=""$15"";$17=""$17"";$24=""$24""};print $0}'   |
LANG=C sort -k7,7nr -k6,6 -k1,1r -k10,10    |
tee $work_dir/syukei_before_print  |
#sm4 2 8 9 13 14 24           |
sm4 2 8 9 13 14 26           |
tee $work_dir/syukei_before1_print  |
sed 's/(//g'                 |
sed 's/)//g'                 |
#awk '{if(NF=="23"){print "t",$0,"1"}else{print $0}}'       |
awk '{if(NF=="25"){print "t",$0,"1"}else{print $0}}'       |
#lcalc '$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$17*$7,$20,$21,$18*$7,$23,$24,$25' |
#lcalc '$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$17*$7,$20,$21,$15*$7,$23,$24,$25' |
##################### 2014/6/12 修正した部分 ########################
# 費用総額は退避した限度額を元に計算
lcalc '$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$26*$7,$20,$21,$25*$7,$23,$24,$27' |
marume -sage 19.0 22.0 |
#lcalc '$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$19*'${kyufuwariai}'/100,$21,$22,$23,$24,$25' |
lcalc '$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$19*'${kyufuwariai}'/100,$21,$22-$19,$23,$24,$25' |
marume -sage 20.0 |
lcalc '$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$19-$20,$22,$23,$24,$25' > $tmp-syukeimae

cp $tmp-syukeimae $work_dir/syukei_middle_print

# 最終集計(各集計のレコードを足すだけ)
cat $tmp-syukeimae |
awk '$1=="t"' |
##################### 2014/6/12 修正した部分 ########################
# 加算分は集計に入れない
#awk '$1=="t"||$1=="a"' |
#awk '{if($1=="a"){$15="("$15")";$17="("$17")";$24="("$24")"};print $0}'   |
##################### 2014/7/8 修正した部分 ########################
# 総集計について費用部分については事業所合計のレコードから取得
sm2 0 0 19 23 > $tmp-sousyukei_1
#sm2 0 0 14 24 |
#awk '{print "@","@","@","@","@","@","@","@","@","@","@","@","@",$0}'  > $tmp-sousyukei

##################### 2014/7/8 修正した部分 ########################
# 総集計について単位部分については支給限度額単位のレコードから取得
cat $tmp-syukeimae |
awk '$1=="j"' |
sm2 0 0 14 24 > $tmp-sousyukei_2

##################### 2014/7/8 修正した部分 ########################
# 総集計のレコードを作成
ycat $tmp-sousyukei_2 $tmp-sousyukei_1 |
self 1/5 12/16 11                      |
awk '{print "@","@","@","@","@","@","@","@","@","@","@","@","@",$0}'  > $tmp-sousyukei

cat $tmp-syukeimae $tmp-sousyukei |
#sm5 1 13 14 24          |
##################### 2014/6/12 修正した部分(並び順) ########################
#awk '$1!="t"'               |
awk '{if($1=="a"){$15="("$15")";$17="("$17")";$24="("$24")"};print $0}'   |
##################### 2014/5/4 修正した部分 ########################
#awk '{if($1=="a"){$15="("$15")";$17="("$17")";$24="("$24")"};print $0}'   |
#LANG=C sort -k7,7nr -k6,6 -k1,1r -k10,10    |
#sm5 1 13 14 24          |
awk '{if(NF==24){print $0,"1"}else{print $0}}'    |
awk '{print $0,"'${kyufuwariai}'"}'   |
self 2/26 1             |
awk '{print "l",$0}'    >  ${tmp}-riyouhyoubeppyou_record
[ $(plus ${PIPESTATUS[@]}) -ne 0 ] && error_exit "利用票別表レコード作成エラー２"

fi

cp ${tmp}-riyouhyoubeppyou_record $work_dir/riyouhyoubeppyou_rec

# 地域単価を抽出
cat ${tmp}-riyouhyoubeppyou_record |
#awk '$27=="j"{print $6,$7}'        |
awk '$27=="t"{print $6,$7}'        |
LANG=C sort -k1,1                  > $tmp-tiikitanka_mst

numlist=$(gyo ${tmp}-riyouhyoubeppyou_record)
# 順番が変更になるため、総集計を退避させる
cat ${tmp}-riyouhyoubeppyou_record |
# 種類基準限度額はセットしない
#awk 'NR=="'$numlist'"{print $0,"_"}' > $tmp-riyouhyoubeppyou_sousyukei_before_kasan_minus
awk 'NR=='$numlist'{$23="_";$24="_";print $0,"_"}' > $tmp-riyouhyoubeppyou_sousyukei

cat ${tmp}-riyouhyoubeppyou_record |
awk '{if($27=="n"){$15=$13*$14};print $0}'            |
awk '{if($27=="j"){$11="支給限度対象合計";$5="_";$9="_";$14="_"};print $0}'          |
awk '{if($27=="a"){$9="_";$12="_";$13="_";$14="_"};print $0}'          |
######2014/6/12修正並び順###############
awk '{if($27=="t"){$11="事業所合計";$5="_";$9="_";$14="_";$15="("$15")";$17="("$17")";$24="("$24")";if($16!=""){$16="("$16")"};if($18!=""){$18="("$18")"};};print $0}'          |
awk 'NR<'$numlist'' > $tmp-riyouhyoubeppyou_record_list

# 限度額外のものは単位数から除外する
# サービス単位/金額
#cat ${tmp}-riyouhyoubeppyou_record |
#awk '$27=="a"{print $15}'     |
#sm2 1 1 1 1                        |
#self 2                             > $tmp-minus_servicekaisu
#minusservicetani=$(cat $tmp-minus_servicekaisu)
# 区分支給限度額単位
#cat ${tmp}-riyouhyoubeppyou_record |
#awk '$27=="a"{print $17}'     |
#sm2 1 1 1 1                        |
#self 2                             > $tmp-minus_kijunnaigendogaku
#minuskijunnaigendogaku=$(cat $tmp-minus_kijunnaigendogaku)

# 総集計から計算を行う
# 種類基準限度はセットしない
#cat $tmp-riyouhyoubeppyou_sousyukei_before_kasan_minus |
#awk '{$23="_";$24="_";$15=$15-"'$minusservicetani'";$17=$17-"'$minuskijunnaigendogaku'";print $0}' > $tmp-riyouhyoubeppyou_sousyukei

cp $tmp-jigyousho_id_no $work_dir/jigyousho_id_no

cat ${tmp}-riyouhyoubeppyou_record_list |
LANG=C sort -k6,6                  |
join1 key=6 $tmp-jigyousho_id_no   |
tee $work_dir/riyouhyoubeppyou_record_list_tmp1 |
self 1/6 8/NF 7                    |
tee $tmp-riyouhyoubeppyou_add_list |
######2014/6/12修正並び順###############
#awk '$27!="a"'                     |
LANG=C sort -k6,6                  |
join1 key=6 $tmp-tiikitanka_mst    |
self 1/7 9/NF                      |
marume 7.2                         |
tee $work_dir/riyouhyoubeppyou_list_add_print |
######2014/6/12修正並び順###############
awk '{if($27=="t"){$29="1"}else if($27=="a"){$29="2"}else if($27=="j"){$29="3"}else{$29="4"};print $0}'  |
LANG=C sort -k7r,7r -k6,6 -k29r,29r |
delf 29                              > $tmp-riyouhyoubeppyou_list_noadd

######2014/6/12修正並び順###############
# 支給限度額対象外のレコード
#cat $tmp-riyouhyoubeppyou_add_list |
#awk '$27=="a"'                     |
#LANG=C sort -k6,6                  |
#join1 key=6 $tmp-tiikitanka_mst    |
#self 1/7 9/NF                      |
#LANG=C sort -k7r,7r -k6,6             >  $tmp-riyouhyoubeppyou_list_add

cp $tmp-riyouhyoubeppyou_list_noadd $work_dir/riyouhyoubeppyou_list_noadd
cp $tmp-riyouhyoubeppyou_list_add $work_dir/riyouhyoubeppyou_list_add

# 全レコードをマージ
#cat $tmp-riyouhyoubeppyou_list_noadd $tmp-riyouhyoubeppyou_list_add $tmp-riyouhyoubeppyou_sousyukei > $tmp-riyouhyoubeppyou_res
cat $tmp-riyouhyoubeppyou_list_noadd $tmp-riyouhyoubeppyou_sousyukei > $tmp-riyouhyoubeppyou_res

cp ${tmp}-riyouhyoubeppyou_res ${work_dir}/riyouhyoubeppyou_record

# 利用票別表の単票項目の取得

: > $tmp-riyouhyoubeppyou
if [ -s ${pompa_dir}/GETSUGAKU_RIYOU_KAIGO/${Riyoushaid}/RIYOUHYOU_BASE_KAIGO ] ; then
   # ヘッダ設定
   echo "CareManager" > $tmp-header
   cp -p $tmp-header $work_dir/header
   cat ${pompa_dir}/GETSUGAKU_RIYOU_KAIGO/${Riyoushaid}/RIYOUHYOU_BASE_KAIGO  |
#--------------------------------------------------------------
# 利用者ID
   awk '$1=="'${Riyoushaid}'"'   |
#--------------------------------------------------------------
# 日付
# --------------------------
#
   awk '$2=="'${hdTaishouYear}'"&&$3=="'$hdTaishouMonth'"'  |
# --------------------------
   self 6                        |
   cat $tmp-header -             |
   tateyoko                      |
   awk '{print "b",$0}'          > $tmp-riyouhyoubeppyou
fi

cat ${tmp}-riyouhyoubeppyou_res $tmp-riyouhyoubeppyou

## 終了
rm -f $tmp-*
exit 0
