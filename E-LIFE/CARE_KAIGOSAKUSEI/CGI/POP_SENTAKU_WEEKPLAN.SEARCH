#!/bin/bash
#
# POP_SENTAKU_WEEKPLAN.SEARCH
# 計画書選択　検索用CGI
#
# Written by K.Aoyama :20140213

#--------------------------------------------------------------
# ログ
source /home/hands/E-LIFE/CARE_KAIGOSAKUSEI/CGI/CARE_KAIGOSAKUSEI.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null
mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).$HOSTNAME.$(date +%Y%m%d) ; set -xv
#--------------------------------------------------------------

#--------------------------------------------------------------
rm -f $tmp-*
#--------------------------------------------------------------

#--------------------------------------------------------------
function error_exit {
  rm -f $tmp-*
  exit 0
}
#--------------------------------------------------------------

#--------------------------------------------------------------
# 変数の定義
namedata=$1

# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------------

# テスト
# POSTされてくるパラメータ

#--------------------------------------------------------------
# 入力データのチェック
# ユーザＩＤ
[ -z "${USER_ID}" -o "${USER_ID}" = "_" ] && error_exit "ログインユーザが不明です"
# 利用者
[ -z "${shisetsu}" -o "${shisetsu}" = "_" ] && error_exit "施設が不明です"


#--------------------------------------------------------------
# ヘッダー部分生成
#--------------------------------------------------------------
cat <<- FIN > $tmp-header
FIN

#--------------------------------------------------------------
# 基本ファイルの取得
cat ${pompa_dir}/SHISETSU_CAREPLAN/PATTERN/${shisetsu}/WEEKPLAN_WEEKLYSERVICE_PATTERN |
#--------------------------------------------------------------
# 利用者ID
awk '$(NF-2)!="9"'     |
#--------------------------------------------------------------
# 検索
#--------------------------------------------------------------
# 1:施設ID         2:パターン名 3:データID 4:曜日 5:サービス開始時刻
# 6:サービス終了時刻 7:内容 8:有効フラグ 9:更新日時 10:更新ユーザID
LANG=C sort -k1,2 -k9,9r        |
getfirst 1 2                   |
LANG=C sort -k9,9r        |
self 2 2                  |
rank                        |
awk '{print $0}'            > ${tmp}-pattern

# 手順書データを表示
cat ${tmp}-pattern


## 終了
rm -f $tmp-*
exit 0
