

#Functions{{{############################################################
# エラー終了
function error_exit {
  rm -f ${tmp}-*
  exit 1
}
#}}}Functions############################################################

#=== 初期化 ===
tmp=/var/tmp/${$}
+ tmp=/var/tmp/29564

#ゴミtmpの消去
rm -f $tmp-*
+ rm -f '/var/tmp/29564-*'

today=$(date +%Y%m%d)
date +%Y%m%d)
date +%Y%m%d
++ date +%Y%m%d
+ today=20150924
# ディレクトリ設定
home_dir="/home/hands"
+ home_dir=/home/hands
app_dir="${home_dir}/E-LIFE/CARE_KAIGOSAKUSEI"
+ app_dir=/home/hands/E-LIFE/CARE_KAIGOSAKUSEI
cgi_dir="${app_dir}/CGI"
+ cgi_dir=/home/hands/E-LIFE/CARE_KAIGOSAKUSEI/CGI
html_dir="${app_dir}/HTML"
+ html_dir=/home/hands/E-LIFE/CARE_KAIGOSAKUSEI/HTML
pompa_dir="${app_dir}/POMPA"
+ pompa_dir=/home/hands/E-LIFE/CARE_KAIGOSAKUSEI/POMPA
apptbl_dir="${app_dir}/TBL"
+ apptbl_dir=/home/hands/E-LIFE/CARE_KAIGOSAKUSEI/TBL
kyoutsu_dir="${home_dir}/E-LIFE/KYOUTSU/HTML"
+ kyoutsu_dir=/home/hands/E-LIFE/KYOUTSU/HTML
riyosha_dir="/DATA/E-LIFE/UNEI/RIYOUSHA"
+ riyosha_dir=/DATA/E-LIFE/UNEI/RIYOUSHA
tbl_dir=$roottbl_dir
+ tbl_dir=/DATA/E-LIFE/TBL


# 渡ってきたデータを取得
if [ ${CONTENT_LENGTH:-0} -gt 0 ]; then
  dd bs=${CONTENT_LENGTH} |
  cgi-name -d_ -i_
else
  :
fi > $tmp-name
+ '[' 67 -gt 0 ']'
+ dd bs=67
+ cgi-name -d_ -i_
1+0 records in
1+0 records out
67 bytes (67 B) copied, 9.5489e-05 s, 702 kB/s

# MODE取得
MODE=$(nameread "MODE" ${tmp}-name)
nameread "MODE" ${tmp}-name)
nameread "MODE" ${tmp}-name
++ nameread MODE /var/tmp/29564-name
+ MODE=floor
# 選択しているSHISETSU_CODE
shisetsu=$(nameread "shisetsu" ${tmp}-name)
nameread "shisetsu" ${tmp}-name)
nameread "shisetsu" ${tmp}-name
++ nameread shisetsu /var/tmp/29564-name
+ shisetsu=0001
floor=$(nameread "floor" ${tmp}-name)
nameread "floor" ${tmp}-name)
nameread "floor" ${tmp}-name
++ nameread floor /var/tmp/29564-name
+ floor=3
unit=$(nameread "unit" ${tmp}-name)
nameread "unit" ${tmp}-name)
nameread "unit" ${tmp}-name
++ nameread unit /var/tmp/29564-name
+ unit=00001
riyosha_name=$(nameread "riyosha_name" ${tmp}-name)
nameread "riyosha_name" ${tmp}-name)
nameread "riyosha_name" ${tmp}-name
++ nameread riyosha_name /var/tmp/29564-name
+ riyosha_name=_

# SHISETSU_TATEYA_FLOOR_ROOMのマスタ準備
echo $shisetsu > $tmp-shisetsu
+ echo 0001
cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM               |
# 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
join0 key=1 $tmp-shisetsu                                    |
#join0 key=2 <(echo "00")                                     |
# 有効＋シニア施設を除く
awk '$(NF-2)!="9"&&$2!="01"'                                 > $tmp-shisetsu_tateya_floor_id
+ cat /DATA/E-LIFE/TBL/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM
+ awk '$(NF-2)!="9"&&$2!="01"'
+ join0 key=1 /var/tmp/29564-shisetsu
cat: /DATA/E-LIFE/TBL/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM: そのようなファイルやディレクトリはありません
# ユニットマスタの準備
cat ${tbl_dir}/SHISETSU_MASTER/UNIT_NAME                     |
self 1 2                                                     > $tmp-unit_master
+ cat /DATA/E-LIFE/TBL/SHISETSU_MASTER/UNIT_NAME
+ self 1 2
cat: /DATA/E-LIFE/TBL/SHISETSU_MASTER/UNIT_NAME: そのようなファイルやディレクトリはありません

# 利用者マスタの準備
cat ${riyosha_dir}/RIYOUSHA_MASTER                           |
self 1 2                                                     > $tmp-riyosha_master
+ cat /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_MASTER
+ self 1 2

# SHISETSU_RIYOSHA_STATUSの準備
cat ${riyosha_dir}/SHISETSU_RIYOUSHA_STATUS                  |
awk '$(NF-2)!="9"'                                           |
# 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
join0 key=1 $tmp-shisetsu                                    |
#join0 key=2 <(echo "00")                                     |
# シニア施設を除く
awk '$2!="01"' |
awk '$8>="'${today}'"'                   > $tmp-riyosha_status
+ cat /DATA/E-LIFE/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS
+ join0 key=1 /var/tmp/29564-shisetsu
+ awk '$2!="01"'
+ awk '$8>="20150924"'
+ awk '$(NF-2)!="9"'

if [ "$MODE" = "floor" ]; then
  # floor一覧
  cat $tmp-shisetsu_tateya_floor_id                            |
  # 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  self 3                                                       |
  LANG=C sort -u -k1,1n                                        |
  awk '{print $1,$1"F"}'                                       > ${tmp}-floor

  # unit一覧
  cat $tmp-shisetsu_tateya_floor_id                            |
  # 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  join0 key=3 <(echo "${floor}")                               |
  self 4                                                       |
  LANG=C sort -u -k1,1                                        |
  join1 key=1 $tmp-unit_master                                |
  LANG=C sort -k1,1n                                           > $tmp-unit

  # room一覧
  cat $tmp-shisetsu_tateya_floor_id                            |
  # 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  join0 key=3 <(echo "${floor}")                               |
  self 5 5                                                      |
  LANG=C sort -u -k1,1                                         > $tmp-room_no

  # member
  unit=$(cat $tmp-shisetsu_tateya_floor_id                     |
         awk '$3=="'${floor}'"'                                |
         self 4 | head -n1)
  cat $tmp-riyosha_status                                      |
  # 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
  awk '$3=="'${floor}'" && $4=="'${unit}'"{print $6}'          |
  LANG=C sort -k1,1                                           |
  join1 key=1 $tmp-riyosha_master                              |
  LANG=C sort -k1,1n                                           > $tmp-riyosha

elif [ "$MODE" = "unit" ];then
  # floor一覧
  cat $tmp-shisetsu_tateya_floor_id                            |
  # 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  self 3 4                                                     |
  LANG=C sort -u -k1,2n                                        |
  awk '{print $0,"'${unit}'"}'                                 |
  awk '{if($2==$3){print $1,$1"F","selected"}else{print $1,$1"F",""}}'         > $tmp-floor

  # unit一覧
  cat $tmp-shisetsu_tateya_floor_id                            |
  # 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  join0 key=3 <(echo "${floor}")                               |
  self 4                                                       |
  LANG=C sort -u -k1,1                                        |
  join1 key=1 $tmp-unit_master                                 |
  LANG=C sort -k1,1n                                        |
  awk '{print $0,"'${unit}'"}'                                 |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}' > $tmp-unit

  # room一覧
  cat $tmp-shisetsu_tateya_floor_id                            |
  # 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  join0 key=3 <(echo "${floor}")                               |
  LANG=C sort -u -k4,5                                         |
  join0 key=4 <(echo "${unit}")                                |
  self 5 5                                                      |
  LANG=C sort -u -k1,1                                         > $tmp-room_no

  # member
  cat $tmp-riyosha_status                                      |
  # 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
  awk '$4=="'${unit}'"{print $6}'                              |
  LANG=C sort -k1,1                                           |
  join1 key=1 $tmp-riyosha_master                              |
  LANG=C sort -k1,1n                                           > $tmp-riyosha
elif [ "$MODE" = "roomno" ];then
  # floor一覧
  cat $tmp-shisetsu_tateya_floor_id                            |
  # 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  self 3 5                                                    |
  LANG=C sort -u -k1,2n                                        |
  awk '{print $0,"'${roomno}'"}'                                 |
  awk '{if($2==$3){print $1,$1"F","selected"}else{print $1,$1"F",""}}'         > $tmp-floor

  # unit一覧
  cat $tmp-shisetsu_tateya_floor_id                            |
  # 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  join0 key=3 <(echo "${floor}")                               |
  self 4 5                                                      |
  LANG=C sort -u -k1,1                                        |
  join1 key=1 $tmp-unit_master                                 |
  LANG=C sort -k1,1n                                        |
  awk '{print $0,"'${roomno}'"}'                                 |
  awk '{if($3==$4){print $1,$2,"selected"}else{print $1,$2,""}}' > $tmp-unit

  # room一覧
  cat $tmp-shisetsu_tateya_floor_id                            |
  # 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  join0 key=3 <(echo "${floor}")                               |
  LANG=C sort -u -k4,5                                         |
  join0 key=4 <(echo "${unit}")                                |
  self 5 5                                                     |
  awk '{print $0,"'$roomno'"}' |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}' |
  LANG=C sort -u -k1,1                                         > $tmp-room_no

  # member
  cat $tmp-riyosha_status                                      |
  # 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
  awk '$5=="'${roomno}'"{print $6}'                              |
  LANG=C sort -k1,1                                           |
  join1 key=1 $tmp-riyosha_master                              |
  LANG=C sort -k1,1n                                           > $tmp-riyosha

else
  :
fi
+ '[' floor = floor ']'
+ cat /var/tmp/29564-shisetsu_tateya_floor_id
+ LANG=C
+ sort -u -k1,1n
+ awk '{print $1,$1"F"}'
+ self 3
+ cat /var/tmp/29564-shisetsu_tateya_floor_id
+ self 4
+ LANG=C
+ sort -k1,1n
+ join1 key=1 /var/tmp/29564-unit_master
+ LANG=C
+ sort -u -k1,1
echo "${floor}")
+ join0 key=3 /dev/fd/63
echo "${floor}"
++ echo 3
+ cat /var/tmp/29564-shisetsu_tateya_floor_id
+ self 5 5
+ LANG=C
+ sort -u -k1,1
echo "${floor}")
+ join0 key=3 /dev/fd/63
echo "${floor}"
++ echo 3
cat $tmp-shisetsu_tateya_floor_id                     |
         awk '$3=="'${floor}'"'                                |
         self 4 | head -n1)
cat $tmp-shisetsu_tateya_floor_id                     |
         awk '$3=="'${floor}'"'                                |
         self 4 | head -n1
++ cat /var/tmp/29564-shisetsu_tateya_floor_id
++ self 4
++ head -n1
++ awk '$3=="3"'
+ unit=
+ cat /var/tmp/29564-riyosha_status
+ join1 key=1 /var/tmp/29564-riyosha_master
+ LANG=C
+ sort -k1,1n
+ awk '$3=="3" && $4==""{print $6}'
+ LANG=C
+ sort -k1,1

#######################################################################################
# formhame前の実態参照変換
calsed "&" "&amp;" ${namefile}                      |
calsed "<" "&lt;"                                   |
calsed ">" "&gt;"                                   |
calsed "\"" "&quot;"                                |
# formhame前にキーワードが　"_"　のみの場合、消去
awk '{if($1~/SEARCH_WORD/){if($2~/^_$/){$2=""};}print}'  |
# formhame前にキーワードが検索ボックスの空白を "_"から" "に戻す
awk '{if($1~/SEARCH_WORD/){gsub(/_/," ",$2)};print}'     > $tmp-namefile
+ calsed '&' '&amp;'
+ awk '{if($1~/SEARCH_WORD/){if($2~/^_$/){$2=""};}print}'
+ calsed '"' '&quot;'
+ calsed '<' '&lt;'
+ awk '{if($1~/SEARCH_WORD/){gsub(/_/," ",$2)};print}'
+ calsed '>' '&gt;'

#######################################################################################

# formhameの準備
floor=$(echo ${floor})
echo ${floor})
echo ${floor}
++ echo 3
+ floor=3


#######################################################################################
# namefileの再構成

cat <<- FIN > ${tmp}-name
floor ${floor}
roomno ${roomno}
FIN
+ cat

  # HTMLを作成
  awk '/\<ajax_start\>/,/\<ajax_end\>/' ${html_dir}/CARE_SHISETSU_CHECKLIST2.html |
  mojihame -l###FLOOR_NAME### - $tmp-floor        |
  mojihame -l###UNIT_NAME###  - $tmp-unit       |
  mojihame -l###ROOM_NO###  - $tmp-room_no       |
  mojihame -l###RIYOSHA_NAME###  - $tmp-riyosha       |
  formhame -d"_"                - ${tmp}-name    > $tmp-html
+ awk '/\<ajax_start\>/,/\<ajax_end\>/' /home/hands/E-LIFE/CARE_KAIGOSAKUSEI/HTML/CARE_SHISETSU_CHECKLIST2.html
+ mojihame -l###UNIT_NAME### - /var/tmp/29564-unit
+ formhame -d_ - /var/tmp/29564-name
+ mojihame -l###ROOM_NO### - /var/tmp/29564-room_no
+ mojihame -l###FLOOR_NAME### - /var/tmp/29564-floor
+ mojihame -l###RIYOSHA_NAME### - /var/tmp/29564-riyosha


# HTML の出力
cat << FIN | cat - $tmp-html
Content-Type: text/html; charset=UTF-8;

FIN
+ cat
+ cat - /var/tmp/29564-html

# 終了
rm -f $tmp-*
+ rm -f /var/tmp/29564-floor /var/tmp/29564-html /var/tmp/29564-name /var/tmp/29564-namefile /var/tmp/29564-riyosha /var/tmp/29564-riyosha_master /var/tmp/29564-riyosha_status /var/tmp/29564-room_no /var/tmp/29564-shisetsu /var/tmp/29564-shisetsu_tateya_floor_id /var/tmp/29564-unit /var/tmp/29564-unit_master
exit 0
+ exit 0
