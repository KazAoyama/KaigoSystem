#!/bin/bash
#
# POP_KOJINJYOUHOU_SHOUSAI_KEIYAKU.DISPLAY
# 個人情報詳細(契約)POPUP
#
# Written by E.Okuda (Tokyu-hands.co.jp) :2013/12/10

#--------------------------------------------------------------
# ログ
# ログ
exec 2> /home/hands/E-LIFE/UNEI/APLOG/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv

source /home/hands/.bashrc &> /dev/null
source /home/hands/E-LIFE/UNEI/CGI/UNEI.INI &> /dev/null
#--------------------------------------------------------------
#--------------------------------------------------------------
# 変数の定義
tmp=/var/tmp/${$}

namedata=$1
result_data=$2
today="$(date +%Y%m%d)"
dayafter100=$(mdate "${today}"/-100) # 100日経つまでは表示可能になる
#--------------------------------------------------------------
rm -f $tmp-*
#--------------------------------------------------------------

#--------------------------------------------------------------
function error_exit {
  message="$1"
  echo "message ${message}"
  echo "result ng"
  rm -f $tmp-*
  exit 1
}
function error_unlock {
  message="$1"
  cat $tmp-target-table |
  while read table base ;do
    rm -f $lock_dir/$base.lock
  : ;done
  error_exit ${message}
}
#--------------------------------------------------------------

# ディレクトリ設定
app_dir="${home_dir}/UNEI"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
pompa_dir="${app_dir}/POMPA"

# 渡ってきたデータを取得
#if [ ${CONTENT_LENGTH:-0} -gt 0 ]; then
#  dd bs=${CONTENT_LENGTH} |
#  cgi-name -d_ -i_
#else
#  :
#fi > $tmp-name

# 変数の定義
namedata="$1"
data="$2"


# 必要な値の取得
name-source $namedata > $tmp-source
source $tmp-source

MODE=$(nameread "MODE" ${namedata})
[ -z "${MODE}" ] && MODE="init"
#--------------------------------------------------------------
#--------------------------------------------------------------

if [ "$MODE" = "init" ]; then
  SeikyuuNaiyou=""
  SeikyuuYearFrom=""
  SeikyuuMonthFrom=""
  SeikyuuYearTo=""
  SeikyuuMonthTo=""
  KinyuuKikanName=""
  ShitenName=""
  KouzaShurui=""
  KouzaNumber=""
  KouzaName=""
  KouzaNameKanji1=""
  KouzaNameKanji2=""
  KouzaBikou=""
  KOUZAID=""
else
  KouzaSentaku=$(nameread      "KouzaSentaku"      $namedata)
  SeikyuuNaiyou=$(nameread     "SeikyuuNaiyou"      $namedata)
  SeikyuuYearFrom=$(nameread   "SeikyuuYearFrom"      $namedata)
  SeikyuuMonthFrom=$(nameread  "SeikyuuMonthFrom"      $namedata)
  SeikyuuYearTo=$(nameread     "SeikyuuYearTo"      $namedata)
  SeikyuuMonthTo=$(nameread    "SeikyuuMonthTo"      $namedata)
  KinyuuKikanName=$(nameread   "KinyuuKikanName"      $namedata)
  ShitenName=$(nameread        "ShitenName"      $namedata)
  KouzaShurui=$(nameread       "KouzaShurui"      $namedata)
  KouzaNumber=$(nameread       "KouzaNumber"      $namedata | sed 's/口座番号//g')
  KouzaName=$(nameread         "KouzaName"      $namedata | sed 's/ﾄｷｭｳﾀﾛｳ(半角カナ)//g'| sed 's/_/###SPACE###/g')
  KouzaNameKanji1=$(nameread   "KouzaNameKanji1"      $namedata)
  KouzaNameKanji2=$(nameread   "KouzaNameKanji2"      $namedata)
  KouzaBikou=$(nameread        "KouzaBikou"      $namedata)
  KOUZAID=$(nameread           "KOUZAID"      $namedata)  
fi

USERID="$(nameread  "USERID" $namedata)"
SHISETSUID="$(nameread  "SHISETSUID" $namedata)"
NYUUKYOSHISETSUID="$(nameread  "NYUUKYOSHISETSUID" $namedata)"
RIYOUSHAID="$(nameread  "RIYOUSHAID" $namedata)"
RIYOUSHANAME="$(awk '$1=="'${RIYOUSHAID}'"{print $2}' ${pompa_dir}/RIYOUSHA/RIYOUSHA_MASTER | head -1)"
  ROGINSHISETSU=$(nameread "shisetsu" $namedata)
  ROGINSHISETSUNAME="$(awk '$1=="'${ROGINSHISETSU}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON | head -1)"
  [ -z "${ROGINSHISETSUNAME}" -o "${ROGINSHISETSUNAME}" = "_" ] && ROGINSHISETSUNAME="$(awk '$1=="'${ROGINSHISETSU}'"{print $2}' ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER | head -1)"
# 入居者所属施設名
NYUUKYOSHISETSUNAME="$(awk '$1=="'${NYUUKYOSHISETSUID}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON)"
NYUUKYOTATEYANAME="$(awk '$1=="'${NYUUKYOTATEYAID}'"{print $3}' ${tbl_dir}/SHISETSU_MASTER/TATEYA_NAME)"
NYUUKYOUNITNAME="$(awk '$1=="'${NYUUKYOUNITID}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/UNIT_NAME)"
if [ "$MODE" = "touroku" -a "KOUZAID" = "_" ] ; then
 KOUZAID="$(cat ${result_data} | self 3)"
fi

# calsedファイル
cat << FIN > $tmp-calsed_data
###USERID###       ${USERID}
###SHISETSUID###   ${SHISETSUID}
###RIYOUSHAID###   ${RIYOUSHAID}
###RIYOUSHANAME###   ${RIYOUSHANAME}
###KEIYAKUID###    ${KEIYAKUID}
###NYUUKYOSHISETSUID###  ${NYUUKYOSHISETSUID}
###NYUUKYOTATEYAID###  ${NYUUKYOTATEYAID}
###NYUUKYOFLOOR###  ${NYUUKYOFLOOR}
###NYUUKYOUNITID###  ${NYUUKYOUNITID}
###NYUUKYOKYOSHITSU###  ${NYUUKYOKYOSHITSU}
###KCLASSACTIVE0### active
###SCLASSACTIVE0### active
###TOUROKUDISP### ${TOUROKUDISP}
###PRINTDISP###  ${PRINTDISP}
###ROGINSHISETSU### ${ROGINSHISETSU}
###ROGINSHISETSUNAME### ${ROGINSHISETSUNAME}
FIN

# formhame 前の実体参照変換
calsed "&" "&amp;" ${namedata} |
calsed "<" "&lt;"              |
calsed ">" "&gt;"              |
calsed "\"" "&quot;"           > $tmp-namedata

# serchでも結果なしのものはinitへ
if [ "${MODE}" = "serach" ] ;then
  result="$(cat ${data} | head -1 | self 2)"

  if [ "${result}" = "result_ng" ] ; then
    MODE="init"
  fi

fi


### モードによる表示の分岐
case "${MODE}" in

  # 初期表示
  init)
  
  : > $tmp-list_result

  Shisetsu="$(nameread  "NYUUKYOSHISETSUID" $namedata)"
  Tateya="$(nameread  "NYUUKYOTATEYAID" $namedata)"
  Floor="$(nameread  "NYUUKYOFLOOR" $namedata)"
  Unit="$(nameread  "NYUUKYOUNITID" $namedata)"
  Kyoshitsu="$(nameread  "NYUUKYOKYOSHITSU" $namedata)"

  KokyakuNumberDisplay="@"
  KokyakuNumberCommentDisplay="none"
  ;;

 # 検索結果
 search )
    awk '$1=="KOUZA"{print $0}' ${data}   |
    delf 1              > $tmp-search_kouza_data
# 1:利用者(入居者)ID      2:口座ID                3:金融機関コード    4:支店コード          5:請求内容コード
# 6:口座種類              7:口座番号              8:請求期間From      9:請求期間To          10:名義人
# 11:備考                 12:他入居者との一括請求 13:一括請求入居者ID 14:一括請求書フラグ   15:口座名義(漢字)
# 16:顧客番号

# 他入居者一括請求でない場合
if [ -s $tmp-search_kouza_data -a "$(self 12 $tmp-search_kouza_data)" != "1" ] ; then
  #KouzaSentaku="$(awk '{print $12}' $tmp-search_kouza_data)"
  SeikyuuNaiyou="$(awk '{print $5}' $tmp-search_kouza_data)"

  SeikyuuYearFrom="$(awk '{print substr($8,1,4)}' $tmp-search_kouza_data)"
  SeikyuuMonthFrom="$(awk '{print substr($8,5,2)}' $tmp-search_kouza_data)"
  SeikyuuYearTo="$(awk '{print substr($9,1,4)}' $tmp-search_kouza_data)"
  SeikyuuMonthTo="$(awk '{print substr($9,5,2)}' $tmp-search_kouza_data)"
  KinyuuKikanName="$(awk '{print $3}' $tmp-search_kouza_data)"
  ShitenName="$(awk '{print $4}' $tmp-search_kouza_data)"
  KouzaShurui="$(awk '{print $6}' $tmp-search_kouza_data)"
  KouzaNumber="$(awk '{print $7}' $tmp-search_kouza_data)"
  KouzaName="$(awk '{print $10}' $tmp-search_kouza_data)"
  #TanyuukyoshaShimei="$(awk '{print $13}' $tmp-search_kouza_data)"
  #SeikyuushoFlg="$(awk '{print $17}' $tmp-search_kouza_data)"
  KouzaBikou="$(awk '{print $11}' $tmp-search_kouza_data)"
  KouzaNameKanji1="$(awk '{print $15}' $tmp-search_kouza_data | sed 's/　/ /g' | self 1)"
  KouzaNameKanji2="$(awk '{print $15}' $tmp-search_kouza_data | sed 's/　/ /g' | self 2)"
  KokyakuNumber="$(awk '{print $16}' $tmp-search_kouza_data)"

  KokyakuNumberDisplay="@"
  KokyakuNumberCommentDisplay="none"

  # 新規か他入居者口座選択か
  if [ "$(self 13 $tmp-search_kouza_data)" = "_" ] ; then
    KouzaSentaku="0"
    Shisetsu="$(nameread  "NYUUKYOSHISETSUID" $namedata)"
    Tateya="$(nameread  "NYUUKYOTATEYAID" $namedata)"
  else
    KouzaSentaku="1"
    TanyuukyoshaShimei="$(awk '{print $13}' $tmp-search_kouza_data)"

    awk '$6=="'${TanyuukyoshaShimei}'"{print $0}' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS  |
    LANG=C sort -k7,8nr |
    head -1             > $tmp-tanyuukyosha_data
# 1:施設ID   2:建屋ID 3:フロア 4:ユニットID 5:居室
# 6:入居者ID 7:入居日 8:退去日

    Shisetsu="$(awk '{print $1}' $tmp-tanyuukyosha_data)"
    Tateya="$(awk '{print $2}' $tmp-tanyuukyosha_data)"
    Floor="$(awk '{print $3}' $tmp-tanyuukyosha_data)"
    Unit="$(awk '{print $4}' $tmp-tanyuukyosha_data)"
    Kyoshitsu="$(awk '{print $5}' $tmp-tanyuukyosha_data)"
  fi
#  他入居者一括請求の場合
else
  KouzaSentaku="2"
  TanyuukyoshaShimei="$(awk '{print $13}' $tmp-search_kouza_data)"
  SeikyuuNaiyou="2"
  SeikyuushoFlg="$(awk '{print $14}' $tmp-search_kouza_data)"

  KokyakuNumberDisplay="none"
  KokyakuNumberCommentDisplay="@"

#  SeikyuuYearFrom=""
#  SeikyuuMonthFrom=""
#  SeikyuuYearTo=""
#  SeikyuuMonthTo=""
  SeikyuuYearFrom="$(awk '{print substr($8,1,4)}' $tmp-search_kouza_data)"
  SeikyuuMonthFrom="$(awk '{print substr($8,5,2)}' $tmp-search_kouza_data)"
  SeikyuuYearTo="$(awk '{print substr($9,1,4)}' $tmp-search_kouza_data)"
  SeikyuuMonthTo="$(awk '{print substr($9,5,2)}' $tmp-search_kouza_data)"
  KinyuuKikanName=""
  ShitenName="" 
  KouzaShurui=""
  KouzaNumber=""
  KouzaName=""
  KouzaNameKanji1=""
  KouzaNameKanji2=""
  KokyakuNumber=""

  awk '$6=="'${TanyuukyoshaShimei}'"{print $0}' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS  |
  LANG=C sort -k7,8nr |
  head -1             > $tmp-tanyuukyosha_data
# 1:施設ID   2:建屋ID 3:フロア 4:ユニットID 5:居室
# 6:入居者ID 7:入居日 8:退去日
  
  Shisetsu="$(awk '{print $1}' $tmp-tanyuukyosha_data)"
  Tateya="$(awk '{print $2}' $tmp-tanyuukyosha_data)"
  Floor="$(awk '{print $3}' $tmp-tanyuukyosha_data)"
  Unit="$(awk '{print $4}' $tmp-tanyuukyosha_data)"
  Kyoshitsu="$(awk '{print $5}' $tmp-tanyuukyosha_data)"
 
  # 請求書の名義を連名にする
  if [ "${SeikyuushoFlg}" = "2" ] ; then
    echo "###SeikyuushoFlg1###" "@" >>$tmp-calsed_data
    echo "###SeikyuushoFlg2###" "selected" >>$tmp-calsed_data
  else
    echo "###SeikyuushoFlg1###" "selected" >>$tmp-calsed_data
    echo "###SeikyuushoFlg2###" "@" >>$tmp-calsed_data
  fi

fi


 ;;
  # 登録の場合
  touroku)


 : > $tmp-list_result

  result=$(head -1 ${data} |self 2)

    if [ "${result}" = "ng" ] ; then
     message="$(cat ${data} | tail -1 | self 2)"

    else
     message="登録完了しました。"
    fi

  if [ "${KouzaSentaku}" = "2" ] ; then
    KokyakuNumberCommentDisplay="@"
    KokyakuNumberDisplay="none"
  else
    KokyakuNumberCommentDisplay="none"
    KokyakuNumberDisplay="@"
  fi


  ;;
esac

  # 請求書の名義を連名にする
  if [ "${SeikyuushoFlg}" = "2" ] ; then
    echo "###SeikyuushoFlg1###" "@" >>$tmp-calsed_data
    echo "###SeikyuushoFlg2###" "selected" >>$tmp-calsed_data
  elif [ "${SeikyuushoFlg}" = "1" ] ; then
    echo "###SeikyuushoFlg1###" "selected" >>$tmp-calsed_data
    echo "###SeikyuushoFlg2###" "@" >>$tmp-calsed_data
  else
    echo "###SeikyuushoFlg1###" "@" >>$tmp-calsed_data
    echo "###SeikyuushoFlg2###" "@" >>$tmp-calsed_data
  fi

#--------------------------------------------------------------
# 共通処理

#----------------------------------------------------------
# プルダウンの用意
#----------------------------------------------------------
#############
# 請求内容
#############

echo "2 3" |
tarr         |
awk '{if($1=="1"){print $0,"全請求"}
      else if($1=="2"){print $0,"施設請求"}
      else if($1=="3"){print $0,"居宅訪問介護請求"}
     }'      |
# 請求内容が選択されていたらselected
awk '{if($1=="'${SeikyuuNaiyou}'"){print $0,"selected"}
      else{print $0,"@"}
     }'     > $tmp-seikyuu_naiyou
# 1:請求内容コード 2:請求内容

###############
# 請求年月
###############

# 年準備
echo "2003"  > $tmp-years 
startyear="2003" # 2003年はイーライフ設立年。これより前の請求年月は発生しない
thisyear="$(date +%Y)"

# 2003年から来年まえでの西暦年号を取得
while [ "${startyear}" -le "${thisyear}" ] ; do
# echo "${startyear}"
 startyear=$((startyear+1)) 
 echo "${startyear}" 
done   >> $tmp-years 

# 請求年From
cat $tmp-years |
LANG=C sort    |
uniq           |
if [ -z "${SeikyuuYearFrom}" -o "${SeikyuuYearFrom}" = "_" ] ; then
  awk '{if($1=="'${thisyear}'"){print $1,$1,"selected"}
      else{print $1,$1,"@"}
       }'
else
  awk '{if($1=="'${SeikyuuYearFrom}'"){print $1,$1,"selected"}
      else{print $1,$1,"@"}
        }' 
fi      > $tmp-seikyuu_year_from

# 請求年To
cat $tmp-years |
LANG=C sort    |
uniq           |
if [ -z "${SeikyuuYearTo}" -o "${SeikyuuYearTo}" = "_" -o "${SeikyuuYearTo}" = "9999" ] ; then

#  if [ -z "${SeikyuuYearFrom}" -o "${SeikyuuYearFrom}" = "_" ] ; then
    tail -3 |
    awk 'BEGIN{print "@","@","@"}{print $1,$1,"@"}'
#  else
#    awk '{if($1=="'${SeikyuuYearFrom}'"){print $1,$1,"selected"}
#          else{print $1,$1,"@"}
#         }'
#  fi

else
  awk '{if($1=="'${SeikyuuYearTo}'"){print $1,$1,"selected"}
      else{print $1,$1,"@"}
     }'
fi       > $tmp-seikyuu_year_to

# 月用意
echo "1 2 3 4 5 6 7 8 9 10 11 12" |
tarr > $tmp-month
thismonth="$(date +%m)"

# 請求月From
cat $tmp-month |
if [ -z "${SeikyuuMonthFrom}" -o "${SeikyuuMonthFrom}" = "_" ] ; then
  awk '{print sprintf("%02d",$1),$1}' |
  awk '{if($1=="'${thismonth}'"){print $0,"selected"}
      else{print $0,"@"}
       }'
else
  awk '{print sprintf("%02d",$1),$1}' |
  awk '{if($1=="'${SeikyuuMonthFrom}'"){print $0,"selected"}
      else{print $0,"@"}
       }'
fi   > $tmp-seikyuu_month_from

# 請求月To
cat $tmp-month |
if [ -z "${SeikyuuMonthTo}" -o "${SeikyuuMonthTo}" = "_" -o "${SeikyuuMonthTo}" = "99" ] ; then
  awk 'BEGIN{print "@","@","@"}{print sprintf("%02d",$1),$1,"@"}'
else
  awk '{print sprintf("%02d",$1),$1}' | 
  awk '{if($1=="'${SeikyuuMonthTo}'"){print $0,"selected"}
      else{print $0,"@"}
       }'
fi   > $tmp-seikyuu_month_to

##########################
# 金融機関・支店
##########################

# 金融機関
cat ${tbl_dir}/KINYUU_MASTER/KINYUUKIKAN_NAME |
self 1 3 |
if [  -z "${KinyuuKikanName}" -o "${KinyuuKikanName}" = "_" ] ; then
 awk 'BEGIN{print "@","@","選択してください","@"}{print $1,$0,"@"}'
else
  awk '{if($1=="'${KinyuuKikanName}'"){print $1,$0,"selected"}
      else{print $1,$0,"@"}
       }'  
fi       > $tmp-kinyuukikan_name

# 支店名
if [ -z "${KinyuuKikanName}" -o "${KinyuuKikanName}" = "_" ] ; then
  echo "@" "@" "↑金融機関を選択" "@"
else
  cat ${tbl_dir}/KINYUU_MASTER/KINYUUKIKAN_SHITEN_NAME |
  self 1 2 4 |
  if [ -z "${ShitenName}" -o "${ShitenName}" = "_" ] ; then
   awk '$1=="'${KinyuuKikanName}'"{print $2,$2,$3,"@"}'
  else
   awk '{if($1=="'${KinyuuKikanName}'"&&$2=="'${ShitenName}'"){print $2,$2,$3,"selected"}
         else if($1=="'${KinyuuKikanName}'"){print $2,$2,$3,"@"}
         }'
  fi
fi       > $tmp-shiten_name

###################
# 口座種類
###################

echo "1 2 0" |
tarr         |
awk '{if($1=="1"){print $0,"普通"}
      else if($1=="2"){print $0,"当座"}
      else if($1=="0"){print $0,"@"}
     }'      |
# 口座種類が選択されていたらselected
awk '{if($1=="'${KouzaShurui}'"){print $0,"selected"}
      else{print $0,"@"}
     }'     > $tmp-kouza_shurui
# 1:口座種類コード 2:口座種類名

#cp $tmp-* /home/hands/work/okuda
################################
# 施設
################################

 cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON   |
  awk '{if($1=="'${Shisetsu}'"){print $1,$2,"selected"}
    else{print $1,$2,"@"}}'   >$tmp-shisetsu_name

  cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM |
  awk '$1=="'${Shisetsu}'"{print $2}'                     |
  LANG=C sort  |
  uniq  |
  join1 key=1 ${tbl_dir}/SHISETSU_MASTER/TATEYA_NAME -    |
  self 1 3                                                |
  awk '{if($1=="'${Tateya}'"){print $0,"selected"}
       else {print $0,"@"}}'       > $tmp-tateya_name
# 1:建屋ID 2:建屋名

  # フロア一覧
  cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM |
  awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"{print $3,$3}'  |
  sort |
  uniq |
  awk '{if($1=="'${Floor}'"){print $0,"selected"}
     else {print $0,"@"}}'> $tmp-floor

  # フロアがなかったらフロアリストの一番上をセット
  [ -z "${Floor}" -o "${Floor}" = "_" ] && Floor="$(head -1 $tmp-floor | self 1)"

  # ユニットは建屋がケアのときのみ
  if [ "${Tateya}" = "02" ] ; then
    cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM |
    awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$3=="'${Floor}'"{print $4}'  |
    LANG=C sort |
    uniq |
    join1 key=1 ${tbl_dir}/SHISETSU_MASTER/UNIT_NAME -  |
    self 1 2    |
    awk '{if($1=="'${Unit}'"){print $0,"selected"}
     else{print $0,"@"}}'> $tmp-unit_name
  else
    echo "@ @"
  fi > $tmp-unit_name

  # 居室取得
 cat ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
if [ -n "${Shisetsu}" -a "${Shisetsu}" != "_" ] ; then
  awk '$1=="'${Shisetsu}'"{print $0}'
# 1:施設ＩＤ 2:建屋ＩＤ 3:フロア 4:ユニットＩＤ 5:居室Ｎｏ
else
  cat -
fi |

# 建屋の選択があった場合
if [ -n "${Tateya}" -a "${Tateya}" != "_" ] ; then
  awk '$2=="'${Tateya}'"{print $0}'
else
  cat -
fi |

# フロアの選択があった場合
if [ -n "${Floor}" -a "${Floor}" != "_" ] ; then
  awk '$3=="'${Floor}'"{print $0}'
else
  cat -
fi |

# ユニットの選択があった場合
if [ -n "${Unit}" -a "${Unit}" != "_" ] ; then
  awk '$4=="'${Unit}'"{print $0}'
else
  cat -
fi |

# 居室の選択があった場合
#if [ -n "${Kyoshitsu}" -a "${Kyoshitsu}" != "_" ] ; then
#  awk '$5=="'${Kyoshitsu}'"{print $0}'
#else
#  cat -
#fi |
# 入居期間中のものにする
#  awk '$8>"'${today}'"{print $5,$6}' |
  awk '$8>"'${dayafter100}'"{print $5,$6}' |
# 1:居室Ｎｏ 2:入居者Ｎｏ
#-
#fi |
#self 5 6 |
LANG=C sort -k2,2 |
join1 key=2 ${pompa_dir}/RIYOUSHA/RIYOUSHA_MASTER -        |
LANG=C sort       |
uniq              > $tmp-kyoshitsu_kari
# 1:居室Ｎｏ 2:入居者Ｎｏ 3:入居者名

if [ "${KouzaSentaku}" = "0" ] ; then
 SentakuKyoshitsu="_"
else
 SentakuKyoshitsu=$(echo "${Kyoshitsu}")
fi

if [ "$(self 1 $tmp-kyoshitsu_kari | LANG=C sort |uniq | gyo)" -gt "1" ] ; then
  cat $tmp-kyoshitsu_kari  |
  awk 'BEGIN{print "@ 全て"}{print $1,$1}'
else
  cat $tmp-kyoshitsu_kari  |
  awk '{print $1,$1}'
fi   |
uniq |
awk '{if($1=="'${SentakuKyoshitsu}'"){print $0,"selected"}
        else{print $0,"@"}
       }'  > $tmp-kyoshitsu

cat $tmp-kyoshitsu_kari |
# 居室の選択があった場合
if [ -n "${SentakuKyoshitsu}" -a "${SentakuKyoshitsu}" != "_" ] ; then
  awk '$1=="'${SentakuKyoshitsu}'"{print $0}'
else
  cat -
fi |
self 2 3    |
LANG=C sort |
uniq        > $tmp-nyuukyosha_kari

if [ "$(gyo $tmp-nyuukyosha_kari)" -gt "1" ] ; then
  cat $tmp-nyuukyosha_kari |
  awk 'BEGIN{print "@ 全て"}{print $0}'
else
  cat $tmp-nyuukyosha_kari
fi |
  awk '{if($1=="'${TanyuukyoshaShimei}'"){print $0,"selected"}
        else{print $0,"@"}
       }'  > $tmp-nyuukyosha


#--------------------------------------------------------------
# 他入居者データ
cat $tmp-nyuukyosha |
awk '$1!="@"{print $0}' |
if [ -z "${TanyuukyoshaShimei}" -o "${TanyuukyoshaShimei}" = "_" ] ; then
  join1 key=1 - ${pompa_dir}/RIYOUSHA/RIYOUSHA_KOUZA 
else
  awk '$1=="'${TanyuukyoshaShimei}'"{print $0}' |
  join1 key=1 - ${pompa_dir}/RIYOUSHA/RIYOUSHA_KOUZA
fi |
# 1:利用者(入居者)ID  2:利用者名        3:"checked"        4:口座ID                5:金融機関コード
# 6:支店コード        7:請求内容コード  8:口座種類         9:口座番号              10:請求期間From
# 11:請求期間To       12:名義人         13:備考            14:他入居者との一括請求 15:一括請求入居者ID
# 16:一括請求書フラグ 17:口座名義(漢字) 18:予備1⇒顧客番号 19:予備2                20:予備3
# 21:予備4            22:予備5          23:削除フラグ      24:更新時間             25:更新者

# "checked"を後ろへ
  awk '{if($3=="selected"){print $0,"checked"}
        else{print $0,"@"}
       }'       |
  awk '$13!="1"&&$(NF-2)!="9"{print $0}'        |
  self 1 2 4/NF |
# 1:利用者(入居者)ID 2:利用者名         3:口座ID                4:金融機関コード    5:支店コード
# 6:請求内容コード   7:口座種類         8:口座番号              9:請求期間From      10:請求期間To
# 11:名義人          12:備考            13:他入居者との一括請求 14:一括請求入居者ID 15:一括請求書フラグ
# 16:口座名義(漢字)  17:予備1⇒顧客番号 18:予備2                19:予備3            20:予備4
# 21:予備5           22:削除フラグ      23:更新時間             24:更新者           25:checked
self 3/8 11 1 2 17 NF             > $tmp-takouza_data
#if [ -n "${TanyuukyoshaShimei}" -a "${TanyuukyoshaShimei}" != "_" ] ; then
#  awk '$8=="'${TanyuukyoshaShimei}'"{print $0}'
#elif [ -n "${RIYOUSHAID}" -a "${RIYOUSHAID}" != "_" ] ; then
#  awk '$8=="'${RIYOUSHAID}'"{print $0}'
#else
#  cat -
#fi > $tmp-takouza_data
# 1:口座ID   2:金融機関コード 3:支店コード       4:請求内容コード 5:口座種類
# 6:口座番号 7:名義人         8:利用者(入居者)ID 9:利用者名       10:顧客番号
# 11:checked

  # 該当データがあれば、金融機関名称、支店名を取得
  if [ -s "$tmp-takouza_data" ] ; then
   cat ${tbl_dir}/KINYUU_MASTER/KINYUUKIKAN_NAME |
   self 1 3 > $tmp-kinyuukikanmei

   cat ${tbl_dir}/KINYUU_MASTER/KINYUUKIKAN_SHITEN_NAME  |
   self 1 2 4 > $tmp-shitenmei

   cat $tmp-takouza_data   |
   LANG=C sort -k2,3     |
   join1 key=2/3 $tmp-shitenmei -  |
   join1 key=2 $tmp-kinyuukikanmei - |
# 1:口座ID         2:金融機関コード 3:金融機関名 4:支店コード 5:支店名
# 6:請求内容コード 7:口座種類       8:口座番号   9:名義人     10:利用者(入居者)ID
# 11:利用者名      12:顧客番号      13:checked

  # 口座
   awk '{if($7=="1"){print $0,"普通"}
         else if($7=="2"){print $0,"当座"}
         else{print $0,"@"}
       }'     |
   self 1/5 7 NF 8 NF-3 NF-4 NF-2 NF-1  > $tmp-list_result
# 1:口座ID    2:金融機関コード 3:金融機関名 4:支店コード       5:支店名
# 6:口座種類  7:口座種類名     8:口座番号   9:利用者(入居者)ID 10:利用者名
# 11:顧客番号 12:checked

  if [ "${NYUUKYOSHISETSUID}" = "${Shisetsu}" ] ; then
    # 他入居者一括の場合口座名までいらない
    cat $tmp-list_result      |
    self NF-2 NF-3 NF         |
    LANG=C sort               |
    getlast 1 2  > $tmp-list_riyousha_result
# 1:利用者(入居者)ID 2:利用者名 3:checked
    RIYOUSHALISTERRORMESSAGEDISP="none"
    RIYOUSHALISTERRORMESSAGE=""

  else
     : >  $tmp-list_riyousha_result

    RIYOUSHALISTERRORMESSAGEDISP=""
    RIYOUSHALISTERRORMESSAGE="＊一括請求では他施設の入居者を選択できません。"

  fi

  else
    : > $tmp-list_result
    : > $tmp-list_riyousha_result
  fi

#-------------------------------------------------------------
# 顧客番号リスト

# 権限のある施設
kengen_dir="/home/hands/E-LIFE/TBL/KENGEN_KANRI"
# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME
# 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
awk '$7=="KIHONJYOUHOU_ICHIRAN.CGI"&&$9>="2"{print $2}' |
LANG=C sort > $tmp-dispkengen_all
# 1:施設ID 2:STATUS
[ -s $tmp-dispkengen_all ] || echo "${shisetsu}" > $tmp-dispkengen_all


# 施設名・事業所名マスタ
cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON |
awk '$(NF-2)!="9"{print $1,$2}'               > $tmp-shisetsuname

cat ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER  |
awk '$(NF-2)!="9"{print $1,$2}'               |
cat $tmp-shisetsuname -                       |
LANG=C sort                                   > $tmp-shisetsujigyousho_name

cat ${tbl_dir}/SHISETSU_MASTER/TATEYA_NAME    |
awk '$(NF-2)!="9"{print $1,$3}'               > $tmp-tateyaname

cat /DATA/E-LIFE/UNEI/KANRI/RIYOUSHA/KOKYAKU_NUMBER_LIST |
cjoin1 key=1 $tmp-shisetsujigyousho_name -               |
cjoin2 +"@" key=3 $tmp-tateyaname -                      |

if [ "$(head -1 $tmp-dispkengen_all)" = "0000" ] ; then
  cat -
else
  cjoin1 key=1 $tmp-dispkengen_all -
fi  |

awk '{print $NF,$4!="@"?$2$4:$2}'                        > $tmp-kokyaku_list


#--------------------------------------------------------------
# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
	cat <<- FIN > $tmp-html2
	  <script type="text/javascript" language="javascript">
	    alert('${message}');
	  </script>
	FIN
fi

if [ "${MODE}" = "touroku" -a "${result}" = "ok" ] ; then
cat <<- FIN > $tmp-html2
    <script type="text/javascript" language="javascript">
         var obj =document.forms["PopKanryou"];
         shousai_kihon = window.open("KOJINJYOUHOU_SHOUSAI_KOUZA.CGI","shousai_kihon");
//         shousai_kihon.close();
        obj.target="shousai_kihon";
        obj.method="post";
        obj.action="KOJINJYOUHOU_SHOUSAI_KOUZA.CGI";
        obj.submit();
        resizeTo(300,130);
//      window.close();
    </script>
	FIN
fi

#     window.opener.location.href = "KOJINJYOUHOU_SHOUSAI_KEIYAKU.CGI";
#     window.opener.document.tab.submit();
#--------------------------------------------------------------
#--------------------------------------------------------------
# テキスト系は_を空白に直してやる
[ "${Bikou}" = "_" ] && Bikou=""
bikou=$(echo "${Bikou}" | sed 's/\\n/###RETURN###/g')
#--------------------------------------------------------------

    # calsed用データ
  echo "###KouzaNumber###"      "${KouzaNumber}"   >> $tmp-calsed_data
  echo "###KouzaName###"        "${KouzaName}"   >> $tmp-calsed_data
  echo "###KouzaNameKanji1###"  "${KouzaNameKanji1}"   >> $tmp-calsed_data
  echo "###KouzaNameKanji2###"  "${KouzaNameKanji2}"   >> $tmp-calsed_data
  echo "###KouzaBikou###"       "${KouzaBikou}"   >> $tmp-calsed_data
  echo "###KOUZAID###"          "${KOUZAID}" >>$tmp-calsed_data
  echo "###KokyakuNumber###"    "${KokyakuNumber}" >> $tmp-calsed_data
  echo "###KokyakuNumberDisplay###" "${KokyakuNumberDisplay}" >> $tmp-calsed_data
  echo "###KokyakuNumberCommentDisplay###" "${KokyakuNumberCommentDisplay}" >> $tmp-calsed_data

# 他入居者一括請求、入居者選択不可
[ -z "${RIYOUSHALISTERRORMESSAGE}" ] && RIYOUSHALISTERRORMESSAGE=""
if [ -z "${RIYOUSHALISTERRORMESSAGE}" ] ; then
  RIYOUSHALISTERRORMESSAGEDISP="none"
else
  RIYOUSHALISTERRORMESSAGEDISP=""
fi

  echo "###RIYOUSHALISTERRORMESSAGE###" "${RIYOUSHALISTERRORMESSAGE}"  >>$tmp-calsed_data
  echo "###RIYOUSHALISTERRORMESSAGEDISP###" "${RIYOUSHALISTERRORMESSAGEDISP}"  >>$tmp-calsed_data

# 口座選択
# 他入居者口座選択
if [ "${KouzaSentaku}" = "1" ]; then
  echo "###KouzaSentaku1###"        "@" >>$tmp-calsed_data
  echo "###KouzaSentaku2###"        "checked" >>$tmp-calsed_data
  echo "###KouzaSentaku3###"        "@" >>$tmp-calsed_data
  echo "###SeikyuuNaiyouDisp###"    "@" >>$tmp-calsed_data
  echo "###SeikyuushoFlgDisp###"    "none" >>$tmp-calsed_data
  echo "###Shinki###"               "none" >>$tmp-calsed_data
  echo "###ShisetsuSelectTbDisp###" "@" >>$tmp-calsed_data
  echo "###TAKOUZADISP###"          "@" >>$tmp-calsed_data
  echo "###IKKATSUDISP###"          "none" >>$tmp-calsed_data

# 他入居者一括請求
elif [ "${KouzaSentaku}" = "2" ]; then
  echo "###KouzaSentaku1###"        "@"     >>$tmp-calsed_data
  echo "###KouzaSentaku2###"        "@"     >>$tmp-calsed_data
  echo "###KouzaSentaku3###"        "checked"  >>$tmp-calsed_data
  echo "###SeikyuuNaiyouDisp###"    "none"  >>$tmp-calsed_data
  echo "###SeikyuushoFlgDisp###"    "@"  >>$tmp-calsed_data
  echo "###Shinki###"               "none"  >>$tmp-calsed_data
  echo "###ShisetsuSelectTbDisp###" "@"     >>$tmp-calsed_data
  echo "###TAKOUZADISP###"          "none"  >>$tmp-calsed_data
  echo "###IKKATSUDISP###"          "@"     >>$tmp-calsed_data

# 0:新規
else
  echo "###KouzaSentaku1###"        "checked"     >>$tmp-calsed_data
  echo "###KouzaSentaku2###"        "@"     >>$tmp-calsed_data
  echo "###KouzaSentaku3###"        "@"  >>$tmp-calsed_data
  echo "###SeikyuuNaiyouDisp###"    "@"  >>$tmp-calsed_data
  echo "###SeikyuushoFlgDisp###"    "none"  >>$tmp-calsed_data
  echo "###Shinki###"               "@"  >>$tmp-calsed_data
  echo "###ShisetsuSelectTbDisp###" "none"     >>$tmp-calsed_data
  echo "###TAKOUZADISP###"          "none"  >>$tmp-calsed_data
  echo "###IKKATSUDISP###"          "none"     >>$tmp-calsed_data
fi


cat $tmp-calsed_data  |
sed 's/_/@/g' -        > $tmp-calsed_data_result
#--------------------------------------------------------------
# データのはめ込み
#cp $tmp-* /home/hands/work/okuda

# 登録時登録okだったら新規htmlではなく、通常の詳細htmlを表示
#if [ "${MODE}" = "touroku" -a "${result}" = "touroku_ok" ] ; then
#else
#fi |
if [ "${MODE}" = "touroku" -a "${result}" = "ok" ] ; then
  cat ${html_dir}/POP_KOJINJYOUHOU_TOUROKU_KANRYOU.html
else
  cat ${html_dir}/POP_KOJINJYOUHOU_SHOUSAI_KOUZA.html     |
  mojihame -lseikyuu_naiyou_select - $tmp-seikyuu_naiyou            |
  mojihame -lseikyuu_year_from_select - $tmp-seikyuu_year_from      |
  mojihame -lseikyuu_month_from_select - $tmp-seikyuu_month_from    |
  mojihame -lseikyuu_year_to_select - $tmp-seikyuu_year_to          |
  mojihame -lseikyuu_month_to_select - $tmp-seikyuu_month_to        |
  mojihame -lkinyuukikan_name_select - $tmp-kinyuukikan_name        |
  mojihame -lshiten_name_select - $tmp-shiten_name                  |
  mojihame -lkokyakunumber_list - $tmp-kokyaku_list                 |
  mojihame -lkouza_shurui_select - $tmp-kouza_shurui      |
  mojihame -lshisetsu_select - $tmp-shisetsu_name         |
  mojihame -ltateya_select - $tmp-tateya_name             |
  mojihame -lfloor_select - $tmp-floor                    |
  mojihame -lunit_select - $tmp-unit_name                 |
  mojihame -lkyoshitsu_select - $tmp-kyoshitsu            |
  mojihame -lnyuukyosha_select - $tmp-nyuukyosha        |
  mojihame -llist_result - $tmp-list_result               |
  mojihame -llist_riyousha_result - $tmp-list_riyousha_result       
fi |
tee $tmp-areareare |
calsed -f $tmp-calsed_data_result -                     |
sed 's/###SPACE###/ /g'                                 |
sed 's/\\n/\n/g'                                        |
#--------------------------------------------------------------
#tee $tmp-arerererere  /home/hands/work/okuda |
#--------------------------------------------------------------
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi > $tmp-resul_html


cat $tmp-resul_html
#--------------------------------------------------------------

## 終了
rm -f $tmp-*
exit 0
