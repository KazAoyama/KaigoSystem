#!/bin/bash
#
# GEKKAN_KATSUDOU_JISSEKI_ICHIRAN_SHUKEI.SEARCH
# 月間活動実績一覧表印刷　検索用CGI
#
# Written by K.Aoyama

#--------------------------------------------------------------
# ログ
source /home/hands/E-LIFE/HOUMONKAIGO/CGI/HOUMONKAIGO.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null
mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).$HOSTNAME.$(date +%Y%m%d) ; set -xv
#--------------------------------------------------------------

#--------------------------------------------------------------
rm -f $tmp-*
#--------------------------------------------------------------

#--------------------------------------------------------------
function error_exit {
  rm -f $tmp-*
  exit 0
}
#--------------------------------------------------------------

#--------------------------------------------------------------
# 変数の定義
namedata=$1

# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------------

# テスト
# POSTされてくるパラメータ

#--------------------------------------------------------------
# 入力データのチェック
# ユーザＩＤ
[ -z "${USER_ID}" -o "${USER_ID}" = "_" ] && error_exit "ログインユーザが不明です"
# 施設
[ -z "${shisetsu}" -o "${shisetsu}" = "_" ] && error_exit "サービス提供事業者が不明です"
# 対象年月
[ -z "${TaishouNengetsu}" -o "${TaishouNengetsu}" = "_" ] && error_exit "対象年が不明です"
# 対象項目
[ -z "${Kaigo}" -a -z "${Yobou}" -a -z "${Jihi}" ] && error_exit "集計対象を選択して下さい"


# 曜日取得
echo "1" "月" > $tmp-youbi
echo "2" "火" >> $tmp-youbi
echo "3" "水" >> $tmp-youbi
echo "4" "木" >> $tmp-youbi
echo "5" "金" >> $tmp-youbi
echo "6" "土" >> $tmp-youbi
echo "7" "日" >> $tmp-youbi

cp $tmp-youbi $work_dir/youbi

#--------------------------------------------------------------
# ヘッダー部分生成
#--------------------------------------------------------------
cat <<- FIN > $tmp-header
FIN

# 利用者マスタ
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_MASTER  |
self 1 2                                       > $tmp-riyousha_master

cp $tmp-riyousha_master $work_dir/riyousha_master

# 自事業所から事業者マスタのＩＤを抽出
cat ${home_dir}/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_HIMODUKE_MASTER |
awk '$1=="'$shisetsu'"&&($3=="11"||$3=="61"){print $2,$3}'    > $tmp-kyoukyusha

cat ${home_dir}/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_HIMODUKE_MASTER |
# ログイン中の施設で絞る
# 介護と予防のみに絞る
awk '$1=="'$shisetsu'"&&($3=="11"||$3=="61"){print $2,$3}' |
# 1:供給者ID  2:サービスコード種類
# 介護と予防にチェックが付いていた場合
if [ "$Kaigo" == "1" -a "$Yobou" == "1" ] ; then
  awk '$2=="11" || $2=="61"{print}'
# 介護のみにチェックが付いていた場合
elif [ -z "$Yobou" -a "$Kaigo" == "1" ] ; then
  awk '$2=="11"{print}'
# 予防のみにチェックが付いていた場合
elif [ -z "$Kaigo" -a "$Yobou" == "1" ] ; then
  awk '$2=="61"{print}'
else
  awk '$2=="11" || $2=="61"{print}'
fi                                      |
LANG=C sort -k1,1                       > $tmp-select_kyoukyusha
# 1:供給者ID  2:サービスコード種類



# テスト
# 施設
#echo "0009" "11" > $tmp-kyoukyusha
# ヘルパー
echo $slHelper |
sed 's/,/ /g'  |
tarr           |
LANG=C sort -k1,1 > $tmp-helper

cp $tmp-helper $work_dir/helper

#--------------------------------------------------------------
# 訪問介護実績ファイルの取得
# 対象となる全利用者のディレクトリを検索する
: > $tmp-jisseki_data
ls -F ${pompa_dir}/HOUMONKAIGO |
grep /                         |
sed 's/\///g'                  > $tmp-houmonkaigo_jisseki_list
ls -F ${pompa_dir}/JIHI_SERVICE |
grep /                         |
sed 's/\///g'                  > $tmp-jihiservice_list

cat $tmp-houmonkaigo_jisseki_list $tmp-jihiservice_list |
LANG=C sort -k1,1  |
getlast 1 1        |
while read path ; do
#if [ -s ${pompa_dir}/HOUMONKAIGO/${path}/SERVICE_JISSEKI ] ; then
  # 自費がチェックされていない場合
  if [ -z "$Jihi" ] ; then
    cat ${pompa_dir}/HOUMONKAIGO/${path}/SERVICE_JISSEKI  |
    awk '$(NF-2)!="9"' |
    # 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
    # 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
    # 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
    # 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID
    LANG=C sort -k2,2                                     |
    join0 key=2 $tmp-select_kyoukyusha -

  # 自費のみがチェックされている場合
  elif [ -z "$Kaigo" -a -z "$Yobou" -a "$Jihi" == "1" ] ; then
    # 自費データを呼び出す
    cat ${pompa_dir}/JIHI_SERVICE/${path}/${TaishouNengetsu}/JIHI_SERVICE |
    awk '$(NF-2)!="9"' |
    # 1:利用者ID  2:対象年月日 3:ID    4:実施日付    5:開始時間
    # 6:終了時間  7:項目ID       8:内容  9:単位時間    10:費用
    # 11:担当者   12:単価      13:税率 14:有効フラグ 15:処理時間
    # 16:ユーザID
    self 1 2.1.4 2.5.2 4 2/NF |
    # 1:利用者ID 2:対象年      3:対象月    4:実施日付  5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{
      if(length($4)=="10"){
        print $0,substr($4,9,2);
      }else{
        print $0,$4;
      }
    }'  |
    self 1/3 20 5/19 |
    # 1:利用者ID 2:対象年      3:対象月    4:対象日 5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{print $1,"jihi",$2,$3,$6,$4,$14,"_",$8,$9,$11,$12,"_ _ _ _",$17,$18,$19}' > $tmp-jisseki_jihi
    # 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
    # 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
    # 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
    # 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID
    cat $tmp-jisseki_jihi

  # 介護と自費がチェックされている場合
  elif [ -z "$Yobou" -a "$Kaigo" == "1"  -a "$Jihi" == "1" ] ; then
    cat ${pompa_dir}/HOUMONKAIGO/${path}/SERVICE_JISSEKI  |
    awk '$(NF-2)!="9"' |
    LANG=C sort -k2,2                                     |
    join0 key=2 $tmp-select_kyoukyusha -                  > $tmp-jisseki_kaigo_yobou

    # 自費データを呼び出す
    cat ${pompa_dir}/JIHI_SERVICE/${path}/${TaishouNengetsu}/JIHI_SERVICE |
    awk '$(NF-2)!="9"' |
    # 1:利用者ID  2:対象年月日 3:ID    4:実施日付    5:開始時間
    # 6:終了時間  7:項目ID       8:内容  9:単位時間    10:費用
    # 11:担当者   12:単価      13:税率 14:有効フラグ 15:処理時間
    # 16:ユーザID
    self 1 2.1.4 2.5.2 4 2/NF |
    # 1:利用者ID 2:対象年      3:対象月    4:実施日付  5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{
      if(length($4)=="10"){
        print $0,substr($4,9,2);
      }else{
        print $0,$4;
      }
    }'  |
    self 1/3 20 5/19 |
    # 1:利用者ID 2:対象年      3:対象月    4:対象日 5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{print $1,"jihi",$2,$3,$6,$4,$14,"_",$8,$9,$11,$12,"_ _ _ _",$17,$18,$19}' > $tmp-jisseki_jihi
    # 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
    # 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
    # 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
    # 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID


    # 介護・予防実績と自費実績を連結
    cat $tmp-jisseki_kaigo_yobou $tmp-jisseki_jihi

  # 予防と自費がチェックされている場合
  elif [ -z "$Kaigo" -a "$Yobou" == "1" -a "$Jihi" == "1" ] ; then
    cat ${pompa_dir}/HOUMONKAIGO/${path}/SERVICE_JISSEKI  |
    awk '$(NF-2)!="9"' |
    LANG=C sort -k2,2                                     |
    join0 key=2 $tmp-select_kyoukyusha -                  > $tmp-jisseki_kaigo_yobou

    # 自費データを呼び出す
    cat ${pompa_dir}/JIHI_SERVICE/${path}/${TaishouNengetsu}/JIHI_SERVICE |
    awk '$(NF-2)!="9"' |
    # 1:利用者ID  2:対象年月日 3:ID    4:実施日付    5:開始時間
    # 6:終了時間  7:項目ID       8:内容  9:単位時間    10:費用
    # 11:担当者   12:単価      13:税率 14:有効フラグ 15:処理時間
    # 16:ユーザID
    self 1 2.1.4 2.5.2 4 2/NF |
    # 1:利用者ID 2:対象年      3:対象月    4:実施日付  5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{
      if(length($4)=="10"){
        print $0,substr($4,9,2);
      }else{
        print $0,$4;
      }
    }'  |
    self 1/3 20 5/19 |
    # 1:利用者ID 2:対象年      3:対象月    4:対象日 5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{print $1,"jihi",$2,$3,$6,$4,$14,"_",$8,$9,$11,$12,"_ _ _ _",$17,$18,$19}' > $tmp-jisseki_jihi
    # 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
    # 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
    # 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
    # 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID

    # 介護・予防実績と自費実績を連結
    cat $tmp-jisseki_kaigo_yobou $tmp-jisseki_jihi

  # 全てがチェックされている場合
  else
    cat ${pompa_dir}/HOUMONKAIGO/${path}/SERVICE_JISSEKI  |
    awk '$(NF-2)!="9"' |
    LANG=C sort -k2,2                                     |
    join0 key=2 $tmp-select_kyoukyusha -                  > $tmp-jisseki_kaigo_yobou

    # 自費データを呼び出す
    cat ${pompa_dir}/JIHI_SERVICE/${path}/${TaishouNengetsu}/JIHI_SERVICE |
    awk '$(NF-2)!="9"' |
    # 1:利用者ID  2:対象年月日 3:ID    4:実施日付    5:開始時間
    # 6:終了時間  7:項目ID       8:内容  9:単位時間    10:費用
    # 11:担当者   12:単価      13:税率 14:有効フラグ 15:処理時間
    # 16:ユーザID
    self 1 2.1.4 2.5.2 4 2/NF |
    # 1:利用者ID 2:対象年      3:対象月    4:実施日付  5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{
      if(length($4)=="10"){
        print $0,substr($4,9,2);
      }else{
        print $0,$4;
      }
    }'  |
    self 1/3 20 5/19 |
    # 1:利用者ID 2:対象年      3:対象月    4:対象日 5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{print $1,"jihi",$2,$3,$6,$4,$14,"_",$8,$9,$11,$12,"_ _ _ _",$17,$18,$19}' > $tmp-jisseki_jihi
    # 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
    # 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
    # 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
    # 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID

    # 介護・予防実績と自費実績を連結
    cat $tmp-jisseki_kaigo_yobou $tmp-jisseki_jihi

  fi
#fi
done > $tmp-jisseki_data
# 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
# 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
# 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
# 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID

# ヘルパー取得
cat ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER   |
awk '{print $1,$2}'              |
LANG=C sort -k1,2                > $tmp-helper_name

displayMdate=$(mdate ${TaishouNengetsu}m | sed 's/ /,/g' )

cp $tmp-jisseki_data $work_dir/jisseki_data
#--------------------------------------------------------------
# 検索
# --------------------------
# 利用者ID、サービス提供事業者、対象年、対象月
# --------------------------
#
cat $tmp-jisseki_data              |
# 対象年月および担当ヘルパー、同行ヘルパーで抽出
awk '$3$4=="'$TaishouNengetsu'"'   |
tee $tmp-doukou_helper               |
LANG=C sort -k7,7                  |
join0 key=7 $tmp-helper           |
join1 key=7 $tmp-helper_name      |
delf 7                            |
# 1:利用者ID      2:サービス提供事業者 3:対象年          4:対象月               5:レコードID
# 6:提供日        7:担当ヘルパー名       8:同行ヘルパー    9:サービス提供開始時間 10:サービス提供終了時間
# 11:サービス内容 12:単位時間          13:緊急加算フラグ 14:サービスコード      15:請求区分
LANG=C sort -k2,2                  |
# 自費がチェックされている場合
if [ "$Jihi" == "1" ] ; then
  echo "jihi 00" > $tmp-jihi_master
  join1 key=2 <(tcat $tmp-select_kyoukyusha $tmp-jihi_master | LANG=C sort -k1,1)
else
  join1 key=2 $tmp-select_kyoukyusha
fi |
# --------------------------
# 1:利用者ID              2:サービス提供事業者 3:サービスタイプ 4:対象年          5:対象月
# 6:レコードID            7:提供日             8:担当ヘルパー名   9:同行ヘルパー    10:サービス提供開始時間
# 11:サービス提供終了時間 12:サービス内容      13:単位時間      14:緊急加算フラグ 15:サービスコード
# 16:請求区分
#--------------------------------------------------------------
# 曜日取得 
awk '{print $4$5$7,$0}'              |
tee $work_dir/work1                  |
mdate 1                              |
delf 1 3                             |
LANG=C sort -k1,1                    |
join1 key=1 $tmp-youbi               |
delf 1                               |
tee $work_dir/work2            |
# 1:曜日                  2:利用者ID              3:サービス提供事業者 4:サービスタイプ 5:対象年
# 6:対象月                7:レコードID            8:提供日             9:担当ヘルパー名   10:同行ヘルパー
# 11:サービス提供開始時間 12:サービス提供終了時間 13:サービス内容      14:単位時間      15:緊急加算フラグ
# 16:サービスコード       17:請求区分
self 8 1 11 12 2 13 15 9 10          |
LANG=C sort -k5,5                    |
join1 key=5 $tmp-riyousha_master     |
delf 5                               |
# 1:提供日       2:曜日           3:サービス提供開始時間 4:サービス提供終了時間 5:利用者ID
# 6:サービス内容 7:緊急加算フラグ 8:担当ヘルパー         9:同行ヘルパー
awk '{print $1,$2,$3"～"$4,(substr($4,1,2)*60+substr($4,4,2))-(substr($3,1,2)*60+substr($3,4,2)),$5,$6,$7,$8,int(substr($3,1,2))}' |
# 1:提供日       2:曜日           3:サービス提供開始時間～サービス提供終了時間 4:サービス提供時間(分) 5:利用者名
# 6:サービス内容 7:緊急加算フラグ 8:担当ヘルパー名 9:サービス提供開始時間(時)
awk '{print $8,$1,$2,$4,$5}'      |
# 1:担当ヘルパー名 2:提供日 3:曜日 4:サービス提供時間(分) 5:利用者名
self 1 2 3 4                    |
# 1:担当ヘルパー名 2:提供日 3:曜日 4:サービス提供時間(分)
#LANG=C sort -k1,2                > $tmp-tantou_helper_data
LANG=C sort -k1,2                 |
sm2 1 3 4 4                       |
tee $work_dir/tate_works          |
awk '{print $0,"'$displayMdate'"}'             |
tee $work_dir/tate_work0          |
sed 's/,/ /g'                     |
tarr num=4                        |
# 1:担当ヘルパー名 2:提供日 3:曜日 4:サービス提供時間(分) 5:日にち
tee $work_dir/tate_work1          |
awk '{print $1,$2,$3,$4,substr($5,7,2)}'    |
lcalc '$1,$2,$3,$4,$5,$4/60,$4%60'          |
marume -sage 6.0                               |
maezero 7.2                                    |
awk '{print $1,$2,$3,$6":"$7,$5}'           |
awk '{if($2!=$5){$4="0"};print $0}'         |  
self 1 4 5                                     |
LANG=C sort -k1,1 -k3,3 -k2,2 |
self 1 3 2                    |
getlast 1 2                   |
delf 2                        |
sed -e "s/ 0 / @ /g" -e "s/ 0 / @ /g" -e "s/^0 /@ /" -e "s/ 0$/ @/" |
awk '{print $1,"<td##SP##style=\"border:1px##SP##solid##SP###bbbbbb;padding:0px##SP##0px##SP##0px##SP##0px;\">"$2"</td>"}'   |
tee $work_dir/fujikura_00 |
yarr num=1                                     |
tee $work_dir/fujikura_01 |
sed 's/ //2g'                                  |
tee $work_dir/fujikura_02 |
# 1:担当ヘルパー名 2:サービス提供時間集計(分)
self 1 2                                     |
#--------------------------------------------------------------
LANG=C sort -k1,1                  > ${tmp}-jisseki

# 同行ヘルパー
cat $tmp-doukou_helper               |
LANG=C sort -k8,8                    |
join0 key=8 $tmp-helper           |
join1 key=8 $tmp-helper_name      |
delf 8                            |
# 1:利用者ID      2:サービス提供事業者 3:対象年          4:対象月               5:レコードID
# 6:提供日        7:担当ヘルパー       8:同行ヘルパー名  9:サービス提供開始時間 10:サービス提供終了時間
# 11:サービス内容 12:単位時間          13:緊急加算フラグ 14:サービスコード      15:請求区分
LANG=C sort -k2,2                  |
# 自費がチェックされている場合
if [ "$Jihi" == "1" ] ; then
  echo "jihi 00" > $tmp-jihi_master
  join1 key=2 <(tcat $tmp-select_kyoukyusha $tmp-jihi_master | LANG=C sort -k1,1)
else
  join1 key=2 $tmp-select_kyoukyusha
fi |
# --------------------------
# 1:利用者ID              2:サービス提供事業者 3:サービスタイプ 4:対象年          5:対象月
# 6:レコードID            7:提供日             8:担当ヘルパー   9:同行ヘルパー名  10:サービス提供開始時間
# 11:サービス提供終了時間 12:サービス内容      13:単位時間      14:緊急加算フラグ 15:サービスコード
# 16:請求区分
#--------------------------------------------------------------
# 曜日取得
awk '{print $4$5$7,$0}'              |
tee $work_dir/work3                  |
mdate 1                              |
delf 1 3                             |
LANG=C sort -k1,1                    |
join1 key=1 $tmp-youbi               |
delf 1                               |
tee $work_dir/work4            |
# 1:曜日                  2:利用者ID              3:サービス提供事業者 4:サービスタイプ 5:対象年
# 6:対象月                7:レコードID            8:提供日             9:担当ヘルパー   10:同行ヘルパー名
# 11:サービス提供開始時間 12:サービス提供終了時間 13:サービス内容      14:単位時間      15:緊急加算フラグ
# 16:サービスコード       17:請求区分
self 8 1 11 12 2 13 15 9 10          |
LANG=C sort -k5,5                    |
join1 key=5 $tmp-riyousha_master     |
delf 5                               |
# 1:提供日       2:曜日           3:サービス提供開始時間 4:サービス提供終了時間 5:利用者名
# 6:サービス内容 7:緊急加算フラグ 8:担当ヘルパー         9:同行ヘルパー
awk '{print $1,$2,$3"～"$4,(substr($4,1,2)*60+substr($4,4,2))-(substr($3,1,2)*60+substr($3,4,2)),$5,$6,$7,$9,int(substr($3,1,2))}' |
# 1:提供日       2:曜日           3:サービス提供開始時間～サービス提供終了時間 4:サービス提供時間(分)     5:利用者名
# 6:サービス内容 7:緊急加算フラグ 8:同行ヘルパー                               9:サービス提供開始時間(時)
awk '{print $8,$1,$2,$4,$5}'      |
# 1:同行ヘルパー名 2:提供日 3:曜日 4:サービス提供時間(分) 5:利用者名
self 1 2 3 4                    |
# 1:同行ヘルパー名 2:提供日 3:曜日 4:サービス提供時間(分)
# 担当ヘルパーをマージする
cat $tmp-tantou_helper_data -     |
LANG=C sort -k1,2                 |
sm2 1 3 4 4                       |
tee $work_dir/tate_works2          |
awk '{print $0,"'$displayMdate'"}'             |
tee $work_dir/tate_work3          |
sed 's/,/ /g'                     |
tarr num=4                        |
# 1:同行ヘルパー名 2:提供日 3:曜日 4:サービス提供時間(分) 5:日にち
tee $work_dir/tate_work4          |
awk '{print $1,$2,$3,$4,substr($5,7,2)}'    |
lcalc '$1,$2,$3,$4,$5,$4/60,$4%60'          |
marume -sage 6.0                               |
maezero 7.2                                    |
awk '{print $1,$2,$3,$6":"$7,$5}'           |
awk '{if($2!=$5){$4="0"};print $0}'            |
self 1 4 5                                     |
LANG=C sort -k1,1 -k3,3 -k2,2 |
self 1 3 2                    |
getlast 1 2                   |
delf 2                        |
sed -e "s/ 0 / @ /g" -e "s/ 0 / @ /g" -e "s/^0 /@ /" -e "s/ 0$/ @/" |
awk '{print $1,"<td##SP##style=\"border:1px##SP##solid##SP###bbbbbb;padding:0px##SP##0px##SP##0px##SP##0px;\">"$2"</td>"}'   |
yarr num=1                                     |
sed 's/ //2g'                                  |
self 1 2                                     |
# 1:同行ヘルパー名 2:サービス提供時間集計(分)
#--------------------------------------------------------------
#LANG=C sort -k1,1                  >> ${tmp}-jisseki
LANG=C sort -k1,1                  > ${tmp}-jisseki_doukou

cp ${tmp}-jisseki $work_dir/jisseki

# 予定データを表示
cat ${tmp}-jisseki |
awk '{print "l",$0}' > $tmp-jisseki_res

cat $tmp-jisseki_res


## 終了
rm -f $tmp-*
exit 0
