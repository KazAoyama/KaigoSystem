#!/bin/bash
#
# HELPER_KATSUDOU_KIROKU.SEARCH
# ヘルパー活動記録印刷　検索用CGI
#
# Written by K.Aoyama

#--------------------------------------------------------------
# ログ
source /home/hands/E-LIFE/HOUMONKAIGO/CGI/HOUMONKAIGO.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null
mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).$HOSTNAME.$(date +%Y%m%d) ; set -xv
#--------------------------------------------------------------

#--------------------------------------------------------------
rm -f $tmp-*
#--------------------------------------------------------------

#--------------------------------------------------------------
function error_exit {
  rm -f $tmp-*
  exit 0
}
#--------------------------------------------------------------

#--------------------------------------------------------------
# 変数の定義
namedata=$1

# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------------

# テスト
# POSTされてくるパラメータ

#--------------------------------------------------------------
# 入力データのチェック
# ユーザＩＤ
[ -z "${USER_ID}" -o "${USER_ID}" = "_" ] && error_exit "ログインユーザが不明です"
# 施設
[ -z "${shisetsu}" -o "${shisetsu}" = "_" ] && error_exit "サービス提供事業者が不明です"
# 対象年月
[ -z "${TaishouNengetsu}" -o "${TaishouNengetsu}" = "_" ] && error_exit "対象年が不明です"
# 対象項目
[ -z "${Kaigo}" -a -z "${Yobou}" -a -z "${Jihi}" ] && error_exit "集計対象を選択して下さい"


# 曜日取得
echo "1" "月" > $tmp-youbi
echo "2" "火" >> $tmp-youbi
echo "3" "水" >> $tmp-youbi
echo "4" "木" >> $tmp-youbi
echo "5" "金" >> $tmp-youbi
echo "6" "土" >> $tmp-youbi
echo "7" "日" >> $tmp-youbi

cp $tmp-youbi $work_dir/youbi

#--------------------------------------------------------------
# ヘッダー部分生成
#--------------------------------------------------------------
cat <<- FIN > $tmp-header
FIN

# 利用者マスタ
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_MASTER  |
self 1 2                                       > $tmp-riyousha_master
# 1:利用者ID  2:利用者

cp $tmp-riyousha_master $work_dir/riyousha_master

# 自事業所から事業者マスタのＩＤを抽出
cat ${home_dir}/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_HIMODUKE_MASTER |
awk '$1=="'$shisetsu'"&&($3=="11"||$3=="61"){print $2,$3}'           > $tmp-kyoukyusha
# 1:供給者ID  2:サービスコード種類

# ヘルパー
echo $slHelper |
sed 's/,/ /g'  |
tarr           |
LANG=C sort -k1,1 > $tmp-helper
# 1:ヘルパーID

cp $tmp-helper $work_dir/helper

cat ${home_dir}/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_HIMODUKE_MASTER |
# ログイン中の施設で絞る
# 介護と予防のみに絞る
awk '$1=="'$shisetsu'"&&($3=="11"||$3=="61"){print $2,$3}' |
# 1:供給者ID  2:サービスコード種類
# 介護と予防にチェックが付いていた場合
if [ "$Kaigo" == "1" -a "$Yobou" == "1" ] ; then
  awk '$2=="11" || $2=="61"{print}'
# 介護のみにチェックが付いていた場合
elif [ -z "$Yobou" -a "$Kaigo" == "1" ] ; then
  awk '$2=="11"{print}'
# 予防のみにチェックが付いていた場合
elif [ -z "$Kaigo" -a "$Yobou" == "1" ] ; then
  awk '$2=="61"{print}'
else
  awk '$2=="11" || $2=="61"{print}'
fi                                      |
LANG=C sort -k1,1                       > $tmp-select_kyoukyusha
# 1:供給者ID  2:サービスコード種類

#--------------------------------------------------------------
# 訪問介護実績ファイルの取得
# 自費サービスファイルも含める（2014/8/5）
# 対象となる全利用者のディレクトリを検索する
: > $tmp-jisseki_data
ls -F ${pompa_dir}/HOUMONKAIGO |
grep /                         |
sed 's/\///g'                  > $tmp-houmonkaigo_jisseki_list
ls -F ${pompa_dir}/JIHI_SERVICE |
grep /                         |
sed 's/\///g'                  > $tmp-jihiservice_list

cat $tmp-houmonkaigo_jisseki_list $tmp-jihiservice_list |
LANG=C sort -k1,1  |
getlast 1 1        |                                     
while read path ; do
#if [ -s ${pompa_dir}/HOUMONKAIGO/${path}/SERVICE_JISSEKI ] ; then
  # 自費がチェックされていない場合
  if [ -z "$Jihi" ] ; then
    cat ${pompa_dir}/HOUMONKAIGO/${path}/SERVICE_JISSEKI  |
    awk '$(NF-2)!="9"' |
    # 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
    # 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
    # 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
    # 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID
    LANG=C sort -k2,2                                     |
    join0 key=2 $tmp-select_kyoukyusha -                  
  
  # 自費のみがチェックされている場合
  elif [ -z "$Kaigo" -a -z "$Yobou" -a "$Jihi" == "1" ] ; then
    # 自費データを呼び出す
    cat ${pompa_dir}/JIHI_SERVICE/${path}/${TaishouNengetsu}/JIHI_SERVICE |
    awk '$(NF-2)!="9"' |
    # 1:利用者ID  2:対象年月日 3:ID    4:実施日付    5:開始時間
    # 6:終了時間  7:項目ID       8:内容  9:単位時間    10:費用
    # 11:担当者   12:単価      13:税率 14:有効フラグ 15:処理時間
    # 16:ユーザID
    self 1 2.1.4 2.5.2 4 2/NF |
    # 1:利用者ID 2:対象年      3:対象月    4:実施日付  5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{
      if(length($4)=="10"){
        print $0,substr($4,9,2);
      }else{
        print $0,$4;
      }
    }'  |
    self 1/3 20 5/19 |
    # 1:利用者ID 2:対象年      3:対象月    4:対象日 5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{print $1,"jihi",$2,$3,$6,$4,$14,"_",$8,$9,"jihi",$12,"_ _ _ _",$17,$18,$19}' > $tmp-jisseki_jihi
    # 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
    # 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
    # 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
    # 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID
    cat $tmp-jisseki_jihi  

  # 介護と自費がチェックされている場合
  elif [ -z "$Yobou" -a "$Kaigo" == "1"  -a "$Jihi" == "1" ] ; then
    cat ${pompa_dir}/HOUMONKAIGO/${path}/SERVICE_JISSEKI  |
    awk '$(NF-2)!="9"' |
    LANG=C sort -k2,2                                     |
    join0 key=2 $tmp-select_kyoukyusha -                  > $tmp-jisseki_kaigo_yobou

    # 自費データを呼び出す
    cat ${pompa_dir}/JIHI_SERVICE/${path}/${TaishouNengetsu}/JIHI_SERVICE |
    awk '$(NF-2)!="9"' |
    # 1:利用者ID  2:対象年月日 3:ID    4:実施日付    5:開始時間
    # 6:終了時間  7:項目ID       8:内容  9:単位時間    10:費用
    # 11:担当者   12:単価      13:税率 14:有効フラグ 15:処理時間
    # 16:ユーザID
    self 1 2.1.4 2.5.2 4 2/NF |
    # 1:利用者ID 2:対象年      3:対象月    4:実施日付  5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{
      if(length($4)=="10"){
        print $0,substr($4,9,2);
      }else{
        print $0,$4;
      }
    }'  |
    self 1/3 20 5/19 |
    # 1:利用者ID 2:対象年      3:対象月    4:対象日 5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{print $1,"jihi",$2,$3,$6,$4,$14,"_",$8,$9,"jihi",$12,"_ _ _ _",$17,$18,$19}' > $tmp-jisseki_jihi
    # 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
    # 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
    # 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
    # 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID


    # 介護・予防実績と自費実績を連結
    cat $tmp-jisseki_kaigo_yobou $tmp-jisseki_jihi

  # 予防と自費がチェックされている場合  
  elif [ -z "$Kaigo" -a "$Yobou" == "1" -a "$Jihi" == "1" ] ; then
    cat ${pompa_dir}/HOUMONKAIGO/${path}/SERVICE_JISSEKI  |
    awk '$(NF-2)!="9"' |
    LANG=C sort -k2,2                                     |
    join0 key=2 $tmp-select_kyoukyusha -                  > $tmp-jisseki_kaigo_yobou
  
    # 自費データを呼び出す
    cat ${pompa_dir}/JIHI_SERVICE/${path}/${TaishouNengetsu}/JIHI_SERVICE |
    awk '$(NF-2)!="9"' |
    # 1:利用者ID  2:対象年月日 3:ID    4:実施日付    5:開始時間
    # 6:終了時間  7:項目ID       8:内容  9:単位時間    10:費用
    # 11:担当者   12:単価      13:税率 14:有効フラグ 15:処理時間
    # 16:ユーザID
    self 1 2.1.4 2.5.2 4 2/NF |
    # 1:利用者ID 2:対象年      3:対象月    4:実施日付  5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{
      if(length($4)=="10"){
        print $0,substr($4,9,2);
      }else{
        print $0,$4;
      }
    }'  |
    self 1/3 20 5/19 |
    # 1:利用者ID 2:対象年      3:対象月    4:対象日 5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{print $1,"jihi",$2,$3,$6,$4,$14,"_",$8,$9,"jihi",$12,"_ _ _ _",$17,$18,$19}' > $tmp-jisseki_jihi
    # 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
    # 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
    # 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
    # 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID

    # 介護・予防実績と自費実績を連結
    cat $tmp-jisseki_kaigo_yobou $tmp-jisseki_jihi
 
  # 全てがチェックされている場合
  else
    cat ${pompa_dir}/HOUMONKAIGO/${path}/SERVICE_JISSEKI  |
    awk '$(NF-2)!="9"' |
    LANG=C sort -k2,2                                     |
    join0 key=2 $tmp-select_kyoukyusha -                  > $tmp-jisseki_kaigo_yobou

    # 自費データを呼び出す
    cat ${pompa_dir}/JIHI_SERVICE/${path}/${TaishouNengetsu}/JIHI_SERVICE |
    awk '$(NF-2)!="9"' |
    # 1:利用者ID  2:対象年月日 3:ID    4:実施日付    5:開始時間
    # 6:終了時間  7:項目ID       8:内容  9:単位時間    10:費用
    # 11:担当者   12:単価      13:税率 14:有効フラグ 15:処理時間
    # 16:ユーザID
    self 1 2.1.4 2.5.2 4 2/NF |
    # 1:利用者ID 2:対象年      3:対象月    4:実施日付  5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{
      if(length($4)=="10"){
        print $0,substr($4,9,2);
      }else{
        print $0,$4;
      }
    }'  |
    self 1/3 20 5/19 |
    # 1:利用者ID 2:対象年      3:対象月    4:対象日 5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{print $1,"jihi",$2,$3,$6,$4,$14,"_",$8,$9,"jihi",$12,"_ _ _ _",$17,$18,$19}' > $tmp-jisseki_jihi
    # 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
    # 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
    # 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
    # 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID

    # 介護・予防実績と自費実績を連結
    cat $tmp-jisseki_kaigo_yobou $tmp-jisseki_jihi  

  fi
#fi
done > $tmp-jisseki_data
# 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
# 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
# 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
# 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID


# ヘルパー取得
cat ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER   |
awk '{print $1,$2}'              |
LANG=C sort -k1,2                > $tmp-helper_name
# 1:従業員ID 2:従業員名

cp $tmp-jisseki_data $work_dir/jisseki_data
#--------------------------------------------------------------
# 検索
# --------------------------
# 利用者ID、サービス提供事業者、対象年、対象月
# --------------------------
#
cat $tmp-jisseki_data              |
# 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
# 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
# 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
# 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID

# 対象年月および担当ヘルパー、同行ヘルパーで抽出
awk '$3$4=="'$TaishouNengetsu'"'   |
tee $tmp-doukou_helper             |
LANG=C sort -k7,7                  |
join0 key=7 $tmp-helper            |
join1 key=7 $tmp-helper_name       |
#delf 7                             |

# 1:利用者ID          2:供給者ID            3:対象年         4:対象月          5:レコードID
# 6:サービス提供日    7:担当ヘルパーID      8:担当ヘルパー名 9:同行ヘルパーID  10:サービス開始時間
# 11:サービス終了時間 12:サービス内容       13:単位時間      14:緊急加算フラグ 15:サービスコード項目
# 16:請求対象区分     17:サービスコード種類 18:有効フラグ    19:処理日         20:ユーザーID

LANG=C sort -k2,2                  |

# 自費がチェックされている場合
if [ "$Jihi" == "1" ] ; then
  echo "jihi 00" > $tmp-jihi_master
  join1 key=2 <(tcat $tmp-select_kyoukyusha $tmp-jihi_master | LANG=C sort -k1,1)
else
  join1 key=2 $tmp-select_kyoukyusha        
fi                                 |
# 1:利用者ID            2:供給者ID          3:サービスコード種類  4:対象年         5:対象月
# 6:レコードID          7:サービス提供日    8:担当ヘルパーID      9:担当ヘルパー名 10:同行ヘルパーID
# 11:サービス開始時間   12:サービス終了時間 13:サービス内容       14:単位時間      15:緊急加算フラグ
# 16:サービスコード項目 17:請求対象区分     18:サービスコード種類 19:有効フラグ    20:処理日
# 21:ユーザーID
#--------------------------------------------------------------
# 曜日取得 
awk '{print $4$5$7,$0}'              |
# 1:対象年月日      2:利用者ID            3:供給者ID          4:サービスコード種類  5:対象年
# 6:対象月          7:レコードID          8:サービス提供日    9:担当ヘルパーID      10:担当ヘルパー名
# 11:同行ヘルパーID 12:サービス開始時間   13:サービス終了時間 14:サービス内容       15:単位時間
# 16:緊急加算フラグ 17:サービスコード項目 18:請求対象区分     19:サービスコード種類 20:有効フラグ
# 21:処理日         22:ユーザーID

tee $work_dir/work1                  |
mdate 1                              |
delf 1 3                             |
# 1:曜日コード      2:利用者ID            3:供給者ID          4:サービスコード種類  5:対象年
# 6:対象月          7:レコードID          8:サービス提供日    9:担当ヘルパーID      10:担当ヘルパー名
# 11:同行ヘルパーID 12:サービス開始時間   13:サービス終了時間 14:サービス内容       15:単位時間
# 16:緊急加算フラグ 17:サービスコード項目 18:請求対象区分     19:サービスコード種類 20:有効フラグ
# 21:処理日         22:ユーザーID
LANG=C sort -k1,1                    |
join1 key=1 $tmp-youbi               |
# 1:曜日コード      2:曜日            3:利用者ID            4:供給者ID          5:サービスコード種類
# 6:対象年          7:対象月          8:レコードID          9:サービス提供日    10:担当ヘルパーID
# 11:担当ヘルパー名 12:同行ヘルパーID 13:サービス開始時間   14:サービス終了時間 15:サービス内容
# 16:単位時間       17:緊急加算フラグ 18:サービスコード項目 19:請求対象区分     20:サービスコード種類
# 21:有効フラグ     22:処理日         23:ユーザーID
delf 1                               |
# 1:曜日            2:利用者ID            3:供給者ID          4:サービスコード種類  5:対象年
# 6:対象月          7:レコードID          8:サービス提供日    9:担当ヘルパーID      10:担当ヘルパー名
# 11:同行ヘルパーID 12:サービス開始時間   13:サービス終了時間 14:サービス内容       15:単位時間
# 16:緊急加算フラグ 17:サービスコード項目 18:請求対象区分     19:サービスコード種類 20:有効フラグ
# 21:処理日         22:ユーザーID

# サービスコード種類が予防ならサービス内容をYoboに変更
awk '{
  if($19=="61"){
    print $0,"Yobo";
  }else{
    print $0,$14;
  }
}'  |
self 1/13 23 15/22 |

tee $work_dir/work2                  |
self 8 1 12 13 2 14 16 9 10 11 |
# 1:サービス提供日 2:曜日           3:サービス開始時間 4:サービス終了時間 5:利用者ID
# 6:サービス内容   7:緊急加算フラグ 8:担当ヘルパーID   9:担当ヘルパー名   10:同行ヘルパーID

LANG=C sort -k5,5                    |
join1 key=5 $tmp-riyousha_master     |
delf 5                               |
# 1:サービス提供日 2:曜日           3:サービス開始時間 4:サービス終了時間 5:利用者名
# 6:サービス内容   7:緊急加算フラグ 8:担当ヘルパーID   9:担当ヘルパー名   10:同行ヘルパーID

awk '{print $1,$2,$3"～"$4,(substr($4,1,2)*60+substr($4,4,2))-(substr($3,1,2)*60+substr($3,4,2)),$5,$6,$7,$8,$9,int(substr($3,1,2))}' |
# 1:提供日       2:曜日           3:サービス提供開始時間～サービス提供終了時間 4:サービス提供時間(分) 5:利用者名
# 6:サービス内容 7:緊急加算フラグ 8:担当ヘルパーID                             9:担当ヘルパー名       10:サービス提供開始時間(時)

awk '{print $8,$9,$1,$2,$3,$5,$4,$6,$7,$10}' |
# 1:担当ヘルパーID 2:担当ヘルパー名       3:提供日       4:曜日           5:サービス提供開始時間～サービス提供終了時間
# 6:利用者名       7:サービス提供時間(分) 8:サービス内容 9:緊急加算フラグ 10:サービス提供開始時間(時)

self 1/8 10                                |
tee $tmp-syukei_syutantou                  |
# 1:担当ヘルパーID 2:担当ヘルパー名       3:提供日       4:曜日                     5:サービス提供開始時間～サービス提供終了時間
# 6:利用者名       7:サービス提供時間(分) 8:サービス内容 9:サービス提供開始時間(時)
awk '{
if($8=="1"&&(8<=$9&&$9<18)){$10=$7;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0}
else if($8=="1"&&((18<=$9&&$9<22)||(6<=$9&&$9<8))){$10=0;$11=$7;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0}
else if($8=="1"&&(22<=$9||$9<6)){$10=0;$11=0;$12=$7;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0}
else if($8=="2"&&(8<=$9&&$9<18)){$10=0;$11=0;$12=0;$13=$7;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0}
else if($8=="2"&&((18<=$9&&$9<22)||(6<=$9&&$9<8))){$10=0;$11=0;$12=0;$13=0;$14=$7;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0}
else if($8=="2"&&(22<=$9||$9<6)){$10=0;$11=0;$12=0;$13=0;$14=0;$15=$7;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0}
else if($8=="4"&&(8<=$9&&$9<18)){$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=$7;$17=0;$18=0;$19=0;$20=0;$21=0}
else if($8=="4"&&((18<=$9&&$9<22)||(6<=$9&&$9<8))){$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=$7;$18=0;$19=0;$20=0;$21=0}
else if($8=="4"&&(22<=$9||$9<6)){$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=$7;$19=0;$20=0;$21=0}
else if($8=="Yobo"){$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=$7;$21=0}
else if($8=="jihi"){$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=$7}
else {$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=$7;$20=0;$21=0};
print $0}'      |
# 1:担当ヘルパーID 2:担当ヘルパー名             3:提供日       4:曜日                     5:サービス提供開始時間～サービス提供終了時間
# 6:利用者名       7:サービス提供時間（分換算） 8:サービス内容 9:サービス提供開始時間(時) 10:身体昼間
# 11:身体早朝夜間  12:身体深夜                  13:生活昼間    14:生活早朝夜間            15:生活深夜
# 16:混合身体      17:混合早朝夜間              18:混合深夜    19:乗降介助昼間            20:予防
# 21:自費
self 1/6 10/NF |
# 1:担当ヘルパーID 2:担当ヘルパー名 3:提供日       4:曜日          5:サービス提供開始時間～サービス提供終了時間
# 6:利用者名       7:身体昼間       8:身体早朝夜間 9:身体深夜      10:生活昼間
# 11:生活早朝夜間  12:生活深夜      13:混合身体    14:混合早朝夜間 15:混合深夜
# 16:乗降介助昼間  17:予防          18:自費
#--------------------------------------------------------------
LANG=C sort -k1,1n                  > ${tmp}-jisseki


# 同行ヘルパー
cat $tmp-doukou_helper               |
# 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
# 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
# 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
# 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID
LANG=C sort -k8,8                    |
join0 key=8 $tmp-helper           |
join1 key=8 $tmp-helper_name      |
# 1:利用者ID          2:供給者ID            3:対象年         4:対象月          5:レコードID
# 6:サービス提供日    7:担当ヘルパーID      8:同行ヘルパーID 9:同行ヘルパー名  10:サービス開始時間
# 11:サービス終了時間 12:サービス内容       13:単位時間      14:緊急加算フラグ 15:サービスコード項目
# 16:請求対象区分     17:サービスコード種類 18:有効フラグ    19:処理日         20:ユーザーID
LANG=C sort -k2,2                  |

# 自費がチェックされている場合
if [ "$Jihi" == "1" ] ; then
  echo "jihi 00" > $tmp-jihi_master
  join1 key=2 <(tcat $tmp-select_kyoukyusha $tmp-jihi_master | LANG=C sort -k1,1)
else
  join1 key=2 $tmp-select_kyoukyusha
fi                                 |
# 1:利用者ID            2:供給者ID          3:サービスコード種類  4:対象年         5:対象月
# 6:レコードID          7:サービス提供日    8:担当ヘルパーID      9:同行ヘルパーID 10:同行ヘルパー名
# 11:サービス開始時間   12:サービス終了時間 13:サービス内容       14:単位時間      15:緊急加算フラグ
# 16:サービスコード項目 17:請求対象区分     18:サービスコード種類 19:有効フラグ    20:処理日
# 21:ユーザーID

#--------------------------------------------------------------
# 曜日取得
awk '{print $4$5$7,$0}'              |
# 1:対象年月日      2:利用者ID            3:供給者ID          4:サービスコード種類  5:対象年
# 6:対象月          7:レコードID          8:サービス提供日    9:担当ヘルパーID      10:同行ヘルパーID
# 11:同行ヘルパー名 12:サービス開始時間   13:サービス終了時間 14:サービス内容       15:単位時間
# 16:緊急加算フラグ 17:サービスコード項目 18:請求対象区分     19:サービスコード種類 20:有効フラグ
# 21:処理日         22:ユーザーID

tee $work_dir/work3                  |
mdate 1                              |
delf 1 3                             |
# 1:曜日コード      2:利用者ID            3:供給者ID          4:サービスコード種類  5:対象年
# 6:対象月          7:レコードID          8:サービス提供日    9:担当ヘルパーID      10:同行ヘルパーID
# 11:同行ヘルパー名 12:サービス開始時間   13:サービス終了時間 14:サービス内容       15:単位時間
# 16:緊急加算フラグ 17:サービスコード項目 18:請求対象区分     19:サービスコード種類 20:有効フラグ
# 21:処理日         22:ユーザーID

LANG=C sort -k1,1                    |
join1 key=1 $tmp-youbi               |
delf 1                               |
# 1:曜日            2:利用者ID            3:供給者ID          4:サービスコード種類  5:対象年
# 6:対象月          7:レコードID          8:サービス提供日    9:担当ヘルパーID      10:同行ヘルパーID
# 11:同行ヘルパー名 12:サービス開始時間   13:サービス終了時間 14:サービス内容       15:単位時間
# 16:緊急加算フラグ 17:サービスコード項目 18:請求対象区分     19:サービスコード種類 20:有効フラグ
# 21:処理日         22:ユーザーID

# サービスコード種類が予防ならサービス内容をYoboに変更
awk '{
  if($19=="61"){
    print $0,"Yobo";
  }else{
    print $0,$14;
  }
}'  |
self 1/13 23 15/22 |
tee $work_dir/work4                  |
# 1:曜日            2:利用者ID            3:供給者ID          4:サービスコード種類  5:対象年
# 6:対象月          7:レコードID          8:サービス提供日    9:担当ヘルパーID      10:同行ヘルパーID
# 11:同行ヘルパー名 12:サービス開始時間   13:サービス終了時間 14:サービス内容       15:単位時間
# 16:緊急加算フラグ 17:サービスコード項目 18:請求対象区分     19:サービスコード種類 20:有効フラグ
# 21:処理日         22:ユーザーID

self 8 1 12 13 2 14 16 9 10 11          |
# 1:サービス提供日 2:曜日           3:サービス開始時間 4:サービス終了時間 5:利用者ID
# 6:サービス内容   7:緊急加算フラグ 8:担当ヘルパーID   9:同行ヘルパーID   10:同行ヘルパー名

LANG=C sort -k5,5                    |
join1 key=5 $tmp-riyousha_master     |
delf 5                               |
# 1:サービス提供日 2:曜日           3:サービス開始時間 4:サービス終了時間 5:利用者名
# 6:サービス内容   7:緊急加算フラグ 8:担当ヘルパーID   9:同行ヘルパーID   10:同行ヘルパー名

awk '{print $1,$2,$3"～"$4,(substr($4,1,2)*60+substr($4,4,2))-(substr($3,1,2)*60+substr($3,4,2)),$5,$6,$7,$9,$10,int(substr($3,1,2))}' |
# 1:提供日       2:曜日           3:サービス提供開始時間～サービス提供終了時間 4:サービス提供時間(分) 5:利用者名
# 6:サービス内容 7:緊急加算フラグ 8:同行ヘルパーID                             9:同行ヘルパー名       10:サービス提供開始時間(時)
awk '{print $8,$9,$1,$2,$3,$5,$4,$6,$7,$10}' |
# 1:担当ヘルパーID 2:担当ヘルパー名       3:提供日       4:曜日           5:サービス提供開始時間～サービス提供終了時間
# 6:利用者名       7:サービス提供時間(分) 8:サービス内容 9:緊急加算フラグ 10:サービス提供開始時間(時)
self 1/8 10                                  |
tee $tmp-syukei_fukutantou                  |
# 1:担当ヘルパーID 2:担当ヘルパー名       3:提供日       4:曜日                     5:サービス提供開始時間～サービス提供終了時間
# 6:利用者名       7:サービス提供時間(分) 8:サービス内容 9:サービス提供開始時間(時)

awk '{
if($8=="1"&&(8<=$9&&$9<18)){$10=$7;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0}
else if($8=="1"&&((18<=$9&&$9<22)||(6<=$9&&$9<8))){$10=0;$11=$7;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0}
else if($8=="1"&&(22<=$9||$9<6)){$10=0;$11=0;$12=$7;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0}
else if($8=="2"&&(8<=$9&&$9<18)){$10=0;$11=0;$12=0;$13=$7;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0}
else if($8=="2"&&((18<=$9&&$9<22)||(6<=$9&&$9<8))){$10=0;$11=0;$12=0;$13=0;$14=$7;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0}
else if($8=="2"&&(22<=$9||$9<6)){$10=0;$11=0;$12=0;$13=0;$14=0;$15=$7;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0}
else if($8=="4"&&(8<=$9&&$9<18)){$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=$7;$17=0;$18=0;$19=0;$20=0;$21=0}
else if($8=="4"&&((18<=$9&&$9<22)||(6<=$9&&$9<8))){$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=$7;$18=0;$19=0;$20=0;$21=0}
else if($8=="4"&&(22<=$9||$9<6)){$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=$7;$19=0;$20=0;$21=0}
else if($8=="Yobo"){$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=$7;$21=0}
else if($8=="jihi"){$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=$7}
else {$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=$7;$20=0;$21=0};
print $0}'      |

# 1:担当ヘルパーID 2:担当ヘルパー名             3:提供日       4:曜日                     5:サービス提供開始時間～サービス提>供終了時間
# 6:利用者名       7:サービス提供時間（分換算） 8:サービス内容 9:サービス提供開始時間(時) 10:身体昼間
# 11:身体早朝夜間  12:身体深夜                  13:生活昼間    14:生活早朝夜間            15:生活深夜
# 16:混合身体      17:混合早朝夜間              18:混合深夜    19:乗降介助昼間            20:予防
# 21:自費

self 1/6 10/NF   |
# 1:担当ヘルパーID 2:担当ヘルパー名 3:提供日       4:曜日          5:サービス提供開始時間～サービス提供終了時間
# 6:利用者名       7:身体昼間       8:身体早朝夜間 9:身体深夜      10:生活昼間
# 11:生活早朝夜間  12:生活深夜      13:混合身体    14:混合早朝夜間 15:混合深夜
# 16:乗降介助昼間  17:予防          18:自費
#LANG=C sort -k1,1n                  >> ${tmp}-jisseki
LANG=C sort -k1,1n                  > ${tmp}-jisseki_doukou

#cat $tmp-syukei_syutantou $tmp-syukei_fukutantou |
cat $tmp-syukei_syutantou |
# 1:担当ヘルパーID 2:担当ヘルパー名             3:提供日       4:曜日                     5:サービス提供開始時間～サービス提供終了時間
# 6:利用者名       7:サービス提供時間（分換算） 8:サービス内容 9:サービス提供開始時間(時)
self 1 7                                           |
# 1:サービス提供時間（分換算）
awk '{print $1,$2}'                             |
LANG=C sort -k1,1                               |
sm2 1 1 2 2                                      |
awk '{print "s",$0}'                             > $tmp-syukei

cp ${tmp}-jisseki $work_dir/jisseki

# 予定データを表示
cat ${tmp}-jisseki |
awk '{print "l",$0}' > $tmp-jisseki_res

cat $tmp-jisseki_res $tmp-syukei |
sed -e "s/ 0 / @ /g" -e "s/ 0 / @ /g" -e "s/^0 /@ /" -e "s/ 0$/ @/"

# 1:l                                          2:担当ヘルパーID 3:担当ヘルパー名 4:提供日       5:曜日
# 6:サービス提供開始時間～サービス提供終了時間 7:利用者名       8:身体昼間       9:身体早朝夜間 10:身体深夜
# 11:生活昼間                                  12:生活早朝夜間  13:生活深夜      14:混合身体    15:混合早朝夜間
# 16:混合深夜                                  17:乗降介助昼間  18:予防          19:自費


## 終了
rm -f $tmp-*
exit 0
