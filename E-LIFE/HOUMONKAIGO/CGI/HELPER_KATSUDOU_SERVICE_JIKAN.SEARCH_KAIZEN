#!/bin/bash
#
# HELPER_KATSUDOU_KIROKU.SEARCH
# ヘルパー活動記録印刷　検索用CGI
#
# Written by K.Aoyama

#--------------------------------------------------------------
# ログ
source /home/hands/E-LIFE/HOUMONKAIGO/CGI/HOUMONKAIGO.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null
mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).$HOSTNAME.$(date +%Y%m%d) ; set -xv
#--------------------------------------------------------------

#--------------------------------------------------------------
rm -f $tmp-*
#--------------------------------------------------------------

#--------------------------------------------------------------
function error_exit {
  rm -f $tmp-*
  exit 0
}
#--------------------------------------------------------------

#--------------------------------------------------------------
# 変数の定義
namedata=$1

# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------------

# テスト
# POSTされてくるパラメータ

#--------------------------------------------------------------
# 入力データのチェック
# ユーザＩＤ
[ -z "${USER_ID}" -o "${USER_ID}" = "_" ] && error_exit "ログインユーザが不明です"
# 施設
[ -z "${shisetsu}" -o "${shisetsu}" = "_" ] && error_exit "サービス提供事業者が不明です"
# 対象年月
[ -z "${TaishouNengetsu}" -o "${TaishouNengetsu}" = "_" ] && error_exit "対象年が不明です"
# 対象項目
[ -z "${Kaigo}" -a -z "${Yobou}" -a -z "${Jihi}" -a -z "${Clair}" ] && error_exit "集計対象を選択して下さい"


# 曜日取得
echo "1" "月" > $tmp-youbi
echo "2" "火" >> $tmp-youbi
echo "3" "水" >> $tmp-youbi
echo "4" "木" >> $tmp-youbi
echo "5" "金" >> $tmp-youbi
echo "6" "土" >> $tmp-youbi
echo "7" "日" >> $tmp-youbi


#--------------------------------------------------------------
# ヘッダー部分生成
#--------------------------------------------------------------
cat <<- FIN > $tmp-header
FIN

# 利用者マスタ
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_MASTER  |
self 1 2                                       > $tmp-riyousha_master
# 1:利用者ID  2:利用者

cp $tmp-riyousha_master $work_dir/riyousha_master

# 自事業所から事業者マスタのＩＤを抽出
cat ${home_dir}/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_HIMODUKE_MASTER |
awk '$1=="'$shisetsu'"&&($3=="11"||$3=="61"){print $2,$3}'           > $tmp-kyoukyusha
# 1:供給者ID  2:サービスコード種類

# ヘルパー
echo $slHelper |
sed 's/,/ /g'  |
tarr           |
LANG=C sort -k1,1 > $tmp-helper
# 1:ヘルパーID

cp $tmp-helper $work_dir/helper

cat ${home_dir}/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_HIMODUKE_MASTER |
# ログイン中の施設で絞る
# 介護と予防のみに絞る
awk '$1=="'$shisetsu'"&&($3=="11"||$3=="61"){print $2,$3}' |
# 1:供給者ID  2:サービスコード種類
# 介護と予防にチェックが付いていた場合
if [ "$Kaigo" == "1" -a "$Yobou" == "1" ] ; then
  cat -
# 介護のみにチェックが付いていた場合
elif [ -z "$Yobou" -a "$Kaigo" == "1" ] ; then
  awk '$2=="11"'
# 予防のみにチェックが付いていた場合
elif [ -z "$Kaigo" -a "$Yobou" == "1" ] ; then
  awk '$2=="61"'
else
  cat -
fi                                      |
LANG=C sort -k1,1                       > $tmp-select_kyoukyusha
# 1:供給者ID  2:サービスコード種類

# 自費サービス項目マスタ
cat ${home_dir}/TBL/CONFIG/JIHI_SERVICE_KOUMOKU |
awk '$1=="'${shisetsu}'"{print $2,$4}' |
LANG=C sort -k1,1 > $tmp-jihi_service_koumoku_mst


#--------------------------------------------------------------
# 訪問介護実績ファイルの取得
# 自費サービスファイルも含める（2014/8/5）
# 対象となる全利用者のディレクトリを検索する
: > $tmp-jisseki_data
ls -F ${pompa_dir}/HOUMONKAIGO |
grep /                         |
sed 's/\///g'                  > $tmp-houmonkaigo_jisseki_list
ls -F ${pompa_dir}/JIHI_SERVICE |
grep /                         |
sed 's/\///g'                  > $tmp-jihiservice_list

cat $tmp-houmonkaigo_jisseki_list $tmp-jihiservice_list |
LANG=C sort -k1,1  |
getlast 1 1        |
while read path ; do
#if [ -s ${pompa_dir}/HOUMONKAIGO/${path}/SERVICE_JISSEKI ] ; then
  # 介護、予防が選択されている場合
  if [ "$Kaigo" == "1" -o "$Yobou" =="1" ] ; then
    cat ${pompa_dir}/HOUMONKAIGO/${path}/SERVICE_JISSEKI  |
    awk '$(NF-2)!="9"' |
    # 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
    # 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
    # 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
    # 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID
    LANG=C sort -k2,2                                     |
    join0 key=2 $tmp-select_kyoukyusha - > $tmp-jisseki_kaigo_yobou
  else
    : > $tmp-jisseki_kaigo_yobou
  fi

  # 自費がチェックされている場合
  if [ "$Jihi" == "1" ] ; then
    # 自費データを呼び出す
    cat ${pompa_dir}/JIHI_SERVICE/${path}/${TaishouNengetsu}/JIHI_SERVICE |
    awk '$(NF-2)!="9"' |
    # 1:利用者ID  2:対象年月日 3:ID    4:実施日付    5:開始時間
    # 6:終了時間  7:項目ID       8:内容  9:単位時間    10:費用
    # 11:担当者   12:単価      13:税率 14:有効フラグ 15:処理時間
    # 16:ユーザID
    self 1 2.1.4 2.5.2 4 2/NF |
    # 1:利用者ID 2:対象年      3:対象月    4:実施日付  5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{
      if(length($4)=="10"){
        print $0,substr($4,9,2);
      }else{
        print $0,$4;
      }
    }'  |
    self 1/3 20 5/19 |
    # 1:利用者ID 2:対象年      3:対象月    4:対象日 5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{print $1,"jihi",$2,$3,$6,$4,$14,"_",$8,$9,"jihi",$12,"_ _ _",$10,$17,$18,$19}' |
    LANG=C sort -k16,16 |
    join1 key=16 $tmp-jihi_service_koumoku_mst |
    awk '$17=="0"||$17=="4"' |
    delf 16 > $tmp-jisseki_jihi
    # 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
    # 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
    # 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
    # 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID
  else
    : > $tmp-jisseki_jihi
  fi

  # クレールサポートプランがチェックされている場合
  if [ "$Clair" == "1" ] ; then
    # 自費データを呼び出す
    cat ${pompa_dir}/JIHI_SERVICE/${path}/${TaishouNengetsu}/JIHI_SERVICE |
    awk '$(NF-2)!="9"' |
    # 1:利用者ID  2:対象年月日 3:ID    4:実施日付    5:開始時間
    # 6:終了時間  7:項目ID       8:内容  9:単位時間    10:費用
    # 11:担当者   12:単価      13:税率 14:有効フラグ 15:処理時間
    # 16:ユーザID
    self 1 2.1.4 2.5.2 4 2/NF |
    # 1:利用者ID 2:対象年      3:対象月    4:実施日付  5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{
      if(length($4)=="10"){
        print $0,substr($4,9,2);
      }else{
        print $0,$4;
      }
    }'  |
    self 1/3 20 5/19 |
    # 1:利用者ID 2:対象年      3:対象月    4:対象日 5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{print $1,"jihi",$2,$3,$6,$4,$14,"_",$8,$9,"jihi",$12,"_ _ _",$10,$17,$18,$19}' |
    LANG=C sort -k16,16 |
    join1 key=16 $tmp-jihi_service_koumoku_mst |
    awk '$17=="1"||$17=="2"||$17=="3"' |
    delf 16 > $tmp-jisseki_clair
    # 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
    # 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
    # 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
    # 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID
  else
    : > $tmp-jisseki_clair
  fi

  # 介護・予防実績と自費実績、クレール実績を連結
  cat $tmp-jisseki_kaigo_yobou $tmp-jisseki_jihi $tmp-jisseki_clair
  
#fi
done > $tmp-jisseki_data
# 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
# 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
# 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
# 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID



# ヘルパー取得
cat ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER   |
awk '{print $1,$2}'              |
LANG=C sort -k1,2                > $tmp-helper_name
# 1:従業員ID 2:従業員名

#--------------------------------------------------------------
# 検索
# --------------------------
# 利用者ID、サービス提供事業者、対象年、対象月
# --------------------------
#

cp $tmp-jisseki_data $work_dir/jisseki_data_helper_shukei

cp $tmp-select_kyoukyusha $work_dir/kyoukyusha_data_helper_shukei


cat $tmp-jisseki_data              |
# 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
# 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
# 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
# 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID

# 対象年月および担当ヘルパー、同行ヘルパーで抽出
awk '$3$4=="'$TaishouNengetsu'"'   |
tee $tmp-doukou_helper             |
LANG=C sort -k7,7                  |
join0 key=7 $tmp-helper            |
join1 key=7 $tmp-helper_name       |
# 1:利用者ID          2:供給者ID            3:対象年         4:対象月          5:レコードID
# 6:サービス提供日    7:担当ヘルパーID      8:担当ヘルパー名 9:同行ヘルパーID  10:サービス開始時間
# 11:サービス終了時間 12:サービス内容       13:単位時間      14:緊急加算フラグ 15:サービスコード項目
# 16:請求対象区分     17:サービスコード種類 18:有効フラグ    19:処理日         20:ユーザーID
delf 7                             |
# 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
# 6:サービス提供日      7:担当ヘルパー名 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
# 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
# 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID
LANG=C sort -k2,2                  |

# 自費がチェックされている場合
if [ "$Jihi" == "1" -o "$Clair" == "1" ] ; then
#  echo "jihi 00" > $tmp-jihi_master
#  join1 key=2 <(tcat $tmp-select_kyoukyusha $tmp-jihi_master | LANG=C sort -k1,1)
  self 1 2 16 3/NF
else
  join1 key=2 $tmp-select_kyoukyusha        
fi                                 |
# 1:利用者ID          2:供給者ID            3:サービスコード種類 4:対象年          5:対象月
# 6:レコードID        7:サービス提供日      8:担当ヘルパー名     9:同行ヘルパーID  10:サービス開始時間
# 11:サービス終了時間 12:サービス内容       13:単位時間          14:緊急加算フラグ 15:サービスコード項目
# 16:請求対象区分     17:サービスコード種類 18:有効フラグ        19:処理日         20:ユーザーID
#--------------------------------------------------------------
# 曜日取得 
awk '{print $4$5$7,$0}'              |
tee $work_dir/helper_shukei0         |
# 1:対象年月日          2:利用者ID          3:供給者ID            4:サービスコード種類 5:対象年
# 6:対象月              7:レコードID        8:サービス提供日      9:担当ヘルパー名     10:同行ヘルパーID
# 11:サービス開始時間   12:サービス終了時間 13:サービス内容       14:単位時間          15:緊急加算フラグ
# 16:サービスコード項目 17:請求対象区分     18:サービスコード種類 19:有効フラグ        20:処理日
# 21:ユーザーID

mdate 1                               |
delf 1 3                             |
# 1:曜日コード          2:利用者ID          3:供給者ID            4:サービスコード種類 5:対象年
# 6:対象月              7:レコードID        8:サービス提供日      9:担当ヘルパー名     10:同行ヘルパーID
# 11:サービス開始時間   12:サービス終了時間 13:サービス内容       14:単位時間          15:緊急加算フラグ
# 16:サービスコード項目 17:請求対象区分     18:サービスコード種類 19:有効フラグ        20:処理日
# 21:ユーザーID
LANG=C sort -k1,1                    |
join1 key=1 $tmp-youbi -              |
tee $work_dir/helper_shukei1         |
# 1:曜日コード      2:曜日                3:利用者ID          4:供給者ID            5:サービスコード種類
# 6:対象年          7:対象月              8:レコードID        9:サービス提供日      10:担当ヘルパー名
# 11:同行ヘルパーID 12:サービス開始時間   13:サービス終了時間 14:サービス内容       15:単位時間
# 16:緊急加算フラグ 17:サービスコード項目 18:請求対象区分     19:サービスコード種類 20:有効フラグ
# 21:処理日         22:ユーザーID

delf 1                               |
# 1:曜日                2:利用者ID          3:供給者ID            4:サービスコード種類 5:対象年
# 6:対象月              7:レコードID        8:サービス提供日      9:担当ヘルパー名     10:同行ヘルパーID
# 11:サービス開始時間   12:サービス終了時間 13:サービス内容       14:単位時間          15:緊急加算フラグ
# 16:サービスコード項目 17:請求対象区分     18:サービスコード種類 19:有効フラグ        20:処理日
# 21:ユーザーID

# サービスコード種類が予防ならサービス内容をYoboに変更
awk '{
  if($18=="61"){
    print $0,"Yobo";
  }else{
    print $0,$13;
  }
}'  |
self 1/12 22 14/21 |
awk '{if($3=="jihi"){$13="jihi"$4};print $0}' |
self 8 1 11 12 2 13 15 9 10 16         |
tee $work_dir/helper_shukei2         |
# 1:提供日       2:曜日           3:サービス提供開始時間 4:サービス提供終了時間 5:利用者ID
# 6:サービス内容 7:緊急加算フラグ 8:担当ヘルパー名       9:同行ヘルパー         10:サービスコード項目

LANG=C sort -k5,5                    |
join1 key=5 $tmp-riyousha_master     |
delf 5                               |
tee $work_dir/helper_shukei3         |
# 1:提供日       2:曜日           3:サービス提供開始時間 4:サービス提供終了時間 5:利用者名
# 6:サービス内容 7:緊急加算フラグ 8:担当ヘルパー         9:同行ヘルパー        10：サービスコード項目

awk '{print $1,$2,$3"～"$4,(substr($4,1,2)*60+substr($4,4,2))-(substr($3,1,2)*60+substr($3,4,2)),$5,$6,$7,$8,int(substr($3,1,2)),$10}' |

# 1:提供日       2:曜日           3:サービス提供開始時間～サービス提供終了時間 4:サービス提供時間(分) 5:利用者名
# 6:サービス内容 7:緊急加算フラグ 8:担当ヘルパー名 9:サービス提供開始時間(時)  10:サービスコード項目
awk '{print $8,$1,$2,$3,$5,$4,$6,$7,$9,$10}'      |
# 1:担当ヘルパー名             2:提供日       3:曜日           4:サービス提供開始時間～サービス提供終了時間 5:利用者名
# 6:サービス提供時間（分換算） 7:サービス内容 8:緊急加算フラグ 9:サービス提供開始時間(時) 10:サービスコード項目
self 1/7 9 10                                 |
# 1:担当ヘルパー名             2:提供日       3:曜日                 4:サービス提供開始時間～サービス提供終了時間 5:利用者名
# 6:サービス提供時間（分換算） 7:サービス内容 8:サービス提供開始時間(時) 9:サービスコード項目
tee $tmp-syukei_syutantou                  |
delf 9                                     |
tee $work_dir/helper_katsudou_service_jikan |
# 1:担当ヘルパー名             2:提供日       3:曜日                 4:サービス提供開始時間～サービス提供終了時間 5:利用者名
# 6:サービス提供時間（分換算） 7:サービス内容 8:サービス提供開始時間(時) 

awk '{
if($7=="1"&&(8<=$8&&$8<18)){$9=$6;$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0;$22=0;$23=0}
else if($7=="1"&&((18<=$8&&$8<22)||(6<=$8&&$8<8))){$9=0;$10=$6;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0;$22=0;$23=0}
else if($7=="1"&&(22<=$8||$8<6)){$9=0;$10=0;$11=$6;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0;$22=0;$23=0}
else if($7=="2"&&(8<=$8&&$8<18)){$9=0;$10=0;$11=0;$12=$6;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0;$22=0;$23=0}
else if($7=="2"&&((18<=$8&&$8<22)||(6<=$9&&$9<8))){$9=0;$10=0;$11=0;$12=0;$13=$6;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0;$22=0;$23=0}
else if($7=="2"&&(22<=$8||$8<6)){$9=0;$10=0;$11=0;$12=0;$13=0;$14=$6;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0;$22=0;$23=0}
else if($7=="4"&&(8<=$8&&$8<18)){$9=0;$10=0;$11=0;$12=0;$13=0;$14=0;$15=$6;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0;$22=0;$23=0}
else if($7=="4"&&((18<=$8&&$8<22)||(6<=$9&&$9<8))){$9=0;$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=$6;$17=0;$18=0;$19=0;$20=0;$21=0;$22=0;$23=0}
else if($7=="4"&&(22<=$8||$8<6)){$9=0;$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=$6;$18=0;$19=0;$20=0;$21=0;$22=0;$23=0}
else if($7=="Yobo"){$9=0;$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=$6;$20=0;$21=0;$22=0;$23=0}
else if($7=="jihi0"||$7=="jihi4"){$9=0;$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=$6;$21=0;$22=0;$23=0}
else if($7=="jihi1"){$9=0;$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=$6;$22=0;$23=0}
else if($7=="jihi2"){$9=0;$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0;$22=$6;$23=0}
else if($7=="jihi3"){$9=0;$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0;$22=0;$23=$6}
else {$9=0;$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=$6;$19=0;$20=0;$21=0;$22=0;$23=0};
print $0}'      |
# 1:担当ヘルパー名             2:提供日       3:曜日                     4:サービス提供開始時間～サービス提供終了時間 5:利用者名
# 6:サービス提供時間（分換算） 7:サービス内容 8:サービス提供開始時間(時) 9:身体昼間                                   10:身体早朝夜間
# 11:身体深夜                  12:生活昼間    13:生活早朝夜間            14:生活深夜                                  15:混合身体
# 16:混合早朝夜間              17:混合深夜    18:乗降介助昼間            19:予防                                      20:自費既存
# 21:自費スタンダード 22:自費ケアプラス 23:自費VIP
self 1/5 9/NF   |
# 1:担当ヘルパー名 2:提供日       3:曜日              4:サービス提供開始時間～サービス提供終了時間 5:利用者名
# 6:身体昼間       7:身体早朝夜間 8:身体深夜          9:生活昼間                                   10:生活早朝夜間
# 11:生活深夜      12:混合身体    13:混合早朝夜間     14:混合深夜                                  15:乗降介助昼間
# 16:予防          17:自費既存    18:自費スタンダード 19:自費ケアプラス                            20:自費VIP
#--------------------------------------------------------------
LANG=C sort -k1,1n                  |
#それぞれ時間帯別の合計時間分単位で求める
sm2 1 1 6 20                        > ${tmp}-jisseki_0
# 1:担当ヘルパー名 2:身体昼間 3:身体早朝夜間 4:身体深夜          5:生活昼間
# 6:生活早朝夜間   7:生活深夜 8:混合身体     9:混合早朝夜間      10:混合深夜
# 11:乗降介助昼間  12:予防    13:自費        14:自費スタンダード 15:自費ケアプラス
# 16:自費VIP




#介護予防の合計時間求めておく
#awk '$9~/^11/ || $9~/^12/ || $9~/^13/' $tmp-syukei_syutantou |
# 1:担当ヘルパー名             2:提供日       3:曜日                 4:サービス提供開始時間～サービス提供終了時間 5:利用者名
# 6:サービス提供時間（分換算） 7:サービス内容 8:サービス提供開始時間(時) 9:サービスコード項目
#sm2 1 1 6 6                                                  |
#LANG=C sort                                                  > ${tmp}-kaigoybou_goukei_jikan
# 1:担当ヘルパー名 2:介護予防時間合計(分)
#介護実績あればジョイン
#if [ -s ${tmp}-kaigoybou_goukei_jikan ] ;then
#  join2 key=1 ${tmp}-kaigoybou_goukei_jikan ${tmp}-jisseki_0 |
#  self 1 3/NF 2
#else
#  awk '{print $0,"_"}' ${tmp}-jisseki_0
#fi                                                           >  ${tmp}-jisseki_main


# 1:担当ヘルパー名 2:身体昼間              3:身体早朝夜間 4:身体深夜     5:生活昼間
# 6:生活早朝夜間   7:生活深夜              8:混合身体     9:混合早朝夜間 10:混合深夜
# 11:乗降介助昼間  12:介護予防時間合計(分)

##########################################################################################

# 同行ヘルパー ##############################################################################
cat $tmp-doukou_helper               |
LANG=C sort -k8,8                    |
join0 key=8 $tmp-helper           |
join1 key=8 $tmp-helper_name      |
delf 8                            |
# 1:利用者ID      2:サービス提供事業者 3:対象年          4:対象月               5:レコードID
# 6:提供日        7:担当ヘルパー       8:同行ヘルパー名  9:サービス提供開始時間 10:サービス提供終了時間
# 11:サービス内容 12:単位時間          13:緊急加算フラグ 14:サービスコード      15:請求区分
LANG=C sort -k2,2                  |
join1 key=2 $tmp-select_kyoukyusha        |
# --------------------------
# 1:利用者ID              2:サービス提供事業者 3:サービスタイプ 4:対象年          5:対象月
# 6:レコードID            7:提供日             8:担当ヘルパー   9:同行ヘルパー名  10:サービス提供開始時間
# 11:サービス提供終了時間 12:サービス内容      13:単位時間      14:緊急加算フラグ 15:サービスコード
# 16:請求区分
#--------------------------------------------------------------
# 曜日取得
awk '{print $4$5$7,$0}'              |
mdate 1                               |
delf 1 3                               |
LANG=C sort -k1,1                    |
join1 key=1 $tmp-youbi               |
delf 1                               |

# サービスコード種類が予防ならサービス内容をYoboに変更
awk '{
  if($18=="61"){
    print $0,"Yobo";
  }else{
    print $0,$13;
  }
}'  |
self 1/12 22 14/21 |
awk '{if($3=="jihi"){$13="jihi"$4};print $0}' |
# 1:曜日                  2:利用者ID              3:サービス提供事業者 4:サービスタイプ 5:対象年
# 6:対象月                7:レコードID            8:提供日             9:担当ヘルパー   10:同行ヘルパー名
# 11:サービス提供開始時間 12:サービス提供終了時間 13:サービス内容      14:単位時間      15:緊急加算フラグ
# 16:サービスコード       17:請求区分
self 8 1 11 12 2 13 15 9 10 16          |
LANG=C sort -k5,5                    |
join1 key=5 $tmp-riyousha_master     |
delf 5                               |
# 1:提供日       2:曜日           3:サービス提供開始時間 4:サービス提供終了時間 5:利用者名
# 6:サービス内容 7:緊急加算フラグ 8:担当ヘルパー         9:同行ヘルパー         10:サービスコード
awk '{print $1,$2,$3"～"$4,(substr($4,1,2)*60+substr($4,4,2))-(substr($3,1,2)*60+substr($3,4,2)),$5,$6,$7,$9,int(substr($3,1,2)),$10}' |
# 1:提供日       2:曜日           3:サービス提供開始時間～サービス提供終了時間 4:サービス提供時間(分)     5:利用者名
# 6:サービス内容 7:緊急加算フラグ 8:同行ヘルパー                               9:サービス提供開始時間(時) 10:サービスコード
awk '{print $8,$1,$2,$3,$5,$4,$6,$7,$9,$10}'    |
# 1:同行ヘルパー名 2:提供日       3:曜日           4:サービス提供開始時間～サービス提供終了時間 5:サービス提供時間(分換算)
# 6:利用者名       7:サービス内容 8:緊急加算フラグ 9:サービス提供開始時間(時) 10:サービスコード
self 1/7 9 10                                  |
# 1:担当ヘルパー名             2:提供日       3:曜日                 4:サービス提供開始時間～サービス提供終了時間 5:利用者名
# 6:サービス提供時間（分換算） 7:サービス内容 8:サービス提供開始時間(時) 9:サービスコード項目

tee $tmp-syukei_fukutantou                  |
# 1:同行ヘルパー名 2:提供日       3:曜日                     4:サービス提供開始時間～サービス提供終了時間 5:サービス提供時間(分換算)
# 6:利用者名       7:サービス内容 8:サービス提供開始時間(時) 9:サービスコード
delf 9                                     |
# 1:担当ヘルパー名             2:提供日       3:曜日                 4:サービス提供開始時間～サービス提供終了時間 5:利用者名
# 6:サービス提供時間（分換算） 7:サービス内容 8:サービス提供開始時間(時)

awk '{
if($7=="1"&&(8<=$8&&$8<18)){$9=$6;$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0;$22=0;$23=0}
else if($7=="1"&&((18<=$8&&$8<22)||(6<=$9&&$9<8))){$9=0;$10=$6;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0;$22=0;$23=0}
else if($7=="1"&&(22<=$8||$8<6)){$9=0;$10=0;$11=$6;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0;$22=0;$23=0}
else if($7=="2"&&(8<=$8&&$8<18)){$9=0;$10=0;$11=0;$12=$6;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0;$22=0;$23=0}
else if($7=="2"&&((18<=$8&&$8<22)||(6<=$9&&$9<8))){$9=0;$10=0;$11=0;$12=0;$13=$6;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0;$22=0;$23=0}
else if($7=="2"&&(22<=$8||$8<6)){$9=0;$10=0;$11=0;$12=0;$13=0;$14=$6;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0;$22=0;$23=0}
else if($7=="4"&&(8<=$8&&$8<18)){$9=0;$10=0;$11=0;$12=0;$13=0;$14=0;$15=$6;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0;$22=0;$23=0}
else if($7=="4"&&((18<=$8&&$8<22)||(6<=$9&&$9<8))){$9=0;$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=$6;$17=0;$18=0;$19=0;$20=0;$21=0;$22=0;$23=0}
else if($7=="4"&&(22<=$8||$8<6)){$9=0;$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=$6;$18=0;$19=0;$20=0;$21=0;$22=0;$23=0}
else if($7=="Yobo"){$9=0;$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=$6;$20=0;$21=0;$22=0;$23=0}
else if($7=="jihi0"||$7=="jihi4"){$9=0;$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=$6;$21=0;$22=0;$23=0}
else if($7=="jihi1"){$9=0;$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=$6;$22=0;$23=0}
else if($7=="jihi2"){$9=0;$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0;$22=$6;$23=0}
else if($7=="jihi3"){$9=0;$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=0;$19=0;$20=0;$21=0;$22=0;$23=$6}
else {$9=0;$10=0;$11=0;$12=0;$13=0;$14=0;$15=0;$16=0;$17=0;$18=$6;$19=0;$20=0;$21=0;$22=0;$23=0};
print $0}'      |
# 1:同行ヘルパー名             2:提供日          3:曜日                     4:サービス提供開始時間～サービス提供終了時間 5:利用者名
# 6:サービス提供時間（分換算） 7:サービス内容    8:サービス提供開始時間(時) 9:身体昼間                                   10:身体早朝夜間
# 11:身体深夜                  12:生活昼間       13:生活早朝夜間            14:生活深夜                                  15:混合身体
# 16:混合早朝夜間              17:混合深夜       18:乗降介助昼間            19:予防                                      20:自費既存
# 21:自費スタンダード          22:自費ケアプラス 23:自費VIP
self 1/5 9/NF   |
# 1:同行ヘルパー名 2:提供日       3:曜日              4:サービス提供開始時間～サービス提供終了時間 5:利用者名
# 6:身体昼間       7:身体早朝夜間 8:身体深夜          9:生活昼間                                   10:生活早朝夜間
# 11:生活深夜      12:混合身体    13:混合早朝夜間     14:混合深夜                                  15:乗降介助昼間
# 16:予防          17:自費既存    18:自費スタンダード 19:自費ケアプラス                            20:自費VIP
LANG=C sort -k1,1n                  |
#それぞれ時間帯別の合計時間分単位で求める
sm2 1 1 6 20                        > ${tmp}-jisseki_1
# 1:担当ヘルパー名 2:身体昼間 3:身体早朝夜間 4:身体深夜          5:生活昼間
# 6:生活早朝夜間   7:生活深夜 8:混合身体     9:混合早朝夜間      10:混合深夜
# 11:乗降介助昼間  12:予防    13:自費既存    14:自費スタンダード 15:自費ケアプラス
# 16:自費VIP



#介護予防の合計時間求めておく
#awk '$9~/^11/ || $9~/^12/ || $9~/^13/' $tmp-syukei_fukutantou |
# 1:担当ヘルパー名             2:提供日       3:曜日                 4:サービス提供開始時間～サービス提供終了時間 5:利用者名
# 6:サービス提供時間（分換算） 7:サービス内容 8:サービス提供開始時間(時) 9:サービスコード項目
#sm2 1 1 6 6                                                  |
#LANG=C sort                                                  > ${tmp}-kaigoybou_goukei_jikan_sub
# 1:担当ヘルパー名 2:介護予防時間合計(分)

#介護実績あればジョイン
#if [ -s ${tmp}-kaigoybou_goukei_jikan_sub ] ;then
#  join2 key=1 ${tmp}-kaigoybou_goukei_jikan_sub ${tmp}-jisseki_1  |
#  self 1 3/NF 2
#else
#  awk '{print $0,"_"}' ${tmp}-jisseki_1
#fi                                                        > ${tmp}-jisseki_sub
# 1:担当ヘルパー名 2:身体昼間              3:身体早朝夜間 4:身体深夜     5:生活昼間
# 6:生活早朝夜間   7:生活深夜              8:混合身体     9:混合早朝夜間 10:混合深夜
# 11:乗降介助昼間  12:介護予防時間合計(分)
######################################################################################################

######################################################################################################
# 主担当と同行者実績合わせる
#cat ${tmp}-jisseki_0 ${tmp}-jisseki_1 |
cat ${tmp}-jisseki_0 |
# 1:担当ヘルパー名 2:身体昼間  3:身体早朝夜間 4:身体深夜          5:生活昼間
# 6:生活早朝夜間   7:生活深夜  8:混合身体     9:混合早朝夜間      10:混合深夜
# 11:乗降介助昼間  12:介護予防 13:自費既存    14:自費スタンダード 15:自費ケアプラス
# 16:自費VIP

# 合計時間求める
LANG=C sort -k1,1 |
sed 's/_/0/g' |
sm2 1 1 2 16 |
awk '{print $0,$2+$3+$4+$5+$6+$7+$8+$9+$10+$11}' |
# 1:担当ヘルパー名 2:身体昼間      3:身体早朝夜間 4:身体深夜          5:生活昼間
# 6:生活早朝夜間   7:生活深夜      8:混合身体     9:混合早朝夜間      10:混合深夜
# 11:乗降介助昼間  12:介護予防     13:自費既存    14:自費スタンダード 15:自費ケアプラス
# 16:自費VIP       17:介護合計時間

#介護合計時間には「自費」「介護予防」も含める
awk '{if($13!="_"){$17=$13+$17};print}'         |
awk '{if($14!="_"){$17=$14+$17};print}'         |
awk '{if($15!="_"){$17=$15+$17};print}'         |
awk '{if($16!="_"){$17=$16+$17};print}'         |
awk '{if($12!="_"){$17=$12+$17};print}'         |
# 「稼働率」追加する 
awk  '{print $0,$17/172/60*100}'                |
# 稼働率は整数%表示
marume 18.0                                    > ${tmp}-jisseki
cat ${tmp}-jisseki

## 終了
rm -f $tmp-*
exit 0
