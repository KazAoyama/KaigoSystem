#!/bin/bash
#
# HOUMONKAIGO_MENU.DISPLAY : 訪問介護メニュー表示
#
# Usage : HOUMONKAIGO_MENU.DISPLAY
#
# Written by K.Aoyama(HANDS.LAB)

# ログ
source /home/hands/E-LIFE/HOUMONKAIGO/CGI/HOUMONKAIGO.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null

mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date +%Y%m%d) ; set -xv

rm -f $tmp-*

# ディレクトリ設定
test_tbl_dir="${home_dir}/TEST/TBL"
kengen_dir="${home_dir}/TBL/KENGEN_KANRI"

# 変数の定義
namedata=$1
checkfile=$2
result_data=$3
today="$(date +%Y%m%d)"

cp -p ${namedata} $work_dir/namedata_menu

curday=$(date +%Y%m%d | self 1)

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------


echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu

# 連絡ノートの対象日付
[ -z "${hdRenrakuDate}" -o "${hdRenrakuDate}" = "_" ] && hdRenrakuDate=$(date +%Y%m%d | self 1)
# 連絡ノート対象日付変更処理
if [ "${hdRenrakuDateFlg}" = "0" ] ; then
  hdRenrakuDate=$(mdate ${hdRenrakuDate}/-1)
elif [ "${hdRenrakuDateFlg}" = "1" ] ; then
  hdRenrakuDate=$(mdate ${hdRenrakuDate}/+1)
elif [ "${hdRenrakuDateFlg}" = "2" ] ; then
  hdRenrakMonth=$(echo ${hdRenrakuDate} | self 1.1.6)
  hdRenrakuDate=$(mdate ${hdRenrakMonth}m | self 1)
elif [ "${hdRenrakuDateFlg}" = "3" ] ; then
  hdRenrakMonth=$(echo ${hdRenrakuDate} | self 1.1.6)
  hdRenrakuDate=$(mdate ${hdRenrakMonth}m | self NF)
fi

hdRenrakuDispDate=$(echo ${hdRenrakuDate} | awk '{print substr($1,1,4)"/"substr($1,5,2)"/"substr($1,7,2)}')

# ログインUSER名と施設の取得（仮）
self 1 2 ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
tee $tmp-user_mst                                  |
# 1:USER_ID 2:ユーザー名
join1 key=1 ${tmp}-user                            |
# 1:USER_ID 2:ユーザー名
self 2                                             > ${tmp}-usermei


self 1 2 ${home_dir}/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst

cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst

# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou


cat $tmp-disp_shisetsu_mst |
# 1:施設コード 2:施設名
join1 key=1 ${tmp}-shisetsu                        |
self 2                                             > ${tmp}-user_shisetsu


# 居宅、訪問介護事業施設をはずす
cat $tmp-disp_shisetsu_mst                              |
awk 'substr($1,1,1)!="1"'                          |
self 1 2                                           |
awk '{if($1=="'${hdKensakuShisetsu}'"){$3="selected"}else{$3="@"};print $0;}' > $tmp-shisetsulist


[ -z "${MODE}" ] && MODE="init"
#--------------------------------------------------------------

#--------------------------------------------------------------
### モードによる表示の分岐
case "${MODE}" in

  # 初期表示
  init | to_reset)
    if [ "$(gyo ${result_data})" != 0 ] ; then
      cat ${result_data}        > $tmp-listdata
    else
    # 空のリストデータを作成する
      : > $tmp-listdata
    fi
  ;;

  # 検索結果
  search)
    if [ "$(gyo ${result_data})" != 0 ] ; then
      cat ${result_data}        > $tmp-listdata
      # 1:ID         2:入力内容 3:入力者 4:入力者名 5:最終>更新日時
      # 6:最終更新者
#      LANG=C sort -k6,6nr       |
#      self 1 2 3 4 5            |
#      rank                      |
#      head -10                  > $tmp-listdata
    else
      : > $tmp-listdata
    fi
  ;;

esac

#--------------------------------------------------------------
# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
cat << FIN > $tmp-html2
    <script type="text/javascript" language="javascript">
      alert('${message}');
    </script>
FIN
fi
#--------------------------------------------------------------

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source $tmp-listdata)
#--------------------------------------------------------
# 利用者マスター
echo "99999999" "職員連絡" > $tmp-shokuin_renraku
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_MASTER |
tee $tmp-riyousha_master |
self 1 2                 |
cat - $tmp-shokuin_renraku > $tmp-houmonkaigo_renraku_riyousha

# 訪問介護連絡事項
cat ${pompa_dir}/HOUMONKAIGO_RENRAKU/$shisetsu/HOUMONKAIGO_RENRAKU_JIKOU |
awk '$(NF-2)!="9"'    |
#awk '$1=="'${shisetsu}'"&&$(NF-2)!="9"'    |
#awk '$3=="'$hdRenrakuDate'"'               |
awk 'substr($(NF-1),1,8)=="'$hdRenrakuDate'"'               |
LANG=C sort -k21,21                        |
join1 key=21 $tmp-user_mst                 |
LANG=C sort -k5,5 |
join1 key=5 $tmp-houmonkaigo_renraku_riyousha |
delf 5           |
# 連絡事項データ
# 1:施設            2:ID            3:登録日付 4:登録時間           5:対象者
# 6:施設ID          7:連絡事項詳細  8:確認者   9:申し送り反映フラグ 10:申し送りID
# 11:介護支援経過ID 12:連絡先事業所 13:相手先  14:予備１            15:予備２
# 16:予備３         17:予備４       18:予備５  19:有効フラグ        20:処理時間
# 21:ユーザID 22:ユーザ名
LANG=C sort -k3r,4r  |
awk '{$3=substr($3,1,4)"/"substr($3,5,2)"/"substr($3,7,2);$7=substr($7,1,14)"...";print $0}'   |
sed 's/\\n/　/g' |
# 1:登録時間 2:連絡事項詳細 3:ユーザ名 4:対象者       5:確認者
# 6:ID       7:登録日付     8:処理時間 9:連絡先事業所 10:相手先
self 4 7 22 5 8 2 3 20 12 13 |
# 1:登録時間  2:連絡事項詳細 3:ユーザ名 4:対象者       5:確認者
# 6:ID        7:登録日付     8:処理時間 9:連絡先事業所 10:相手先
# 11:確認人数
awk '{if($5=="_"){count="0"}else{taihi=$5;count=gsub(/\,/,"",$5)+1;$5=taihi;};print $0,count}' |
# 1:登録時間 2:連絡事項詳細 3:ユーザ名 4:対象者   5:確認者
# 6:ID       7:登録日付     8:確認人数 9:処理時間 10:連絡先事業所
# 11:相手先
self 1/NF-4 NF NF-3 NF-2 NF-1 |
awk '{$9=substr($9,1,4)"/"substr($9,5,2)"/"substr($9,7,2);print $0}'  > $tmp-renrakulist

# 施設入所情報について収集（2015/04/29）
[ -z "${hdKensakuShisetsu}" -o "${hdKensakuShisetsu}" = "_" ] && hdKensakuShisetsu="0"
self 1 6 ${data_dir}/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
if [ "${hdKensakuShisetsu}" = "0" ] ; then
  cat -
else
  awk '$1=="'$hdKensakuShisetsu'"'
fi |
self 2 |
LANG=C sort -k1,1 > $tmp-shisetsu_riyousha


cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KYOTAKU_JIGYOUSHO  |
awk '$(NF-2)!="9"'                     |
awk '"'$curday'"<$7{print $1,$4,$5}'   |
LANG=C sort -k2,2                                         |
join2 +_ key=2 $tmp-user_mst                              |
delf 2                                                    |
LANG=C sort -k1,1 > $tmp-user_caremanager

[ -s $tmp-user_caremanager ] || echo "_" "_" "_" > $tmp-user_caremanager
# テスト
USER_ID=${userid}

# ユーザ居宅支援事業所紐付け
cat ${data_dir}/UNEI/RIYOUSHA/JIGYOUSHO_RIYOUSHA_STATUS   |
awk '$(NF-2)!="9"'                     |
awk '"'$curday'"<$4&&$1=="'${shisetsu}'"{print $2}'  |
LANG=C sort -k1,1                      > $tmp-jigyousho_user

# 介護保険情報
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KAIGOHOKEN         |
awk '$23<="'$curday'"&&"'$curday'"<=$28&&$3>="1"&&$3<="7"'  |
self 1                                         |
LANG=C sort -k1,1             > $tmp-taishou_kaigo

cp $tmp-taishou_kaigo $work_dir/taishou_kaigo

# 対象者
cat $tmp-riyousha_master |
awk '$(NF-2)!="9"'     |
# 介護度は見ない
#join0 key=1 $tmp-taishou_kaigo                |
join0 key=1 $tmp-jigyousho_user  |
#if [ -z "${Riyoushaid}" -o "${Riyoushaid}" = "_" ] ; then
#  cat -
#else
#  awk '$1=="'${Riyoushaid}'"'
#fi |
awk '{print $1,$2,"@",$3}' |
LANG=C sort -k1,1       |
join2 +_ key=1 $tmp-user_caremanager          |
awk '{if($2=="_"){$5=$3}else{$5=$2};print $0}'          |
delf 2 3                                      |
# 施設検索結果（2015/04/29）
LANG=C sort -k1,1 |
if [ "${hdKensakuShisetsu}" != "0" ] ; then
  join0 key=1 $tmp-shisetsu_riyousha
else
  cat - 
fi |
# 設定した人は色がつく（2105/04/29）
awk '{if($1=="'${Riyoushaid}'"){$5="skyblue"}else{$5="white"};print $0}' |
# 50音対応(2014/6/30)
LANG=C sort -k4,4 > $tmp-taishoushalist


hdkensakudate=$(date +%Y%m%d | self 1)

# 和暦変換（変更日）
# 元号マスタ
cat ${home_dir}/TBL/ZEIRITSU_GENGOU_MASTER/GENGOU  |
awk '$5!="9"{print $1,$2,$3,$4}'                   |
awk '$3<="'$hdkensakudate'"&&"'$hdkensakudate'"<=$4' |
awk '{print $2,"'$hdkensakudate'",substr($3,1,4)-1}'    |
awk '{print $1,substr($2,1,4)-$3,int(substr($2,5,2)),int(substr($2,7,2))}'  |
awk '{print $1$2"年"$3"月"$4"日"}'                          > $tmp-kensakudate

dispkensakudate=$(cat $tmp-kensakudate)

echo "HOUMONKAIGO_MENU.CGI" > $tmp-cgi
# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
awk '$2=="0000"||$2=="'$shisetsu'"'         |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -k7,7                                          |
join0 key=7 $tmp-cgi                                       > ${tmp}-kengenlist

cat << FIN | sed 's/ _$/ @/g' > $tmp-calsed1
###RIYOUSHAID### $Riyoushaid
###USERID### $USER_ID
###PASSWORD### $password
###SELECT_SHISETSU### $select_shisetsu
###KENSAKUDATE### $dispkensakudate
###HDKENSAKUDATE### $hdkensakudate
###HDRENRAKUDATE### $hdRenrakuDate
###HDRENRAKUDISPDATE### $hdRenrakuDispDate
###SHISETSUID### $shisetsu
###DROPDOWN_ACTIVE8### active
FIN

cat ${tmp}-calsed1 ${checkfile} > ${tmp}-calsed

#-----------------------------------------------------------
# 登録・印刷ボタンの表示
# 施設名はログインユーザーの権限のある施設を取得
self 9 $tmp-kengenlist |
LANG=C sort -k1,1      |
tail -n1            > $tmp-dispkengen

# 権限がない人は新規登録や出力が出来ない
if [ $(cat $tmp-dispkengen) = "3" ] ;then
  echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed
  echo "###TOUROKUDISP### @" >> $tmp-calsed
  echo "###PRINTDISP### @"   >> $tmp-calsed
  echo "###RETURNFMT### @"   >> $tmp-calsed
  echo "###RETURNFALSE### @"   >> $tmp-calsed
elif [$(cat $tmp-dispkengen) = "2" ] ;then
  echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed
  echo "###TOUROKUDISP### @" >> $tmp-calsed
  echo "###PRINTDISP### none"   >> $tmp-calsed
  echo "###RETURNFMT### @"   >> $tmp-calsed
  echo "###RETURNFALSE### @"   >> $tmp-calsed
else
  echo "###SHINKITOUROKUDISP### none" >> $tmp-calsed
  echo "###TOUROKUDISP### none" >> $tmp-calsed
  echo "###PRINTDISP### none"   >> $tmp-calsed
  echo "###RETURNFMT### return"   >> $tmp-calsed
  echo "###RETURNFALSE### false;"   >> $tmp-calsed
fi

cat $tmp-calsed      |
sed 's/\\n/###KAIGYO###/g'     >  $tmp-calsed_kaigyozumi

# HTMLの作成
cat ${html_dir}/HOUMONKAIGO_MENU1.html ${home_dir}/KYOUTSU/HTML/MENUBAR.html ${html_dir}/HOUMONKAIGO_MENU2.html |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -l###TAISHOUSHA### - ${tmp}-taishoushalist |
mojihame -l###SHISETSULIST### - ${tmp}-shisetsulist |
mojihame -l###RENRAKULIST### - $tmp-renrakulist |
calsed -f $tmp-calsed_kaigyozumi - |
sed 's/###KAIGYO###/\n/g'     |
sed 's/###SPACE###/ /g'       |
tee $tmp-html |
#--------------------------------------------------------------
#--------------------------------------------------------------
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |
cat -
#--------------------------------------------------------------
#formhame -d"_" - ${namedata}

rm -f ${tmp}-*
exit 0
