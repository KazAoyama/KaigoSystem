#!/bin/bash
#
# KOBETSU_ENJO_KEIKAKU.SEARCH
# 個別援助計画書　検索用CGI
#
# Written by K.Aoyama :20131212

#--------------------------------------------------------------
# ログ
source /home/hands/E-LIFE/HOUMONKAIGO/CGI/HOUMONKAIGO.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null
mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).$HOSTNAME.$(date +%Y%m%d) ; set -xv
#--------------------------------------------------------------

#--------------------------------------------------------------
rm -f $tmp-*
#--------------------------------------------------------------

#--------------------------------------------------------------
function error_exit {
  rm -f $tmp-*
  exit 0
}
#--------------------------------------------------------------

#--------------------------------------------------------------
# 変数の定義
namedata=$1

# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------------

# テスト
# POSTされてくるパラメータ

#--------------------------------------------------------------
# 入力データのチェック
# ユーザＩＤ
[ -z "${USER_ID}" -o "${USER_ID}" = "_" ] && error_exit "ログインユーザが不明です"
# 利用者
[ -z "${Riyoushaid}" -o "${Riyoushaid}" = "_" ] && error_exit "利用者が不明です"


#--------------------------------------------------------------
# ヘッダー部分生成
#--------------------------------------------------------------
cat <<- FIN > $tmp-header
hdSakuseiDate
SakuseiDate
Riyousha
Kaigodo
slShisetsu
Kyoshitsu
txtareaMitorizu
GenShikkan
Tokkijikou
FIN

cat ${tmp}-header   |
yarr                > ${tmp}-header_yoko

: > ${tmp}-enjo
#--------------------------------------------------------------
# 基本ファイルの取得
cat ${pompa_dir}/HOUMONKAIGO/${Riyoushaid}/KOBETSU_ENJO_KEIKAKU |
#--------------------------------------------------------------
# 利用者ID
awk '$1=="'${Riyoushaid}'"&&$(NF-2)!="9"'   |
#--------------------------------------------------------------
# 検索
# --------------------------
# 日付
# --------------------------
# 
if [ -z "${hdSakuseiDate}" -o "${hdSakuseiDate}" = "_" ] ; then
  cat -
else
  awk '$2=="'${hdSakuseiDate}'"'
fi |
# --------------------------
#--------------------------------------------------------------
# 日付が指定されていない（初期状態）時は最新のものを表示する
getlast 1 1                 |
# 削除フラグ、ユーザ、更新日付をはずす
delf NF-2/NF                |
tee  ${tmp}-result          |
delf 1                      |
cat ${tmp}-header_yoko -    |
tateyoko                    |
awk '{print "k",$0}'        > ${tmp}-enjo

# 課題リストデータ取得用対象日付
awk '{print $2}' $tmp-result > $tmp-taishoudate

cp -p $tmp-taishoudate $work_dir/taishoudate_houkai


# 過去に作成した援助計画のデータが無い場合は、訪問介護計画書の
# データを反映させる
# 取得するデータは長期目標と短期目標
# あるいは訪問介護計画取込を行った場合
#--------------------------------------------------------------

if [ $(gyo ${tmp}-result) -eq 0 -o $MODE = "torikomi" ] ; then

#--------------------------------------------------------------

#--------------------------------------------------------------
# 基本ファイルの取得
cat ${pompa_dir}/HOUMONKAIGO/${Riyoushaid}/HOUMONKAIGO_KEIKAKU |
#--------------------------------------------------------------
# 利用者ID
awk '$1=="'${Riyoushaid}'"&&$(NF-2)!="9"'   |
#--------------------------------------------------------------
# 検索
# --------------------------
# 日付
# --------------------------
#
if [ -z "${hdKeikakuSakuseiDate}" -o "${hdKeikakuSakuseiDate}" = "_" ] ; then
  cat -
else
  awk '$2=="'${hdKeikakuSakuseiDate}'"'
fi |
# --------------------------
#--------------------------------------------------------------
# 日付が指定されていない（初期状態）時は最新のものを表示する
getlast 1 1                 |
# 削除フラグ、ユーザ、更新日付をはずす
delf NF-2/NF                > $tmp-result

# 課題リストデータ取得用対象日付
awk '{print $2}' $tmp-result > $tmp-taishoudate

cp $tmp-taishoudate $work_dir/taishoudate_enjo

#--------------------------------------------------------------
# 長期目標ファイルの取得
cat ${pompa_dir}/HOUMONKAIGO/${Riyoushaid}/KEIKAKU_CHOUKI_MOKUHYOU |
#--------------------------------------------------------------
# 利用者ID
awk '$1=="'${Riyoushaid}'"&&$(NF-2)!="9"'   |
#--------------------------------------------------------------
# 検索
# --------------------------
# 日付
# --------------------------
#
LANG=C sort -k2,2                |
join1 key=2 $tmp-taishoudate -   |
# --------------------------
#--------------------------------------------------------------
# 削除フラグ、ユーザ、更新日付をはずす
delf 1/2 NF-2/NF                     |
rank                                 |
awk '{print "長期目標"$1,$2,$3,$4,$5,$6,$7,$8,$9,$10}'        |
#--------------------------------------------------------------
awk '{print "l",$0}'        > ${tmp}-chouki_mokuhyou

cp ${tmp}-chouki_mokuhyou $work_dir/chouki

#--------------------------------------------------------------
# 短期目標ファイルの取得
cat ${pompa_dir}/HOUMONKAIGO/${Riyoushaid}/KEIKAKU_TANKI_MOKUHYOU |
#--------------------------------------------------------------
# 利用者ID
awk '$1=="'${Riyoushaid}'"&&$(NF-2)!="9"'   |
#--------------------------------------------------------------
# 検索
# --------------------------
# 日付
# --------------------------
#
LANG=C sort -k2,2                |
join1 key=2 $tmp-taishoudate -   |
# --------------------------
#--------------------------------------------------------------
# 削除フラグ、ユーザ、更新日付をはずす
delf 1/2 NF-2/NF                     |
rank                                 |
awk '{print "短期目標"$1,$2,$3,$4,$5,$6,$7,$8,$9,$10}'        |
#--------------------------------------------------------------
awk '{print "l",$0}'        > ${tmp}-tanki_mokuhyou

cp ${tmp}-tanki_mokuhyou $work_dir/tanki

#cat ${tmp}-tanki_mokuhyou ${tmp}-chouki_mokuhyou > ${tmp}-mokuhyou
cat ${tmp}-chouki_mokuhyou ${tmp}-tanki_mokuhyou > ${tmp}-mokuhyou


#--------------------------------------------------------------
# 援助サービスファイルの取得
cat ${pompa_dir}/HOUMONKAIGO/${Riyoushaid}/KEIKAKU_ENJO |
#--------------------------------------------------------------
# 利用者ID
awk '$1=="'${Riyoushaid}'"&&$(NF-2)!="9"'   |
#--------------------------------------------------------------
# 検索
# --------------------------
# 日付
# --------------------------
#
LANG=C sort -k2,2                |
join2 key=2 $tmp-taishoudate -   |
# --------------------------
#--------------------------------------------------------------
# 削除フラグ、ユーザ、更新日付をはずす
awk '{print "_",$4,$11,$5,$6,"_","_","_"}'        |
#--------------------------------------------------------------
awk '{print "s",$0}'        > ${tmp}-service

cp ${tmp}-service $work_dir/service_kobetsu_enjo

else

#--------------------------------------------------------------
# 目標ファイルの取得
cat ${pompa_dir}/HOUMONKAIGO/${Riyoushaid}/ENJO_KEIKAKU_MOKUHYOU |
#--------------------------------------------------------------
# 利用者ID
awk '$1=="'${Riyoushaid}'"&&$(NF-2)!="9"'   |
#--------------------------------------------------------------
# 検索
# --------------------------
# 日付
# --------------------------
#
LANG=C sort -k2,2                |
join1 key=2 $tmp-taishoudate -   |
# --------------------------
#--------------------------------------------------------------
# 削除フラグ、ユーザ、更新日付をはずす
delf 1/2 NF-2/NF                     |
self 2 1 3/NF                        |
#--------------------------------------------------------------
awk '{print "l",$0}'        > ${tmp}-mokuhyou

#--------------------------------------------------------------
# 援助サービスファイルの取得
cat ${pompa_dir}/HOUMONKAIGO/${Riyoushaid}/ENJO_KEIKAKU_SERVICE |
#--------------------------------------------------------------
# 利用者ID
awk '$1=="'${Riyoushaid}'"&&$(NF-2)!="9"'   |
#--------------------------------------------------------------
# 検索
# --------------------------
# 日付
# --------------------------
#
LANG=C sort -k2,2                |
join1 key=2 $tmp-taishoudate -   |
# --------------------------
#--------------------------------------------------------------
# 削除フラグ、ユーザ、更新日付をはずす
delf 1/2 NF-2/NF                     |
# 1:レコードID 2:曜日     3:サービス区分 4:開始時刻 5:終了時刻
# 6:援助項目   7:所要時間 8:援助内容
#--------------------------------------------------------------
awk '{print "s",$0}'        > ${tmp}-service

fi

# 計画書データを表示
cat ${tmp}-enjo ${tmp}-mokuhyou $tmp-service


## 終了
rm -f $tmp-*
exit 0
