#!/bin/bash
#
# NENJICHOUHYOU_INSATSU.SEARCH
# 年次帳票印刷　検索用CGI
#
# Written by K.Aoyama

#--------------------------------------------------------------
# ログ
source /home/hands/E-LIFE/HOUMONKAIGO/CGI/HOUMONKAIGO.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null
mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).$HOSTNAME.$(date +%Y%m%d) ; set -xv
#--------------------------------------------------------------

#--------------------------------------------------------------
rm -f $tmp-*
#--------------------------------------------------------------

#--------------------------------------------------------------
function error_exit {
  rm -f $tmp-*
  exit 0
}
#--------------------------------------------------------------

#--------------------------------------------------------------
# 変数の定義
namedata=$1

# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------------

# テスト
# POSTされてくるパラメータ

#--------------------------------------------------------------
# 入力データのチェック
# ユーザＩＤ
[ -z "${USER_ID}" -o "${USER_ID}" = "_" ] && error_exit "ログインユーザが不明です"
# 施設
[ -z "${shisetsu}" -o "${shisetsu}" = "_" ] && error_exit "サービス提供事業者が不明です"
# 対象年月
[ -z "${TaishouNendo}" -o "${TaishouNendo}" = "_" ] && error_exit "対象年が不明です"

# 曜日取得
echo "1" "月" > $tmp-youbi
echo "2" "火" >> $tmp-youbi
echo "3" "水" >> $tmp-youbi
echo "4" "木" >> $tmp-youbi
echo "5" "金" >> $tmp-youbi
echo "6" "土" >> $tmp-youbi
echo "7" "日" >> $tmp-youbi

cp $tmp-youbi $work_dir/youbi

# 利用者マスタ
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_MASTER  |
self 1 2                                       |
LANG=C sort -k1,1                              > $tmp-riyousha_master


# 年度FROM
NENDO_FROM=$(echo "${TaishouNendo}04")
NENDO_TO=$(echo "${TaishouNendo}" | lcalc '$1+1' | awk '{print $1"03"}')
#--------------------------------------------------------------
# ヘッダー部分生成
#--------------------------------------------------------------
cat <<- FIN > $tmp-header
FIN

# 紐付く事業所 
cat ${home_dir}/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_HIMODUKE_MASTER |
# ログイン中の施設で絞る
# 介護と予防のみに絞る
awk '$1=="'$shisetsu'"&&($3=="11"||$3=="61"){print $2,$3}' |
# 1:供給者ID  2:サービスコード種類
# 全て
if [ "$filter" == "1" ] ; then
  awk '$2=="11" || $2=="61"{print}'
# 介護のみにチェックが付いていた場合
elif [ "$filter" == "2" ] ; then
  awk '$2=="11"{print}'
# 予防のみにチェックが付いていた場合
elif [ "$filter" == "3" ] ; then
  awk '$2=="61"{print}'
else
  awk '$2=="11" || $2=="61"{print}'
fi                                      |
LANG=C sort -k1,1                       > $tmp-select_kyoukyusha
# 1:供給者ID  2:サービスコード種類


# 訪問介護実績ファイルの取得
# 対象となる全利用者のディレクトリを検索する
: > $tmp-jisseki_data
ls -F ${pompa_dir}/HOUMONKAIGO |
grep /                         |
sed 's/\///g'                  |
while read path ; do
if [ -s ${pompa_dir}/HOUMONKAIGO/${path}/SERVICE_JISSEKI ] ; then
  # 介護か予防
  if [ "$filter" == "2" ] ; then
    cat ${pompa_dir}/HOUMONKAIGO/${path}/SERVICE_JISSEKI  |
    # 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
    # 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
    # 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
    # 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID
    LANG=C sort -k2,2                                     |
    join0 key=2 $tmp-select_kyoukyusha -

  elif [ "$filter" == "3" ] ; then
    cat ${pompa_dir}/HOUMONKAIGO/${path}/SERVICE_JISSEKI  |
    # 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
    # 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
    # 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
    # 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID
    LANG=C sort -k2,2                                     |
    join0 key=2 $tmp-select_kyoukyusha -


  # 全て
  elif [ "$filter" == "1" ] ; then
    cat ${pompa_dir}/HOUMONKAIGO/${path}/SERVICE_JISSEKI  |
    LANG=C sort -k2,2                                     |
    join0 key=2 $tmp-select_kyoukyusha -                  > $tmp-jisseki_kaigo_yobou

    # 自費データを呼び出す
    cat ${pompa_dir}/JIHI_SERVICE/${path}/*/JIHI_SERVICE |
    # 1:利用者ID  2:対象年月日 3:ID    4:実施日付    5:開始時間
    # 6:終了時間  7:項目ID       8:内容  9:単位時間    10:費用
    # 11:担当者   12:単価      13:税率 14:有効フラグ 15:処理時間
    # 16:ユーザID
    self 1 2.1.4 2.5.2 4 2/NF |
    # 1:利用者ID 2:対象年      3:対象月    4:実施日付  5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{
      if(length($4)=="10"){
        print $0,substr($4,9,2);
      }else{
        print $0,$4;
      }
    }'  |
    self 1/3 20 5/19 |
    # 1:利用者ID 2:対象年      3:対象月    4:対象日 5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{print $1,"jihi",$2,$3,$6,$4,$14,"_",$8,$9,"jihi",$12,"_ _ _ _",$17,$18,$19}' > $tmp-jisseki_jihi
    # 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
    # 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
    # 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
    # 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID

    # 介護・予防実績と自費実績を連結
    cat $tmp-jisseki_kaigo_yobou $tmp-jisseki_jihi
  
  else
    cat ${pompa_dir}/HOUMONKAIGO/${path}/SERVICE_JISSEKI  |
    LANG=C sort -k2,2                                     |
    join0 key=2 $tmp-select_kyoukyusha -                  > $tmp-jisseki_kaigo_yobou

    # 自費データを呼び出す
    cat ${pompa_dir}/JIHI_SERVICE/${path}/*/JIHI_SERVICE |
    # 1:利用者ID  2:対象年月日 3:ID    4:実施日付    5:開始時間
    # 6:終了時間  7:項目ID       8:内容  9:単位時間    10:費用
    # 11:担当者   12:単価      13:税率 14:有効フラグ 15:処理時間
    # 16:ユーザID
    self 1 2.1.4 2.5.2 4 2/NF |
    # 1:利用者ID 2:対象年      3:対象月    4:実施日付  5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{
      if(length($4)=="10"){
        print $0,substr($4,9,2);
      }else{
        print $0,$4;
      }
    }'  |
    self 1/3 20 5/19 |
    # 1:利用者ID 2:対象年      3:対象月    4:対象日 5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{print $1,"jihi",$2,$3,$6,$4,$14,"_",$8,$9,"jihi",$12,"_ _ _ _",$17,$18,$19}' > $tmp-jisseki_jihi
    # 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
    # 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
    # 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
    # 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID

    # 介護・予防実績と自費実績を連結
    cat $tmp-jisseki_kaigo_yobou $tmp-jisseki_jihi

  fi
fi
done  > $tmp-search_data_dmy_dmy

cat $tmp-search_data_dmy_dmy |
awk '$3$4>="'$NENDO_FROM'"&&"'$NENDO_TO'">=$3$4{print $0}'  |
# 1:利用者ID            2:供給者ID       3:対象年          4:対象月              5:レコードID
# 6:サービス提供日      7:担当ヘルパーID 8:同行ヘルパーID  9:サービス開始時間    10:サービス終了時間
# 11:サービス内容       12:単位時間      13:緊急加算フラグ 14:サービスコード項目 15:請求対象区分
# 16:サービスコード種類 17:有効フラグ    18:処理日         19:ユーザーID

# 保険対象有無選択
# 全て
if [ $slHokenTaishou == 0 ] ; then
  cat -
# 保険対象のみ
elif [ $slHokenTaishou == 1 ] ; then
  awk '$16=="11" || $16=="61"{print}' 
# 保険対象外のみ
elif [ $slHokenTaishou == 2 ] ; then
  awk '$16!="11" && $16!="61"{print}'
else
  cat -
fi  > $tmp-search_data_dmy
  





seq 4 12               |
maezero 1.2            |
while read month ; do
  echo ${TaishouNendo}${month}
done                   > $tmp-month_list_1

seq 1 3                |
maezero 1.2            |
while read month_2 ; do
  echo ${TaishouNendo} |
  lcalc '$1+1'         |
  awk '{print $1"'$month_2'"}'
done                   > $tmp-month_list_2

tcat $tmp-month_list_1 $tmp-month_list_2 > $tmp-month_list
#

# 時間を計算する
cat $tmp-search_data_dmy |
# 開始時間終了時間が入ってないものは除外
awk '$9!="_" && $10!="_"' |
awk '{print $1,$2,$3$4,$5,$6,$7,$8,(substr($10,1,2)*60+substr($10,4,2))-(substr($9,1,2)*60+substr($9,4,2)),$11,$12,$13,$14,$15,$16,$17,$18,$19}'   |
# 1:利用者ID        2:供給者ID:           3:対象年月                   4:レコードID          5:サービス提供日
# 6:担当ヘルパーID  7:同行ヘルパーID      8:サービス提供時間（分換算） 9:サービス内容        10:単位時間
# 11:緊急加算フラグ 12:サービスコード項目 13:請求対象区分              14:サービスコード項目 15:有効フラグ
# 16:処理日         17:ユーザーID
self 1 3 8           |
LANG=C sort -k1,2    |
sm2 1 2 3 3          |
LANG=C sort -k1,2    > $tmp-jikan_kasan
# 1:利用者ID 2:対象年月 3:サービス提供時間（分換算）


# 対象者リスト
cat $tmp-jikan_kasan |
self 1               |
LANG=C sort -u       > $tmp-jikan_taisyousya_list


cat $tmp-jikan_taisyousya_list |
while read taisyou_ryoukin ; do
  # 全て
  if [ "$filter" == "1" ] ; then
    cat ${pompa_dir}/HOUMONKAIGO/${taisyou_ryoukin}/HOUMONKAIGO_RIYOUHYOUBEPPYOU_KAIGO ${pompa_dir}/HOUMONKAIGO/${taisyou_ryoukin}/HOUMONKAIGO_RIYOUHYOUBEPPYOU_YOBO |
    # 1:順番              2:利用者ID              3:利用年                    4:利用月              5:事業者サービス区分
    # 6:事業者ID          7:事業所名              8:サービスコード            9:サービスコード名    10:単位
    # 11:割引率           12:単位（割引後）       13:回数                     14:単位合計           15:種類限度額超
    # 16:種類限度額内     17:基準内限度額対象単位 18:基準外対象単位           19:地域単価           20:請求額
    # 21:給付率           22:介護保険給付額       23:個人負担額（保険対象内） 24:個人負担額（全額） 25:明細コード
    # 26:限度額判定フラグ(g:限度額対象外 n:限度額対象内) 27:請求確定フラグ（固定０）
    awk '{print $2,$3$4,$20}'                               |
    # 1:利用者ID 2:利用年月 3:請求額
    awk '$2>="'$NENDO_FROM'"&&"'$NENDO_TO'">=$2{print $0}'  |
    LANG=C sort -k1,1                                       |
    sm2 1 2 3 3                                             |
    LANG=C sort -k1,2   > $tmp-ryoukin_dmy
    # 1:利用者ID 2:利用年月 3:請求額

    # 自費データを呼び出す
    cat ${pompa_dir}/JIHI_SERVICE/${taisyou_ryoukin}/*/JIHI_SERVICE |
    # 1:利用者ID  2:対象年月日 3:ID    4:実施日付    5:開始時間
    # 6:終了時間  7:項目ID       8:内容  9:単位時間    10:費用
    # 11:担当者   12:単価      13:税率 14:有効フラグ 15:処理時間
    # 16:ユーザID
    self 1 2.1.4 2.5.2 4 2/NF |
    # 1:利用者ID 2:対象年      3:対象月    4:実施日付  5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{
      if(length($4)=="10"){
        print $0,substr($4,9,2);
      }else{
        print $0,$4;
      }
    }'  |
    self 1/3 20 5/19 |
    # 1:利用者ID 2:対象年      3:対象月    4:対象日 5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '$2$3>="'$NENDO_FROM'"&&"'$NENDO_TO'">=$2$3{print $0}' |
    awk '{print $1,$2$3,$13}' |
    LANG=C sort -k1,1 |
    sm2 1 2 3 3 |
    LANG=C sort -k1,2   > $tmp-ryoukin_dmy_jihi
   
    # 保険対象のみ
    if [ $slHokenTaishou == "1" ] ; then
      cat $tmp-ryoukin_dmy 
    # 保険対象外のみ
    elif [ $slHokenTaishou == "2" ] ; then
      cat $tmp-ryoukin_dmy_jihi
    else
      cat $tmp-ryoukin_dmy $tmp-ryoukin_dmy_jihi |
      LANG=C sort -k1,1 |
      sm2 1 2 3 3 |
      LANG=C sort -k1,2 
      # 1:利用者ID 2:利用年月 3:請求額
    fi   

  # 介護
  elif [ "$filter" == "2" ] ; then
    cat ${pompa_dir}/HOUMONKAIGO/${taisyou_ryoukin}/HOUMONKAIGO_RIYOUHYOUBEPPYOU_KAIGO |
    # 1:順番              2:利用者ID              3:利用年                    4:利用月              5:事業者サービス区分
    # 6:事業者ID          7:事業所名              8:サービスコード            9:サービスコード名    10:単位
    # 11:割引率           12:単位（割引後）       13:回数                     14:単位合計           15:種類限度額超
    # 16:種類限度額内     17:基準内限度額対象単位 18:基準外対象単位           19:地域単価           20:請求額
    # 21:給付率           22:介護保険給付額       23:個人負担額（保険対象内） 24:個人負担額（全額） 25:明細コード
    # 26:限度額判定フラグ(g:限度額対象外 n:限度額対象内) 27:請求確定フラグ（固定０）
    awk '{print $2,$3$4,$20}'                               |
    # 1:利用者ID 2:利用年月 3:請求額
    awk '$2>="'$NENDO_FROM'"&&"'$NENDO_TO'">=$2{print $0}'  |
    LANG=C sort -k1,1                                       |
    sm2 1 2 3 3                                             |
    LANG=C sort -k1,2                                       |
    # 1:利用者ID 2:利用年月 3:請求額
    # 保険対象のみ
    if [ $slHokenTaishou == "1" || $slHokenTaishou == "3" ] ; then
      cat -
    # 保険対象外のみ
    else
      :
    fi
   
  # 予防
  elif [ "$filter" == "3" ] ; then
    cat ${pompa_dir}/HOUMONKAIGO/${taisyou_ryoukin}/HOUMONKAIGO_RIYOUHYOUBEPPYOU_YOBO |
    # 1:順番              2:利用者ID              3:利用年                    4:利用月              5:事業者サービス区分
    # 6:事業者ID          7:事業所名              8:サービスコード            9:サービスコード名    10:単位
    # 11:割引率           12:単位（割引後）       13:回数                     14:単位合計           15:種類限度額超
    # 16:種類限度額内     17:基準内限度額対象単位 18:基準外対象単位           19:地域単価           20:請求額
    # 21:給付率           22:介護保険給付額       23:個人負担額（保険対象内） 24:個人負担額（全額） 25:明細コード
    # 26:限度額判定フラグ(g:限度額対象外 n:限度額対象内) 27:請求確定フラグ（固定０）
    awk '{print $2,$3$4,$20}'                               |
    # 1:利用者ID 2:利用年月 3:請求額
    awk '$2>="'$NENDO_FROM'"&&"'$NENDO_TO'">=$2{print $0}'  |
    LANG=C sort -k1,1                                       |
    sm2 1 2 3 3                                             |
    LANG=C sort -k1,2                                       |
    # 1:利用者ID 2:利用年月 3:請求額
    # 保険対象のみ
    if [ $slHokenTaishou == "1" || $slHokenTaishou == "3" ] ; then
      cat -
    # 保険対象外のみ
    else
      :
    fi
  else
    cat ${pompa_dir}/HOUMONKAIGO/${taisyou_ryoukin}/HOUMONKAIGO_RIYOUHYOUBEPPYOU_KAIGO ${pompa_dir}/HOUMONKAIGO/${taisyou_ryoukin}/HOUMONKAIGO_RIYOUHYOUBEPPYOU_YOBO |
    # 1:順番              2:利用者ID              3:利用年                    4:利用月              5:事業者サービス区分
    # 6:事業者ID          7:事業所名              8:サービスコード            9:サービスコード名    10:単位
    # 11:割引率           12:単位（割引後）       13:回数                     14:単位合計           15:種類限度額超
    # 16:種類限度額内     17:基準内限度額対象単位 18:基準外対象単位           19:地域単価           20:請求額
    # 21:給付率           22:介護保険給付額       23:個人負担額（保険対象内） 24:個人負担額（全額） 25:明細コード
    # 26:限度額判定フラグ(g:限度額対象外 n:限度額対象内) 27:請求確定フラグ（固定０）
    awk '{print $2,$3$4,$20}'                               |
    # 1:利用者ID 2:利用年月 3:請求額
    awk '$2>="'$NENDO_FROM'"&&"'$NENDO_TO'">=$2{print $0}'  |
    LANG=C sort -k1,1                                       |
    sm2 1 2 3 3                                             |
    LANG=C sort -k1,2 > $tmp-ryoukin_dmy
    # 1:利用者ID 2:利用年月 3:請求額

    # 自費データを呼び出す
    cat ${pompa_dir}/JIHI_SERVICE/${taisyou_ryoukin}/*/JIHI_SERVICE |
    # 1:利用者ID  2:対象年月日 3:ID    4:実施日付    5:開始時間
    # 6:終了時間  7:項目ID       8:内容  9:単位時間    10:費用
    # 11:担当者   12:単価      13:税率 14:有効フラグ 15:処理時間
    # 16:ユーザID
    self 1 2.1.4 2.5.2 4 2/NF |
    # 1:利用者ID 2:対象年      3:対象月    4:実施日付  5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '{
      if(length($4)=="10"){
        print $0,substr($4,9,2);
      }else{
        print $0,$4;
      }
    }'  |
    self 1/3 20 5/19 |
    # 1:利用者ID 2:対象年      3:対象月    4:対象日 5:対象年月日
    # 6:ID       7:実施日付    8:開始時間  9:終了時間  10:項目ID
    # 11:内容    12:単位時間   13:費用     14:担当者   15:単価
    # 16:税率    17:有効フラグ 18:処理時間 19:ユーザID
    awk '$2$3>="'$NENDO_FROM'"&&"'$NENDO_TO'">=$2$3{print $0}' |
    awk '{print $1,$2$3,$13}' |
    LANG=C sort -k1,1 |
    sm2 1 2 3 3 |
    LANG=C sort -k1,2   > $tmp-ryoukin_dmy_jihi

    # 保険対象のみ
    if [ $slHokenTaishou == "1" ] ; then
      cat $tmp-ryoukin_dmy
    # 保険対象外のみ
    elif [ $slHokenTaishou == "2" ] ; then
      cat $tmp-ryoukin_dmy_jihi
    else
      cat $tmp-ryoukin_dmy $tmp-ryoukin_dmy_jihi |
      LANG=C sort -k1,1 |
      sm2 1 2 3 3 |
      LANG=C sort -k1,2
      # 1:利用者ID 2:利用年月 3:請求額
    fi
  fi
done                                                      > $tmp-riyousya_ryoukin
 




cat $tmp-jikan_taisyousya_list        |
while read taisyousya ; do
  cat $tmp-jikan_kasan                |
  # 1:利用者ID 2:利用年月 3:サービス提供時間（分換算）
  LANG=C sort -k1,2                   |
  join2 key=1/2 $tmp-riyousya_ryoukin |
  # 1:利用者ID 2:利用年月 3:請求額 4:サービス提供時間（分換算）
  awk '$1=="'${taisyousya}'"'         |
  delf 1                              |
  # 1:利用年月 2:請求額 3:サービス提供時間（分換算）
  LANG=C sort -k1,1                   |
  join2 +0 key=1 - $tmp-month_list   |
  # 1:利用年月 2:請求額 3:サービス提供時間（分換算）
  delf 1                             |
  # 1:請求額 2:サービス提供時間（分換算）
  yarr                               |
  # 1:4月請求額  2:4月時間     3:5月請求額   4:5月時間    5:6月請求額
  # 6:6月時間    7:7月請求額   8:7月時間     9:8月請求額  10:8月時間
  # 11:9月請求額 12:9月時間    13:10月請求額 14:10月時間  15:11月請求額
  # 16:11月時間  17:12月請求額 18:12月時間   19:1月請求額 20:1月時間
  # 21:2月請求額 22:2月時間    23:3月請求額  24:3月時間
  awk '{print "'${taisyousya}'",$0}' |
  # 1:利用者ID    2:4月請求額  3:4月時間     4:5月請求額   5:5月時間
  # 6:6月請求額   7:6月時間    8:7月請求額   9:7月時間     10:8月請求額
  # 11:8月時間    12:9月請求額 13:9月時間    14:10月請求額 15:10月時間
  # 16:11月請求額 17:11月時間  18:12月請求額 19:12月時間   20:1月請求額
  # 21:1月時間    22:2月請求額 23:2月時間    24:3月請求額  25:3月時間
  lcalc '$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$2+$4+$6+$8+$10+$12+$14+$16+$18+$20+$22+$24,$3+$5+$7+$9+$11+$13+$15+$17+$19+$21+$23+$25'
  # 1:利用者ID    2:4月請求額  3:4月時間     4:5月請求額   5:5月時間
  # 6:6月請求額   7:6月時間    8:7月請求額   9:7月時間     10:8月請求額
  # 11:8月時間    12:9月請求額 13:9月時間    14:10月請求額 15:10月時間
  # 16:11月請求額 17:11月時間  18:12月請求額 19:12月時間   20:1月請求額
  # 21:1月時間    22:2月請求額 23:2月時間    24:3月請求額  25:3月時間
  # 26:合計請求額 27:合計時間
done                                 > $tmp-riyoujikan_monthly


  # 介護度リスト
  cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KAIGOHOKEN              |
  awk '$23<="'${today}'"&&$28>="'${today}'"{print $1,$3,$4,$34}' |
  # 1:利用者ID 2:介護度 3:保険者番号 4:最終更新日
  LANG=C sort -k1,1 -k3,3nr                                      |
  getfirst 1 1                                                   |
  delf 4                                                         |
  LANG=C sort -k1,1                                              > $tmp-kaigodo
  # 1:利用者ID 2:介護度 3:保険者番号
 
  cat $tmp-riyoujikan_monthly                                                                |
  # 1:利用者ID    2:4月請求額  3:4月時間     4:5月請求額   5:5月時間
  # 6:6月請求額   7:6月時間    8:7月請求額   9:7月時間     10:8月請求額
  # 11:8月時間    12:9月請求額 13:9月時間    14:10月請求額 15:10月時間
  # 16:11月請求額 17:11月時間  18:12月請求額 19:12月時間   20:1月請求額
  # 21:1月時間    22:2月請求額 23:2月時間    24:3月請求額  25:3月時間
  # 26:合計請求額 27:合計時間
  lcalc '$1,$2,$3/60,$3%60,$4,$5/60,$5%60,$6,$7/60,$7%60,$8,$9/60,$9%60,$10,$11/60,$11%60,$12,$13/60,$13%60,$14,$15/60,$15%60,$16,$17/60,$17%60,$18,$19/60,$19%60,$20,$21/60,$21%60,$22,$23/60,$23%60,$24,$25/60,$25%60,$26,$27/60,$27%60' |
  # 1:利用者ID    2:4月請求額  3:4月時       4:4月分      5:5月請求額
  # 6:5月時       7:5月分      8:6月請求額   9:6月時      10:6月分
  # 11:7月請求額  12:7月時     13:7月分      14:8月請求額 15:8月時
  # 16:8月分      17:9月請求額 18:9月時      19:9月分     20:10月請求額
  # 21:10月時     22:10月分    23:11月請求額 24:11月時    25:11月分
  # 26:12月請求額 27:12月時    28:12月分     29:1月請求額 30:1月時
  # 31:1月分      32:2月請求額 33:2月時      34:2月分     35:3月請求額
  # 36:3月時      37:3月分     38:合計請求額 39:合計時    40:合計分
  marume -sage 3.0 6.0 9.0 12.0 15.0 18.0 21.0 24.0 27.0 30.0 33.0 36.0 39.0                   |
  maezero 4.2 7.2 10.2 13.2 16.2 19.2 22.2 25.2 28.2 31.2 34.2 37.2 40.2                       |
  awk '{print $1,$2,$3":"$4,$5,$6":"$7,$8,$9":"$10,$11,$12":"$13,$14,$15":"$16,$17,$18":"$19,$20,$21":"$22,$23,$24":"$25,$26,$27":"$28,$29,$30":"$31,$32,$33":"$34,$35,$36":"$37,$38,$39":"$40}' |
  # 1:利用者ID    2:4月請求額  3:4月時間     4:5月請求額   5:5月時間
  # 6:6月請求額   7:6月時間    8:7月請求額   9:7月時間     10:8月請求額
  # 11:8月時間    12:9月請求額 13:9月時間    14:10月請求額 15:10月時間
  # 16:11月請求額 17:11月時間  18:12月請求額 19:12月時間   20:1月請求額
  # 21:1月時間    22:2月請求額 23:2月時間    24:3月請求額  25:3月時間
  # 26:合計請求額 27:合計時間
  LANG=C sort -k1,1                                                                          |
  join2 key=1 $tmp-riyousha_master                                                           |
  # 1:利用者ID   2:利用者名    3:4月請求額  4:4月時間     5:5月請求額
  # 6:5月時間    7:6月請求額   8:6月時間    9:7月請求額   10:7月時間
  # 11:8月請求額 12:8月時間    13:9月請求額 14:9月時間    15:10月請求額
  # 16:10月時間  17:11月請求額 18:11月時間  19:12月請求額 20:12月時間
  # 21:1月請求額 22:1月時間    23:2月請求額 24:2月時間    25:3月請求額
  # 26:3月時間   27:合計請求額 28:合計時間
  LANG=C sort -k1,1                                                                          |
  join2 key=1 <(cat $tmp-kaigodo | self 1 2)                                                 |
  # 1:利用者ID    2:介護度ID   3:利用者名    4:4月請求額  5:4月時間
  # 6:5月請求額   7:5月時間    8:6月請求額   9:6月時間    10:7月請求額
  # 11:7月時間    12:8月請求額 13:8月時間    14:9月請求額 15:9月時間
  # 16:10月請求額 17:10月時間  18:11月請求額 19:11月時間  20:12月請求額
  # 21:12月時間   22:1月請求額 23:1月時間    24:2月請求額 25:2月時間
  # 26:3月請求額  27:3月時間   28:合計請求額 29:合計時間
  LANG=C sort -k2,2                                                                          |
  join2 key=2 <(cat ${home_dir}/TBL/CONFIG/KAIGODO_MASTER | self 1 2 | LANG=C sort -k1,1 -u) |
  # 1:利用者ID    2:介護度ID    3:介護度名称 4:利用者名    5:4月請求額
  # 6:4月時間     7:5月請求額   8:5月時間    9:6月請求額   10:6月時間
  # 11:7月請求額  12:7月時間    13:8月請求額 14:8月時間    15:9月請求額
  # 16:9月時間    17:10月請求額 18:10月時間  19:11月請求額 20:11月時間
  # 21:12月請求額 22:12月時間   23:1月請求額 24:1月時間    25:2月請求額
  # 26:2月時間    27:3月請求額  28:3月時間   29:合計請求額 30:合計時間
  self 1 4 3 5/NF     |
  LANG=C sort -k1,1   |
  # 1:利用者ID    2:利用者名   3:介護度名称  4:4月請求額  5:4月時間
  # 6:5月請求額   7:5月時間    8:6月請求額   9:6月時間    10:7月請求額
  # 11:7月時間    12:8月請求額 13:8月時間    14:9月請求額 15:9月時間
  # 16:10月請求額 17:10月時間  18:11月請求額 19:11月時間  20:12月請求額
  # 21:12月時間   22:1月請求額 23:1月時間    24:2月請求額 25:2月時間
  # 26:3月請求額  27:3月時間   28:合計請求額 29:合計時間

  # 氏名カナをつける
  join2 key=1 <(cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KIHON | self 1 3)    |
  # 1:利用者ID    2:カナ        3:利用者名   4:介護度名称  5:4月請求額
  # 6:4月時間     7:5月請求額   8:5月時間    9:6月請求額   10:6月時間
  # 11:7月請求額  12:7月時間    13:8月請求額 14:8月時間    15:9月請求額
  # 16:9月時間    17:10月請求額 18:10月時間  19:11月請求額 20:11月時間
  # 21:12月請求額 22:12月時間   23:1月請求額 24:1月時間    25:2月請求額
  # 26:2月時間    27:3月請求額  28:3月時間   29:合計請求額 30:合計時間


  # 出力番号選択
  # 保険者番号
  if [ "$bangou" == "2" ] ; then
    join2 key=1 <(cat $tmp-kaigodo | self 1 3) |
    # 1:利用者ID   2:保険者番号  3:カナ        4:利用者名   5:介護度名称
    # 6:4月請求額  7:4月時間     8:5月請求額   9:5月時間    10:6月請求額
    # 11:6月時間   12:7月請求額  13:7月時間    14:8月請求額 15:8月時間
    # 16:9月請求額 17:9月時間    18:10月請求額 19:10月時間  20:11月請求額
    # 21:11月時間  22:12月請求額 23:12月時間   24:1月請求額 25:1月時間
    # 26:2月請求額 27:2月時間    28:3月請求額  29:3月時間   30:合計請求額
    # 31:合計時間
    self 2/NF
  # 対象者番号
  else
    cat -
  fi                                           |
  # 1:利用者ID    2:カナ        3:利用者名   4:介護度名称  5:4月請求額
  # 6:4月時間     7:5月請求額   8:5月時間    9:6月請求額   10:6月時間
  # 11:7月請求額  12:7月時間    13:8月請求額 14:8月時間    15:9月請求額
  # 16:9月時間    17:10月請求額 18:10月時間  19:11月請求額 20:11月時間
  # 21:12月請求額 22:12月時間   23:1月請求額 24:1月時間    25:2月請求額
  # 26:2月時間    27:3月請求額  28:3月時間   29:合計請求額 30:合計時間
  
  # 出力順序選択
  # 氏名順
  if [ "$sort" == "1" ] ; then 
    LANG=C sort -k2,2
  # 番号順
  elif [ "$sort" == "2" ] ; then
    LANG=C sort -k1,1
  # 介護度順
  elif [ "$sort" == "3" ] ; then
    LANG=C sort -k4,4
  else
    LANG=C sort -k1,1
  fi    |
  delf 2 |
  #sed 's/_/0/g' |
  # 1:利用者ID    2:利用者名   3:介護度名称  4:4月請求額  5:4月時間
  # 6:5月請求額   7:5月時間    8:6月請求額   9:6月時間    10:7月請求額
  # 11:7月時間    12:8月請求額 13:8月時間    14:9月請求額 15:9月時間
  # 16:10月請求額 17:10月時間  18:11月請求額 19:11月時間  20:12月請求額
  # 21:12月時間   22:1月請求額 23:1月時間    24:2月請求額 25:2月時間
  # 26:3月請求額  27:3月時間   28:合計請求額 29:合計時間
  comma 4 6 8 10 12 14 16 18 20 22 24 26 28 |

  awk '{print "search",$1,$2,$3,$4"円",$5,$6"円",$7,$8"円",$9,$10"円",$11,$12"円",$13,$14"円",$15,$16"円",$17,$18"円",$19,$20"円",$21,$22"円",$23,$24"円",$25,$26"円",$27,$28"円",$29}' |
  sed -e "s/ 0\:00 / @ /g" -e "s/ 0:00 / @ /g" -e "s/^0:00 /@ /" -e "s/ 0:00$/ @/" |
  sed -e "s/ 0円 / @ /g" -e "s/ 0円 / @ /g" -e "s/^0円 /@ /" -e "s/ 0円$/ @/"     > $tmp-search_data
  # 1:search      2:利用者ID    3:利用者名   4:介護度名称  5:4月請求額
  # 6:4月時間     7:5月請求額   8:5月時間    9:6月請求額   10:6月時間
  # 11:7月請求額  12:7月時間    13:8月請求額 14:8月時間    15:9月請求額
  # 16:9月時間    17:10月請求額 18:10月時間  19:11月請求額 20:11月時間
  # 21:12月請求額 22:12月時間   23:1月請求額 24:1月時間    25:2月請求額
  # 26:2月時間    27:3月請求額  28:3月時間   29:合計請求額 30:合計時間


 
  # 合計行
  cat $tmp-riyoujikan_monthly |
  # 1:利用者ID    2:4月請求額  3:4月時間     4:5月請求額   5:5月時間
  # 6:6月請求額   7:6月時間    8:7月請求額   9:7月時間     10:8月請求額
  # 11:8月時間    12:9月請求額 13:9月時間    14:10月請求額 15:10月時間
  # 16:11月請求額 17:11月時間  18:12月請求額 19:12月時間   20:1月請求額
  # 21:1月時間    22:2月請求額 23:2月時間    24:3月請求額  25:3月時間
  # 26:合計請求額 27:合計時間
  delf 1                      |
  sed 's/_/0/g'               |
  sm2 0 0 1 26                |
  # 1:4月請求額  2:4月時間     3:5月請求額   4:5月時間    5:6月請求額
  # 6:6月時間    7:7月請求額   8:7月時間     9:8月請求額  10:8月時間
  # 11:9月請求額 12:9月時間    13:10月請求額 14:10月時間  15:11月請求額
  # 16:11月時間  17:12月請求額 18:12月時間   19:1月請求額 20:1月時間
  # 21:2月請求額 22:2月時間    23:3月請求額  24:3月時間   25:合計請求額
  # 26:合計時間
  lcalc '$1,$2/60,$2%60,$3,$4/60,$4%60,$5,$6/60,$6%60,$7,$8/60,$8%60,$9,$10/60,$10%60,$11,$12/60,$12%60,$13,$14/60,$14%60,$15,$16/60,$16%60,$17,$18/60,$18%60,$19,$20/60,$20%60,$21,$22/60,$22%60,$23,$24/60,$24%60,$25,$26/60,$26%60' |
  # 1:4月請求額  2:4月時       3:4月分      4:5月請求額   5:5月時
  # 6:5月分      7:6月請求額   8:6月時      9:6月分       10:7月請求額
  # 11:7月時     12:7月分      13:8月請求額 14:8月時      15:8月分
  # 16:9月請求額 17:9月時      18:9月分     19:10月請求額 20:10月時
  # 21:10月分    22:11月請求額 23:11月時    24:11月分     25:12月請求額
  # 26:12月時    27:12月分     28:1月請求額 29:1月時      30:1月分
  # 31:2月請求額 32:2月時      33:2月分     34:3月請求額  35:3月時
  # 36:3月分     37:合計請求額 38:合計時    39:合計分

  marume -sage 2.0 5.0 8.0 11.0 14.0 17.0 20.0 23.0 26.0 29.0 32.0 35.0 38.0                  |
  maezero 3.2 6.2 9.2 12.2 15.2 18.2 21.2 24.2 27.2 30.2 33.2 36.2 39.2 |

  comma 1 4 7 10 13 16 19 22 25 28 31 34 37 |

  awk '{print "goukei","合計",$1"円",$2":"$3,$4"円",$5":"$6,$7"円",$8":"$9,$10"円",$11":"$12,$13"円",$14":"$15,$16"円",$17":"$18,$19"円",$20":"$21,$22"円",$23":"$24,$25"円",$26":"$27,$28"円",$29":"$30,$31"円",$32":"$33,$34"円",$35":"$36,$37"円",$38":"$39}' |
sed -e "s/ 0\:00 / @ /g" -e "s/ 0:00 / @ /g" -e "s/^0:00 /@ /" -e "s/ 0:00$/ @/"  |
sed -e "s/ 0円 / @ /g" -e "s/ 0円 / @ /g" -e "s/^0円 /@ /" -e "s/ 0円$/ @/" > $tmp-goukei
  # 1:goukei     2:合計        3:4月請求額  4:4月時       5:5月請求額
  # 6:5月時      7:6月請求額   8:6月時      9:7月請求額   10:7月時
  # 11:8月請求額 12:8月時      13:9月請求額 14:9月時      15:10月請求額
  # 16:10月時    17:11月請求額 18:11月時    19:12月請求額 20:12月時
  # 21:1月請求額 22:1月時      23:2月請求額 24:2月時      25:3月請求額
  # 26:3月時     27:合計請求額 28:合計時    


  tcat $tmp-search_data $tmp-goukei

  

## 終了
rm -f $tmp-*
exit 0
