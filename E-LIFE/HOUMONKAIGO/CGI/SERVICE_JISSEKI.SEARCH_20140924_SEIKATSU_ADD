#!/bin/bash
#
# SERVICE_JISSEKI.SEARCH
# サービス実績　検索用CGI
#
# Written by K.Aoyama :20131212

#--------------------------------------------------------------
# ログ
source /home/hands/E-LIFE/HOUMONKAIGO/CGI/HOUMONKAIGO.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null
mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).$HOSTNAME.$(date +%Y%m%d) ; set -xv
#--------------------------------------------------------------

#--------------------------------------------------------------
rm -f $tmp-*
#--------------------------------------------------------------

#--------------------------------------------------------------
function error_exit {
  rm -f $tmp-*
  exit 0
}
#--------------------------------------------------------------

#--------------------------------------------------------------
# 変数の定義
namedata=$1

# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------------

# テスト
# POSTされてくるパラメータ

#--------------------------------------------------------------
# 入力データのチェック
# ユーザＩＤ
[ -z "${USER_ID}" -o "${USER_ID}" = "_" ] && error_exit "ログインユーザが不明です"
# 利用者
[ -z "${Riyoushaid}" -o "${Riyoushaid}" = "_" ] && error_exit "利用者が不明です"
# サービス提供事業者
[ -z "${Kyoukyusha}" -o "${Kyoukyusha}" = "_" ] && error_exit "サービス提供事業者が不明です"
# 対象年
[ -z "${TaishouNen}" -o "${TaishouNen}" = "_" ] && error_exit "対象年が不明です"
# 対象月
[ -z "${TaishouTsuki}" -o "${TaishouTsuki}" = "_" ] && error_exit "対象月が不明です"


# 選択した年月で事業者、介護度を判定
curday=$(mdate ${TaishouNen}${TaishouTsuki}"01" | self 1)

firstday=$(mdate ${TaishouNen}${TaishouTsuki}m | tateyoko | head -1)
lastday=$(mdate ${TaishouNen}${TaishouTsuki}m | tateyoko | tail -1)

# 介護度によってサービス事業者、タイプを判断
self 1 3 5 14/28 ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KAIGOHOKEN   |
awk '$1=="'${Riyoushaid}'"'   >     $tmp-riyousha_kaigohoken_master

cat $tmp-riyousha_kaigohoken_master                           |
awk '$13<="'${curday}'"&&$18>="'${curday}'"'                  |
# 1:利用者ID               2:介護度 3:保険者名 4:認定年月日 5:有効期間開始年月日
# 6:認定有効期間終了年月日
self 1/3 8 13 18                        |
LANG=C sort -k4,5                       |
getlast 1 1                             > $tmp-cur_riyousha_kaigohoken

# 月初めの介護度を取得
cat $tmp-riyousha_kaigohoken_master                           |
awk '$13<="'${firstday}'"&&$18>="'${firstday}'"'              |
self 1/3 8 13 18                        |
LANG=C sort -k4,5                       |
getlast 1 1                             > $tmp-first_riyousha_kaigohoken

# 月終わりの介護度を取得
cat $tmp-riyousha_kaigohoken_master                           |
awk '$13<="'${lastday}'"&&$18>="'${lastday}'"'              |
self 1/3 8 13 18                        |
LANG=C sort -k4,5                       |
getlast 1 1                             > $tmp-last_riyousha_kaigohoken

prekaigodo=$(self 2 $tmp-first_riyousha_kaigohoken)
curkaigodo=$(self 2 $tmp-cur_riyousha_kaigohoken)
postkaigodo=$(self 2 $tmp-last_riyousha_kaigohoken)


if [ ${prekaigodo} -eq ${postkaigodo} ] ; then
   kaigodo=$curkaigodo
elif [ ${prekaigodo} -gt ${postkaigodo}  ] ; then
   kaigodo=$prekaigodo
else
   kaigodo=$postkaigodo
fi

if [ -z "${hdKbnKijunDate}" -o "${hdKbnKijunDate}" = "_" ] ; then
 :
else
# 2014/7/14
# 基準日ベースで介護度を取得
cat $tmp-riyousha_kaigohoken_master                         |
awk '$13<="'${hdKbnKijunDate}'"&&$18>="'${hdKbnKijunDate}'"'              |
self 1/3 8 13 18                        |
LANG=C sort -k4,5                       |
getlast 1 1                             > $tmp-kensaku_riyousha_kaigohoken
kaigodo=$(self 2 $tmp-kensaku_riyousha_kaigohoken)
fi

# マスタよりサービス種類を取得(2014/07/11)
# 時期によって有効なサービスコードの年月日を出す。
ls -F ${home_dir}/TBL/SERVICECODE |
grep / |
sed 's/\///g' |
LANG=C sort -k1,1    |
awk '{print "1",$0}' |
ychange num=1 |
awk '$2<="'$curday'"&&"'$curday'"<$3{print $2}'      > $tmp-dir_date

dir_date=$(cat $tmp-dir_date)


if [ "$kaigodo" = "1" -o "$kaigodo" = "2" ] ; then
   Jigyoushatype="61"
   echo "_" "_" > $tmp-servicecode_shurui
else
   Jigyoushatype="11"
   cat ${home_dir}/TBL/SERVICECODE/${dir_date}/SERVICECODE_HOUMONKAIGO |
   self 3 7 |
   LANG=C sort -k1,1 > $tmp-servicecode_shurui
fi
# 事業所を取得
cat ${home_dir}/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_HIMODUKE_MASTER  |
awk '$1=="'$shisetsu'"&&$3=="'$Jigyoushatype'"&&$4!="9"{print $2}' > $tmp-jigyousha_id

Kyoukyusha=$(cat $tmp-jigyousha_id)

#--------------------------------------------------------------
# ヘッダー部分生成
#--------------------------------------------------------------
cat <<- FIN > $tmp-header
Kyoukyusha
KakuteiFlg
FIN

cat ${tmp}-header   |
yarr                > ${tmp}-header_yoko

#--------------------------------------------------------------
# 基本ファイルの取得
cat ${pompa_dir}/HOUMONKAIGO/${Riyoushaid}/JISSEKI_KAKUTEI |
#--------------------------------------------------------------
# 利用者ID
awk '$1=="'${Riyoushaid}'"'   |
#--------------------------------------------------------------
# 検索
# --------------------------
# サービス提供事業者
awk '$2=="'${Kyoukyusha}'"'   |
# 日付
# --------------------------
# 
awk '$3=="'${TaishouNen}'"&&$4=="'${TaishouTsuki}'"'   |
# --------------------------
#--------------------------------------------------------------
# 日付が指定されていない（初期状態）時は最新のものを表示する
getlast 1 1                 |
# 削除フラグ、ユーザ、更新日付をはずす
delf NF-2/NF                |
delf 1 3 4                  |
#--------------------------------------------------------------
cat ${tmp}-header_yoko -    |
tateyoko                    |
awk '{print "k",$0}'        > ${tmp}-kakutei


#--------------------------------------------------------------
# ヘッダー部分生成(初回加算)
#--------------------------------------------------------------
cat <<- FIN > $tmp-shokai-header
ServiceJissekiShokaiKasan
FIN

cat ${tmp}-shokai-header   |
yarr                > ${tmp}-shokai-header_yoko

#--------------------------------------------------------------
# 基本ファイルの取得
cat ${pompa_dir}/HOUMONKAIGO/${Riyoushaid}/JISSEKI_SHOKAI |
#--------------------------------------------------------------
# 利用者ID
awk '$1=="'${Riyoushaid}'"'   |
#--------------------------------------------------------------
# 検索
# --------------------------
# サービス提供事業者
awk '$2=="'${Kyoukyusha}'"'   |
# 日付
# --------------------------
# 
awk '$3=="'${TaishouNen}'"&&$4=="'${TaishouTsuki}'"'   |
# --------------------------
#--------------------------------------------------------------
getlast 1 1                 |
# 削除フラグ、ユーザ、更新日付をはずす
delf NF-2/NF                |
delf 1/4                  |
#--------------------------------------------------------------
cat ${tmp}-shokai-header_yoko -    |
tateyoko                    |
awk '{print "f",$0}'        > ${tmp}-shokai


# 実績ファイルのほうを優先して表示(実績入力されていれば、ケアプラン反映させない！)
#--------------------------------------------------------------
# 訪問介護実績ファイルの取得
     cat ${pompa_dir}/HOUMONKAIGO/${Riyoushaid}/SERVICE_JISSEKI |
#--------------------------------------------------------------
# 検索
# --------------------------
# 利用者ID、サービス提供事業者、対象年、対象月
# --------------------------
#
     awk '$1=="'$Riyoushaid'"&&$2=="'$Kyoukyusha'"&&$3=="'$TaishouNen'"&&$4=="'$TaishouTsuki'"&&$(NF-2)!="9"'   |
     LANG=C sort -k6,6 -k9,10             |
# --------------------------
# 1:利用者ID      2:サービス提供事業者 3:対象年          4:対象月               5:レコードID
# 6:提供日        7:担当ヘルパー       8:同行ヘルパー    9:サービス提供開始時間 10:サービス提供終了時間
# 11:サービス内容 12:単位時間          13:緊急加算フラグ 14:サービスコード      15:請求区分
#--------------------------------------------------------------
# 削除フラグ、ユーザ、更新日付をはずす
     self 5 6 9 10 14 15 7 8 11/13        |
     awk '{print $0,"1"}'                 |
# --------------------------
# 1:レコード区分   2:データID  3:日           4:開始時刻     5:終了時刻
# 6:サービスコード 7:請求対象  8:担当ヘルパー 9:同行ヘルパー 10:介護内容
# 11:単位時間      12:緊急加算 13:詳細表示
#--------------------------------------------------------------
     awk '{print "c",$0}'        > ${tmp}-jisseki

#--------------------------------------------------------------
##  介護
if [ "$(gyo ${tmp}-jisseki)" = "0" ] ; then
     cat $data_dir/CAREPLAN/GETSUGAKU_RIYOU_KAIGO/${Riyoushaid}/SERVICE_YOTEI_KAIGO |
# 利用者ＩＤ、対象年月、供給者コード、サービス予定が"確定"のレコード
     awk '$2=="'$Riyoushaid'"&&$3=="'$TaishouNen'"&&$4=="'$TaishouTsuki'"&&$6=="11"&&$10=="'$Kyoukyusha'"&&$16=="1"'   |
# 1:日 2:開始時刻 3:終了時刻 4:サービスコード 5:保険対象
     self 5 8 9 7 11           > $tmp-naiyou_check

     cp $tmp-naiyou_check $work_dir/naiyou_check

     cat $tmp-naiyou_check     |
     awk '$4=="4000"{print $1,$2,$3,"1"}'  |
     LANG=C sort -k1,3         > $tmp-kinkyu-kasan
     # join2で落ちるため
     [ "$(gyo $tmp-kinkyu-kasan)" == "0" ] && echo "_" "_" "_" "_" > $tmp-kinkyu-kasan

     cat $tmp-naiyou_check     |
     awk '$4!="4000"'          |
     ########## 2014/7/11 サービス種類設定 ##########
     self 4 0                  |
     LANG=C sort -k1,1         |
     join2 +_ key=1 $tmp-servicecode_shurui |
     delf 1                    |
     self 2/NF 1               |
     ################################################
     self 1/3 0                |
     LANG=C sort -k1,3         |
     join2 +_ key=1/3 $tmp-kinkyu-kasan |
     delf 1/3                  |
     # セットしないところは空白
# 1:データID  2:日           3:開始時刻     4:終了時刻 5:サービスコード
# 6:請求対象  7:担当ヘルパー 8:同行ヘルパー 9:介護内容 10:単位時間
# 11:緊急加算 12:朝夜加算    13:深夜加算    14:2人加算 15:同一減算
# 16:詳細表示
     awk '{print "_",$2,$3,$4,$5,$6,"_","_",$NF,"_",$1,"_","_","_","_","_"}'    |
# 1:レコード区分   2:データID  3:日           4:開始時刻     5:終了時刻
# 6:サービスコード 7:請求対象  8:担当ヘルパー 9:同行ヘルパー 10:介護内容
# 11:単位時間      12:緊急加算 13:朝夜加算    14:深夜加算    15:2人加算
# 16:同一減算      17:詳細表示
     awk '{print "c",$0}'      |
     LANG=C sort -k2,4         > $tmp-jisseki
     cp $tmp-jisseki $work_dir/houmonkaigo_jisseki_kaigo
##  予防
     cat $data_dir/CAREPLAN/GETSUGAKU_RIYOU_YOBO/${Riyoushaid}/SERVICE_YOTEI_YOBO |
# 利用者ＩＤ、対象年月、供給者コード、サービス予定が"確定"のレコード
     awk '$2=="'$Riyoushaid'"&&$3=="'$TaishouNen'"&&$4=="'$TaishouTsuki'"&&$6=="61"&&$10=="'$Kyoukyusha'"&&$16=="1"'   |
# 1:日 2:開始時刻 3:終了時刻 4:サービスコード 5:保険対象
     self 5 8 9 7 11          > $tmp-naiyou_check
     cat $tmp-naiyou_check     |
     awk '$4=="4000"{print $1,$2,$3,"1"}'  |
     LANG=C sort -k1,3         > $tmp-kinkyu-kasan
     # join2で落ちるため
     [ "$(gyo $tmp-kinkyu-kasan)" == "0" ] && echo "_" "_" "_" "_" > $tmp-kinkyu-kasan

     cat $tmp-naiyou_check     |
     awk '$4!="4000"'          |
     self 1/3 0                |
     LANG=C sort -k1,3         |
     join2 +_ key=1/3 $tmp-kinkyu-kasan |
     delf 1/3                  |
     # セットしないところは空白
# 1:データID  2:日           3:開始時刻     4:終了時刻 5:サービスコード
# 6:請求対象  7:担当ヘルパー 8:同行ヘルパー 9:介護内容 10:単位時間
# 11:緊急加算 12:詳細表示
     awk '{print "_",$2,$3,$4,$5,$6,"_","_","_","_",$1,"_"}'    |
# --------------------------
# 1:レコード区分   2:データID  3:日           4:開始時刻     5:終了時刻
# 6:サービスコード 7:請求対象  8:担当ヘルパー 9:同行ヘルパー 10:介護内容
# 11:単位時間      12:緊急加算 13:詳細表示
#--------------------------------------------------------------
     awk '{print "c",$0}'      |
     LANG=C sort -k2,4         >> $tmp-jisseki
fi

cp $tmp-jisseki $work_dir/houmonkaigo_jisseki

# 予定データを表示
cat ${tmp}-kakutei ${tmp}-jisseki ${tmp}-shokai


## 終了
rm -f $tmp-*
exit 0
