#!/bin/bash
#
# SERVICE_JISSHI_TEJUN.DISPLAY : 個別援助計画書表示
#
# Usage : SERVICE_JISSHI_TEJUN.DISPLAY
#
# Written by K.Aoyama(HANDS.LAB)

# ログ
source /home/hands/E-LIFE/HOUMONKAIGO/CGI/HOUMONKAIGO.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null

mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date +%Y%m%d) ; set -xv

KYOUTSU_TBL=${home_dir}/TBL

rm -f $tmp-*

# ディレクトリ設定
test_tbl_dir="${home_dir}/TEST/TBL"
kengen_dir="${home_dir}/TBL/KENGEN_KANRI"

# 変数の定義
namedata=$1
result_data=$2
opt_data=$3
today="$(date +%Y%m%d)"

cp -p ${namedata} ${work_dir}/namedata_service_jisshi

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------

echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu
echo ${Riyoushaid} > ${tmp}-riyoushaid

# ユーザ退去制御
awk '$(NF-2)!="9"' ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_KIHON     |
awk '$4<="'$today'"&&"'$today'"<=$5{print $1}'  |
LANG=C sort -k1,1                                    > $tmp-yuko-jyugyoin

# ログインUSER名と施設の取得（仮）
cat ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
tee $tmp-user_mst                                  |
# 1:USER_ID 2:ユーザー名
join1 key=1 ${tmp}-user                            |
# 1:USER_ID 2:ユーザー名
self 2                                             > ${tmp}-usermei

cat ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON |
tee $tmp-shisetsu_mst                              |
# 1:施設コード 2:施設名
join1 key=1 ${tmp}-shisetsu                        |
self 2                                             > ${tmp}-user_shisetsu

cat ${home_dir}/TBL/ZEIRITSU_GENGOU_MASTER/GENGOU  |
awk '$5!="9"{print $1,$2,$3,$4}'                   |
tee $tmp-gengou_master                             |   
awk '{print $1,$2,substr($3,1,4)-1}'          > $tmp-gengou_mst_work
self 1 2 $tmp-gengou_master > $tmp-gengou_master2

cat $tmp-gengou_mst_work |
LANG=C sort -k3,3r       > $tmp-gengou_mst

# 施設と従業員の紐付け
# 1:施設ID 2:ユーザID 3: 4: 5:
cp $tmp-user_mst $work_dir/user
cp $tmp-shisetsu $work_dir/shisetsu
# 施設で絞込み + 特別所属（20140602）
cat ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_SHISETSU ${home_dir}/TBL/JYUUGYOUIN_MASTER/EXTRA_USER_SHISETSU |
#cat ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_SHISETSU |
#cat ${home_dir}/TBL/CONFIG/USER_SHISETSU |
#awk '$6=="2"'                                       |
LANG=C sort -k2,2                                   |
join1 key=2 $tmp-shisetsu                           |
awk '$6=="2"{print $1}'                             |
LANG=C sort -k1,1                                   |
# 1:施設ID 2:ユーザID 3:ユーザ名 4: 5: 6:
join1 key=1 $tmp-user_mst                           |
join0 key=1 $tmp-yuko-jyugyoin                      |
self 1 2                                            > $tmp-helper_list


# 入居者情報(仮)
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KIHON          |
join1 key=1 ${tmp}-riyoushaid                      |
# 1:利用者名 2:性別 3:誕生日和暦   4:誕生日年 5:誕生日月
# 6:誕生日   7:住所 8:携帯電話番号
self 2 4 5 6 7 8 14 15                             |
LANG=C sort -k3,3                                  |
# 1:利用者名 2:性別   3:誕生日和暦 4:和暦名       5:誕生日年
# 6:誕生日月 7:誕生日 8:住所       9:携帯電話番号
join1 key=3 $tmp-gengou_master2 -        |
# 1:利用者名 2:性別 3:和暦名       4:誕生日年 5:誕生日月
# 6:誕生日   7:住所 8:携帯電話番号
self 1 2 4 5 6 7 8 9                            |
awk '{if($2=="female"){$2="1"}else{$2="0"};print $1,$2,$3$4"年"$5"月"$6"日",$7,$8}'  > ${tmp}-riyousha_kihon
Riyoushamei=$(self 1 ${tmp}-riyousha_kihon)

#共通パーツ（ログイン系）------------

self 1 2 ${home_dir}/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON |
awk '$1!="9999"'                                        > $tmp-shisetsu_mst

cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst

# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou
#--------------------------------


[ -z "${MODE}" ] && MODE="init"
#--------------------------------------------------------------

#--------------------------------------------------------------
### モードによる表示の分岐
case "${MODE}" in

  # 初期表示
  init)
#    if [ "$(gyo ${result_data})" != 0 ] ; then
#      cat ${result_data}        > $tmp-listdata
#    else
    # 空のリストデータを作成する
      : > $tmp-listdata
  ;;
  to_reset)
      : > $tmp-listdata
      DataID=""
      hdShokaiSakuseiDate=""
      ShokaiSakuseiDate=""
      hdKoushinDate=""
      Riyousha=""
      Kyoshitsu=""
      Sakuseisha=""
      ServiceNaiyou=""
      TeikyoKubun=""
      TeikyouYoubi=""
      TeikyouJikanStart=""
      TeikyouJikanEnd=""
      txtareaTokki=""
      txtareaKoumoku=""
      txtareaTejun=""
      txtareaBiko=""
      txtareaShoyouJikan=""
      slShisetsu=""
      select_shisetsu=""
#    fi
  ;;

#  careplan )
#    if [ "$(gyo ${result_data})" != 0 ] ; then
#      cat ${result_data}        > $tmp-listdata
#    else
    # 空のリストデータを作成する
#      : > $tmp-listdata
#    fi
#  ;;

  # 検索結果
  search)
    if [ "$(gyo ${result_data})" != 0 ] ; then
      cat ${result_data}        > $tmp-listdata
    else
    # 空のリストデータを作成する
      : > $tmp-listdata
    fi
  ;;

  # 更新
  regist)
    # 結果判定
    result=$(awk '$1=="result"{print $2}' ${result_data})
#    result_all="$(gyo ${listdata})"
    if [ "${result}" = "ok" ] ; then
      message="更新完了"
    else
      message=$(awk '$1=="message"{print $2}' ${result_data})
      [ -z "${message}" ] && message="処理エラー"
    fi
    if [ "$(gyo ${opt_data})" != 0 ] ; then
      cat ${opt_data}        > $tmp-listdata
    else
    # 空のリストデータを作成する
      : > $tmp-listdata
    fi
  ;;

  # 削除
  delete)
    # 結果判定
    result=$(awk '$1=="result"{print $2}' ${result_data})
#    result_all="$(gyo ${listdata})"
    if [ "${result}" = "ok" ] ; then
      message="更新完了"
    else
      message=$(awk '$1=="message"{print $2}' ${result_data})
      [ -z "${message}" ] && message="処理エラー"
    fi
    if [ "$(gyo ${opt_data})" != 0 ] ; then
      cat ${opt_data}        > $tmp-listdata
    else
    # 空のリストデータを作成する
      : > $tmp-listdata
    fi
  ;;
esac

#--------------------------------------------------------------
# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
cat << FIN > $tmp-html2
    <script type="text/javascript" language="javascript">
      alert('${message}');
    </script>
FIN
fi
#--------------------------------------------------------------


cp -p $tmp-listdata $work_dir/listdata_service_jisshi

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source $tmp-listdata)
#--------------------------------------------------------

[ -z "$hdKoushinDate" -o "$hdKoushinDate" = "_" ] && hdKoushinDate=$(date +%Y%m%d | self 1)

# 介護度
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA/RIYOUSHA_KAIGOHOKEN  |
awk '$(NF-2)!="9"' |
awk '$23<="'$hdKoushinDate'"&&"'$hdKoushinDate'"<=$28'      |
awk '$1=="'$Riyoushaid'"{print $3}'                         > $tmp-kaigodo
dispKaigodo=$(self 1 $tmp-kaigodo)

if [ "$dispKaigodo" = "1" -o "$dispKaigodo" = "2" ] ; then
   jigyoushatype="61"
else
   jigyoushatype="11"
fi
# 事業所を取得
cat ${home_dir}/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_HIMODUKE_MASTER  |
awk '$1=="'$shisetsu'"&&$3=="'$jigyoushatype'"&&$4!="9"{print $2}' > $tmp-jigyousha_id

jigyoushaid=$(cat $tmp-jigyousha_id)

# 事業所マスタ
cat ${home_dir}/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_MASTER    |
# サービスマネージャ 同一 施設等の区分
awk '$1=="'$jigyoushaid'"{print $16,$17,$10}' > $tmp-jigyousho_mst

servicemanager_gensan=$(self 1 $tmp-jigyousho_mst)
douitsu_gensan=$(self 2 $tmp-jigyousho_mst)
shisetsu_kbn=$(self 3 $tmp-jigyousho_mst)

dispShokaiSakuseiDate=$(echo $hdShokaiSakuseiDate | awk '$1!="" {print "\""substr($1,1,4)"/"substr($1,5,2)"/"substr($1,7,2)"\""}')

#if [ -z "${Riyousha}" -o "${Riyousha}" = "_" ] ; then
   Riyousha=${Riyoushamei}
#fi

# 更新日付
dispKoushinDate=$(echo ${hdKoushinDate} | awk '{print "\""substr($1,1,4)"/"substr($1,5,2)"/"substr($1,7,2)"\""}')
[ "$hdKoushinDate" = "_" -o -z "${hdKoushinDate}" ] && dispKoushinDate=""

echo "HOUMONKAIGO_MENU.CGI" > $tmp-cgi
# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
awk '$2=="0000"||$2=="'$shisetsu'"'         |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -k7,7                                          |
join0 key=7 $tmp-cgi                                       > ${tmp}-kengenlist


cat << FIN | sed 's/ _$/ @/g' > $tmp-calsed
###RIYOUSHAID### $Riyoushaid
###USERID### $USER_ID
###DATAID### $DataID
###HDSHOKAISAKUSEIDATE### $dispShokaiSakuseiDate
###SHOKAISAKUSEIDATE### $ShokaiSakuseiDate
###HDKOUSHINDATE### $dispKoushinDate
###RIYOUSHA### $Riyousha
###KYOSHITSU### $Kyoshitsu
###SAKUSEISHA### $Sakuseisha
###JIGYOUSHATYPE### $jigyoushatype
###SERVICEMANAGER_GENSAN### $servicemanager_gensan
###DOUITSU_GENSAN### $douitsu_gensan
###SHISETSUKBN### $shisetsu_kbn
###SERVICENAIYOU### $ServiceNaiyou
###TEIKYOKUBUN### $TeikyoKubun
###TEIKYOUYOUBI### $TeikyouYoubi
###TEIKYOUJIKANSTART### $TeikyouJikanStart
###TEIKYOUJIKANEND### $TeikyouJikanEnd
###TXTAREATOKKI### $txtareaTokki
###TXTAREAKOUMOKU### $txtareaKoumoku
###TXTAREATEJUN### $txtareaTejun
###TXTAREABIKO### $txtareaBiko
###TXTAREASHOYOUJIKAN### $txtareaShoyouJikan
###SLSHISETSU### $slShisetsu
###HDKENSAKUSHISETSU### $hdKensakuShisetsu
###PASSWORD### $password
###SHISETSUID### $shisetsu
###SELECT_SHISETSU### $select_shisetsu
FIN


#-----------------------------------------------------------
# 登録・印刷ボタンの表示
# 施設名はログインユーザーの権限のある施設を取得
self 9 $tmp-kengenlist |
LANG=C sort -k1,1      |
tail -1                > $tmp-dispkengen

# 権限がない人は新規登録や出力が出来ない
if [ $(cat $tmp-dispkengen) = "3" ] ;then
  echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed
  echo "###TOUROKUDISP### @" >> $tmp-calsed
  echo "###PRINTDISP### @"   >> $tmp-calsed
elif [ $(cat $tmp-dispkengen) = "2" ] ;then
  echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed
  echo "###TOUROKUDISP### @" >> $tmp-calsed
  echo "###PRINTDISP### none"   >> $tmp-calsed
else
  echo "###SHINKITOUROKUDISP### none" >> $tmp-calsed
  echo "###TOUROKUDISP### none" >> $tmp-calsed
  echo "###PRINTDISP### none"   >> $tmp-calsed
fi

# 施設マスタ


cat $tmp-calsed      |
sed 's/\\n/###KAIGYO###/g'     >  $tmp-calsed_kaigyozumi

# HTMLの作成
cat ${html_dir}/SERVICE_JISSHI_TEJUN.html |
calsed -f $tmp-calsed_kaigyozumi - |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -l###GENGOU### - ${tmp}-gengou_mst |
mojihame -l###HELPERLIST### - ${tmp}-helper_list |
sed 's/###KAIGYO###/\n/g'     |
sed 's/###SPACE###/ /g'       |
tee $tmp-html |
#--------------------------------------------------------------
#--------------------------------------------------------------
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |
cat -
#--------------------------------------------------------------
#formhame -d"_" - ${namedata}

rm -f ${tmp}-*
exit 0
