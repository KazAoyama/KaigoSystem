#!/bin/bash
#
# KAIGOSEIKYU_HOUMON.SEARCH : 訪問介護介護請求.SEARCH
#
# Usage : KAIGOSEIKYU_HOUMON.SEARCH namefile
#
# Written by j.aoyagi(hands lab.inc)


# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null

#--------------------ログ出力--------------------
mkdir -p /home/hands/E-LIFE/KEIRI/APLOG/$(date +%Y%m%d)
exec 2> /home/hands/E-LIFE/KEIRI/APLOG/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv


# 変数設定
tmp=/var/tmp/${$}

#ゴミtmpの消去
rm -f $tmp-*

today="$(date +%Y%m%d)"
this_month="$(date +%Y%m)"

# ディレクトリ設定
home_dir="/home/hands"
app_dir="${home_dir}/E-LIFE/KEIRI"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
pompa_dir="${app_dir}/POMPA"
input_dir="${app_dir}/INPUT"
apptbl_dir="${app_dir}/TBL"
kyoutsu_dir="${home_dir}/E-LIFE/KYOUTSU/HTML"
test_tbl_dir="${home_dir}/E-LIFE/TEST/TBL"
master_tbl_dir="${home_dir}/E-LIFE/TBL/"
seikyu_dir="/DATA/E-LIFE/SEIKYU/KYOTAKU"
riyosha_dir="/DATA/E-LIFE/UNEI/RIYOUSHA"
work="${app_dir}/WORK"

# 引数設定
namefile=${1}

# eval
eval $(name-source ${namefile})

echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass

# 請求する事業所を決める
echo ${shisetsu} > ${tmp}-shisetsu

# mdate month/+1


# サービス利用票別表データを呼ぶ
if [ -e ${seikyu_dir}/${shisetsu}/${seikyu_nengetsu}/RIYOUHYOUBEPPYOU_RECORD_KAIGO ];then
  awk '$28!=9' ${seikyu_dir}/${shisetsu}/${seikyu_nengetsu}/RIYOUHYOUBEPPYOU_RECORD_KAIGO > ${tmp}-seikyu_data_base
  # 1:No.                   2:利用者ID                  3:利用年              4:利用月           5:事業者サービス区分
  # 6:事業者ID              7:事業所名                  8:サービスコード      9:サービスコード名 10:単位
  # 11:割引率               12:単位（割引後）回数       13:単位合計           14:種類限度額超    15:種類限度額内
  # 16:基準内限度額対象単位 17:基準外対象単位           18:地域単価           19:請求額          20:給付率
  # 21:介護保険給付額       22:個人負担額（保険対象内） 23:個人負担額（全額） 24:明細コード      25:限度額対象フラグ
  # 26:確定フラグ
else
  exit 0
fi

# 絞込みがあったら絞り込む
# 対象年月を分ける
taisho_nengetsu=$(mdate ${seikyu_nengetsu}/-1)
TAISHO_NEN=$(echo $taisho_nengetsu | awk '{print substr($1,1,4)}')
TAISHO_TSUKI=$(echo $taisho_nengetsu | awk '{print substr($1,5,2)}')

if [ "${seikyu_shurui}" = "all" ];then
  cat $tmp-seikyu_data_base
elif [ "${seikyu_shurui}" = "tujyo" ];then
  cat $tmp-seikyu_data_base                                       |
  # 1:No.                   2:利用者ID                  3:利用年              4:利用月           5:事業者サービス区分
  # 6:事業者ID              7:事業所名                  8:サービスコード      9:サービスコード名 10:単位
  # 11:割引率               12:単位（割引後）回数       13:単位合計           14:種類限度額超    15:種類限度額内
  # 16:基準内限度額対象単位 17:基準外対象単位           18:地域単価           19:請求額          20:給付率
  # 21:介護保険給付額       22:個人負担額（保険対象内） 23:個人負担額（全額） 24:明細コード      25:限度額対象フラグ
  # 26:確定フラグ
  awk '$3=="'${TAISHO_NEN}'" && $4=="'${TAISHO_TSUKI}'"'
elif [ "${seikyu_shurui}" = "okure" ];then
  cat $tmp-seikyu_data_base                                       |
  # 1:No.                   2:利用者ID                  3:利用年              4:利用月           5:事業者サービス区分
  # 6:事業者ID              7:事業所名                  8:サービスコード      9:サービスコード名 10:単位
  # 11:割引率               12:単位（割引後）回数       13:単位合計           14:種類限度額超    15:種類限度額内
  # 16:基準内限度額対象単位 17:基準外対象単位           18:地域単価           19:請求額          20:給付率
  # 21:介護保険給付額       22:個人負担額（保険対象内） 23:個人負担額（全額） 24:明細コード      25:限度額対象フラグ
  # 26:確定フラグ
  awk '$27=="999999999"'
elif [ "${seikyu_shurui}" = "saiseikyu" ];then
  cat $tmp-seikyu_data_base                                       |
  # 1:No.                   2:利用者ID                  3:利用年              4:利用月           5:事業者サービス区分
  # 6:事業者ID              7:事業所名                  8:サービスコード      9:サービスコード名 10:単位
  # 11:割引率               12:単位（割引後）回数       13:単位合計           14:種類限度額超    15:種類限度額内
  # 16:基準内限度額対象単位 17:基準外対象単位           18:地域単価           19:請求額          20:給付率
  # 21:介護保険給付額       22:個人負担額（保険対象内） 23:個人負担額（全額） 24:明細コード      25:限度額対象フラグ
  # 26:確定フラグ
  awk '$4!="'${TAISHO_TSUKI}'" && $27!="999999999"'
else
  cat $tmp-seikyu_data_base
fi                                                                > $tmp-seikyu_base_second

if [ "${kakutei_flag}" = "all" ];then
  cat $tmp-seikyu_base_second
elif [ "${kakutei_flag}" = "mikakutei" ];then
  cat $tmp-seikyu_base_second                                     |
  # 1:No.                   2:利用者ID                  3:利用年              4:利用月           5:事業者サービス区分
  # 6:事業者ID              7:事業所名                  8:サービスコード      9:サービスコード名 10:単位
  # 11:割引率               12:単位（割引後）回数       13:単位合計           14:種類限度額超    15:種類限度額内
  # 16:基準内限度額対象単位 17:基準外対象単位           18:地域単価           19:請求額          20:給付率
  # 21:介護保険給付額       22:個人負担額（保険対象内） 23:個人負担額（全額） 24:明細コード      25:限度額対象フラグ
  # 26:確定フラグ
  awk '$27=="000000000" || $27=="999999999"'
elif [ "${kakutei_flag}" = "kakutei" ];then
  cat $tmp-seikyu_base_second                                     |
  # 1:No.                   2:利用者ID                  3:利用年              4:利用月           5:事業者サービス区分
  # 6:事業者ID              7:事業所名                  8:サービスコード      9:サービスコード名 10:単位
  # 11:割引率               12:単位（割引後）回数       13:単位合計           14:種類限度額超    15:種類限度額内
  # 16:基準内限度額対象単位 17:基準外対象単位           18:地域単価           19:請求額          20:給付率
  # 21:介護保険給付額       22:個人負担額（保険対象内） 23:個人負担額（全額） 24:明細コード      25:限度額対象フラグ
  # 26:確定フラグ
  awk '$27!="000000000" && $27!="999999999"'
else
  cat $tmp-seikyu_base_second
fi                                                                |
awk '{print $1,$2,$3$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27}' > $tmp-seikyu_data
# 1:No.                       2:利用者ID            3:利用年月         4:事業者サービス区分 5:事業者ID
# 6:事業所名                  7:サービスコード      8:サービスコード名 9:単位               10:割引率
# 11:単位（割引後）回数       12:単位合計           13:種類限度額超    14:種類限度額内      15:基準内限度額対象単位
# 16:基準外対象単位           17:地域単価           18:請求額          19:給付率            20:介護保険給付額
# 21:個人負担額（保険対象内） 22:個人負担額（全額） 23:明細コード      24:限度額対象フラグ  25:確定フラグ

# 対象者
self 2 ${tmp}-seikyu_data                                          |
# 1:No.                       2:利用者ID            3:利用年月         4:事業者サービス区分 5:事業者ID
# 6:事業所名                  7:サービスコード      8:サービスコード名 9:単位               10:割引率
# 11:単位（割引後）回数       12:単位合計           13:種類限度額超    14:種類限度額内      15:基準内限度額対象単位
# 16:基準外対象単位           17:地域単価           18:請求額          19:給付率            20:介護保険給付額
# 21:個人負担額（保険対象内） 22:個人負担額（全額） 23:明細コード      24:限度額対象フラグ  25:確定フラグ
LANG=C sort -u -k1,1n                                              > ${tmp}-riyosha
# 1:利用者ID

# 年月リストを作って年月ごとに処理する
self 3 $tmp-seikyu_data                                              |
# 1:No.                       2:利用者ID            3:利用年月         4:事業者サービス区分 5:事業者ID
# 6:事業所名                  7:サービスコード      8:サービスコード名 9:単位               10:割引率
# 11:単位（割引後）回数       12:単位合計           13:種類限度額超    14:種類限度額内      15:基準内限度額対象単位
# 16:基準外対象単位           17:地域単価           18:請求額          19:給付率            20:介護保険給付額
# 21:個人負担額（保険対象内） 22:個人負担額（全額） 23:明細コード      24:限度額対象フラグ  25:確定フラグ
LANG=C sort -u -k1,1n                                                > $tmp-nengetsu_list

for month in $(yarr $tmp-nengetsu_list);do

  # システム利用の施設にいる人かどうかの判定
  startday=$(echo $month | awk '{print $1"01"}')
  endday="$(mdate ${month}m | tarr | tail -n1)"

  for member in $(yarr $tmp-riyosha);do
    awk '$9!=9' ${riyosha_dir}/SHISETSU_RIYOUSHA_STATUS                 |
    # 1:施設ID   2:建屋   3:フロア 4:ユニット 5:居室
    # 6:入居者ID 7:入居日 8:退去日
    LANG=C sort -k6,6n                                                  |
    join0 key=6 <(echo $member)                                         |
    # 1:施設ID   2:建屋   3:フロア 4:ユニット 5:居室
    # 6:入居者ID 7:入居日 8:退去日
    awk '$7<="'${endday}'" && $8>="'${startday}'"'                      |
    tail -n1                                                            |
    self 6 5 1                                                          > $tmp-shisetsu_riyosha_check
    # 1:入居者ID 2:居室 3:施設ID

    if [ "$(gyo $tmp-shisetsu_riyosha_check)" = 0 ];then
      echo "$member 施設外 ---"
      # 1:利用者ID 2:施設名 3:居室
    else
      cat $tmp-shisetsu_riyosha_check                                    |
      LANG=C sort -k3,3n                                                 |
      join1 key=3 ${master_tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON       |
      self 1 2 3 4                                                       |
      # 1:利用者ID 2:居室 3:施設ID 4:施設名
      self 1 4 2
      # 1:利用者ID 2:施設名 3:居室
    fi                                                                   > ${tmp}-kyoshitsu_room

    # 介護度
    cat ${riyosha_dir}/RIYOUSHA_KAIGOHOKEN                             |
    # 1:利用者ID            2:介護保険ID          3:介護度            4:保険者番号                                        5:保険者名
    # 6:被保険者番号        7:性別                8:生年月日和暦元号  9:和暦誕生年                                        10:和暦誕生月
    # 11:和暦誕生日         12:郵便番号           13:住所             14:認定年月和暦元号                                 15:認定和暦年
    # 16:認定和暦月         17:認定和暦日         18:認定西暦         19:有効期間from和暦元号                             20:有効期間from和暦年
    # 21:有効期間from和暦月 22:有効期間from和暦日 23:有効期間from西暦 24:有効期間to和暦元号                               25:有効期間to和暦年
    # 26:有効期間to和暦月   27:有効期間to和暦日   28:有効期間to西暦   29:居宅介護支援者又は介護予防事業者及びその事業者名 30:認定審査会の意見及びサービスの種類指定
    # 31:備考               32:利用者負担率
    join0 key=1 <(echo $member)                                        |
    awk '$23<="'${endday}'" && $28>="'${startday}'"'                   |
    LANG=C sort -k23,23n                                               |
    tail -n1                                                           > ${tmp}-kaigohokenjoho
    self 1 3 ${tmp}-kaigohokenjoho                                     |
    # 1:利用者ID            2:介護保険ID          3:介護度            4:保険者番号                                        5:保険者名
    # 6:被保険者番号        7:性別                8:生年月日和暦元号  9:和暦誕生年                                        10:和暦誕生月
    # 11:和暦誕生日         12:郵便番号           13:住所             14:認定年月和暦元号                                 15:認定和暦年
    # 16:認定和暦月         17:認定和暦日         18:認定西暦         19:有効期間from和暦元号                             20:有効期間from和暦年
    # 21:有効期間from和暦月 22:有効期間from和暦日 23:有効期間from西暦 24:有効期間to和暦元号                               25:有効期間to和暦年
    # 26:有効期間to和暦月   27:有効期間to和暦日   28:有効期間to西暦   29:居宅介護支援者又は介護予防事業者及びその事業者名 30:認定審査会の意見及びサービスの種類指定
    # 31:備考               32:利用者負担率
    awk '{if($2=="1"){$2="要支援1"}else if($2=="2"){$2="要支援2"}else if($2=="3"){$2="要介護1"}else if($2=="4"){$2="要介護2"}else if($2=="5"){$2="要介護3"}else if($2=="6"){$2="要介護4"}else if($2=="7"){$2="要介護5"};print $0}'            > ${tmp}-riyosha_kaigodo
    # 利用者ID 2:介護度

    # フラグ情報を取得
    # 認知症加算つけるかどうか
    awk '$1=="'${member}'" && $12!=9' ${riyosha_dir}/RIYOUSHA_NINCHISHOU_KASAN   |
    awk '$6<="'${month}'" && $11>="'${month}'"'                                  > $tmp-ninchi_check
    if [ "$(gyo $tmp-ninchi_check)" -ne 0 ];then
      NINNIN="1"
    else
      NINNIN="0"
    fi
    

    awk '$2=="'${member}'"' ${tmp}-seikyu_data                         |
    # 1:No.                       2:利用者ID            3:利用年月         4:事業者サービス区分 5:事業者ID
    # 6:事業所名                  7:サービスコード      8:サービスコード名 9:単位               10:割引率
    # 11:単位（割引後）回数       12:単位合計           13:種類限度額超    14:種類限度額内      15:基準内限度額対象単位
    # 16:基準外対象単位           17:地域単価           18:請求額          19:給付率            20:介護保険給付額
    # 21:個人負担額（保険対象内） 22:個人負担額（全額） 23:明細コード      24:限度額対象フラグ  25:確定フラグ
    awk '$3=="'${month}'"'                                             |
    self 2 26                                                          |
    LANG=C sort -u -k1,1n                                              > $tmp-kakutei_flag

    awk '{print $1,substr($2,1,1),substr($2,2,1),substr($2,3,1),substr($2,4,1),substr($2,5,1),substr($2,6,1),substr($2,7,1),substr($2,8,1),substr($2,9,1)}' $tmp-kakutei_flag                   |
    awk '{if($7==0){$7="'${NINNIN}'"};print}'                      > $tmp-kakutei

    echo $member                                                   |
    join1 key=1 ${riyosha_dir}/RIYOUSHA_KIHON                      |
    self 1 2 3                                                     > ${tmp}-riyosha_name
    # 1:利用者ID 2:利用者氏名 3:カナ

    # 給付管理表作成区分
    awk '$1=="'${member}'"' ${pompa_dir}/KOKUHO/${shisetsu}/${seikyu_nengetsu}/${month}.KYUFUKANRI |
    self 1 7                 > ${tmp}-kubun_flag
    if [ "$(gyo ${tmp}-kubun_flag)" -ne 0 ];then
      cat $tmp-kubun_flag
    else
      echo "${member}" "1"
    fi                                                |
    awk '{if($2==1){print $1,"selected","@","@"}else if($2==2){print $1,"@,","selected","@"}else if($2==3){print $1,"@","@","selected"}else{print $1,"selected","@","@"}}' |
    LANG=C sort -u           > $tmp-sakusei_kubun

#   合体して表示するデータを作る
    loopj num=1 ${tmp}-kyoshitsu_room ${tmp}-riyosha_name ${tmp}-riyosha_kaigodo $tmp-kakutei $tmp-sakusei_kubun |
    # 1:利用者ID  2:施設名         3:居室     4:利用者氏名 5:カナ
    # 6:介護度    7:特定事業所加算 8:初回加算 9:運営減算   10:退院加算
    # 11:入院加算 12:認知          13:独居    14:小規模    15:確定フラグ
    # 16:給付管理作成区分 17:給付管理作成区分 18:給付管理作成区分
    awk '{print "'${month}'",$0}'                                                             |
    # 1:年月        2:利用者ID  3:施設名         4:居室     5:利用者氏名
    # 6:カナ        7:介護度    8:特定事業所加算 9:初回加算 10:運営減算
    # 11:退院加算   12:入院加算 13:認知          14:独居    15:小規模
    # 16:確定フラグ 17:給付管理作成区分 18:給付管理作成区分 19:給付管理作成区分
    self 2 1 3/NF
    done
done                                                               |

# ソート
LANG=C sort -k2,2r -k3,3 -k4,4 -k6,6                                           |
delf 6                                                             > $tmp-search


# 画面表示
cat ${tmp}-search

rm -f ${tmp}-*
exit 0

