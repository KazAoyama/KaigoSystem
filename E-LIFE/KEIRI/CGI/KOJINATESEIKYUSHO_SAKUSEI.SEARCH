#!/bin/bash
#
# KOJINATESEIKYUSHO_SAKUSEI.CGI : 施設請求サーチ
#
# Usage : KOJINATESEIKYUSHO_SAKUSEI.CGI namefile
#
# Written by S.Otsubo

# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null
source /home/hands/E-LIFE/KEIRI/CGI/KOJINATESEIKYUSHO_SAKUSEI.INI &> /dev/null

# ログ
[ ! -e /home/hands/E-LIFE/KEIRI/TRACE_LOG/${today} ] && mkdir /home/hands/E-LIFE/KEIRI/TRACE_LOG/${today}
exec 2> /home/hands/E-LIFE/KEIRI/TRACE_LOG/${today}/LOG.$(basename ${0}).${HOSTNAME}.${current_time}; set -xv

#ゴミtmpの消去
rm -f $tmp-*

# ---------------------------------------
# 変数

namefile=${1}
work="/home/hands/E-LIFE/KEIRI/WORK"
cp ${namefile} ${work}/seikyu_name
eval $(name-source ${namefile})

# mode
if [ -n "${MODE}" -a "${MODE}" != "_" ];then
  :
else
  MODE="init"
fi

# 処理年月
syori_nengetsu="${year}${month}"
# ---------------------------------------

# ---------------------------------------
# テーブル用意

# 請求ステータス
# ${home_tbl_dir}/CONFIG/SEIKYU_STATUS

# なまえ
# ${riyosha_dir}/RIYOUSHA_MASTER
awk '$5!="9"' - ${riyosha_dir}/RIYOUSHA_MASTER |
self 1/2                                       |
LANG=C sort                                    > ${tmp}-RIYOUSHA_MASTER

awk '$3!="9"' ${home_tbl_dir}/KEIYAKU_MASTER/KEIYAKU_NAME |
# 1:契約ID 2:契約名 3:削除フラグ 4:更新時間 5:更新者
self 1/2                                                  |
# 1:契約ID 2:契約名
LANG=C sort                                               > ${tmp}-KEIYAKU_NAME
# ---------------------------------------

# ---------------------------------------
# 選択した年月が当月確定しているかどうか

LANG=C sort -k1,1 -k5,5 ${seikyu_dir}/SEIKYU_KAKUTEI/SEIKYU_KAKUTEI.${shisetsu} |
awk '$4!="9"' -                        |
# 1:施設ID 2:確定年月 3:確定ステータス 4:削除フラグ 5:更新日
# 6:更新者
cjoin0 key=2 <(echo "${year}${month}") |
getlast 1 1                            > ${tmp}-kakutei_file
if [ -s ${tmp}-kakutei_file ] ; then
  kakutei_status="$(self 3 ${tmp}-kakutei_file)"
  case "${kakutei_status}" in
    1 )
      is_kakutei="false"
    ;;
    2 )
      is_kakutei="true"
    ;;
  esac
else
  is_kakutei="false"
fi
# ---------------------------------------

# ---------------------------------------
# サーチ

# 繰越か通常かで参照するステータスが違う
# -
# 繰越で表示したい
#   有効なもの34
# -
# 請求で表示したい
#   選択した月が当月確定している
#     確定年月が選択した月のものをとってくる
# 
#   選択した月が当月確定していない
#     選択した年月のステータス125
#     年月関係なくステータス4(請求対象選択済み(繰越))
# -

# ${seikyu_dir}/${hensu_shisetsu}/HEAD/SEIKYU_HEAD
# -
# 1:処理月            2:入居者ID          3:請求ステータス  4:施設ID         5:建屋ID
# 6:フロア            7:ユニットID        8:居室番号        9:支払合算相手ID 10:明細ファイル名
# 11:請求書設定フラグ 12:仮請求書出力時間 13:請求書出力時間 14:請求確定月    15:領収書印刷時間
# 16:契約種類ID       17:予備             18:予備           19:予備          20:予備
# 21:予備             22:予備             23:予備           24:削除フラグ    25:更新時間
# 26:更新者

# -------------------
# ヘッダの検索

# 建屋の絞込みがあるかないか
if [ "${tateya_select}" != "99" ];then
  awk '$(NF-2)!=9&&$2=="'${tateya_select}'"{print $5}' ${riyosha_dir}/SHISETSU_RIYOUSHA_STATUS |
  LANG=C sort -u > $tmp-tateya_room
else
  :
fi

case "${MODE}" in
  init )
    echo "@"
  ;;
  # -----------------------------------
  # 繰越ぶん
  kurikoshi_init | seikyu_koushin_kurikoshi )
    LANG=C sort -k1,2 -k25,25 ${seikyu_dir}/${shisetsu}/HEAD/SEIKYU_HEAD |
    getlast 1 2                        |
    awk '$24!="9"' -                   |
    cjoin0 key=3 <(seq 3 4 | tarr) -
  ;;
  # -----------------------------------
  # -----------------------------------
  # 通常処理ぶん
  search | keisan | seikyu_koushin | tougetsukakutei | karikakutei | karikakutei_kaijyo | kakutei_kaijyo )
    case "${is_kakutei}" in
      # ---------------------------
      # 確定しているので請求確定年月でとってくる
      true )
        LANG=C sort -k1,2 -k25,25 ${seikyu_dir}/${shisetsu}/HEAD/SEIKYU_HEAD |
        getlast 1 2                   |
        awk '$24!="9"'                |
        cjoin0 key=14 <(echo "${syori_nengetsu}") -
      ;;
      # ---------------------------
      # ---------------------------
      # 確定していないので、下記条件で
      #   選択した年月のステータス12567
      #   年月関係なくステータス4(請求対象選択済み(繰越))
      false )
        # ステータスが4(請求対象選択済(繰越)は今月の処理ではないので、年月を指定せずに4だけ抜いてくる)
        LANG=C sort -k1,2 -k25,25 ${seikyu_dir}/${shisetsu}/HEAD/SEIKYU_HEAD |
        getlast 1 2                  |
        awk '$24!="9"'               |
        cjoin0 key=3 <(echo "4") -   > ${tmp}-kurikoshibun
    
        # 処理月分の回収
        LANG=C sort -k1,2 -k25,25 ${seikyu_dir}/${shisetsu}/HEAD/SEIKYU_HEAD |
        getlast 1 2                                       |
        awk '$24!="9"' -                                  |
        cjoin0 key=1 <(echo "${syori_nengetsu}") -        |
        cjoin0 key=3 <(seq 1 7 | grep -v 3 | grep -v 4) - |
        cat - ${tmp}-kurikoshibun
      ;;
      # ---------------------------
    esac
  ;;
  # -----------------------------------
esac                          |
self 1/14 16 25/26            |
# 1:処理月            2:入居者ID          3:請求ステータス  4:施設ID         5:建屋ID
# 6:フロア            7:ユニットID        8:居室番号        9:支払合算相手ID 10:明細ファイル名
# 11:請求書設定フラグ 12:仮請求書出力時間 13:請求書出力時間 14:請求確定月    15:契約種類ID
# 16:更新時間         17:更新者
if [ "${tateya_select}" != "99" ];then
  cjoin0 key=8 $tmp-tateya_room
else
  cat -
fi                            |
self 10.22.8 1/NF             |
# 1:請求先          2:処理月            3:入居者ID          4:請求ステータス  5:施設ID
# 6:建屋ID          7:フロア            8:ユニットID        9:居室番号        10:支払合算相手ID
# 11:明細ファイル名 12:請求書設定フラグ 13:仮請求書出力時間 14:請求書出力時間 15:請求確定月
# 16:契約種類ID     17:更新時間         18:更新者
LANG=C sort                   > ${tmp}-head_file
# -------------------
cp $tmp-head_file ${work}/head_file


# -------------------
# 明細ファイル全体合計行を拾う

self 11 ${tmp}-head_file           |
# 1:明細ファイル名(SEIKYU_MEISAI.${処理月}.${請求先})
LANG=C sort -u                     |
awk '{print $1,substr($1,15,6)}' - |
# 1:明細ファイル名 2:処理月
while read File Nengetsu ; do
  r_id="$(echo "${File}" | tr "." " " | self NF)"
  # 全体合計行は、行分類フラグ30
  cjoin0 key=3 <(echo "30") ${seikyu_dir}/${shisetsu}/MEISAI/${Nengetsu}/${File} |
  awk '$25!="9"' -             |
  # 1:処理月    2:入居者ID   3:行分類フラグ 4:契約ID          5:項目ID
  # 6:契約枝番  7:請求年月日 8:非課税フラグ 9:金額税抜き      10:金額税込み
  # 11:税額     12:内訳1     13:内訳2       14:特別処理フラグ 15:予備
  # 16:予備     17:予備      18:予備        19:予備           20:予備
  # 21:予備     22:予備      23:予備        24:予備           25:削除フラグ
  # 26:更新時間 27:更新者
  self 1/2 9/11 |
  awk '{$2="'${r_id}'";
        print}'
done > ${tmp}-meisai
# 1:処理月 2:入居者ID 3:金額税抜き 4:金額税込み 5:税額

# ${tmp}-meisaiが完全に空だと落ちるので@埋めファイル作成
[ ! -s ${tmp}-meisai ] && echo "@ @ @ @ @" > ${tmp}-meisai
# -------------------


# -------------------
# ヘッダ明細を結合する

LANG=C sort -k2,3 ${tmp}-head_file |
join2 +"0" key=2/3 ${tmp}-meisai - |
# 1:請求先            2:処理月          3:入居者ID        4:金額税抜き      5:金額税込み
# 6:税額              7:請求ステータス  8:施設ID          9:建屋ID          10:フロア
# 11:ユニットID       12:居室番号       13:支払合算相手ID 14:明細ファイル名 15:請求書設定フラグ
# 16:仮請求書出力時間 17:請求書出力時間 18:請求確定月     19:契約種類ID     20:更新時間
# 21:更新者
# -
# なまえつける
LANG=C sort -k3,3                                         |
join2 +"利用者マスタなし" key=3 ${tmp}-RIYOUSHA_MASTER -  |
# 1:請求先            2:処理月            3:入居者ID        4:入居者名        5:金額税抜き
# 6:金額税込み        7:税額              8:請求ステータス  9:施設ID          10:建屋ID
# 11:フロア           12:ユニットID       13:居室番号       14:支払合算相手ID 15:明細ファイル名
# 16:請求書設定フラグ 17:仮請求書出力時間 18:請求書出力時間 19:請求確定月     20:契約種類ID
# 21:更新時間         22:更新者
LANG=C sort -k14,14                                       |
join2 +"利用者マスタなし" key=14 ${tmp}-RIYOUSHA_MASTER - |
# 1:請求先          2:処理月            3:入居者ID          4:入居者名        5:金額税抜き
# 6:金額税込み      7:税額              8:請求ステータス    9:施設ID          10:建屋ID
# 11:フロア         12:ユニットID       13:居室番号         14:支払合算相手ID 15:支払合算相手名
# 16:明細ファイル名 17:請求書設定フラグ 18:仮請求書出力時間 19:請求書出力時間 20:請求確定月
# 21:契約種類ID     22:更新時間         23:更新者
LANG=C sort -k21,21                                       |
join2 +"_" key=21 ${tmp}-KEIYAKU_NAME                     |
# 1:請求先          2:処理月            3:入居者ID          4:入居者名        5:金額税抜き
# 6:金額税込み      7:税額              8:請求ステータス    9:施設ID          10:建屋ID
# 11:フロア         12:ユニットID       13:居室番号         14:支払合算相手ID 15:支払合算相手名
# 16:明細ファイル名 17:請求書設定フラグ 18:仮請求書出力時間 19:請求書出力時間 20:請求確定月
# 21:契約種類ID     22:契約名           23:更新時間         24:更新者

# MODEによって表示したい項目がちょっと違う
case "${MODE}" in
  init )
    :
  ;;
  # ------------------------------------------
  # 繰越
  kurikoshi_init | seikyu_koushin_kurikoshi )
    # 備考欄メッセージ
    awk '{if($14!="_")
            {bikou=$15"様と合算予定です";}
          else
            {bikou="_";};
          print $0,flg,bikou}' -                        |
    # 1:請求先          2:処理月            3:入居者ID          4:入居者名        5:金額税抜き
    # 6:金額税込み      7:税額              8:請求ステータス    9:施設ID          10:建屋ID
    # 11:フロア         12:ユニットID       13:居室番号         14:支払合算相手ID 15:支払合算相手名
    # 16:明細ファイル名 17:請求書設定フラグ 18:仮請求書出力時間 19:請求書出力時間 20:請求確定月
    # 21:契約種類ID     22:契約名           23:更新時間         24:更新者         25:備考

    self 1  2  13 3  8  \
         13 3  4  2  8  \
         6  23 25 21 22 |
    # 1:請求先      2:処理月    3:居室番号 4:入居者ID    5:請求ステータス
    # 6:居室番号    7:入居者ID  8:入居者名 9:処理月      10:請求ステータス
    # 11:金額税込み 12:更新時間 13:備考    14:契約種類ID 15:契約名
    # -
    # 1-5:キー
    # -
    LANG=C sort -k10,10                                 |
    join1 key=10 ${home_tbl_dir}/CONFIG/SEIKYU_STATUS - |
    # 1:請求先            2:処理月      3:居室番号  4:入居者ID 5:請求ステータス
    # 6:居室番号          7:入居者ID    8:入居者名  9:処理月   10:請求ステータス
    # 11:請求ステータス名 12:金額税込み 13:更新時間 14:備考    15:契約種類ID
    # 16:契約名
    # -
    # 請求対象のチェック項目を設定する(ステータス4と5がチェック入れる対象)
    awk '{if($5=="4" || $5=="5")
            {flg="checked"}
          else
            {flg="_"};
          print $0,flg}' -                              |
    # 1:請求先            2:処理月            3:居室番号  4:入居者ID 5:請求ステータス
    # 6:居室番号          7:入居者ID          8:入居者名  9:処理月   10:請求ステータス
    # 11:請求ステータス名 12:金額税込み       13:更新時間 14:備考    15:契約種類ID
    # 16:契約名           17:請求対象チェック

    self 1/5 17 6/13 14 1 15/16                         |
    # 1:請求先           2:処理月            3:居室番号    4:入居者ID  5:請求ステータス
    # 6:請求対象チェック 7:居室番号          8:入居者ID    9:入居者名  10:処理月
    # 11:請求ステータス  12:請求ステータス名 13:金額税込み 14:更新時間 15:備考
    # 16:請求先          17:契約種類ID       18:契約名

    # キーでソート後キー項目を除き、見た目を整える
    LANG=C sort -k3,5 -k2,2                             |
    delf 1/5                                            |
    # 1:請求対象チェック 2:居室番号         3:入居者ID   4:入居者名 5:処理月
    # 6:請求ステータス   7:請求ステータス名 8:金額税込み 9:更新時間 10:備考
    # 11:請求先          12:契約種類ID      13:契約名

    awk '{if($NF%2==0)
            {color="white"}
          else
            {color="white"};
          print color,$0}' -                            |
    # 1:行の色 2:請求対象チェック 3:居室番号         4:入居者ID   5:入居者名
    # 6:処理月 7:請求ステータス   8:請求ステータス名 9:金額税込み 10:更新時間
    # 11:備考  12:請求先          13:契約種類ID      14:契約名

    awk '{if($4==$12)
             {$12="0"}
          else
             {$12="1"};
          print}' -                                     |
    # 1:行の色 2:請求対象チェック 3:居室番号         4:入居者ID   5:入居者名
    # 6:処理月 7:請求ステータス   8:請求ステータス名 9:金額税込み 10:更新時間
    # 11:備考  12:請求先          13:契約種類ID      14:契約名

    awk '{$7=$7":"$8;
          $10=substr($10,1,4)"/"substr($10,5,2)"/"substr($10,7,2)"_"substr($10,9,2)":"substr($10,11,2)":"substr($10,13,2);
          print}' -                                     |
    # 備考がアンスコのみなら@に変換
    awk '{if($11=="_")
            {$11="@"};
          print}' -                                     |
    # 1:行の色 2:請求対象チェック 3:居室番号         4:入居者ID   5:入居者名
    # 6:処理月 7:請求ステータス   8:請求ステータス名 9:金額税込み 10:更新時間
    # 11:備考  12:請求先          13:契約種類ID      14:契約名
    comma 9                                             |

    # 契約種類IDによってセルの色を指定
    awk '{if($13=="001")
            {$13="taiken"}
          else if($13="002")
            {$13="short"}
          else if($13~/^00[3-7]$/)
            {$13="nyukyo"}
          else
            {$13="_"};
          print}'
  ;;
  # ------------------------------------------

  # ------------------------------------------
  # 請求側
  search | keisan | seikyu_koushin | tougetsukakutei | karikakutei | karikakutei_kaijyo | kakutei_kaijyo )
    # 請求対象選択済み(繰越)ステータスの請求対象disabledと印刷disabled設定
    # 印刷disabledやめました
    awk '{if($8=="4")
            {flg1="_";
             flg2="disabled";}
          else
            {flg1="_";
             flg2="_"};
          print $0,flg1,flg2}' -                   |
    # 1:請求先                2:処理月            3:入居者ID          4:入居者名        5:金額税抜き
    # 6:金額税込み            7:税額              8:請求ステータス    9:施設ID          10:建屋ID
    # 11:フロア               12:ユニットID       13:居室番号         14:支払合算相手ID 15:支払合算相手名
    # 16:明細ファイル名       17:請求書設定フラグ 18:仮請求書出力時間 19:請求書出力時間 20:請求確定月
    # 21:契約種類ID           22:契約名           23:更新時間         24:更新者         25:印刷disabled設定
    # 26:請求対象選択disabled
    
    # 支払合算相手がいる場合の請求対象disabledと印刷disabled設定
    #awk '{if($14!="_")
    #        {$26="disabled";}
    #      print}' - |
    
    # もしステータスが繰越対象選択済みの場合、今月請求しないので印刷をdisabledする
    awk '{if($8=="2")
            {$25="disabled";};
          print}' - |
    
    # 備考欄メッセージ
    # (繰越ぶん設定後、合算分設定。もし繰越かつ合算ならば合算のメッセージを表示)
    awk '{if($8=="4")
            {bikou=$4"様"'${year}'"/"'${month}'"分と合算予定です"}
          else
            {bikou="_"};
          print $0,bikou}' - |
    # 1:請求先                2:処理月            3:入居者ID          4:入居者名        5:金額税抜き
    # 6:金額税込み            7:税額              8:請求ステータス    9:施設ID          10:建屋ID
    # 11:フロア               12:ユニットID       13:居室番号         14:支払合算相手ID 15:支払合算相手名
    # 16:明細ファイル名       17:請求書設定フラグ 18:仮請求書出力時間 19:請求書出力時間 20:請求確定月
    # 21:契約種類ID           22:契約名           23:更新時間         24:更新者         25:印刷disabled設定
    # 26:請求対象選択disabled 27:備考

    awk '{if($14!="_")
            {bikou=$15"様"'${year}'"/"'${month}'"分と合算予定です";}
          else
            {bikou=$27};
          $27=bikou;
          print $0}' -  |

    self 1  2  13 3  8  \
         13 3  4  2  8  \
         6  23 27 25 26 \
         21 22          |
    # 1:請求先      2:処理月    3:居室番号 4:入居者ID          5:請求ステータス
    # 6:居室番号    7:入居者ID  8:入居者名 9:処理月            10:請求ステータス
    # 11:金額税込み 12:更新時間 13:備考    14:印刷disabled設定 15:請求対象選択disabled
    # 16:契約種類ID 17:契約名
    LANG=C sort -k10,10                           |
    join1 key=10 ${home_tbl_dir}/CONFIG/SEIKYU_STATUS - |
    # 1:請求先                2:処理月      3:居室番号  4:入居者ID 5:請求ステータス
    # 6:居室番号              7:入居者ID    8:入居者名  9:処理月   10:請求ステータス
    # 11:請求ステータス名     12:金額税込み 13:更新時間 14:備考    15:印刷disabled設定
    # 16:請求対象選択disabled 17:契約種類ID 18:契約名
    self 1/5 15/16 6/14 1 17/18                   |
    # 1:請求先           2:処理月               3:居室番号          4:入居者ID    5:請求ステータス
    # 6:印刷disabled設定 7:請求対象選択disabled 8:居室番号          9:入居者ID    10:入居者名
    # 11:処理月          12:請求ステータス      13:請求ステータス名 14:金額税込み 15:更新時間
    # 16:備考            17:請求先              18:契約種類ID       19:契約名
    # -
    # キーでソート後見た目を整える
    LANG=C sort -k3,5 -k2,2                       |
    delf 1/5                                      |
    # 1:印刷disabled設定 2:請求対象選択disabled 3:居室番号         4:入居者ID   5:入居者名
    # 6:処理月           7:請求ステータス       8:請求ステータス名 9:金額税込み 10:更新時間
    # 11:備考            12:請求先              13:契約種類ID      14:契約名
    awk '{if($7=="4" || $7=="5" || $7=="6")
            {flg="checked";}
          else
            {flg="_"};
          print flg,$0}' -                        |
    # 1:請求対象選択チェック 2:印刷disabled設定 3:請求対象選択disabled 4:居室番号         5:入居者ID
    # 6:入居者名             7:処理月           8:請求ステータス       9:請求ステータス名 10:金額税込み
    # 11:更新時間            12:備考            13:請求先              14:契約種類ID      15:契約名

    #awk '{if($NF%2==0)
    awk '{if($8=="2")
            {color="orange"}
          else
            {color="white"};
          print color,$0}' -                      |
    # 1:行の色      2:請求対象選択チェック 3:印刷disabled設定 4:請求対象選択disabled 5:居室番号
    # 6:入居者ID    7:入居者名             8:処理月           9:請求ステータス       10:請求ステータス名
    # 11:金額税込み 12:更新時間            13:備考            14:請求先              15:契約種類ID
    # 16:契約名
    awk '{if($6==$14)
            {$14="0"}
          else
            {$14="1"};
          print}' -                               |
    # 1:行の色      2:請求対象選択チェック 3:印刷disabled設定 4:請求対象選択disabled 5:居室番号
    # 6:入居者ID    7:入居者名             8:処理月           9:請求ステータス       10:請求ステータス名
    # 11:金額税込み 12:更新時間            13:備考            14:合算フラグ              15:契約種類ID
    # 16:契約名
    awk '{$9=$9":"$10;
          $12=substr($12,1,4)"/"substr($12,5,2)"/"substr($12,7,2)"_"substr($12,9,2)":"substr($12,11,2)":"substr($12,13,2);
          print}' -                               |
    # 備考のアンスコを＠に変換
    awk '{if($13=="_")
            {$13="@"};
          print}' -                               |
    # disabled時は表示しない
    awk '{if($4!="_")
            {flg="display:none;"}
          else
            {flg="_"};
          print $0,flg}' -                        |
    awk '{if($3!="_")
            {flg="display:none;"}
          else
            {flg="_"};
          print $0,flg}' -                        > $tmp-search_meisai
    # 1:行の色      2:請求対象選択チェック 3:印刷disabled設定 4:請求対象選択disabled 5:居室番号
    # 6:入居者ID    7:入居者名             8:処理月           9:請求ステータス       10:請求ステータス名
    # 11:金額税込み 12:更新時間            13:備考            14:合算フラグ          15:契約種類ID
    # 16:契約名     17:請求対象display     18:印刷display

    # 合計行が追加になった
    awk '{$9=substr($9,1,1);print}' $tmp-search_meisai |
tee ${work}/kanma |
    LANG=C sort -k9,9                             |
    join0 key=9 <(echo "1 4 5 6 7" | tarr)          |
    sm2 0 0 11 11                                 |
    awk '{print "lightblue","_","disabled","disabled","@","@","請求対象合計","@","@","@",$1,"@","@","0","_","_","display:none;","_"}' |
    cat $tmp-search_meisai -                      |

    # 契約種類IDによってセルの色を指定
    awk '{if($15=="001")
            {$15="taiken"}
          else if($15=="002")
            {$15="short"}
          else if($15~/^00[3-7]$/)
            {$15="nyukyo"}
          else
            {$15="_"};
          print}'                                 |
    # 1:行の色      2:請求対象選択チェック 3:印刷disabled設定 4:請求対象選択disabled 5:居室番号
    # 6:入居者ID    7:入居者名             8:処理月           9:請求ステータス       10:請求ステータス名
    # 11:金額税込み 12:更新時間            13:備考            14:合算フラグ          15:class名
    # 16:契約名     17:請求対象display     18:印刷display

    # FBの対応
    if [ -e ${pompa_dir}/KOJINATESEIKYUSHO/${shisetsu}/${syori_nengetsu}/FOR_FB ];then
      juni                                        |
      # 1:順番              2:行の色      3:請求対象選択チェック 4:印刷disabled設定 5:請求対象選択disabled
      # 6:居室番号          7:入居者ID    8:入居者名             9:処理月           10:請求ステータス
      # 11:請求ステータス名 12:金額税込み 13:更新時間            14:備考            15:合算フラグ
      # 16:class名          17:契約名     18:請求対象display     19:印刷display
      self 7 9 1/6 8 10/NF                        |
      # 1:入居者ID          2:処理月               3:順番             4:行の色       5:請求対象選択チェック
      # 6:印刷disabled設定  7:請求対象選択disabled 8:居室番号         9:入居者名     10:請求ステータス
      # 11:請求ステータス名 12:金額税込み          13:更新時間        14:備考        15:合算フラグ
      # 16:class名          17:契約名              18:請求対象display 19:印刷display
      LANG=C sort -k1,2                           |
      join2 key=1/2 ${pompa_dir}/KOJINATESEIKYUSHO/${shisetsu}/${syori_nengetsu}/FOR_FB - |
      # 1:入居者ID             2:処理月            3:引落金額             4:順番             5:行の色
      # 6:請求対象選択チェック 7:印刷disabled設定  8:請求対象選択disabled 9:居室番号         10:入居者名
      # 11:請求ステータス      12:請求ステータス名 13:金額税込み          14:更新時間        15:備考
      # 16:合算フラグ          17:class名          18:契約名              19:請求対象display 20:印刷display
tee ${work}/fb_junban |
      LANG=C sort -k4,4n                           |
      self 5/9 1 10 2 11/13 3 14/NF               |
      # 1:行の色      2:請求対象選択チェック 3:印刷disabled設定 4:請求対象選択disabled 5:居室番号
      # 6:入居者ID    7:入居者名             8:処理月           9:請求ステータス       10:請求ステータス名
      # 11:金額税込み 12:引落金額            13:更新時間        14:備考                15:合算フラグ
      # 16:class名    17:契約名              18:請求対象display 19:印刷display
      awk '{if($12=="_"){$12=$11};print}'
    else
      self 1/11 11 12/NF
      # 1:行の色      2:請求対象選択チェック 3:印刷disabled設定 4:請求対象選択disabled 5:居室番号
      # 6:入居者ID    7:入居者名             8:処理月           9:請求ステータス       10:請求ステータス名
      # 11:金額税込み 12:引落金額            13:更新時間        14:備考                15:合算フラグ
      # 16:class名    17:契約名              18:請求対象display 19:印刷display
    fi                                            |
tee ${work}/kojin |
    awk '{status=substr($9,1,1);if(status=="2"||status=="1"){$12="0"};print}' |
    if [ ${is_kakutei} = "true" ];then
      cat -
    else
      awk '{if($11<0&&$14!~/合算/){$12=0};print}' 
    fi > $tmp-kojin_meisai
    FBGOUKEI=$(awk '$7!~/合計/' $tmp-kojin_meisai | self 12 | sm2 0 0 1 1)
    awk '{if($7~/合計/){$12="'${FBGOUKEI}'"};print}' $tmp-kojin_meisai |
    # かんま
    comma 11
  ;;
  # ------------------------------------------
esac
# -------------------

# 合算フラグ
# 0:合算しない
# 1:誰かと合算

# 請求確定
# -
# 1:請求対象チェック 2:居室     3:対象者名 4:請求年月     5:ステータス
# 6:請求金額         7:最終更新 8:備考     9:印刷disabled 10:請求対象disabled
# 4：繰越選択済みのステータスは、印刷と請求対象disabledして備考に「${請求先}様${処理年月}分と合算されます」
# 合算の人は、印刷と請求対象disabledして備考に「${請求先}様${処理年月}分と合算されます」
# -

# 繰越
# -
# 1:請求対象チェック 2:居室     3:対象者名 4:請求年月         5:ステータス
# 6:請求金額         7:最終更新 8:備考     9:請求対象disabled
# -
# 合算の人は、請求対象disabledして備考に「${請求先}様${処理年月}分と合算されます」

# ソート
# 合算と繰越を続けて表示したい
# 居室 入居者 ステータス => 年月
# をキーにしてソート


# ---------------------------------------

#rm -f ${tmp}-*
exit 0

