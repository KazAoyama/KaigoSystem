#!/bin/bash
#
# SHOKYAKU_KANRI_KEIYAKU_ICHIRAN.SEARCH : 契約金一覧.SEARCH
#
# Usage : SHOKYAKU_KANRI_KEIYAKU_ICHIRAN.SEARCH namefile datafile
#
# Written by j.aoyagi(hands lab.inc)


# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null

#--------------------ログ出力--------------------
mkdir -p /home/hands/E-LIFE/KEIRI/APLOG/$(date +%Y%m%d)
exec 2> /home/hands/E-LIFE/KEIRI/APLOG/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv


# 変数設定
tmp=/var/tmp/${$}

#ゴミtmpの消去
rm -f $tmp-*

today="$(date +%Y%m%d)"
this_month="$(date +%Y%m)"

# ディレクトリ設定
home_dir="/home/hands"
app_dir="${home_dir}/E-LIFE/KEIRI"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
pompa_dir="${app_dir}/POMPA"
input_dir="${app_dir}/INPUT"
apptbl_dir="${app_dir}/TBL"
kyoutsu_dir="${home_dir}/E-LIFE/KYOUTSU/HTML"
master_tbl_dir="${home_dir}/E-LIFE/TBL/SEIKYU"
hometbl_dir="${home_dir}/E-LIFE/TBL"
riyosha_dir="/DATA/E-LIFE/UNEI/RIYOUSHA"
work="${app_dir}/WORK"

# 引数設定
namefile=${1}

# eval
eval $(name-source ${namefile})


echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu


nengetsu="$(echo ${NENGETSU} | sed 's/-//g')"
nengetsu2="$(echo ${NENGETSU2} | sed 's/-//g')"
gessho=$(echo ${this_month}"01")
getsumatsu=$(mdate ${this_month}m | tarr | tail -n1)
# 検索する対象者を決める
awk '$(NF-2)!=9' ${riyosha_dir}/SHISETSU_RIYOUSHA_STATUS |
awk '$1=="'${shisetsu}'"' |
# 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室
# 6:入居者id 7:入居日 8:退去日
if [ "${floor_select}" = "0" ];then
  cat -
else
  LANG=C sort -k3,3                                               |
  join0 key=3 <(echo ${floor_select})
fi                                                                 |
# 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室
# 6:入居者id 7:入居日 8:退去日
tee ${work}/work |
case ${taishosha_select} in
  0 )
    cat -
  ;;
  1 )
    awk '$7<="'${getsumatsu}'" && $8>="'${gessho}'"'
  ;;
  2 )
    awk '$7<="'${getsumatsu}'" && $8>="'${gessho}'" && $8!="99999999"'
  ;;
esac                                                               |
cat -                      > $tmp-taisho_data

cat $tmp-taisho_data                                               |
# 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室
# 6:入居者id 7:入居日 8:退去日
LANG=C sort -u -k6,6                                              |
self 6                                                             > $tmp-taisho_list
cp $tmp-taisho_list ${work}/taisho
# マスタ準備
awk '$(NF-2)!=9' ${riyosha_dir}/RIYOUSHA_KIHON |
self 1 2                          > $tmp-riyosha_kihon
awk '$(NF-2)!=9' ${riyosha_dir}/SHISETSU_RIYOUSHA_STATUS           |
# 1:施設ID   2:建屋   3:フロア 4:ユニット 5:居室
# 6:入居者ID 7:入居日 8:退去日


LANG=C sort -k6,6                                                 |
join0 key=6 $tmp-taisho_list                                       |
awk '{if($8<"'${getsumatsu}'"){$5="*"$5};print}'                        |
awk '$1=="'${shisetsu}'"'              |
self 6 7 5                                                         |
LANG=C sort -k1,2                                                  |
getlast 1 1                                                        |
self 1 3                                                           |
join2 key=1 $tmp-riyosha_kihon                                     > $tmp-riyousha_room
# 1:入居者ID 2:居室

awk '$(NF-2)!=9' ${riyosha_dir}/RIYOUSHA_KEIYAKUKIN           |
LANG=C sort -k1,1                                             |
join0 key=1 $tmp-taisho_list                                   |
awk '$2=="'${shisetsu}'"'                                     |
cjoin0 key=4 <(echo "${shubetsu_select}")                     > $tmp-kekka

LANG=C sort -k1,1 $tmp-kekka                                  |
join2 key=1 $tmp-riyousha_room                            |
# 1:利用者ID      2:利用者名    3:居室       4:施設ID     5:契約ID
# 6:契約金種別ID  7:番号        8:償却開始日 9:償却終了日 10:金額
# 11:償却回数     12:非返却金額 13:日割月割  14:特半ID    15:値引き額
# 16:値引き後金額 17:\\\\
if [ ! -n $nengetsu -o $nengetsu != "_" ];then
  awk '$8>="'${nengetsu}'"'
else
  cat -
fi |
if [ ! -n $nengetsu2 -o $nengetsu2 != "_" ];then
  awk '$8<="'${nengetsu2}'"'
else
  cat -
fi |
tee ${work}/totyukeika |
#awk '$9>="'${this_month}'01"'                                 |
self 3 2 8 9 10 11 12 15 16                                   |
sed 's/_/0/g'                                                 |
awk '{if($9==0){$9=$5};print}'                                |
awk '{$3=substr($3,1,4)"/"substr($3,5,2)"/"substr($3,7,2);$4=substr($4,1,4)"/"substr($4,5,2)"/"substr($4,7,2);print}' > $tmp-searchkekka
if [ "$(gyo $tmp-searchkekka)" -ne 0 ];then
  cat $tmp-searchkekka
else
  :
fi


rm -f ${tmp}-*
exit 0

