#!/bin/bash
#
# FB_SAKUSEI.SEARCH : FBデータ作成　サーチ
#
# Written by S.Otsubo

# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null
source /home/hands/E-LIFE/KEIRI/CGI/FB_SAKUSEI.INI &> /dev/null

# ログ
[ ! -e /home/hands/E-LIFE/KEIRI/TRACE_LOG/${today} ] && mkdir /home/hands/E-LIFE/KEIRI/TRACE_LOG/${today}
exec 2> /home/hands/E-LIFE/KEIRI/TRACE_LOG/${today}/LOG.$(basename ${0}).${HOSTNAME}.${current_time}; set -xv

#ゴミtmpの消去
rm -f $tmp-*

# ---------------------------------------
# 変数

namefile=${1}
work="/home/hands/E-LIFE/KEIRI/WORK"
eval $(name-source ${namefile})

# mode
if [ -n "${MODE}" -a "${MODE}" != "_" ];then
  :
else
  MODE="init"
fi

# 処理年月
syori_nengetsu="${year}${month}"
kyotaku_nengetsu="$(mdate ${syori_nengetsu}m/+1)"
# ---------------------------------------

# ---------------------------------------
# テーブル用意

# 請求ステータス
# ${home_tbl_dir}/CONFIG/SEIKYU_STATUS

# なまえ
# ${riyosha_dir}/RIYOUSHA_MASTER
awk '$5!="9"' - ${riyosha_dir}/RIYOUSHA_MASTER |
self 1/2                                       |
LANG=C sort                                    > ${tmp}-RIYOUSHA_MASTER

awk '$5!="9"' - ${riyosha_dir}/RIYOUSHA_MASTER |
self 1 3 2                                     |
LANG=C sort                                    > ${tmp}-RIYOUSHA_MASTER_KANA

# 口座情報
awk '$21!="9"' ${riyosha_dir}/RIYOUSHA_KOUZA             |
# 1:利用者ID    2:口座ID                3:金融機関コード    4:支店コード        5:請求内容コード
# 6:口座種類    7:口座番号              8:請求期間FROM      9:請求期間TO        10:名義人
# 11:備考       12:他入居者との一括請求 13:一括請求入居者ID 14:一括請求書フラグ 15:口座名義(漢字フルネーム)
# 16:予備       17:予備                 18:予備             19:予備             20:予備
# 21:削除フラグ 22:更新時間             23:更新者
# -
# 請求内容コード1か2(施設か全請求)
awk '$5=="1"||$5=="2"'                                   |
self 1 3/4 6/10                                          |
# 1:利用者ID     2:金融機関コード 3:支店コード 4:口座種類 5:口座番号
# 6:請求期間FROM 7:請求期間TO     8:名義人
LANG=C sort                                              |
# 選択した年月で有効なものに絞る
awk '$6<="'${year}${month}'" && $7>="'${year}${month}'"' > ${tmp}-RIYOUSHA_KOUZA #かならず利用者IDにつき一行となる

# 金融機関
awk '$5!="9"' $hometbl_dir/KINYUU_MASTER/KINYUUKIKAN_NAME |
self 1 3                                                  |
LANG=C sort                                               > ${tmp}-KINYUUKIKAN_NAME

# 支店
awk '$5!="9"' $hometbl_dir/KINYUU_MASTER/KINYUUKIKAN_SHITEN_NAME |
self 1/2 4                                                       |
LANG=C sort                                                      > ${tmp}-KINYUUKIKAN_SHITEN_NAME
# ---------------------------------------

# ---------------------------------------
# サーチ

# 下記条件で絞込み
#   ステータス6：当月確定済み
#   ステータス7：FBデータ作成済み
#   請求確定年月が選択した年月

# ${seikyu_dir}/${hensu_shisetsu}/HEAD/SEIKYU_HEAD
# -
# 1:処理月            2:入居者ID          3:請求ステータス  4:施設ID         5:建屋ID
# 6:フロア            7:ユニットID        8:居室番号        9:支払合算相手ID 10:明細ファイル名
# 11:請求書設定フラグ 12:仮請求書出力時間 13:請求書出力時間 14:請求確定月    15:予備
# 16:予備             17:予備             18:予備           19:予備          20:予備
# 21:予備             22:予備             23:予備           24:削除フラグ    25:更新時間
# 26:更新者

# -------------------
# ヘッダの検索
if [ "${itakushaNo}" = "_" ];then
  LANG=C sort -k1,2 -k25,25 ${seikyu_dir}/${shisetsu}/HEAD/SEIKYU_HEAD |
  getlast 1 2                               |
  awk '$24!="9"'                            |
  cjoin0 key=3 <(echo "6 7" | tarr) -       |
  cjoin0 key=14 <(echo "${year}${month}") - |
  self 1/14 25/26                           |
  # 1:処理月            2:入居者ID          3:請求ステータス  4:施設ID         5:建屋ID
  # 6:フロア            7:ユニットID        8:居室番号        9:支払合算相手ID 10:明細ファイル名
  # 11:請求書設定フラグ 12:仮請求書出力時間 13:請求書出力時間 14:請求確定月    15:更新時間
  # 16:更新者
  
  # ひとり一明細なので頭に入居者IDをつける
  self 2 1/NF                               |
  # 1:入居者ID        2:処理月            3:入居者ID          4:請求ステータス  5:施設ID
  # 6:建屋ID          7:フロア            8:ユニットID        9:居室番号        10:支払合算相手ID
  # 11:明細ファイル名 12:請求書設定フラグ 13:仮請求書出力時間 14:請求書出力時間 15:請求確定月
  # 16:更新時間       17:更新者
  LANG=C sort                               > ${tmp}-head_file
  # -------------------

  # 引落金額をPOMPAから取得する
  self 1 2 $tmp-head_file                   |
  LANG=C sort -u -k1,2                      |
  join2 key=1/2 ${pompa_dir}/KOJINATESEIKYUSHO/${shisetsu}/${syori_nengetsu}/FOR_FB |
  awk '{print $1,$2,$3,$3,"0"}'             > $tmp-meisai


  

  # -------------------
  # 明細ファイル全体合計行を拾う
  
  #self 11 ${tmp}-head_file           |
  ## 1:明細ファイル名(SEIKYU_MEISAI.${処理月}.${請求先})
  #LANG=C sort -u                     |
  #awk '{print $1,substr($1,15,6)}' - |
  ## 1:明細ファイル名 2:処理月
  #while read File Nengetsu ; do
  #  # 全体合計行は、行分類フラグ30
  #  cjoin0 key=3 <(echo "30") ${seikyu_dir}/${shisetsu}/MEISAI/${Nengetsu}/${File} |
  #  awk '$25!="9"' -             |
  #  # 1:処理月    2:入居者ID   3:行分類フラグ 4:契約ID          5:項目ID
  #  # 6:契約枝番  7:請求年月日 8:非課税フラグ 9:金額税抜き      10:金額税込み
  #  # 11:税額     12:内訳1     13:内訳2       14:特別処理フラグ 15:予備
  #  # 16:予備     17:予備      18:予備        19:予備           20:予備
  #  # 21:予備     22:予備      23:予備        24:予備           25:削除フラグ
  #  # 26:更新時間 27:更新者
  #  self 1 9/11                  > ${tmp}-meisai_kari
  #
  #  # 1:処理月 2:金額税抜き 3:金額税込み 4:税額
  #  gassan_aite="$(echo "${File}" | tr "." " " | self NF)"
  #  cat ${tmp}-meisai_kari |
  #  awk '{print "'${gassan_aite}'",$0}' -
  #  # 1:明細ファイルのユーザID 2:処理月 3:金額税抜き 4:金額税込み 5:税額
  #done                               |
  #LANG=C sort                        > ${tmp}-meisai
  # -------------------
  
  
  # -------------------
  # ヘッダ明細を結合する
  
  join2 +"0" key=1/2 ${tmp}-meisai ${tmp}-head_file         |
  # 1:請求先            2:処理月          3:金額税抜き      4:金額税込み      5:税額
  # 6:入居者ID          7:請求ステータス  8:施設ID          9:建屋ID          10:フロア
  # 11:ユニットID       12:居室番号       13:支払合算相手ID 14:明細ファイル名 15:請求書設定フラグ
  # 16:仮請求書出力時間 17:請求書出力時間 18:請求確定月     19:更新時間       20:更新者
  # -
  # なまえつける
  LANG=C sort -k6,6                                         |
  join2 +"利用者マスタなし" key=6 ${tmp}-RIYOUSHA_MASTER -  |
  # 1:請求先            2:処理月            3:金額税抜き      4:金額税込み      5:税額
  # 6:入居者ID          7:入居者名          8:請求ステータス  9:施設ID          10:建屋ID
  # 11:フロア           12:ユニットID       13:居室番号       14:支払合算相手ID 15:明細ファイル名
  # 16:請求書設定フラグ 17:仮請求書出力時間 18:請求書出力時間 19:請求確定月     20:更新時間
  # 21:更新者
  LANG=C sort -k14,14                                       |
  join2 +"利用者マスタなし" key=14 ${tmp}-RIYOUSHA_MASTER - |
  # 1:請求先          2:処理月            3:金額税抜き        4:金額税込み      5:税額
  # 6:入居者ID        7:入居者名          8:請求ステータス    9:施設ID          10:建屋ID
  # 11:フロア         12:ユニットID       13:居室番号         14:支払合算相手ID 15:合算相手名
  # 16:明細ファイル名 17:請求書設定フラグ 18:仮請求書出力時間 19:請求書出力時間 20:請求確定月
  # 21:更新時間       22:更新者
  
  # 合算相手が入っている場合は備考欄メッセージは合算されます表記
  awk '{if($14!="_")
          {bikou=$15"様分と合算されます";
           kouza=$14;}
        else
          {bikou="@";
           kouza=$1;};
        print kouza,$0,bikou}' -                            |
  # 1:請求先ID(合算含む) 2:請求先          3:処理月            4:金額税抜き        5:金額税込み
  # 6:税額               7:入居者ID        8:入居者名          9:請求ステータス    10:施設ID
  # 11:建屋ID            12:フロア         13:ユニットID       14:居室番号         15:支払合算相手ID
  # 16:合算相手名        17:明細ファイル名 18:請求書設定フラグ 19:仮請求書出力時間 20:請求書出力時間
  # 21:請求確定月        22:更新時間       23:更新者           24:備考
  
  # 口座情報を付与する
  LANG=C sort -k1,1                                         |
  join2 +"@" key=1 ${tmp}-RIYOUSHA_KOUZA -                  |
  # 1:請求先ID(合算含む) 2:金融機関コード  3:支店コード  4:口座種類        5:口座番号
  # 6:請求期間FROM       7:請求期間TO      8:名義人      9:請求先          10:処理月
  # 11:金額税抜き        12:金額税込み     13:税額       14:入居者ID       15:入居者名
  # 16:請求ステータス    17:施設ID         18:建屋ID     19:フロア         20:ユニットID
  # 21:居室番号          22:支払合算相手ID 23:合算相手名 24:明細ファイル名 25:請求書設定フラグ
  # 26:仮請求書出力時間  27:請求書出力時間 28:請求確定月 29:更新時間       30:更新者
  # 31:備考
  self 21 14 16 10 \
       21 14/15 10 16 12 29 2/9 31                          |
  # 1:居室番号        2:入居者ID        3:請求ステータス 4:処理月         5:居室番号
  # 6:入居者ID        7:入居者名        8:処理月         9:請求ステータス 10:金額税込み
  # 11:更新時間       12:金融機関コード 13:支店コード    14:口座種類      15:口座番号
  # 16:請求期間FROM   17:請求期間TO     18:名義人        19:請求先        20:備考
  # -
  # 1-4:ソートキー
  # 5-NF:画面表示
  # -
  
  # 金融機関支店名を付与
  LANG=C sort -k12,13                                       |
  join1 key=12/13 ${tmp}-KINYUUKIKAN_SHITEN_NAME -          |
  # 1:居室番号  2:入居者ID        3:請求ステータス 4:処理月         5:居室番号
  # 6:入居者ID  7:入居者名        8:処理月         9:請求ステータス 10:金額税込み
  # 11:更新時間 12:金融機関コード 13:支店コード    14:支店名        15:口座種類
  # 16:口座番号 17:請求期間FROM   18:請求期間TO    19:名義人        20:請求先
  # 21:備考
  join1 key=12 ${tmp}-KINYUUKIKAN_NAME -                    |
  # 1:居室番号  2:入居者ID        3:請求ステータス  4:処理月         5:居室番号
  # 6:入居者ID  7:入居者名        8:処理月          9:請求ステータス 10:金額税込み
  # 11:更新時間 12:金融機関コード 13:金融機関名     14:支店コード    15:支店名
  # 16:口座種類 17:口座番号       18:請求期間FROM   19:請求期間TO    20:名義人
  # 21:請求先   22:備考
  
  # 口座種類の変換
  awk '{if($16=="1")
          {$16="普通";}
        else if($16=="2")
          {$16="当座";}
        else
          {$16="@";};
        print}'                                             |
  
  # ステータス名付与
  LANG=C sort -k9,9                                         |
  join1 key=9 ${home_tbl_dir}/CONFIG/SEIKYU_STATUS -        |
  # 1:居室番号    2:入居者ID  3:請求ステータス  4:処理月          5:居室番号
  # 6:入居者ID    7:入居者名  8:処理月          9:請求ステータス  10:請求ステータス名
  # 11:金額税込み 12:更新時間 13:金融機関コード 14:金融機関名     15:支店コード
  # 16:支店名     17:口座種類 18:口座番号       19:請求期間FROM   20:請求期間TO
  # 21:名義人     22:請求先   23:備考
  awk '{$9=$9":"$10; print}' -                              |
  delf 10                                                   |
  # 1:居室番号  2:入居者ID        3:請求ステータス  4:処理月         5:居室番号
  # 6:入居者ID  7:入居者名        8:処理月          9:請求ステータス 10:金額税込み
  # 11:更新時間 12:金融機関コード 13:金融機関名     14:支店コード    15:支店名
  # 16:口座種類 17:口座番号       18:請求期間FROM   19:請求期間TO    20:名義人
  # 21:請求先   22:備考
  
  # FBデータ作成済みのステータスのときはあらかじめチェックいれておく
  awk '{if($9=="7")
          {flg="checked";}
        else
          {flg="_"}
        print $0,flg}' -                                    |
  # 1:居室番号  2:入居者ID        3:請求ステータス    4:処理月         5:居室番号
  # 6:入居者ID  7:入居者名        8:処理月            9:請求ステータス 10:金額税込み
  # 11:更新時間 12:金融機関コード 13:金融機関名       14:支店コード    15:支店名
  # 16:口座種類 17:口座番号       18:請求期間FROM     19:請求期間TO    20:名義人
  # 21:請求先   22:備考           23:チェックボックス
  
  # ソートする
  LANG=C sort -k1,4                                         |
  delf 1/4 18/19                                            |
  # 1:居室番号   2:入居者ID          3:入居者名       4:処理月     5:請求ステータス
  # 6:金額税込み 7:更新時間          8:金融機関コード 9:金融機関名 10:支店コード
  # 11:支店名    12:口座種類         13:口座番号      14:名義人    15:請求先
  # 16:備考      17:チェックボックス
  
  # 見た目整える
  awk '{if($NF%2==0)
          {color="white"}
        else
          {color="white"};
        print color,$0}' -                                  |
  # 1:行の色         2:居室番号   3:入居者ID          4:入居者名       5:処理月
  # 6:請求ステータス 7:金額税込み 8:更新時間          9:金融機関コード 10:金融機関名
  # 11:支店コード    12:支店名    13:口座種類         14:口座番号      15:名義人
  # 16:請求先        17:備考      18:チェックボックス
  awk '{$8=substr($8,1,4)"/"substr($8,5,2)"/"substr($8,7,2)"_"substr($8,9,2)":"substr($8,11,2)":"substr($8,13,2);
        print}' -                                           |
  
  # 口座情報が＠の場合(口座情報付与join2でマスタなし)は口座情報を設定しないといけないので目立つように文字を赤にする。備考に追記する(当月確定で止めてるのでないはず)
  awk '{if($9=="@")
          {$17=$17"<br>有効な口座が設定されていません";
           font_color="color:red;"}
        else
          {font_color="_"};
        print $0,font_color}'                               > $tmp-search_meisai
  # 1:行の色         2:居室番号   3:入居者ID          4:入居者名       5:処理月
  # 6:請求ステータス 7:金額税込み 8:更新時間          9:金融機関コード 10:金融機関名
  # 11:支店コード    12:支店名    13:口座種類         14:口座番号      15:名義人
  # 16:請求先        17:備考      18:チェックボックス 19:文字色
else
  #################### 施設請求側 ################################################################################################
cat <<- FIN > $tmp-RYAKUGO
0001 AO2
0002 UT
0003 CM
0004 AZ
0005 AO
0006 SD
1004 YK
1005 BJ
FIN

  awk '$2=="'${itakushaNo}'" && $(NF-2)!=9' /home/hands/E-LIFE/TBL/SHISETSU_MASTER/SHISETSU_FACT > $tmp-itakushaMST
  self 1 $tmp-itakushaMST > $tmp-shisetsu_list
  for SHISETSU in $(yarr $tmp-shisetsu_list);do
    # 施設名略号
    RYAKU=$(awk '$1=="'${SHISETSU}'"{print $2}' $tmp-RYAKUGO)

    LANG=C sort -k1,2 -k25,25 ${seikyu_dir}/${SHISETSU}/HEAD/SEIKYU_HEAD |
    getlast 1 2                               |
    awk '$24!="9"'                            |
    cjoin0 key=3 <(echo "6 7" | tarr) -       |
    cjoin0 key=14 <(echo "${year}${month}") - |
    self 1/14 25/26                           |
    # 1:処理月            2:入居者ID          3:請求ステータス  4:施設ID         5:建屋ID
    # 6:フロア            7:ユニットID        8:居室番号        9:支払合算相手ID 10:明細ファイル名
    # 11:請求書設定フラグ 12:仮請求書出力時間 13:請求書出力時間 14:請求確定月    15:更新時間
    # 16:更新者
    
    # ひとり一明細なので頭に入居者IDをつける
    self 2 1/NF                               |
    # 1:入居者ID        2:処理月            3:入居者ID          4:請求ステータス  5:施設ID
    # 6:建屋ID          7:フロア            8:ユニットID        9:居室番号        10:支払合算相手ID
    # 11:明細ファイル名 12:請求書設定フラグ 13:仮請求書出力時間 14:請求書出力時間 15:請求確定月
    # 16:更新時間       17:更新者
    LANG=C sort                               > ${tmp}-head_file

    # 引落金額をPOMPAから取得する
    self 1 2 $tmp-head_file                   |
    LANG=C sort -u -k1,2                      |
    join2 key=1/2 ${pompa_dir}/KOJINATESEIKYUSHO/${SHISETSU}/${syori_nengetsu}/FOR_FB |
    awk '{print $1,$2,$3,$3,"0"}'             > $tmp-meisai

    # -------------------
   # # 明細ファイル全体合計行を拾う 
   # self 11 ${tmp}-head_file           |
   # # 1:明細ファイル名(SEIKYU_MEISAI.${処理月}.${請求先})
   # LANG=C sort -u                     |
   # awk '{print $1,substr($1,15,6)}' - |
   # # 1:明細ファイル名 2:処理月
   # while read File Nengetsu ; do
   #   # 全体合計行は、行分類フラグ30
   #   cjoin0 key=3 <(echo "30") ${seikyu_dir}/${SHISETSU}/MEISAI/${Nengetsu}/${File} |
   #   awk '$25!="9"' -             |
   #   # 1:処理月    2:入居者ID   3:行分類フラグ 4:契約ID          5:項目ID
   #   # 6:契約枝番  7:請求年月日 8:非課税フラグ 9:金額税抜き      10:金額税込み
   #   # 11:税額     12:内訳1     13:内訳2       14:特別処理フラグ 15:予備
   #   # 16:予備     17:予備      18:予備        19:予備           20:予備
   #   # 21:予備     22:予備      23:予備        24:予備           25:削除フラグ
   #   # 26:更新時間 27:更新者
   #   self 1 9/11                  > ${tmp}-meisai_kari
  
   #   # 1:処理月 2:金額税抜き 3:金額税込み 4:税額
   #   gassan_aite="$(echo "${File}" | tr "." " " | self NF)"
   #   cat ${tmp}-meisai_kari |
   #   awk '{print "'${gassan_aite}'",$0}' -
   #   # 1:明細ファイルのユーザID 2:処理月 3:金額税抜き 4:金額税込み 5:税額
   # done                               |
   # LANG=C sort                        > ${tmp}-meisai
    # -------------------
  
  
    # -------------------
    # ヘッダ明細を結合する
  
    join2 +"0" key=1/2 ${tmp}-meisai ${tmp}-head_file         |
    # 1:請求先            2:処理月          3:金額税抜き      4:金額税込み      5:税額
    # 6:入居者ID          7:請求ステータス  8:施設ID          9:建屋ID          10:フロア
    # 11:ユニットID       12:居室番号       13:支払合算相手ID 14:明細ファイル名 15:請求書設定フラグ
    # 16:仮請求書出力時間 17:請求書出力時間 18:請求確定月     19:更新時間       20:更新者
    # -
    # なまえつける
    LANG=C sort -k6,6                                         |
    join2 +"利用者マスタなし" key=6 ${tmp}-RIYOUSHA_MASTER -  |
    # 1:請求先            2:処理月            3:金額税抜き      4:金額税込み      5:税額
    # 6:入居者ID          7:入居者名          8:請求ステータス  9:施設ID          10:建屋ID
    # 11:フロア           12:ユニットID       13:居室番号       14:支払合算相手ID 15:明細ファイル名
    # 16:請求書設定フラグ 17:仮請求書出力時間 18:請求書出力時間 19:請求確定月     20:更新時間
    # 21:更新者
    LANG=C sort -k14,14                                       |
    join2 +"利用者マスタなし" key=14 ${tmp}-RIYOUSHA_MASTER - |
    # 1:請求先          2:処理月            3:金額税抜き        4:金額税込み      5:税額
    # 6:入居者ID        7:入居者名          8:請求ステータス    9:施設ID          10:建屋ID
    # 11:フロア         12:ユニットID       13:居室番号         14:支払合算相手ID 15:合算相手名
    # 16:明細ファイル名 17:請求書設定フラグ 18:仮請求書出力時間 19:請求書出力時間 20:請求確定月
    # 21:更新時間       22:更新者
  
    # 合算相手が入っている場合は備考欄メッセージは合算されます表記
    awk '{if($14!="_")
            {bikou=$15"様分と合算されます";
             kouza=$14;}
          else
            {bikou="@";
             kouza=$1;};
          print kouza,$0,bikou}' -                            |
    # 1:請求先ID(合算含む) 2:請求先          3:処理月            4:金額税抜き        5:金額税込み
    # 6:税額               7:入居者ID        8:入居者名          9:請求ステータス    10:施設ID
    # 11:建屋ID            12:フロア         13:ユニットID       14:居室番号         15:支払合算相手ID
    # 16:合算相手名        17:明細ファイル名 18:請求書設定フラグ 19:仮請求書出力時間 20:請求書出力時間
    # 21:請求確定月        22:更新時間       23:更新者           24:備考
  
    # 口座情報を付与する
    LANG=C sort -k1,1                                         |
    join2 +"@" key=1 ${tmp}-RIYOUSHA_KOUZA -                  |
    # 1:請求先ID(合算含む) 2:金融機関コード  3:支店コード  4:口座種類        5:口座番号
    # 6:請求期間FROM       7:請求期間TO      8:名義人      9:請求先          10:処理月
    # 11:金額税抜き        12:金額税込み     13:税額       14:入居者ID       15:入居者名
    # 16:請求ステータス    17:施設ID         18:建屋ID     19:フロア         20:ユニットID
    # 21:居室番号          22:支払合算相手ID 23:合算相手名 24:明細ファイル名 25:請求書設定フラグ
    # 26:仮請求書出力時間  27:請求書出力時間 28:請求確定月 29:更新時間       30:更新者
    # 31:備考
    self 21 14 16 10 \
         21 14/15 10 16 12 29 2/9 31                          |
    # 1:居室番号        2:入居者ID        3:請求ステータス 4:処理月         5:居室番号
    # 6:入居者ID        7:入居者名        8:処理月         9:請求ステータス 10:金額税込み
    # 11:更新時間       12:金融機関コード 13:支店コード    14:口座種類      15:口座番号
    # 16:請求期間FROM   17:請求期間TO     18:名義人        19:請求先        20:備考
    # -
    # 1-4:ソートキー
    # 5-NF:画面表示
    # -
    
    # 金融機関支店名を付与
    LANG=C sort -k12,13                                       |
    join1 key=12/13 ${tmp}-KINYUUKIKAN_SHITEN_NAME -          |
    # 1:居室番号  2:入居者ID        3:請求ステータス 4:処理月         5:居室番号
    # 6:入居者ID  7:入居者名        8:処理月         9:請求ステータス 10:金額税込み
    # 11:更新時間 12:金融機関コード 13:支店コード    14:支店名        15:口座種類
    # 16:口座番号 17:請求期間FROM   18:請求期間TO    19:名義人        20:請求先
    # 21:備考
    join1 key=12 ${tmp}-KINYUUKIKAN_NAME -                    |
    # 1:居室番号  2:入居者ID        3:請求ステータス  4:処理月         5:居室番号
    # 6:入居者ID  7:入居者名        8:処理月          9:請求ステータス 10:金額税込み
    # 11:更新時間 12:金融機関コード 13:金融機関名     14:支店コード    15:支店名
    # 16:口座種類 17:口座番号       18:請求期間FROM   19:請求期間TO    20:名義人
    # 21:請求先   22:備考
    
    # 口座種類の変換
    awk '{if($16=="1")
            {$16="普通";}
          else if($16=="2")
            {$16="当座";}
          else
            {$16="@";};
          print}'                                             |
    
    # ステータス名付与
    LANG=C sort -k9,9                                         |
    join1 key=9 ${home_tbl_dir}/CONFIG/SEIKYU_STATUS -        |
    # 1:居室番号    2:入居者ID  3:請求ステータス  4:処理月          5:居室番号
    # 6:入居者ID    7:入居者名  8:処理月          9:請求ステータス  10:請求ステータス名
    # 11:金額税込み 12:更新時間 13:金融機関コード 14:金融機関名     15:支店コード
    # 16:支店名     17:口座種類 18:口座番号       19:請求期間FROM   20:請求期間TO
    # 21:名義人     22:請求先   23:備考
    awk '{$9=$9":"$10; print}' -                              |
    delf 10                                                   |
    # 1:居室番号  2:入居者ID        3:請求ステータス  4:処理月         5:居室番号
    # 6:入居者ID  7:入居者名        8:処理月          9:請求ステータス 10:金額税込み
    # 11:更新時間 12:金融機関コード 13:金融機関名     14:支店コード    15:支店名
    # 16:口座種類 17:口座番号       18:請求期間FROM   19:請求期間TO    20:名義人
    # 21:請求先   22:備考
    
    # FBデータ作成済みのステータスのときはあらかじめチェックいれておく
    awk '{if($9=="7")
            {flg="checked";}
          else
            {flg="_"}
          print $0,flg}' -                                    |
    # 1:居室番号  2:入居者ID        3:請求ステータス    4:処理月         5:居室番号
    # 6:入居者ID  7:入居者名        8:処理月            9:請求ステータス 10:金額税込み
    # 11:更新時間 12:金融機関コード 13:金融機関名       14:支店コード    15:支店名
    # 16:口座種類 17:口座番号       18:請求期間FROM     19:請求期間TO    20:名義人
    # 21:請求先   22:備考           23:チェックボックス
    
    # ソートする
    LANG=C sort -k1,4                                         |
    delf 1/4 18/19                                            |
    # 1:居室番号   2:入居者ID          3:入居者名       4:処理月     5:請求ステータス
    # 6:金額税込み 7:更新時間          8:金融機関コード 9:金融機関名 10:支店コード
    # 11:支店名    12:口座種類         13:口座番号      14:名義人    15:請求先
    # 16:備考      17:チェックボックス
    
    # 見た目整える
    awk '{if($NF%2==0)
            {color="white"}
          else
            {color="white"};
          print color,$0}' -                                  |
    # 1:行の色         2:居室番号   3:入居者ID          4:入居者名       5:処理月
    # 6:請求ステータス 7:金額税込み 8:更新時間          9:金融機関コード 10:金融機関名
    # 11:支店コード    12:支店名    13:口座種類         14:口座番号      15:名義人
    # 16:請求先        17:備考      18:チェックボックス
    awk '{$2="'${RYAKU}'"$2;$8=substr($8,1,4)"/"substr($8,5,2)"/"substr($8,7,2)"_"substr($8,9,2)":"substr($8,11,2)":"substr($8,13,2);
          print}' -                                           |
    
    # 口座情報が＠の場合(口座情報付与join2でマスタなし)は口座情報を設定しないといけないので目立つように文字を赤にする。備考に追記する(当月確定で止めてるのでないはず)
    awk '{if($9=="@")
            {$17=$17"<br>有効な口座が設定されていません";
             font_color="color:red;"}
          else
            {font_color="_"};
          print $0,font_color}'                               >> $tmp-search_meisai
    # 1:行の色         2:居室番号   3:入居者ID          4:入居者名       5:処理月
    # 6:請求ステータス 7:金額税込み 8:更新時間          9:金融機関コード 10:金融機関名
    # 11:支店コード    12:支店名    13:口座種類         14:口座番号      15:名義人
    # 16:請求先        17:備考      18:チェックボックス 19:文字色
  done

  #################### 訪問介護側 ################################################################################################
  awk '$2=="'${itakushaNo}'" && $(NF-2)!=9{print $1}' /home/hands/E-LIFE/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_ITAKUSHABANGOU > $tmp-jigyoshoNo
  shinichi=$(echo ${syori_nengetsu}"01")
  getsumatsu=$(mdate ${syori_nengetsu}m | tarr | tail -n1)
  awk '$(NF-2)!=9' /DATA/E-LIFE/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS            |
  awk '$7<="'${getsumatsu}'"&&$8>="'${shinichi}'"'                                |
  self 6 1 5 7 8                                                                  |
  LANG=C sort -k1,1                                                               > $tmp-riyosha_status
  # 1:利用者ID 2:施設コード 3:居室 4:開始日 5:終了日

  # 訪問介護用の口座情報取得
  awk '$21!="9"' ${riyosha_dir}/RIYOUSHA_KOUZA             |
  # 1:利用者ID    2:口座ID                3:金融機関コード    4:支店コード        5:請求内容コード
  # 6:口座種類    7:口座番号              8:請求期間FROM      9:請求期間TO        10:名義人
  # 11:備考       12:他入居者との一括請求 13:一括請求入居者ID 14:一括請求書フラグ 15:口座名義(漢字フルネーム)
  # 16:予備       17:予備                 18:予備             19:予備             20:予備
  # 21:削除フラグ 22:更新時間             23:更新者
  awk '$5=="1" || $5=="3"'                                 > $tmp-riyosha_kouza_13

  awk '$21!="9"' ${riyosha_dir}/RIYOUSHA_KOUZA             |
  # 1:利用者ID    2:口座ID                3:金融機関コード    4:支店コード        5:請求内容コード
  # 6:口座種類    7:口座番号              8:請求期間FROM      9:請求期間TO        10:名義人
  # 11:備考       12:他入居者との一括請求 13:一括請求入居者ID 14:一括請求書フラグ 15:口座名義(漢字フルネーム)
  # 16:予備       17:予備                 18:予備             19:予備             20:予備
  # 21:削除フラグ 22:更新時間             23:更新者
  # -
  # 請求内容コード1か2(施設か全請求)
  # 追加でアンスコも(他入居者一括請求のときアンスコになるから)
  awk '$5=="_"'                                            |
  self 1 13                                                |
  LANG=C sort -k2,2                                        > $tmp-riyosha_unsco  

  cat $tmp-riyosha_unsco                                   |
  join1 key=2 $tmp-riyosha_kouza_13                        |
  delf 2                                                   > $tmp-riyosha_unsco_2
  
  cat $tmp-riyosha_kouza_13 $tmp-riyosha_unsco_2           |
  self 1 3 4  6 7 \
       8 9 10                                              |
  # 1:利用者ID     2:金融機関コード 3:支店コード 4:口座種類 5:口座番号
  # 6:請求期間FROM 7:請求期間TO     8:名義人

  # 選択した年月で有効なものに絞る
  awk '$6<="'${getsumatsu}'" && $7>="'${shinichi}'"'       |
  delf 6 7                                                 |
  han 6                                                    |
  LANG=C sort                                              > ${tmp}-kouza_yuko_yuko
  # 1:利用者ID 2:金融機関コード 3:支店コード 4:口座種類 5:口座番号
  # 6:名義人

  # 金融機関名と支店名を半角かなで追加
  # マスタ準備
  cat /home/hands/E-LIFE/TBL/KINYUU_MASTER/KINYUUKIKAN_NAME |
  awk '$4==1{print $1,$3}'                                  |
  han                                                       |
  LANG=C sort                                               > $tmp-ginko_master
  
  cat /home/hands/E-LIFE/TBL/KINYUU_MASTER/KINYUUKIKAN_SHITEN_NAME |
  awk '$5==1{print $1,$2,$4}'                                      |
  han                                                              > $tmp-shiten_master

  cat ${tmp}-kouza_yuko_yuko                           |
  # 1:利用者ID 2:金融機関コード 3:支店コード 4:口座種類 5:口座番号
  # 6:名義人
  LANG=C sort -k2,3                                    |
  join1 key=2/3 $tmp-shiten_master                     |
  join1 key=2 $tmp-ginko_master                        |
  LANG=C sort                                          > $tmp-kouza_yuko
  # 1:利用者ID 2:金融機関コード 3:金融機関名 4:支店コード 5:支店名
  # 6:口座種類 7:口座番号       8:名義人
  # -----------------------------

  for JIGYOSHO in $(yarr $tmp-jigyoshoNo);do
    JNAME=$(awk '$1=="'${JIGYOSHO}'"{print $2}' $tmp-RYAKUGO)
    cat ${pompa_dir}/MEISAI/${JIGYOSHO}/${kyotaku_nengetsu}/FOR_FB |
    # 1:利用者ID 2:年月 3:FB金額 4:確定フラグ 5:更新時間
    LANG=C sort -k1,1                                            |
    #join2 key=1 $tmp-riyosha_status                              |
    # 1:利用者ID 2:施設コードor_ 3:居室or_ 4:開始日 5:終了日
    # 6:年月 7:FB金額 8:確定フラグ 8:更新時間
    join2 key=1 $tmp-kouza_yuko                                  |
    # 1:利用者ID 2:金融機関コード 3:金融機関名 4:支店コード 5:支店名
    # 6:口座種類 7:口座番号       8:名義人     9:年月      10:FB金額
    # 11:確定フラグ 12:更新時間
    join2 key=1 ${tmp}-RIYOUSHA_MASTER_KANA                      |
    LANG=C sort -k13,13                                          |
    join1 key=13 ${home_tbl_dir}/CONFIG/SEIKYU_STATUS            |
    # 1:利用者ID   2:カナ    3:利用者名    4::金融機関コード 5:金融機関名
    # 6:支店コード 7:支店名  8:口座種類    9:口座番号        10:名義人
    # 11:年月      12:FB金額 13:確定フラグ 14:ステータス     15:更新時間
    LANG=C sort -k2,2                                            |
    delf 2                                                       |
    awk '{$14=substr($14,1,4)"/"substr($14,5,2)"/"substr($14,7,2)"_"substr($14,9,2)":"substr($14,11,2)":"substr($14,13,2);print "@","'${JNAME}'","J"$1,$2,$10,$12":"$13,$11,$14,$3,$4,$5,$6,$7,$8,$9,$1,"@","@","@"}'
  done                                                    >> $tmp-search_meisai
fi

# 合計行追加
cat $tmp-search_meisai                                    |
# 1:行の色         2:居室番号   3:入居者ID          4:入居者名       5:処理月
# 6:請求ステータス 7:金額税込み 8:更新時間          9:金融機関コード 10:金融機関名
# 11:支店コード    12:支店名    13:口座種類         14:口座番号      15:名義人
# 16:請求先        17:備考      18:チェックボックス 19:文字色
awk '$7>=0'                                               |
sm2 0 0 7 7                                               |
# 1:合計金額税込
awk '{print "lightblue","---","@","合計","---","&nbsp;",$1,"&nbsp;","@","@","@","@","@","@","@","@","@","disabled","black"}' |

# 明細行と合体
cat $tmp-search_meisai -                                  |

# かんまふる
comma 7
# -------------------

# ---------------------------------------

rm -f ${tmp}-*
exit 0

