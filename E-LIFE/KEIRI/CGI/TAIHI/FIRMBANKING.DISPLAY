#!/bin/bash
#
# FIRMBANKING.DISPLAY : ファームバンキング.DISPLAY
#
# Usage : FIRMBANKING.DISPLAY namefile datafile
#
# Written by j.aoyagi(hands lab.inc)

exec 2> /home/hands/E-LIFE/KEIRI/APLOG/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv

# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null

# 変数設定
tmp=/var/tmp/${$}

#ゴミtmpの消去
rm -f $tmp-*

today="$(date +%Y%m%d)"
this_month="$(date +%Y%m)"

# ディレクトリ設定
home_dir="/home/hands"
app_dir="${home_dir}/E-LIFE/KEIRI"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
pompa_dir="${app_dir}/POMPA"
input_dir="${app_dir}/INPUT"
apptbl_dir="${app_dir}/TBL"
kyoutsu_dir="${home_dir}/E-LIFE/KYOUTSU/HTML"
master_tbl_dir="${home_dir}/E-LIFE/TBL/SEIKYU"
hometbl_dir="${home_dir}/E-LIFE/TBL"

# 引数設定
namefile=${1}
checkfile=${2}
searchfile=${3}
downloadfile=${4}

# eval
eval $(name-source ${namefile})

#--------------------------------------------------------------
# ログインUSER名と施設の取得
cat /home/hands/E-LIFE/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
tee ${tmp}-jugyoin        |
# 1:USER_ID 2:ユーザー名
awk '$1=="'${userid}'"'   |
# 1:USER_ID 2:ユーザー名
self 2                    > ${tmp}-usermei


self 1 2 /home/hands/E-LIFE/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 /home/hands/E-LIFE/TBL/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst

cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst


# 施設名はログインユーザーの権限のある施設を取得
cat /home/hands/E-LIFE//SYSTEM_SETTEI/POMPA/KENGEN_KANRI/USER_KENGEN/${userid}.USER_KENGEN |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou
#-----------------------------------------------------------

# 画面の描画モードを決定する。
MODE="$(nameread "MODE" ${namefile})"
if [ -n "${MODE}" -a "${MODE}" != "_" ];then
  :
else
  MODE="init"
fi
if [ -n "${userid}" ];then
  :
else
  userid="00000077"
fi
if [ -n "${password}" ];then
  :
else
  password="aoyagi"
fi
if [ -z ${downloadfile} ];then
  FILE_NAME="null"
else
  file=$(cat ${downloadfile})
  FILE_NAME="\"/E-LIFE/KEIRI/DOWNLOAD/${file}\""
fi

echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu

# ログインUSER名と施設の取得（仮）
cat ${hometbl_dir}/JYUUGYOUIN_MASTER/USER_MASTER                   |
# 1:USER_ID 2:ユーザー名
join1 key=1 ${tmp}-user                            |
# 1:USER_ID 2:ユーザー名
self 2                                             > ${tmp}-usermei

cat ${hometbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON                  |
# 1:施設コード 2:施設名
join1 key=1 ${tmp}-shisetsu                        |
self 2                                             > ${tmp}-user_shisetsu

# MODEがinitだったら渡ってきたネームをクリア
if [ "${MODE}" = "init" ];then
  riyosha_name="_"
  floor="_"
  unit="_"
  tateya="1"
  text_kensaku_hiduke_from=""
  text_tatekae_hiduke=""
  text_kensaku_hiduke_to=""
  hd_kensaku_hiduke_from=""
  hd_kensaku_hiduke_to=""
  hd_tatekae_hiduke=""
  nyuryoku_kingaku="_"
  nyuryoku_biko="_"
  vital_taijyu="on"
  nyuryoku_service_koumoku="00008"
  nyuryoku_suryo="1"
  # デフォルトメッセージを作成
  echo "###DEFAULT_MES###" "条件を設定して「検索」ボタンをクリックしてください。入力する場合は「入力」ボタンをクリックしてください。" >> ${tmp}-calsed1
else
  if [ "$(gyo ${searchfile})" = "0" ];then
    echo "###DEFAULT_MES###" "データがありません" >> ${tmp}-calsed1
  else
    echo "###DEFAULT_MES###" "" >> ${tmp}-calsed1
  fi
fi

# MODEがshuseiの場合の処理
if [ "${MODE}" = "shusei" ];then
  # データを特定する
  cat ${searchfile}                |
  # 1:riyosha_id 2:日付 3:サービス項目 4:金額 5:数量 6:合計額 7:備考 8:ID
  LANG=C sort -k8,8n               |
  join0 key=8 <(echo ${ShuseiId})  > ${tmp}-shusei_data
  # 1:riyosha_id 2:日付 3:サービス項目 4:金額 5:数量 6:合計額 7:備考 8:ID

  # 修正対象者を決定
  nyuryoku_riyosha_name=$(cat ${tmp}-shusei_data | self 1)

  # 修正対象者のフロアとユニットを決める
  nyuryoku_floor=$(cat ${apptbl_dir}/RIYOSHA_SHOZOKU | LANG=C sort -k3,3n | join0 key=3 <(echo ${nyuryoku_riyosha_name}) | self 1)
  nyuryoku_unit=$(cat ${apptbl_dir}/RIYOSHA_SHOZOKU | LANG=C sort -k3,3n | join0 key=3 <(echo ${nyuryoku_riyosha_name}) | self 2)
  ######################ここは後日書く！！！！！！！！！！！#####################################


  # 日付
  hd_tatekae_hiduke=$(cat ${tmp}-shusei_data | self 2)
  text_tatekae_hiduke=$(echo ${hd_tatekae_hiduke} | awk '{nen=substr($1,1,4);getsu=substr($1,5,2);hi=substr($1,7,2);print nen"/"getsu"/"hi}')

  # 入力のサービス項目
  nyuryoku_service_koumoku=$(cat ${tmp}-shusei_data | self 3)

  # 入力の金額
  nyuryoku_kingaku=$(cat ${tmp}-shusei_data | self 4)

  # 入力の数量
  nyuryoku_suryo=$(cat ${tmp}-shusei_data | self 5)

  # 入力の備考
  nyuryoku_biko=$(cat ${tmp}-shusei_data | self 7)

  # 上書きボタンの表示
  echo "###UWAGAKI###" "block" >> ${tmp}-calsed1
  echo "###SHINKI###" "none" >> ${tmp}-calsed1

  # ShuseiId
  echo "###UWAGAKI_ID###" "${ShuseiId}" >> ${tmp}-calsed1

else
  # 登録ボタンの表示
  echo "###UWAGAKI###" "none" >> ${tmp}-calsed1
  echo "###SHINKI###" "block" >> ${tmp}-calsed1
  echo "###UWAGAKI_ID###" "" >> ${tmp}-calsed1
fi

# 利用者名の取得
if [ -n "${riyosha_name}" -a "${riyosha_name}" != "_" ];then
  echo "00" "全て"                                                  | 
  cat - ${apptbl_dir}/RIYOSHA_MASTER                                |
# 1:RIYOSHA_CODE 2:RIYOSHA_NAME 
  awk '{print $0,"'${riyosha_name}'"}'                              |
# 1:RIYOSHA_CODE 2:RIYOSHA_NAME 3:riyosha_name
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'    > ${tmp}-riyosha_name
else
  echo "00" "全て"                                                  | 
  cat - ${apptbl_dir}/RIYOSHA_MASTER                                |
  awk '{print $0,""}'                                               > ${tmp}-riyosha_name
fi
# 入力利用者名の取得
if [ -n "${nyuryoku_riyosha_name}" -a "${nyuryoku_riyosha_name}" != "_" ];then
  cat ${apptbl_dir}/RIYOSHA_MASTER                                  |
# 1:RIYOSHA_CODE 2:RIYOSHA_NAME 
  awk '{print $0,"'${nyuryoku_riyosha_name}'"}'                              |
# 1:RIYOSHA_CODE 2:RIYOSHA_NAME 3:riyosha_name
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'    > ${tmp}-nyuryoku_riyosha_name
else
  cat ${apptbl_dir}/RIYOSHA_MASTER                                  |
  awk '{print $0,""}'                                               > ${tmp}-nyuryoku_riyosha_name
fi
# 建屋のチェック
if [ "${tateya}" = "1" ];then
  echo "###SHINIYA###" "selected" >> ${tmp}-calsed1
elif [ "${tateya}" = "2" ];then
  echo "###CARE###" "selected" >> ${tmp}-calsed1
else
  echo "###SHINIYA###" "selected" >> ${tmp}-calsed1
fi
# フロアの取得
if [ -n "${floor}" -a "${floor}" != "_" ];then
  echo "0" "全て"                                              |
  cat - ${apptbl_dir}/FLOOR_MASTER                             |
# 1:FLOOR_CODE 2:FLOOR_NAME
  awk '{print $0,"'${floor}'"}'                                |
# 1:FLOOR_CODE 2:FLOOR_NAME 3:floor_name
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'   > ${tmp}-floor_name
else
  echo "0" "全て"                                              |
  cat - ${apptbl_dir}/FLOOR_MASTER                             |
  awk '{print $0,""}'                                      > ${tmp}-floor_name
fi

# 入力フロアの取得
if [ -n "${nyuryoku_floor}" -a "${nyuryoku_floor}" != "_" ];then
  cat ${apptbl_dir}/FLOOR_MASTER                               |
# 1:FLOOR_CODE 2:FLOOR_NAME
  awk '{print $0,"'${nyuryoku_floor}'"}'                                |
# 1:FLOOR_CODE 2:FLOOR_NAME 3:floor_name
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'   > ${tmp}-nyuryoku_floor_name
else
  cat ${apptbl_dir}/FLOOR_MASTER                               |
  awk '{print $0,""}'                                          > ${tmp}-nyuryoku_floor_name
fi

# ユニットの取得
if [ -n "${unit}" -a "${unit}" != "_" ];then
  echo "0" "全て"                                              |
  cat - ${apptbl_dir}/UNIT_MASTER                              |
# 1:UNIT_CODE 2:UNIT_NAME
  awk '{print $0,"'${unit}'"}'                                 |
# 1:UNTI_CODE 2:ユニット名 3:unit_name
  awk '{if($1==$4){print $1,$2,"selected"}else{print $1,$2,""}}'   > ${tmp}-unit_name
else
  echo "0" "全て"                                              |
  cat - ${apptbl_dir}/UNIT_MASTER                              |
  awk '{print $1,$2,""}'                                   > ${tmp}-unit_name
fi

# 入力ユニットの取得
if [ -n "${nyuryoku_unit}" -a "${nyuryoku_unit}" != "_" ];then
  cat ${apptbl_dir}/UNIT_MASTER                                |
# 1:UNIT_CODE 2:UNIT_NAME
  awk '{print $0,"'${nyuryou_unit}'"}'                                 |
# 1:UNTI_CODE 2:ユニット名 3:unit_name
  awk '{if($1==$4){print $1,$2,"selected"}else{print $1,$2,""}}'   > ${tmp}-nyuryoku_unit_name
else
  cat ${apptbl_dir}/UNIT_MASTER                                |
  awk '{print $1,$2,""}'                                       > ${tmp}-nyuryoku_unit_name
fi

# サービスマスターの取得
cat ${master_tbl_dir}/SERVICE_MASTER |
# 1:施設         2:建屋      3:サービスID 4:サービス区分(固定) 5:サービス名
# 6:集計グループ 7:単価      8:表示順     9:課税               10:有効フラグ
# 11:処理時間    12:ユーザID

### ここあとで↓

#LANG=C sort -k1,1n -k2,2n            |
#join0 key=1 <(echo ${shisetsu})      |
#join0 key=2 <(echo ${tateya})        |
self 8 3 5                           |
# 1:表示順 2:サービスID 3:サービス名
LANG=C sort -k1,1n                   |
self 2 3                             > ${tmp}-service_basemas
echo "0" "全て"                      |
cat - ${tmp}-service_basemas         |
awk '{print $0,"'${serch_service_koumoku}'"}' |
awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}' > ${tmp}-service_master

# 入力のサービスマスターの取得
cat ${master_tbl_dir}/SERVICE_MASTER |
# 1:施設         2:建屋      3:サービスID 4:サービス区分(固定) 5:サービス名
# 6:集計グループ 7:単価      8:表示順     9:課税               10:有効フラグ
# 11:処理時間    12:ユーザID

### ここあとで↓

#LANG=C sort -k1,1n -k2,2n            |
#join0 key=1 <(echo ${shisetsu})      |
#join0 key=2 <(echo ${tateya})        |
self 8 3 5 7                          |
# 1:表示順 2:サービスID 3:サービス名 4:単価
LANG=C sort -k1,1n                    |
self 2 3 4                            |
awk '{print $0,"'${nyuryoku_service_koumoku}'"}' |
awk '{if($1==$4){print $1,$2,"selected",$3}else{print $1,$2,"_",$3}}' > ${tmp}-nyuryoku_master

cat ${tmp}-nyuryoku_master |
self 1 2 3                 > ${tmp}-nyuryoku_service_master
nyuryoku_kingaku=$(cat ${tmp}-nyuryoku_master |
awk '$3=="selected"'                                   |
self 4)
cp ${tmp}-nyuryoku_service_master master

# 入力数量の取得
echo "###nyuryoku_suryo###" ${nyuryoku_suryo} >> ${tmp}-calsed1

# 作成日が渡って来なかったら当日をセット
if [ "${hd_kensaku_hiduke_from}" = "_" -o -z "${hd_kensaku_hiduke_from}" ];then
  hd_kensaku_hiduke_from=$(date +%Y%m%d) 
  text_kensaku_hiduke_from=$(date +%Y%m%d | awk '{nen=substr($1,1,4);getsu=substr($1,5,2);hi=substr($1,7,2);print nen"/"getsu"/"hi}') 
else
  :
fi
if [ "${hd_kensaku_hiduke_to}" = "_" -o -z "${hd_kensaku_hiduke_to}" ];then
  hd_kensaku_hiduke_to=$(date +%Y%m%d) 
  text_kensaku_hiduke_to=$(date +%Y%m%d | awk '{nen=substr($1,1,4);getsu=substr($1,5,2);hi=substr($1,7,2);print nen"/"getsu"/"hi}') 
else
  :
fi
if [ "${hd_tatekae_hiduke}" = "_" -o -z "${hd_tatekae_hiduke}" ];then
  hd_tatekae_hiduke=$(date +%Y%m%d) 
  text_tatekae_hiduke=$(date +%Y%m%d | awk '{nen=substr($1,1,4);getsu=substr($1,5,2);hi=substr($1,7,2);print nen"/"getsu"/"hi}') 
else
  :
fi


# 入力の金額のチェック
if [ "${nyuryoku_kingaku}" = "_" ];then
  echo "###nyuryoku_kingaku###" "" >> ${tmp}-calsed1
else
  echo "###nyuryoku_kingaku###" "${nyuryoku_kingaku}" >> ${tmp}-calsed1
fi

# 入力の備考のチェック
if [ "${nyuryoku_biko}" = "_" ];then
  echo "###nyuryoku_biko###" "" >> ${tmp}-calsed1
else
  echo "###nyuryoku_biko###" "${nyuryoku_biko}" >> ${tmp}-calsed1
fi


# searchfileの処理
if [ -e "${searchfile}" ];then
  cat ${searchfile}              |
  # 1:riyosha_id 2:日付 3:サービス項目 4:金額 5:数量 6:合計額 7:備考 8:ID
  LANG=C sort -k3,3n             |
  join1 key=3 ${tmp}-nyuryoku_service_master |
  # 1:riyosha_id 2:日付 3:サービス項目 4:サービス項目名 5:select値 6:金額 7:数量 8:合計額 9:備考 10:ID
  delf 3 5                       |
  # 1:riyosha_id 2:日付 3:サービス項目名 4:金額 5:数量 6:合計額 7:備考 8:ID
  # 合計の行は色を変える
  self 1 2 3 4 7 8 5 6               |
  # 1:riyosha_id 2:日付 3:サービス項目名 4:金額 5:備考 6:ID 7:数量 8:合計額
  sm4 1 1 2 6 7 8                |
  self 1 2 3 4 7 8 5 6               |
  awk '{if($2~/@/){gsub(/@/,"*",$0);$3="合計";print $0,"btn-pink"}else{print $0,"-"}}' |
  # 1:riyosha_id 2:日付 3:サービス項目 4:金額 5:数量 6:合計額 7:備考 8:ID 9:class
  LANG=C sort -k1,1n             |
  join1 key=1 ${apptbl_dir}/RIYOSHA_MASTER  |
  # 1:riyosha_id 2:名前 3:日付 4:サービス項目 5:金額 6:数量 7:合計額 8:備考 9:ID 10:class
  LANG=C sort -k1,1n -k3,3r      |
  self 3 2 4/10                  
  # 1:日付 2:名前 3:サービス項目 4:金額 5:数量 6:合計額 7:備考 8:ID 9:class
else
  : 
fi                               > ${tmp}-search_data

#######################################################################################
# calsedするfileをつくろう
cat <<- FIN | sed 's/ _$/ @/g' >> ${tmp}-calsed1
###DROPDOWN_ACTIVE4### active
###LI_NYUUKYOSHASEIKYU1### active
###TEXT_KENSAKU_HIDUKE_FROM### ${text_kensaku_hiduke_from}
###TEXT_KENSAKU_HIDUKE_TO### ${text_kensaku_hiduke_to}
###TEXT_TATEKAE_HIDUKE### ${text_tatekae_hiduke}
###HD_KENSAKU_HIDUKE_FROM### ${hd_kensaku_hiduke_from}
###HD_KENSAKU_HIDUKE_TO### ${hd_kensaku_hiduke_to}
###HD_TATEKAE_HIDUKE### ${hd_tatekae_hiduke}
###USERID### ${userid}
###SHISETSUID### ${shisetsu}
###PASSWORD### ${password}
###keyword### ${keyword}
###FILE_NAME### ${FILE_NAME}
###SELECT_SHISETSU### $select_shisetsu
FIN

cat ${tmp}-calsed1 ${checkfile} > ${tmp}-calsed

#### MODEが修正のときは処理を分岐する
cat ${html_dir}/FIRMBANKING1.html ${kyoutsu_dir}/MENUBAR.html ${html_dir}/FIRMBANKING2.html   |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
#mojihame -l###UNIT_NAME### - ${tmp}-unit_name |
#mojihame -l###NYURYOKU_UNIT_NAME### - ${tmp}-nyuryoku_unit_name |
#mojihame -l###FLOOR_NAME### - ${tmp}-floor_name |
#mojihame -l###NYURYOKU_FLOOR_NAME### - ${tmp}-nyuryoku_floor_name |
#mojihame -l###RIYOSHA_NAME### - ${tmp}-riyosha_name |
#mojihame -l###NYURYOKU_RIYOSHA_NAME### - ${tmp}-nyuryoku_riyosha_name |
#mojihame -l###NYUKIN_KOUMOKU### - ${tmp}-nyukin_koumoku |
#mojihame -l###NYURYOKU_NYUKIN_KOUMOKU### - ${tmp}-nyuryoku_nyukin_koumoku |
#mojihame -l###SHUKKIN_KOUMOKU### - ${tmp}-shukkin_koumoku |
#mojihame -l###NYURYOKU_SHUKKIN_KOUMOKU### - ${tmp}-nyuryoku_shukkin_koumoku |
#mojihame -l###TAISHO_KOUMOKU_SONOTA### - ${tmp}-taisho__koumoku_sonota |
#mojihame -l###SERVICE_MASTER### - ${tmp}-service_master |
#mojihame -l###NYURYOKU_SERVICE_MASTER### - ${tmp}-nyuryoku_service_master |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###USER_SHISETSU_NAME### - ${tmp}-user_shisetsu |
#mojihame -l###SEARCH_DATA### - ${tmp}-search_data |
calsed -f ${tmp}-calsed - 
# HTMLの作成

rm -f ${tmp}-*
exit 0

