#!/bin/bash
#
# KAIGOSEIKYU_HOUMON.DISPLAY : 訪問介護介護請求.DISPLAY
#
# Usage : KAIGOSEIKYU_HOUMON.DISPLAY namefile datafile
#
# Written by j.aoyagi(hands lab.inc)


# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null

#--------------------ログ出力--------------------
mkdir -p /home/hands/E-LIFE/KEIRI/APLOG/$(date +%Y%m%d)
exec 2> /home/hands/E-LIFE/KEIRI/APLOG/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv

# 変数設定
tmp=/var/tmp/${$}

#ゴミtmpの消去
rm -f $tmp-*

today="$(date +%Y%m%d)"
this_month="$(date +%Y%m)"

# ディレクトリ設定
home_dir="/home/hands"
app_dir="${home_dir}/E-LIFE/KEIRI"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
pompa_dir="${app_dir}/POMPA"
input_dir="${app_dir}/INPUT"
apptbl_dir="${app_dir}/TBL"
kyoutsu_dir="${home_dir}/E-LIFE/KYOUTSU/HTML"
test_tbl_dir="${home_dir}/E-LIFE/TEST/TBL"
master_tbl_dir="${home_dir}/E-LIFE/TBL/SEIKYU"
hometbl_dir="${home_dir}/E-LIFE/TBL"
kengen_dir="${home_dir}/E-LIFE/SYSTEM_SETTEI/POMPA/KENGEN_KANRI"
work="${app_dir}/WORK"

# 引数設定
namefile=${1}
checkfile=${2}
searchfile=${3}
downloadfile=${4}
cp ${searchfile} ${work}/schiko
# eval
eval $(name-source ${namefile})

# 画面の描画モードを決定する。
MODE="$(nameread "MODE" ${namefile})"
if [ -n "${MODE}" -a "${MODE}" != "_" ];then
  :
else
  MODE="init"
fi
if [ -z ${downloadfile} ];then
  FILE_NAME="null"
else
  if [ "$(cat ${downloadfile} | awk '$1=="error"{print}' | gyo)" = 0 ];then
    file=$(cat ${downloadfile})
    FILE_NAME="/E-LIFE/KEIRI/DOWNLOAD/${file}"
  else
    FILE_NAME="null"
  fi
fi

echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu

# ログインUSER名と施設の取得
cat ${hometbl_dir}/JYUUGYOUIN_MASTER/USER_MASTER                   |
# 1:USER_ID 2:ユーザー名
join1 key=1 ${tmp}-user                            |
# 1:USER_ID 2:ユーザー名
self 2                                             > ${tmp}-usermei

cat ${home_dir}/E-LIFE/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER |
awk '$11!="9"' |
self 1 2                                                > $tmp-jigyousho_group_mst                     
self 1 2 ${home_dir}/E-LIFE/TBL/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst

cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst

# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou

# MODEがinitだったら渡ってきたネームをクリア
if [ "${MODE}" = "init" ];then
  seikyu_shurui="all"
  kakutei_flag="all"
  seikyu_nengetsu="${this_month}"
  # デフォルトメッセージを作成
  echo "###DEFAULT_MES###" "「対象者表示」ボタンをクリックして請求対象者を選択し、請求データを確定してください" >> ${tmp}-calsed1
else
  if [ "$(gyo ${searchfile})" = "0" ];then
    echo "###DEFAULT_MES###" "データがありません" >> ${tmp}-calsed1
  else
    echo "###DEFAULT_MES###" "" >> ${tmp}-calsed1
  fi
fi

# 作成日が渡って来なかったら当日をセット
if [ "${seikyu_month}" = "_" -o -z "${seikyu_month}" ];then
  SEIKYU_MONTH="$(echo ${today} | awk '{print substr($1,5,2)}')"
  seq 1 12 |
  tarr     |
  maezero 1.2 |
  awk '{print $1,$1"月","'${SEIKYU_MONTH}'"}' |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,"@"}}' > $tmp-seikyu_month
else
  seq 1 12 |
  tarr     |
  maezero 1.2 |
  awk '{print $1,$1"月","'${seikyu_month}'"}' |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,"@"}}' > $tmp-seikyu_month
fi
if [ "${seikyu_day}" = "_" -o -z "${seikyu_day}" ];then
  seikyu_day="$(echo ${today} | awk '{print substr($1,7,2)}')"
  seq 1 31 |
  tarr     |
  maezero 1.2 |
  awk '{print $1,$1"日","'${seikyu_day}'"}' |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,"@"}}' > $tmp-seikyu_day
else
  seq 1 31 |
  tarr     |
  maezero 1.2 |
  awk '{print $1,$1"日","'${seikyu_day}'"}' |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,"@"}}' > $tmp-seikyu_day
fi
if [ "${seikyu_year}" = "_" -o -z "${seikyu_year}" ];then
  seikyu_year="$(echo ${today} | awk '{print substr($1,1,4)}')"
  echo ${seikyu_year} |
  lcalc '$1-1,$1,$1+1' |
  tarr     |
  awk '{print $1,$1"年","'${seikyu_year}'"}' |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,"@"}}' > $tmp-seikyu_year
else
  echo ${seikyu_year} |
  lcalc '$1-1,$1,$1+1' |
  tarr     |
  awk '{print $1,$1"年","'${seikyu_year}'"}' |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,"@"}}' > $tmp-seikyu_year
fi
# 年月の取得
#if [ -n "${teishutsu_nengetsu}" -a "${teishutsu_nengetsu}" != "_" ];then
##  mdate -e ${this_month}m/-3                                |
#  mdate -e ${this_month}m/+2                                |
#  tarr                                                      |
#  LANG=C sort -k1,1nr                                       |
#  awk '{print $0,"'${teishutsu_nengetsu}'"}'                          |
#  awk '{if($1==$2){print $1,"selected"}else{print $1,""}}'  |
#  awk '{all=substr($1,1,6);nen=substr($1,1,4);getu=substr($1,5,2);print all,nen"年"getu"月",$2}' > ${tmp}-teishutsu_nengetsu
#else
##  mdate -e ${this_month}m/-3                                |
#  mdate -e ${this_month}m/+2                                |
#  tarr                                                      |
#  LANG=C sort -k1,1nr                                       |
#  awk '{all=substr($1,1,6);nen=substr($1,1,4);getu=substr($1,5,2);print all,nen"年"getu"月"}' > ${tmp}-teishutsu_nengetsu
#fi

if [ -n "${seikyu_nengetsu}" -a "${seikyu_nengetsu}" != "_" ];then
  mdate -e ${this_month}m/+1                                > $tmp-mdate1
  mdate -e ${this_month}m/-8                                > $tmp-mdate2
  cat $tmp-mdate1 $tmp-mdate2                               |
  tarr                                                      |
  LANG=C sort -u -k1,1nr                                    |
  awk '{print $0,"'${seikyu_nengetsu}'"}'                          |
  awk '{if($1==$2){print $1,"selected"}else{print $1,""}}'  |
  awk '{all=substr($1,1,6);nen=substr($1,1,4);getu=substr($1,5,2);print all,nen"年"getu"月",$2}' > ${tmp}-seikyu_nengetsu
else
  mdate -e ${this_month}m/+1                                > $tmp-mdate1
  mdate -e ${this_month}m/-8                                > $tmp-mdate2
  cat $tmp-mdate1 $tmp-mdate2                               |
  tarr                                                      |
  LANG=C sort -u -k1,1nr                                    |
  awk '{all=substr($1,1,6);nen=substr($1,1,4);getu=substr($1,5,2);print all,nen"年"getu"月"}' > ${tmp}-seikyu_nengetsu
fi


# 請求種類
[ "${seikyu_shurui}" = "tujyo" ] && echo "###TUJYO###" "checked" >> $tmp-calsed1
[ "${seikyu_shurui}" = "okure" ] && echo "###OKURE###" "checked" >> $tmp-calsed1
[ "${seikyu_shurui}" = "saiseikyu" ] && echo "###SAISEIKYU###" "checked" >> $tmp-calsed1
[ "${seikyu_shurui}" = "all" ] && echo "###SEIKYU_ALL###" "checked" >> $tmp-calsed1

[ "${kakutei_flag}" = "mikakutei" ] && echo "###MIKAKUEI###" "checked" >> $tmp-calsed1
[ "${kakutei_flag}" = "kakutei" ] && echo "###KAKUTEINOMI###" "checked" >> $tmp-calsed1
[ "${kakutei_flag}" = "all" ] && echo "###KAKUTEI_ALL###" "checked" >> $tmp-calsed1


# searchfileの処理
if [ -e "${searchfile}" ];then
  cat ${searchfile}
else
  : 
fi                               > ${tmp}-search_data

# initの場合は確定・出力ボタンは非表示
if [ "${MODE}" = "init" -o "$(gyo ${searchfile})" = 0 ];then
  init_display="none"
else
  init_display=""
fi

# 当月解除ボタンと解除ボタンの表示
if [ -e ${pompa_dir}/KOKUHO/${shisetsu}/${seikyu_nengetsu}/KAKUTEI_FILE ];then
  tougetsu_kakutei="none"
  kakutei_kaijo=""
else
  tougetsu_kakutei=""
  kakutei_kaijo="none"
fi

# FB出力する場合の処理
if [ "${MODE}" = "fb_sakusei" -a "${FILE_NAME}" != "null" ];then
cat <<- FIN > ${tmp}-fb_txt_out
  <html>
    <head>
      <meta charset="UTF-8">
        <script type="text/javascript" language="Javascript">
          alert('作成が完了しました。\n右クリックで保存してください');
          window.open("${FILE_NAME}","dl_txt");
        </script>
      </meta>
    </head>
  </html>
FIN
else
  :
fi


#######################################################################################
# calsedするfileをつくろう
cat <<- FIN | sed 's/ _$/ @/g' >> ${tmp}-calsed1
###DROPDOWN_ACTIVE5### active
###LI_KAIGOHOKENSEIKYU2### active
###TEXT_KENSAKU_HIDUKE_FROM### ${text_kensaku_hiduke_from}
###TEXT_KENSAKU_HIDUKE_TO### ${text_kensaku_hiduke_to}
###TEXT_TATEKAE_HIDUKE### ${text_tatekae_hiduke}
###HD_KENSAKU_HIDUKE_FROM### ${hd_kensaku_hiduke_from}
###HD_KENSAKU_HIDUKE_TO### ${hd_kensaku_hiduke_to}
###HD_TATEKAE_HIDUKE### ${hd_tatekae_hiduke}
###USERID### ${userid}
###SHISETSUID### ${shisetsu}
###PASSWORD### ${password}
###keyword### ${keyword}
###FILE_NAME### ${FILE_NAME}
###SELECT_SHISETSU### $select_shisetsu
###TOUGETSU_KAKUTEI### $tougetsu_kakutei
###KAKUTEI_KAIJO### $kakutei_kaijo
###INIT### $init_display
FIN

cat ${tmp}-calsed1 ${checkfile} > ${tmp}-calsed
cp ${tmp}-search_data ${work}/buat
#### MODEが修正のときは処理を分岐する
cat ${html_dir}/KAIGOSEIKYU_HOUMON1.html ${kyoutsu_dir}/MENUBAR.html ${html_dir}/KAIGOSEIKYU_HOUMON2.html   |
#mojihame -l###TEISHUTSU_NENGETSU### - ${tmp}-teishutsu_nengetsu |
mojihame -l###SEIKYU_NENGETSU### - ${tmp}-seikyu_nengetsu |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SEIKYU_MONTH### - ${tmp}-seikyu_month |
mojihame -l###SEIKYU_DAY### - ${tmp}-seikyu_day |
mojihame -l###SEIKYU_YEAR### - ${tmp}-seikyu_year |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -l###SEARCH_KEKKA### - ${tmp}-search_data |
calsed -f ${tmp}-calsed - |
# HTMLの作成
if [ -e $tmp-fb_txt_out ];then
  cat - $tmp-fb_txt_out
else
  cat -
fi                        |
cat
rm -f ${tmp}-*
exit 0

