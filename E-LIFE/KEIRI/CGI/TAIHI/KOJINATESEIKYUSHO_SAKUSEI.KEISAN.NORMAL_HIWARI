#!/bin/bash
#
# KOJINATESEIKYUSHO_SAKUSEI.KEISAN.NORMAL_HIWARI 施設請求計算部分のCGI
#
# Written by S.Otsubo

# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null
source /home/hands/E-LIFE/KEIRI/CGI/KOJINATESEIKYUSHO_SAKUSEI.INI &> /dev/null

# ログ
[ ! -e /home/hands/E-LIFE/KEIRI/TRACE_LOG/${today} ] && mkdir /home/hands/E-LIFE/KEIRI/TRACE_LOG/${today}
exec 2> /home/hands/E-LIFE/KEIRI/TRACE_LOG/${today}/LOG.$(basename ${0}).${HOSTNAME}.${current_time}; set -xv
#---------------------------------------------------------------

#---------------------------------------------------------------
function error_exit {
  message="${1}"
  echo "${message}"
  exit 1
}
#---------------------------------------------------------------

#---------------------------------------------------------------
# 引数設定
namefile=${1}
# 変数
eval $(name-source ${namefile})
seikyu_syori_month="${year}${month}"
seikyu_syori_next_month="$(mdate ${seikyu_syori_month}m/+1)"
seikyu_syori_two_next_month="$(mdate ${seikyu_syori_month}m/+2)"
seikyu_syori_last_month="$(mdate ${seikyu_syori_month}m/-1)"
seikyu_syori_two_last_month="$(mdate ${seikyu_syori_month}m/-2)"

# エラーファイル初期化
rm ${tmp}-err

# くりかえし吐き出し初期化
: > ${tmp}-tokuhan_while_result
: > ${tmp}-nottokuhan_while_result
#---------------------------------------------------------------

#---------------------------------------------------------------
# この処理で使用するファイルがなければ終了
[ ! -s ${tmp}-tujyou_hiwari_taisyou ] && exit 0
#---------------------------------------------------------------

#---------------------------------------------------------------
### 日割り側の処理
# 日割り日数の算出
#   請求月=起算開始月 もしくは 請求月=起算終了月 ならば 日割り日数を算出
#     (ただしその月1日からその月末までが期間ならば日割り日数=0(一ヶ月の日数が違うため))
#     (さらに日割り日数算出して30日と同じかそれより大きいならば日割り日数=0)
#   請求月!=起算開始月 かつ 請求月!=起算終了月 ならば 日割り日数=0
cat ${tmp}-tujyou_hiwari_taisyou   |
awk '{if($2==$18 || $2==$19)
        {hiwari_taisyou_flg="1"}
      else
        {hiwari_taisyou_flg="2"};
      print $0,hiwari_taisyou_flg}' |
# 1:入居者ID          2:請求月      3:契約ID      4:利用料種別ID 5:契約枝番
# 6:利用料名          7:税区分      8:支払区分    9:費用算出方法 10:起算開始日
# 11:起算終了日       12:金額       13:特販ID     14:値引額      15:値引後金額
# 16:特販期間FROM     17:特販期間TO 18:起算開始月 19:起算終了月  20:レコードが発生した年月日
# 21:日割り対象フラグ

# フラグをあたまにもってくる
self NF 1/NF-1                     |
# 1:日割り対象フラグ          2:入居者ID      3:請求月      4:契約ID      5:利用料種別ID
# 6:契約枝番                  7:利用料名      8:税区分      9:支払区分    10:費用算出方法
# 11:起算開始日               12:起算終了日   13:金額       14:特販ID     15:値引額
# 16:値引後金額               17:特販期間FROM 18:特販期間TO 19:起算開始月 20:起算終了月
# 21:レコードが発生した年月日
rank                               |
tee ${tmp}-hiwari_basedata         |
self 1 2                           > ${tmp}-hiwari_kurikaeshi_data

[ $(plus ${PIPESTATUS[@]}) -eq 0 ] || error_exit "処理中にエラーが発生しました(NORMAL_HIWARI)"
#---------------------------------------------------------------

#---------------------------------------------------------------
# 繰り返し処理
cat ${tmp}-hiwari_kurikaeshi_data |
while read gyo_no flg ; do
  case "${flg}" in
    #------------------------------------------
    # 請求月が起算開始終了にかぶる
    1 )
      # 日割り日数を算出する(レコード発生年月日から月末か起算終了日まで)
      #   起算終了月が請求月ならば起算終了日で計算
      #   起算開始月が請求月ならば起算開始日で計算
      #   起算開始終了月が請求月でないならば、日割り0で計算

      #--------------------------------------
      ## 起算終了月が請求月
      cat ${tmp}-hiwari_basedata      |
      awk '$1=="'${gyo_no}'"'         |
      delf 1 2                        |
      awk '{if($2!=$18 && $2==$19)
              {print $0,$2"01",$11}}' |
      # 1:入居者ID          2:請求月          3:契約ID      4:利用料種別ID 5:契約枝番
      # 6:利用料名          7:税区分          8:支払区分    9:費用算出方法 10:起算開始日
      # 11:起算終了日       12:金額           13:特販ID     14:値引額      15:値引後金額
      # 16:特販期間FROM     17:特販期間TO     18:起算開始月 19:起算終了月  20:レコードが発生した年月日
      # 21:日割り計算用FROM 22:日割り計算用TO
      mdate 22 21                     |
      awk '{print $0,$23+1}'          |
      delf 21/23                      > ${tmp}-tujyou_hiwari_taisyou_bunki1
      # 1:入居者ID              2:請求月      3:契約ID      4:利用料種別ID 5:契約枝番
      # 6:利用料名              7:税区分      8:支払区分    9:費用算出方法 10:起算開始日
      # 11:起算終了日           12:金額       13:特販ID     14:値引額      15:値引後金額
      # 16:特販期間FROM         17:特販期間TO 18:起算開始月 19:起算終了月  20:レコードが発生した年月日
      # 21:日割り日数(当日含む)
      #--------------------------------------

      #--------------------------------------
      # ファイルがある状態で処理に入るのでパイプでエラーのとき落とす
      [ $(plus ${PIPESTATUS[@]}) -eq 0 ] || : > ${tmp}-err
      [ -e ${tmp}-err ] && break
      #--------------------------------------

      #--------------------------------------
      ## 起算開始月が請求月
#      cat ${tmp}-hiwari_basedata     |
#      awk '$1=="'${gyo_no}'"'        |
#      delf 1 2                       |
#      awk '{if($2==$18 && $2!=$19)
#              {print $0,$2+1"01"}}'  |
#      # 1:入居者ID      2:請求月      3:契約ID      4:利用料種別ID 5:契約枝番
#      # 6:利用料名      7:税区分      8:支払区分    9:費用算出方法 10:起算開始日
#      # 11:起算終了日   12:金額       13:特販ID     14:値引額      15:値引後金額
#      # 16:特販期間FROM 17:特販期間TO 18:起算開始月 19:起算終了月  20:レコードが発生した年月日
#      # 21:請求月+1月初
#      mdate -e 21/-1                 |
#      # 1:入居者ID        2:請求月        3:契約ID      4:利用料種別ID 5:契約枝番
#      # 6:利用料名        7:税区分        8:支払区分    9:費用算出方法 10:起算開始日
#      # 11:起算終了日     12:金額         13:特販ID     14:値引額      15:値引後金額
#      # 16:特販期間FROM   17:特販期間TO   18:起算開始月 19:起算終了月  20:レコードが発生した年月日
#      # 21:日割り計算用TO 22:請求月+1月初
#      self 1/NF 10 21                |
#      # 1:入居者ID        2:請求月        3:契約ID      4:利用料種別ID    5:契約枝番
#      # 6:利用料名        7:税区分        8:支払区分    9:費用算出方法    10:起算開始日
#      # 11:起算終了日     12:金額         13:特販ID     14:値引額         15:値引後金額
#      # 16:特販期間FROM   17:特販期間TO   18:起算開始月 19:起算終了月     20:レコードが発生した年月日
#      # 21:日割り計算用TO 22:請求月+1月初 23:起算開始日 24:日割り計算用TO
#      mdate 24 23                    |
#      # 1:入居者ID      2:請求月          3:契約ID      4:利用料種別ID    5:契約枝番
#      # 6:利用料名      7:税区分          8:支払区分    9:費用算出方法    10:起算開始日
#      # 11:起算終了日   12:金額           13:特販ID     14:値引額         15:値引後金額
#      # 16:特販期間FROM 17:特販期間TO     18:起算開始月 19:起算終了月     20:レコードが発生した年月日
#      # 21:請求月+1月初 22:日割り計算用TO 23:起算開始日 24:日割り計算用TO 25:日割り日数(当日含まず)
#      awk '{print $0,$25+1}'         |
#      self 1/20 26                   > ${tmp}-tujyou_hiwari_taisyou_bunki2
#      # 1:入居者ID              2:請求月      3:契約ID      4:利用料種別ID 5:契約枝番
#      # 6:利用料名              7:税区分      8:支払区分    9:費用算出方法 10:起算開始日
#      # 11:起算終了日           12:金額       13:特販ID     14:値引額      15:値引後金額
#      # 16:特販期間FROM         17:特販期間TO 18:起算開始月 19:起算終了月  20:レコードが発生した年月日
#      # 21:日割り日数(当日含む)
      cat ${tmp}-hiwari_basedata      |
      awk '$1=="'${gyo_no}'"'         |
      delf 1 2                        |
      awk '{if($2==$18 && $2!=$19)
              {print $0,$10,$18}}'    |
      # 1:入居者ID      2:請求月      3:契約ID      4:利用料種別ID 5:契約枝番
      # 6:利用料名      7:税区分      8:支払区分    9:費用算出方法 10:起算開始日
      # 11:起算終了日   12:金額       13:特販ID     14:値引額      15:値引後金額
      # 16:特販期間FROM 17:特販期間TO 18:起算開始月 19:起算終了月  20:レコードが発生した年月日
      # 21:起算開始日   22:起算開始月
      mdate 22m/+1                    |
      # 1:入居者ID      2:請求月      3:契約ID        4:利用料種別ID 5:契約枝番
      # 6:利用料名      7:税区分      8:支払区分      9:費用算出方法 10:起算開始日
      # 11:起算終了日   12:金額       13:特販ID       14:値引額      15:値引後金額
      # 16:特販期間FROM 17:特販期間TO 18:起算開始月   19:起算終了月  20:レコードが発生した年月日
      # 21:起算開始日   22:起算開始月 23:起算開始月+1
      awk '{$23=$23"01";print}'       |
      # 1:入居者ID      2:請求月      3:契約ID            4:利用料種別ID 5:契約枝番
      # 6:利用料名      7:税区分      8:支払区分          9:費用算出方法 10:起算開始日
      # 11:起算終了日   12:金額       13:特販ID           14:値引額      15:値引後金額
      # 16:特販期間FROM 17:特販期間TO 18:起算開始月       19:起算終了月  20:レコードが発生した年月日
      # 21:起算開始日   22:起算開始月 23:起算開始月+1月初
      mdate 23 21                     |
      # 1:入居者ID      2:請求月      3:契約ID            4:利用料種別ID        5:契約枝番
      # 6:利用料名      7:税区分      8:支払区分          9:費用算出方法        10:起算開始日
      # 11:起算終了日   12:金額       13:特販ID           14:値引額             15:値引後金額
      # 16:特販期間FROM 17:特販期間TO 18:起算開始月       19:起算終了月         20:レコードが発生した年月日
      # 21:起算開始日   22:起算開始月 23:起算開始月+1月初 24:日割日数(当日含む)
      delf 21/23                      > ${tmp}-tujyou_hiwari_taisyou_bunki2
      # 1:入居者ID            2:請求月      3:契約ID      4:利用料種別ID 5:契約枝番
      # 6:利用料名            7:税区分      8:支払区分    9:費用算出方法 10:起算開始日
      # 11:起算終了日         12:金額       13:特販ID     14:値引額      15:値引後金額
      # 16:特販期間FROM       17:特販期間TO 18:起算開始月 19:起算終了月  20:レコードが発生した年月日
      # 21:日割日数(当日含む)
      #--------------------------------------

      #--------------------------------------
      # ファイルがある状態で処理に入るのでパイプでエラーのとき落とす
      [ $(plus ${PIPESTATUS[@]}) -eq 0 ] || : > ${tmp}-err
      [ -e ${tmp}-err ] && break
      #--------------------------------------

      #--------------------------------------
      ## 起算開始終了月が請求月
      cat ${tmp}-hiwari_basedata   |
      awk '$1=="'${gyo_no}'"'      |
      delf 1 2                     |
      awk '$2==$18 && $2==$19'     |
      # 1:入居者ID      2:請求月          3:契約ID      4:利用料種別ID 5:契約枝番
      # 6:利用料名      7:税区分          8:支払区分    9:費用算出方法 10:起算開始日
      # 11:起算終了日   12:金額           13:特販ID     14:値引額      15:値引後金額
      # 16:特販期間FROM 17:特販期間TO     18:起算開始月 19:起算終了月  20:レコードが発生した年月日
      self 1/NF 10/11              |
      mdate 22 21                  |
      # 1:入居者ID      2:請求月      3:契約ID                  4:利用料種別ID 5:契約枝番
      # 6:利用料名      7:税区分      8:支払区分                9:費用算出方法 10:起算開始日
      # 11:起算終了日   12:金額       13:特販ID                 14:値引額      15:値引後金額
      # 16:特販期間FROM 17:特販期間TO 18:起算開始月             19:起算終了月  20:レコードが発生した年月日
      # 21:起算開始日   22:起算終了日 23:日割り日数(当日含まず)
      awk '{print $0,$23+1}'       |
      delf 21/23                   > ${tmp}-tujyou_hiwari_taisyou_bunki3
      # 1:入居者ID              2:請求月      3:契約ID      4:利用料種別ID 5:契約枝番
      # 6:利用料名              7:税区分      8:支払区分    9:費用算出方法 10:起算開始日
      # 11:起算終了日           12:金額       13:特販ID     14:値引額      15:値引後金額
      # 16:特販期間FROM         17:特販期間TO 18:起算開始月 19:起算終了月  20:レコードが発生した年月日
      # 21:日割り日数(当日含む)
      #--------------------------------------

      #--------------------------------------
      # ファイルがある状態で処理に入るのでパイプでエラーのとき落とす
      [ $(plus ${PIPESTATUS[@]}) -eq 0 ] || : > ${tmp}-err
      [ -e ${tmp}-err ] && break
      #--------------------------------------

      #--------------------------------------
      cat ${tmp}-tujyou_hiwari_taisyou_bunki1 \
          ${tmp}-tujyou_hiwari_taisyou_bunki2 \
          ${tmp}-tujyou_hiwari_taisyou_bunki3 |
      # 特販期間の金額を採用するかの判定
      awk '{if($16=="_")
              {$16="99991231"};
            print}'                |
      awk '{if($17=="_")
              {$17="99991231"};
            print}'                |
      self 1/NF 16.1.6 17.1.6      |
      # 1:入居者ID      2:請求月          3:契約ID        4:利用料種別ID 5:契約枝番
      # 6:利用料名      7:税区分          8:支払区分      9:費用算出方法 10:起算開始日
      # 11:起算終了日   12:金額           13:特販ID       14:値引額      15:値引後金額
      # 16:特販期間FROM 17:特販期間TO     18:起算開始月   19:起算終了月  20:レコードが発生した年月日
      # 21:日割り日数   22:特販期間FROM月 23:特販期間TO月
      awk '{if($13!="_" && $22<=$2 && $23>=$2)
              {flg=1}
            else
              {flg=0};
            print flg,$0}'         |
      # 1:特販採用フラグ            2:入居者ID      3:請求月          4:契約ID        5:利用料種別ID
      # 6:契約枝番                  7:利用料名      8:税区分          9:支払区分      10:費用算出方法
      # 11:起算開始日               12:起算終了日   13:金額           14:特販ID       15:値引額
      # 16:値引後金額               17:特販期間FROM 18:特販期間TO     19:起算開始月   20:起算終了月
      # 21:レコードが発生した年月日 22:日割り日数   23:特販期間FROM月 24:特販期間TO月

      # 請求月の日数を算出
      self 1/NF 3                  |
      # 1:特販採用フラグ            2:入居者ID      3:請求月          4:契約ID        5:利用料種別ID
      # 6:契約枝番                  7:利用料名      8:税区分          9:支払区分      10:費用算出方法
      # 11:起算開始日               12:起算終了日   13:金額           14:特販ID       15:値引額
      # 16:値引後金額               17:特販期間FROM 18:特販期間TO     19:起算開始月   20:起算終了月
      # 21:レコードが発生した年月日 22:日割り日数   23:特販期間FROM月 24:特販期間TO月 25:請求月
      mdate 25m/+1                 |
      # 1:特販採用フラグ            2:入居者ID      3:請求月          4:契約ID        5:利用料種別ID
      # 6:契約枝番                  7:利用料名      8:税区分          9:支払区分      10:費用算出方法
      # 11:起算開始日               12:起算終了日   13:金額           14:特販ID       15:値引額
      # 16:値引後金額               17:特販期間FROM 18:特販期間TO     19:起算開始月   20:起算終了月
      # 21:レコードが発生した年月日 22:日割り日数   23:特販期間FROM月 24:特販期間TO月 25:請求月
      # 26:請求月+1
      awk '{$26=$26"01"; print}'   |
      mdate -e 26/-1               |
      # 1:特販採用フラグ            2:入居者ID      3:請求月          4:契約ID        5:利用料種別ID
      # 6:契約枝番                  7:利用料名      8:税区分          9:支払区分      10:費用算出方法
      # 11:起算開始日               12:起算終了日   13:金額           14:特販ID       15:値引額
      # 16:値引後金額               17:特販期間FROM 18:特販期間TO     19:起算開始月   20:起算終了月
      # 21:レコードが発生した年月日 22:日割り日数   23:特販期間FROM月 24:特販期間TO月 25:請求月
      # 26:請求月月末               27:請求月+1
      awk '{$25=$25"01"; print}'   |
      mdate 26 25                  |
      # 1:特販採用フラグ            2:入居者ID      3:請求月          4:契約ID        5:利用料種別ID
      # 6:契約枝番                  7:利用料名      8:税区分          9:支払区分      10:費用算出方法
      # 11:起算開始日               12:起算終了日   13:金額           14:特販ID       15:値引額
      # 16:値引後金額               17:特販期間FROM 18:特販期間TO     19:起算開始月   20:起算終了月
      # 21:レコードが発生した年月日 22:日割り日数   23:特販期間FROM月 24:特販期間TO月 25:請求月
      # 26:請求月月末               27:請求月日数   28:請求月+1
      awk '{$27=$27+1; print}'     |
      delf 25/26 28                |
      # 1:特販採用フラグ            2:入居者ID      3:請求月          4:契約ID        5:利用料種別ID
      # 6:契約枝番                  7:利用料名      8:税区分          9:支払区分      10:費用算出方法
      # 11:起算開始日               12:起算終了日   13:金額           14:特販ID       15:値引額
      # 16:値引後金額               17:特販期間FROM 18:特販期間TO     19:起算開始月   20:起算終了月
      # 21:レコードが発生した年月日 22:日割り日数   23:特販期間FROM月 24:特販期間TO月 25:請求月日数
      # -
      # 日割り日数=請求月日数ならば日割りしないので日割り日数=0
      # 日割り日数!=請求月日数ならば
      #   日割り日数<30ならば日割りする
      #   上記以外ならば日割り日数=0
      awk '{if($22==$25)
              {$22=0};
            print}'                |
      awk '{if($22<30)
              {$22=$22;}
            else
              {$22=0};
            print}'                |
      delf NF                      > ${tmp}-hiwari_keisan_mae
      # 1:特販採用フラグ            2:入居者ID      3:請求月          4:契約ID        5:利用料種別ID
      # 6:契約枝番                  7:利用料名      8:税区分          9:支払区分      10:費用算出方法
      # 11:起算開始日               12:起算終了日   13:金額           14:特販ID       15:値引額
      # 16:値引後金額               17:特販期間FROM 18:特販期間TO     19:起算開始月   20:起算終了月
      # 21:レコードが発生した年月日 22:日割り日数   23:特販期間FROM月 24:特販期間TO月

      rm ${tmp}-tujyou_hiwari_taisyou_bunki1 \
         ${tmp}-tujyou_hiwari_taisyou_bunki2 \
         ${tmp}-tujyou_hiwari_taisyou_bunki3
      #--------------------------------------

      #--------------------------------------
      # ファイルがある状態で処理に入るのでパイプでエラーのとき落とす
      [ $(plus ${PIPESTATUS[@]}) -eq 0 ] || : > ${tmp}-err
      [ -e ${tmp}-err ] && break
      #--------------------------------------

      # ----------------------
      # 列チェック
      
      [ "$(retu ${tmp}-hiwari_keisan_mae)" != "24" ] && : > $tmp-err
      [ "$(retu ${tmp}-hiwari_keisan_mae | gyo)" != "1" ] && : > $tmp-err
      [ "$(awk 'NF!="24"' ${tmp}-hiwari_keisan_mae | gyo)" != "0" ] && : > $tmp-err
      [ -e ${tmp}-err ] && break;
      # ----------------------

      #--------------------------------------
      cat ${tmp}-hiwari_keisan_mae |
#
      while read is_tokuhan tokuhan_igai ; do
        case "${is_tokuhan}" in
          #-------------------------
          # 特販を採用しない日割り
          0 )
            #-----------------------------------------------------------------------
            # 日割り日数あり

            #--------------------------------------
            # 特販を採用しないので日割り値引金額＝0、日割り値引後金額＝日割り金額
            echo "${tokuhan_igai}" |
            awk '$21!="0"'         |
            # 1:入居者ID      2:請求月          3:契約ID        4:利用料種別ID 5:契約枝番
            # 6:利用料名      7:税区分          8:支払区分      9:費用算出方法 10:起算開始日
            # 11:起算終了日   12:金額           13:特販ID       14:値引額      15:値引後金額
            # 16:特販期間FROM 17:特販期間TO     18:起算開始月   19:起算終了月  20:レコードが発生した年月日
            # 21:日割り日数   22:特販期間FROM月 23:特販期間TO月
            cjoin0 +ng key=4 <(echo "001") > ${tmp}-hiwari_chinryou 2> ${tmp}-hiwari_not_chinryou
            #--------------------------------------
            if [ "${shisetsu}" = "0005" ];then
              cat $tmp-hiwari_chinryou ${tmp}-hiwari_not_chinryou > ${tmp}-hiwari_not_chinryou_new
              mv ${tmp}-hiwari_not_chinryou_new ${tmp}-hiwari_not_chinryou
              : > $tmp-hiwari_chinryou
            else
              :
            fi
            #--------------------------------------

            # 下記ルールで計算する
            # 日割でいた日数ぶんの金額を少なく(切捨てで)算出
            #   賃料：1000円未満切捨て
            #   その他：小数点以下第一位切捨て

            #--------------------------------------
            # 賃料(判定基準1000円未満)
           
            lcalc '$[1:NF],
                   sage($12*$21/30,03)' ${tmp}-hiwari_chinryou |
            # 1:入居者ID      2:請求月          3:契約ID        4:利用料種別ID 5:契約枝番
            # 6:利用料名      7:税区分          8:支払区分      9:費用算出方法 10:起算開始日
            # 11:起算終了日   12:金額           13:特販ID       14:値引額      15:値引後金額
            # 16:特販期間FROM 17:特販期間TO     18:起算開始月   19:起算終了月  20:レコードが発生した年月日
            # 21:日割り日数   22:特販期間FROM月 23:特販期間TO月 24:日割り金額
            awk '{print $0,"0",$NF}'                           > ${tmp}-hiwari_chinryou_result
            # 1:入居者ID          2:請求月          3:契約ID        4:利用料種別ID 5:契約枝番
            # 6:利用料名          7:税区分          8:支払区分      9:費用算出方法 10:起算開始日
            # 11:起算終了日       12:金額           13:特販ID       14:値引額      15:値引後金額
            # 16:特販期間FROM     17:特販期間TO     18:起算開始月   19:起算終了月  20:レコードが発生した年月日
            # 21:日割り日数       22:特販期間FROM月 23:特販期間TO月 24:日割り金額  25:日割り値引金額
            # 26:日割り値引後金額
            #--------------------------------------
            
            #--------------------------------------
            # 賃料以外(判定基準小数点以下第一位)
           
            lcalc '$[1:NF],
                   sage($12*$21/30,0)' ${tmp}-hiwari_not_chinryou |
            # 1:入居者ID      2:請求月          3:契約ID        4:利用料種別ID 5:契約枝番
            # 6:利用料名      7:税区分          8:支払区分      9:費用算出方法 10:起算開始日
            # 11:起算終了日   12:金額           13:特販ID       14:値引額      15:値引後金額
            # 16:特販期間FROM 17:特販期間TO     18:起算開始月   19:起算終了月  20:レコードが発生した年月日
            # 21:日割り日数   22:特販期間FROM月 23:特販期間TO月 24:日割り金額
            awk '{print $0,"0",$NF}'                              > ${tmp}-hiwari_not_chinryou_result
            # 1:入居者ID          2:請求月          3:契約ID        4:利用料種別ID 5:契約枝番
            # 6:利用料名          7:税区分          8:支払区分      9:費用算出方法 10:起算開始日
            # 11:起算終了日       12:金額           13:特販ID       14:値引額      15:値引後金額
            # 16:特販期間FROM     17:特販期間TO     18:起算開始月   19:起算終了月  20:レコードが発生した年月日
            # 21:日割り日数       22:特販期間FROM月 23:特販期間TO月 24:日割り金額  25:日割り値引金額
            # 26:日割り値引後金額
            #--------------------------------------

            #--------------------------------------
            # まとめる

            cat ${tmp}-hiwari_chinryou_result ${tmp}-hiwari_not_chinryou_result > ${tmp}-hiwari1
            #--------------------------------------
            #-----------------------------------------------------------------------

            #-----------------------------------------------------------------------
            # 日割り日数なし

            echo "${tokuhan_igai}" |
            awk '$21=="0"'         |
            awk '{if($4=="001")
                    {hiwari_kingaku=$12;
                     hiwari_nebiki_kingaku=0;
                     hiwari_nebikigo_kingaku=hiwari_kingaku}
                  else
                    {hiwari_kingaku=$12;
                     hiwari_nebiki_kingaku=0;
                     hiwari_nebikigo_kingaku=hiwari_kingaku};
                  print $0,hiwari_kingaku,hiwari_nebiki_kingaku,hiwari_nebikigo_kingaku}' > ${tmp}-hiwari2
            #-----------------------------------------------------------------------

            #--------------------------------------
            # ファイルがある状態で処理に入るのでパイプでエラーのとき落とす
            [ $(plus ${PIPESTATUS[@]}) -eq 0 ] || : > ${tmp}-err
            [ -e ${tmp}-err ] && break
            #--------------------------------------

             cat ${tmp}-hiwari1 ${tmp}-hiwari2 >> ${tmp}-nottokuhan_while_result
             rm ${tmp}-hiwari1 ${tmp}-hiwari2
          ;;
          #-------------------------

          #-------------------------
          # 特販を採用する日割り
          1 )
            #-----------------------------------------------------------------------
            #--------------------------------------
            # 日割り日数あり

            echo "${tokuhan_igai}" |
            awk '$21!="0"'         |
            # 1:入居者ID      2:請求月          3:契約ID        4:利用料種別ID 5:契約枝番
            # 6:利用料名      7:税区分          8:支払区分      9:費用算出方法 10:起算開始日
            # 11:起算終了日   12:金額           13:特販ID       14:値引額      15:値引後金額
            # 16:特販期間FROM 17:特販期間TO     18:起算開始月   19:起算終了月  20:レコードが発生した年月日
            # 21:日割り日数   22:特販期間FROM月 23:特販期間TO月
            cjoin0 +ng key=4 <(echo "001") > ${tmp}-tokuhan_hiwari_chinryou 2> ${tmp}-tokuhan_hiwari_not_chinryou
            #--------------------------------------
            #--------------------------------------
            if [ "${shisetsu}" = "0005" ];then
              cat $tmp-tokuhan_hiwari_chinryou ${tmp}-tokuhan_hiwari_not_chinryou > ${tmp}-tokuhan_hiwari_not_chinryou_new
              mv ${tmp}-tokuhan_hiwari_not_chinryou_new ${tmp}-tokuhan_hiwari_not_chinryou
              : > $tmp-tokuhan_hiwari_chinryou
            else
              :
            fi
            #--------------------------------------

            # 下記ルールで計算する
            # 日割でいた日数ぶんの金額を少なく(切捨てで)算出
            #   賃料：1000円未満切捨て
            #   その他：小数点以下第一位切捨て
            
            #--------------------------------------
            # 賃料(判定基準1000円未満)

            lcalc '$[1:NF],
                   sage($12*$21/30,03),
                   sage($14*$21/30,03),
                   sage($12*$21/30,03) - sage($14*$21/30,03)' ${tmp}-tokuhan_hiwari_chinryou > ${tmp}-tokuhan_hiwari_chinryou_result
            # 1:入居者ID          2:請求月          3:契約ID        4:利用料種別ID 5:契約枝番
            # 6:利用料名          7:税区分          8:支払区分      9:費用算出方法 10:起算開始日
            # 11:起算終了日       12:金額           13:特販ID       14:値引額      15:値引後金額
            # 16:特販期間FROM     17:特販期間TO     18:起算開始月   19:起算終了月  20:レコードが発生した年月日
            # 21:日割り日数       22:特販期間FROM月 23:特販期間TO月 24:日割り金額  25:日割り値引金額
            # 26:日割り値引後金額
            #--------------------------------------

            #--------------------------------------
            # 賃料以外(判定基準小数点以下第一位)

            lcalc '$[1:NF],
                   sage($12*$21/30,0),
                   sage($14*$21/30,0),
                   sage($12*$21/30,0) - sage($14*$21/30,0)' ${tmp}-tokuhan_hiwari_not_chinryou > ${tmp}-tokuhan_hiwari_not_chinryou_result
            # 1:入居者ID          2:請求月          3:契約ID        4:利用料種別ID 5:契約枝番
            # 6:利用料名          7:税区分          8:支払区分      9:費用算出方法 10:起算開始日
            # 11:起算終了日       12:金額           13:特販ID       14:値引額      15:値引後金額
            # 16:特販期間FROM     17:特販期間TO     18:起算開始月   19:起算終了月  20:レコードが発生した年月日
            # 21:日割り日数       22:特販期間FROM月 23:特販期間TO月 24:日割り金額  25:日割り値引金額
            # 26:日割り値引後金額
            #--------------------------------------

            #--------------------------------------
            # まとめる

            cat ${tmp}-tokuhan_hiwari_chinryou_result ${tmp}-tokuhan_hiwari_not_chinryou_result > ${tmp}-tokuhan_hiwari1
            #--------------------------------------

            #-----------------------------------------------------------------------

            #-----------------------------------------------------------------------
            # 日割り日数なし

            echo "${tokuhan_igai}" |
            awk '$21=="0"'         |
            awk '{if(4=="001")
                    {hiwari_kingaku=$12;
                     hiwari_nebiki_kingaku=$14;
                     hiwari_nebikigo_kingaku=$15}
                  else
                    {hiwari_kingaku=$12;
                     hiwari_nebiki_kingaku=$14;
                     hiwari_nebikigo_kingaku=$15};
                  print $0,hiwari_kingaku,hiwari_nebiki_kingaku,hiwari_nebikigo_kingaku}' > ${tmp}-tokuhan_hiwari2
            #-----------------------------------------------------------------------

            #--------------------------------------
            # ファイルがある状態で処理に入るのでパイプでエラーのとき落とす
            [ $(plus ${PIPESTATUS[@]}) -eq 0 ] || : > ${tmp}-err
            [ -e ${tmp}-err ] && break
            #--------------------------------------

             cat ${tmp}-tokuhan_hiwari1 ${tmp}-tokuhan_hiwari2 >> ${tmp}-tokuhan_while_result
             rm ${tmp}-tokuhan_hiwari1 ${tmp}-tokuhan_hiwari2
          ;;
          #-------------------------
        esac
      done
#
      # エラー判定
      [ -e ${tmp}-err ] && break
      #--------------------------------------
    ;;
    #------------------------------------------

    #------------------------------------------
    # 請求月が起算開始終了にかぶらない
    2 )
      #--------------------------------------
      # 日割りしない
      cat ${tmp}-hiwari_basedata   |
      awk '$1=="'${gyo_no}'"'      |
      delf 1 2                     |
      awk '{print $0,"0"}'         |
      # 特販期間の金額を採用するかの判定
      self 1/NF 16.1.6 17.1.6      |
      # 1:入居者ID      2:請求月          3:契約ID        4:利用料種別ID 5:契約枝番
      # 6:利用料名      7:税区分          8:支払区分      9:費用算出方法 10:起算開始日
      # 11:起算終了日   12:金額           13:特販ID       14:値引額      15:値引後金額
      # 16:特販期間FROM 17:特販期間TO     18:起算開始月   19:起算終了月  20:レコードが発生した年月日
      # 21:日割り日数   22:特販期間FROM月 23:特販期間TO月
      awk '{if($13!="_" && $22<=$2 && $23>=$2)
              {flg=1}
            else
              {flg=0};
            print flg,$0}'         > ${tmp}-hiwari_keisan_mae2
      # 1:特販採用フラグ            2:入居者ID      3:請求月          4:契約ID        5:利用料種別ID
      # 6:契約枝番                  7:利用料名      8:税区分          9:支払区分      10:費用算出方法
      # 11:起算開始日               12:起算終了日   13:金額           14:特販ID       15:値引額
      # 16:値引後金額               17:特販期間FROM 18:特販期間TO     19:起算開始月   20:起算終了月
      # 21:レコードが発生した年月日 22:日割り日数   23:特販期間FROM月 24:特販期間TO月

      #--------------------------------------
      # ファイルがある状態で処理に入るのでパイプでエラーのとき落とす
      [ $(plus ${PIPESTATUS[@]}) -eq 0 ] || : > ${tmp}-err
      [ -e ${tmp}-err ] && break
      #--------------------------------------

      # ----------------------
      # 列チェック
      
      [ "$(retu ${tmp}-hiwari_keisan_mae2)" != "24" ] && : > $tmp-err
      [ "$(retu ${tmp}-hiwari_keisan_mae2 | gyo)" != "1" ] && : > $tmp-err
      [ "$(awk 'NF!="24"' ${tmp}-hiwari_keisan_mae2 | gyo)" != "0" ] && : > $tmp-err
      [ -e ${tmp}-err ] && break;
      # ----------------------
      #--------------------------------------

      #--------------------------------------
      cat ${tmp}-hiwari_keisan_mae2 |
      while read is_tokuhan tokuhan_igai ; do
        # 日割りしないが、日割りと処理を同じにするため、日割り項目にそのままの値を入れる
        case "${is_tokuhan}" in
          #--------------------------------
          # 特販を採用しない
          0 )
            # 特販を採用しないので、日割り金額＝金額、日割り後値引金額＝0、日割り値引後金額＝金額
            echo "${tokuhan_igai}" |
            # 1:入居者ID      2:請求月          3:契約ID        4:利用料種別ID 5:契約枝番
            # 6:利用料名      7:税区分          8:支払区分      9:費用算出方法 10:起算開始日
            # 11:起算終了日   12:金額           13:特販ID       14:値引額      15:値引後金額
            # 16:特販期間FROM 17:特販期間TO     18:起算開始月   19:起算終了月  20:レコードが発生した年月日
            # 21:日割り日数   22:特販期間FROM月 23:特販期間TO月
            awk '{print $0,"0"}'   |
            self 1/NF-1 12 NF 12   >> ${tmp}-nottokuhan_while_result
            # 1:入居者ID          2:請求月          3:契約ID        4:利用料種別ID 5:契約枝番
            # 6:利用料名          7:税区分          8:支払区分      9:費用算出方法 10:起算開始日
            # 11:起算終了日       12:金額           13:特販ID       14:値引額      15:値引後金額
            # 16:特販期間FROM     17:特販期間TO     18:起算開始月   19:起算終了月  20:レコードが発生した年月日
            # 21:日割り日数       22:特販期間FROM月 23:特販期間TO月 24:日割り金額  25:日割り後値引金額
            # 26:日割り値引後金額

            # エラー判定
            [ $(plus ${PIPESTATUS[@]}) -eq 0 ] || : > ${tmp}-err
            [ -e ${tmp}-err ] && break
          ;;
          #--------------------------------

          #--------------------------------
          # 特販を採用する
          1 )
            echo "${tokuhan_igai}" |
            # 1:入居者ID      2:請求月          3:契約ID        4:利用料種別ID 5:契約枝番
            # 6:利用料名      7:税区分          8:支払区分      9:費用算出方法 10:起算開始日
            # 11:起算終了日   12:金額           13:特販ID       14:値引額      15:値引後金額
            # 16:特販期間FROM 17:特販期間TO     18:起算開始月   19:起算終了月  20:レコードが発生した年月日
            # 21:日割り日数   22:特販期間FROM月 23:特販期間TO月
            awk '{print $0,"0"}'   |
            self 1/NF-1 15 NF 15   >> ${tmp}-tokuhan_while_result
            # 1:入居者ID          2:請求月          3:契約ID        4:利用料種別ID 5:契約枝番
            # 6:利用料名          7:税区分          8:支払区分      9:費用算出方法 10:起算開始日
            # 11:起算終了日       12:金額           13:特販ID       14:値引額      15:値引後金額
            # 16:特販期間FROM     17:特販期間TO     18:起算開始月   19:起算終了月  20:レコードが発生した年月日
            # 21:日割り日数       22:特販期間FROM月 23:特販期間TO月 24:日割り金額  25:日割り後値引金額
            # 26:日割り値引後金額

            # エラー判定
            [ $(plus ${PIPESTATUS[@]}) -eq 0 ] || : > ${tmp}-err
            [ -e ${tmp}-err ] && break
          ;;
          #--------------------------------
        esac
      #--------------------------------------
      done
      # エラー判定
      [ -e ${tmp}-err ] && break
    ;;
    #------------------------------------------
  esac
  # 1:入居者ID          2:請求月          3:契約ID        4:利用料種別ID 5:契約枝番
  # 6:利用料名          7:税区分          8:支払区分      9:費用算出方法 10:起算開始日
  # 11:起算終了日       12:金額           13:特販ID       14:値引額      15:値引後金額
  # 16:特販期間FROM     17:特販期間TO     18:起算開始月   19:起算終了月  20:レコードが発生した年月日
  # 21:日割り日数       22:特販期間FROM月 23:特販期間TO月 24:日割り金額  25:日割り後値引金額
  # 26:日割り値引後金額
done
#---------------------------------------------------------------

#---------------------------------------------------------------
# エラーファイルがあったら落とす
[ -e ${tmp}-err ] && error_exit "処理中にエラーが発生しました(NORMAL_HIWARI)"
#---------------------------------------------------------------

#---------------------------------------------------------------
# 日割り日数が0でないものは日割り計算をしたので特別処理フラグ1(＝日割り済み)をいれる。それ以外は0
cat ${tmp}-tokuhan_while_result ${tmp}-nottokuhan_while_result |
awk '{if($21!="0")
        {flg=1}
      else
        {flg=0};
     print $0,flg}'                  |
# 1:入居者ID          2:請求月          3:契約ID        4:利用料種別ID 5:契約枝番
# 6:利用料名          7:税区分          8:支払区分      9:費用算出方法 10:起算開始日
# 11:起算終了日       12:金額           13:特販ID       14:値引額      15:値引後金額
# 16:特販期間FROM     17:特販期間TO     18:起算開始月   19:起算終了月  20:レコードが発生した年月日
# 21:日割り日数       22:特販期間FROM月 23:特販期間TO月 24:日割り金額  25:日割り後値引金額
# 26:日割り値引後金額 27:特別処理フラグ

# 日割りや値引の結果をセットする
self 1/11 24 13 25/26 16/20 26 27    > ${tmp}-tujyou_hiwari_taisyou_kakutei
# 1:入居者ID          2:請求月          3:契約ID      4:利用料種別ID      5:契約枝番
# 6:利用料名          7:税区分          8:支払区分    9:費用算出方法      10:起算開始日
# 11:起算終了日       12:日割り金額     13:特販ID     14:日割り後値引金額 15:日割り値引後金額
# 16:特販期間FROM     17:特販期間TO     18:起算開始月 19:起算終了月       20:レコードが発生した年月日
# 21:日割り値引後金額 22:特別処理フラグ
#---------------------------------------------------------------

### 日割り側の処理ここまで
#---------------------------------------------------------------

#---------------------------------------------------------------
# エラーファイルがあったら落とす
[ -e ${tmp}-err ] && error_exit "処理中にエラーが発生しました(NORMAL_HIWARI)"
#---------------------------------------------------------------

exit 0

