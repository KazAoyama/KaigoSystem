#!/bin/bash
#
# TAIKYOSEISAN.SEARCH
#
# Usage : AZUKARI_TOUROKU.SEARCH namefile datafile
#
# Written by j.aoyagi(hands lab.inc)


# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null

#--------------------ログ出力--------------------
mkdir -p /home/hands/E-LIFE/KEIRI/APLOG/$(date +%Y%m%d)
exec 2> /home/hands/E-LIFE/KEIRI/APLOG/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv


# 変数設定
tmp=/var/tmp/${$}

#ゴミtmpの消去
rm -f $tmp-*

today="$(date +%Y%m%d)"
this_month="$(date +%Y%m)"
this_year="$(date +%Y)"

# ディレクトリ設定
home_dir="/home/hands"
app_dir="${home_dir}/E-LIFE/KEIRI"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
pompa_dir="${app_dir}/POMPA/TAIKYOSEISAN"
input_dir="${app_dir}/INPUT"
apptbl_dir="${app_dir}/TBL"
kyoutsu_dir="${home_dir}/E-LIFE/KYOUTSU/HTML"
hometbl_dir="${home_dir}/E-LIFE/TBL"
riyosha_dir="/DATA/E-LIFE/UNEI/RIYOUSHA"
work="${app_dir}/WORK"

# 引数設定
namefile=${1}
checkfile=${2}
searchfile=${3}
downloadfile=${4}

# eval
eval $(name-source ${namefile})

echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu

# 日付
nengetsu=$(echo $NENGETSU | sed 's/-//g')
getsumatsu=$(mdate ${nengetsu}m | tarr | tail -n1)

# searchfileの処理
cat ${riyosha_dir}/RIYOUSHA_KIHON |
self 1 2                          > $tmp-riyosha_kihon

# SHISETSU_RIYOSHA_STATUSの準備
cat ${riyosha_dir}/SHISETSU_RIYOUSHA_STATUS                  |
# 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
join0 key=1 $tmp-shisetsu                                    |
#join0 key=2 <(echo "01")                                     |
awk '$9==1'                                                  |
awk '$7<="'${getsumatsu}'" && $8>="'${nengetsu}'"'           > $tmp-riyosha_status
awk '$8<="'${getsumatsu}'"' $tmp-riyosha_status              > $tmp-taikyo_list

cp $tmp-riyosha_status ${work}/test_statsu
cp $tmp-taikyo_list ${work}/taikyo_list

# 退去日の入っている人が部屋移動などで同じ施設にまだいるかいないか
self 6 $tmp-taikyo_list                                      |
LANG=C sort -u                                               > $tmp-daburi_check

for taikyo in $(yarr $tmp-daburi_check);do
  cjoin0 key=6 <(echo ${taikyo}) $tmp-riyosha_status         > $tmp-gyo_check
  [ "$(gyo $tmp-gyo_check)" = 1 ] && cat $tmp-gyo_check
done                                                         > $tmp-search


cat $tmp-search         |
self 5 6 7 8            |
# 1:部屋番号 2:利用者ID 3:入居日 4:退去日
LANG=C sort -k2,2       |
join1 key=2 $tmp-riyosha_kihon |
self 2 1 3 5           |
tee ${work}/test_sach |
cat




rm -f ${tmp}-*
exit 0

