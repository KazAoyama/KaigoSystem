#!/bin/bash
#
# KOJINATESEIKYUSHO_SAKUSEI.KEISAN.NORMAL 施設請求計算部分のCGI
#
# Written by S.Otsubo

# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null
source /home/hands/E-LIFE/KEIRI/CGI/KOJINATESEIKYUSHO_SAKUSEI.INI &> /dev/null

# ログ
[ ! -e /home/hands/E-LIFE/KEIRI/TRACE_LOG/${today} ] && mkdir /home/hands/E-LIFE/KEIRI/TRACE_LOG/${today}
exec 2> /home/hands/E-LIFE/KEIRI/TRACE_LOG/${today}/LOG.$(basename ${0}).${HOSTNAME}.${current_time}; set -xv
#---------------------------------------------------------------

#---------------------------------------------------------------
function error_exit {
  message="${1}"
  echo "${message}"
  exit 1
}
#---------------------------------------------------------------

#---------------------------------------------------------------
# 引数設定
namefile=${1}
# 変数
eval $(name-source ${namefile})
seikyu_syori_month="${year}${month}"
seikyu_syori_next_month="$(mdate ${seikyu_syori_month}m/+1)"
seikyu_syori_two_next_month="$(mdate ${seikyu_syori_month}m/+2)"
seikyu_syori_last_month="$(mdate ${seikyu_syori_month}m/-1)"
seikyu_syori_two_last_month="$(mdate ${seikyu_syori_month}m/-2)"
#---------------------------------------------------------------

#---------------------------------------------------------------
# 1.請求対象月の請求金額を普通に計算する(部屋単位の項目もなにも考えず全員取る)(月額利用料のみ対象)

# ${riyosha_dir}/RIYOUSHA_RIYOURYOUから確定する利用者で絞込み
join0 key=1 ${tmp}-member ${riyosha_dir}/RIYOUSHA_RIYOURYOU |
# 1:入居者ID    2:施設ID        3:契約ID      4:利用料種別ID 5:契約枝番
# 6:起算開始日  7:起算終了日    8:金額        9:特販ID       10:値引額
# 11:値引後金額 12:特販期間FROM 13:特販期間TO 14:予備1       15:予備2
# 16:予備3      17:予備4        18:予備5      19:削除フラグ  20:更新時間
# 21:更新者

# 施設で絞る
cjoin0 key=2 <(echo "${shisetsu}") - |
delf 2                               |
# 1:入居者ID      2:契約ID      3:利用料種別ID 4:契約枝番  5:起算開始日
# 6:起算終了日    7:金額        8:特販ID       9:値引額    10:値引後金額
# 11:特販期間FROM 12:特販期間TO 13:予備1       14:予備2    15:予備3
# 16:予備4        17:予備5      18:削除フラグ  19:更新時間 20:更新者

# 有効なものに絞る
awk '$18!="9"'                       |
self 1/12                            |
# 1:入居者ID      2:契約ID      3:利用料種別ID 4:契約枝番 5:起算開始日
# 6:起算終了日    7:金額        8:特販ID       9:値引額   10:値引後金額
# 11:特販期間FROM 12:特販期間TO

# あとでつかえるので吐いておく
tee ${tmp}-RIYOUSHA_RIYOURYOU_yukou  |

# 利用料マスタと結合させる
LANG=C sort -k3,3                    |
join1 key=3 ${tmp}-RIYOURYOU_MASTER - |
# 1:入居者ID    2:契約ID       3:利用料種別ID 4:利用料名    5:税区分
# 6:支払区分    7:費用算出方法 8:契約枝番     9:起算開始日  10:起算終了日
# 11:金額       12:特販ID      13:値引額      14:値引後金額 15:特販期間FROM
# 16:特販期間TO

# キー項目を頭にもってくるため若干ならびかえ
self 1/3 8 4/7 9/NF                  |
# 1:入居者ID    2:契約ID   3:利用料種別ID 4:契約枝番    5:利用料名
# 6:税区分      7:支払区分 8:費用算出方法 9:起算開始日  10:起算終了日
# 11:金額       12:特販ID  13:値引額      14:値引後金額 15:特販期間FROM
# 16:特販期間TO
LANG=C sort -k1,4                    |

# -
# 1-4:キー
# 5-11:利用料側情報
# 12-16:特販側情報
# -

# 2の処理で使用するためファイル吐き出し
tee ${tmp}-getsugaku_riyouryou_kihon_kari |
# 1:入居者ID    2:契約ID   3:利用料種別ID 4:契約枝番    5:利用料名
# 6:税区分      7:支払区分 8:費用算出方法 9:起算開始日  10:起算終了日
# 11:金額       12:特販ID  13:値引額      14:値引後金額 15:特販期間FROM
# 16:特販期間TO

# 支払区分によって何月分の請求データになるか設定する
#   1:先取り(翌月)=処理月＋2
#   2:先取り(今月)=処理月+1
#   3:後払い=処理月
awk '{if($7=="1")
        {seikyu_month="'${seikyu_syori_two_next_month}'"}
      else if($7=="2")
        {seikyu_month="'${seikyu_syori_next_month}'"}
      else
        {seikyu_month="'${seikyu_syori_month}'"};
      print $0,seikyu_month,substr($9,1,6),substr($10,1,6)}' |
tee ${tmp}-kakunin |
# 1:入居者ID    2:契約ID   3:利用料種別ID 4:契約枝番    5:利用料名
# 6:税区分      7:支払区分 8:費用算出方法 9:起算開始日  10:起算終了日
# 11:金額       12:特販ID  13:値引額      14:値引後金額 15:特販期間FROM
# 16:特販期間TO 17:請求月  18:起算開始月  19:起算終了月
# -
# 請求月が起算開始月から終了月に入らないものを除く
awk '$17>=$18 && $17<=$19 {print}' - |
# 請求月を頭に持ってくる並び替え(と起算開始終了月を消す作業)
self 1 17 2/16                       |
# 1:入居者ID      2:請求月      3:契約ID   4:利用料種別ID 5:契約枝番
# 6:利用料名      7:税区分      8:支払区分 9:費用算出方法 10:起算開始日
# 11:起算終了日   12:金額       13:特販ID  14:値引額      15:値引後金額
# 16:特販期間FROM 17:特販期間TO
LANG=C sort                          > ${tmp}-getsugaku_riyouryou_kihon #後ほど日割り判定して特販判定して税計算する

#最後の絞込みでファイルが空になる場合もあるのでエラーで落とさない

# ---------------------------------
# かくにんしたい
# 絞込みしてるので対象者全員のファイルはないので、列チェックだけ行う

[ "$(retu ${tmp}-kakunin)" != "19" ] && error_exit "処理中にエラーが発生しました(NORMAL)"
[ "$(retu ${tmp}-kakunin | gyo)" != "1" ] && error_exit "処理中にエラーが発生しました(NORMAL)"
[ "$(awk 'NF!="19"' ${tmp}-kakunin | gyo)" != "0" ] && error_exit "処理中にエラーが発生しました(NORMAL)"

# join1前後で行数変わってないかチェック(ここは絞込みでなく結合なのであってないとおかしい)
join_mae="$(gyo ${tmp}-RIYOUSHA_RIYOURYOU_yukou)"
join_ato="$(gyo ${tmp}-getsugaku_riyouryou_kihon_kari)"
[ "${join_mae}" != "${join_ato}" ] && error_exit "処理中にエラーが発生しました(NORMAL)"
# ---------------------------------
#---------------------------------------------------------------

exit 0

