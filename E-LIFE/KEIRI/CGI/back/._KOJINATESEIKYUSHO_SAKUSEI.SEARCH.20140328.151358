#!/bin/bash
#
# KOJINATESEIKYUSHO_SAKUSEI.CGI : 施設請求サーチ
#
# Usage : KOJINATESEIKYUSHO_SAKUSEI.CGI namefile
#
# Written by S.Otsubo

# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null
source /home/hands/E-LIFE/KEIRI/CGI/KOJINATESEIKYUSHO_SAKUSEI.INI &> /dev/null

# ログ
[ ! -e /home/hands/E-LIFE/KEIRI/TRACE_LOG/${today} ] && mkdir /home/hands/E-LIFE/KEIRI/TRACE_LOG/${today}
exec 2> /home/hands/E-LIFE/KEIRI/TRACE_LOG/${today}/LOG.$(basename ${0}).${HOSTNAME}.${current_time}; set -xv

#ゴミtmpの消去
rm -f $tmp-*

#かりに
tmp=/home/hands/work/otsubo/search

# ---------------------------------------
# 変数

namefile=${1}
eval $(name-source ${namefile})

# mode
if [ -n "${MODE}" -a "${MODE}" != "_" ];then
  :
else
  MODE="init"
fi

# 処理年月
syori_nengetsu="${year}${month}"
# ---------------------------------------

# ---------------------------------------
# テーブル用意

# 請求ステータス
# ${home_tbl_dir}/CONFIG/SEIKYU_STATUS

# なまえ
# ${riyosha_dir}/RIYOUSHA_MASTER
awk '$5!="9"' - ${riyosha_dir}/RIYOUSHA_MASTER |
self 1/2 |
LANG=C sort > ${tmp}-RIYOUSHA_MASTER
# ---------------------------------------

# ---------------------------------------
# 選択した年月が当月確定しているかどうか

LANG=C sort -k1,1 ${seikyu_dir}/SEIKYU_KAKUTEI/SEIKYU_KAKUTEI.${shisetsu} |
awk '$4!="9"' - |
# 1:施設ID 2:確定年月 3:確定ステータス 4:削除フラグ 5:更新日
# 6:更新者
cjoin0 key=2 <(echo "${year}${month}") |
getlast 1 1 > ${tmp}-kakutei_file
if [ -s ${tmp}-kakutei_file ] ; then
  kakutei_status="$(self 3 ${tmp}-kakutei_file)"
  case "${kakutei_status}" in
    1 )
      is_kakutei="false"
    ;;
    2 )
      is_kakutei="true"
    ;;
  esac
else
  is_kakutei="false"
fi
# ---------------------------------------

# ---------------------------------------
# サーチ

# 繰越か通常かで参照するステータスが違う
# -
# 繰越で表示したい
#   有効なもの34
# -
# 請求で表示したい
#   選択した月が当月確定している
#     確定年月が選択した月のものをとってくる
# 
#   選択した月が当月確定していない
#     選択した年月のステータス125
#     年月関係なくステータス4(請求対象選択済み(繰越))
# -

# ${seikyu_dir}/${hensu_shisetsu}/HEAD/SEIKYU_HEAD
# -
# 1:処理月            2:入居者ID          3:請求ステータス  4:施設ID         5:建屋ID
# 6:フロア            7:ユニットID        8:居室番号        9:支払合算相手ID 10:明細ファイル名
# 11:請求書設定フラグ 12:仮請求書出力時間 13:請求書出力時間 14:請求確定月    15:予備
# 16:予備             17:予備             18:予備           19:予備          20:予備
# 21:予備             22:予備             23:予備           24:削除フラグ    25:更新時間
# 26:更新者

# -------------------
# ヘッダの検索


case "${MODE}" in
  init )
    echo "@"
  ;;
  # -----------------------------------
  # 繰越ぶん
  kurikoshi_init | seikyu_koushin_kurikoshi )
#    cjoin0 key=1 <(echo "${syori_nengetsu}") ${seikyu_dir}/${shisetsu}/HEAD/SEIKYU_HEAD |
    LANG=C sort -k1,2 -k25,25 ${seikyu_dir}/${shisetsu}/HEAD/SEIKYU_HEAD |
    getlast 1 2 |
    awk '$24!="9"' - |
    cjoin0 key=3 <(seq 3 4 | tarr) -
  ;;
  # -----------------------------------
  # -----------------------------------
  # 通常処理ぶん
  search | keisan | seikyu_koushin | tougetsukakutei | karikakutei | karikakutei_kaijyo )
    case "${is_kakutei}" in
      # ---------------------------
      # 確定しているので請求確定年月でとってくる
      true )
        LANG=C sort -k1,2 -k25,25 ${seikyu_dir}/${shisetsu}/HEAD/SEIKYU_HEAD |
        getlast 1 2 |
        awk '$24!="9"' |
        cjoin0 key=14 <(echo "${syori_nengetsu}") ${seikyu_dir}/${shisetsu}/HEAD/SEIKYU_HEAD
      ;;
      # ---------------------------
      # ---------------------------
      # 確定していないので、下記条件で
      #   選択した年月のステータス12567
      #   年月関係なくステータス4(請求対象選択済み(繰越))
      false )
        # ステータスが4(請求対象選択済(繰越)は今月の処理ではないので、年月を指定せずに4だけ抜いてくる)
        LANG=C sort -k1,2 -k25,25 ${seikyu_dir}/${shisetsu}/HEAD/SEIKYU_HEAD |
        getlast 1 2 |
        awk '$24!="9"' |
        cjoin0 key=3 <(echo "4") - > ${tmp}-kurikoshibun
    
        # 処理月分の回収
        LANG=C sort -k1,2 -k25,25 ${seikyu_dir}/${shisetsu}/HEAD/SEIKYU_HEAD |
        getlast 1 2 |
        awk '$24!="9"' - |
        cjoin0 key=1 <(echo "${syori_nengetsu}") - |
        cjoin0 key=3 <(seq 1 7 | grep -v 3 | grep -v 4) - |
        cat - ${tmp}-kurikoshibun
      ;;
      # ---------------------------
    esac
  ;;
  # -----------------------------------
esac |
self 1/14 25/26 |
# 1:処理月            2:入居者ID          3:請求ステータス  4:施設ID         5:建屋ID
# 6:フロア            7:ユニットID        8:居室番号        9:支払合算相手ID 10:明細ファイル名
# 11:請求書設定フラグ 12:仮請求書出力時間 13:請求書出力時間 14:請求確定月    15:更新時間
# 16:更新者
# -
# 明細とつなげるため、キー項目(請求先と処理月)を頭に持ってくる
# 合算相手がいる(＝自分で支払わない)ならばそれが請求先、合算相手がいないなら自分が請求先
awk '{if($9!="_"){seikyusaki=$9;}
      else{seikyusaki=$2;};
      print seikyusaki,$0}' - |
# 1:請求先          2:処理月            3:入居者ID          4:請求ステータス  5:施設ID
# 6:建屋ID          7:フロア            8:ユニットID        9:居室番号        10:支払合算相手ID
# 11:明細ファイル名 12:請求書設定フラグ 13:仮請求書出力時間 14:請求書出力時間 15:請求確定月
# 16:更新時間       17:更新者
LANG=C sort > ${tmp}-head_file
# -------------------


# -------------------
# 明細ファイル全体合計行を拾う

self 11 ${tmp}-head_file |
# 1:明細ファイル名(SEIKYU_MEISAI.${処理月}.${請求先})
LANG=C sort -u |
awk '{print $1,substr($1,15,6)}' - |
# 1:明細ファイル名 2:処理月
while read File Nengetsu ; do
  # 全体合計行は、行分類フラグ30
  cjoin0 key=3 <(echo "30") ${seikyu_dir}/${shisetsu}/MEISAI/${Nengetsu}/${File} |
  awk '$25!="9"' - |
  # 1:処理月    2:入居者ID   3:行分類フラグ 4:契約ID          5:項目ID
  # 6:契約枝番  7:請求年月日 8:非課税フラグ 9:金額税抜き      10:金額税込み
  # 11:税額     12:内訳1     13:内訳2       14:特別処理フラグ 15:予備
  # 16:予備     17:予備      18:予備        19:予備           20:予備
  # 21:予備     22:予備      23:予備        24:予備           25:削除フラグ
  # 26:更新時間 27:更新者
  self 1 9/11 > ${tmp}-meisai_kari
  # 1:処理月 2:金額税抜き 3:金額税込み 4:税額
  gassan_aite="$(echo "${File}" | tr "." " " | self NF)"
  cat ${tmp}-meisai_kari |
  awk '{print "'${gassan_aite}'",$0}' -
  # 1:明細ファイルのユーザID 2:処理月 3:金額税抜き 4:金額税込み 5:税額
done |
LANG=C sort > ${tmp}-meisai
# -------------------


# -------------------
# ヘッダ明細を結合する

join1 key=1/2 ${tmp}-meisai ${tmp}-head_file |
# 1:請求先            2:処理月          3:金額税抜き      4:金額税込み      5:税額
# 6:入居者ID          7:請求ステータス  8:施設ID          9:建屋ID          10:フロア
# 11:ユニットID       12:居室番号       13:支払合算相手ID 14:明細ファイル名 15:請求書設定フラグ
# 16:仮請求書出力時間 17:請求書出力時間 18:請求確定月     19:更新時間       20:更新者
# -
# なまえつける
LANG=C sort -k6,6 |
join2 key=6 ${tmp}-RIYOUSHA_MASTER - |
# 1:請求先            2:処理月            3:金額税抜き      4:金額税込み      5:税額
# 6:入居者ID          7:入居者名          8:請求ステータス  9:施設ID          10:建屋ID
# 11:フロア           12:ユニットID       13:居室番号       14:支払合算相手ID 15:明細ファイル名
# 16:請求書設定フラグ 17:仮請求書出力時間 18:請求書出力時間 19:請求確定月     20:更新時間
# 21:更新者
LANG=C sort -k14,14 |
join2 key=14 ${tmp}-RIYOUSHA_MASTER - |
# 1:請求先          2:処理月            3:金額税抜き        4:金額税込み      5:税額
# 6:入居者ID        7:入居者名          8:請求ステータス    9:施設ID          10:建屋ID
# 11:フロア         12:ユニットID       13:居室番号         14:支払合算相手ID 15:合算相手名
# 16:明細ファイル名 17:請求書設定フラグ 18:仮請求書出力時間 19:請求書出力時間 20:請求確定月
# 21:更新時間       22:更新者

# MODEによって表示したい項目がちょっと違う
case "${MODE}" in
  init )
    :
  ;;
  # ------------------------------------------
  # 繰越
  kurikoshi_init | seikyu_koushin_kurikoshi )
    # 請求対象disabled設定
    awk '{if($14!="_"){flg="disabled"; bikou=$15"様"substr($2,1,4)"/"substr($2,5,2)"分と合算されます";}
                  else{flg="_"; bikou="_";};
          print $0,flg,bikou}' - |
    # 1:請求先          2:処理月            3:金額税抜き            4:金額税込み      5:税額
    # 6:入居者ID        7:入居者名          8:請求ステータス        9:施設ID          10:建屋ID
    # 11:フロア         12:ユニットID       13:居室番号             14:支払合算相手ID 15:合算相手名
    # 16:明細ファイル名 17:請求書設定フラグ 18:仮請求書出力時間     19:請求書出力時間 20:請求確定月
    # 21:更新時間       22:更新者           23:請求対象選択disabled 24:備考
    self 1/2 13 6 8 13 6/7 2 8 4 21 23/24 |
    # 1:請求先      2:処理月    3:居室番号              4:入居者ID 5:請求ステータス
    # 6:居室番号    7:入居者ID  8:入居者名              9:処理月   10:請求ステータス
    # 11:金額税込み 12:更新時間 13:請求対象選択disabled 14:備考
    # -
    # 1-5:キー
    # -
    LANG=C sort -k10,10 |
    join1 key=10  - ${home_tbl_dir}/CONFIG/SEIKYU_STATUS |
    # 1:明細ファイルのユーザID 2:処理月      3:居室番号  4:入居者ID              5:請求ステータス
    # 6:居室番号               7:入居者ID    8:入居者名  9:処理月                10:請求ステータス
    # 11:請求ステータス名      12:金額税込み 13:更新時間 14:請求対象選択disabled 15:備考
    # -
    # 請求対象のチェック項目を設定する(ステータス4と5がチェック入れる対象)
    awk '{if($5=="4" || $5=="5"){flg="checked"}
          else{flg="_"};
          print $0,flg}' - |
    # 1:明細ファイルのユーザID 2:処理月      3:居室番号  4:入居者ID              5:請求ステータス
    # 6:居室番号               7:入居者ID    8:入居者名  9:処理月                10:請求ステータス
    # 11:請求ステータス名      12:金額税込み 13:更新時間 14:請求対象選択disabled 15:備考
    # 16:請求対象チェック
    self 1/5 14 16 6/13 15 1 |
    # 1:明細ファイルのユーザID 2:処理月           3:居室番号          4:入居者ID    5:請求ステータス
    # 6:請求対象選択disabled   7:請求対象チェック 8:居室番号          9:入居者ID    10:入居者名
    # 11:処理月                12:請求ステータス  13:請求ステータス名 14:金額税込み 15:更新時間
    # 16:備考                  17:請求先ID
    # -
    # キーでソート後キー項目を除き、見た目を整える
    LANG=C sort -k1,5 |
    delf 1/5 |
    # 1:請求対象選択disabled 2:請求対象チェック 3:居室番号         4:入居者ID   5:入居者名
    # 6:処理月               7:請求ステータス   8:請求ステータス名 9:金額税込み 10:更新時間
    # 11:備考                12:請求先ID
    awk '{if($NF%2==0){color="white"}
                  else{color="white"};
          print color,$0}' - |
    # 1:行の色    2:請求対象選択disabled 3:請求対象チェック 4:居室番号         5:入居者ID
    # 6:入居者名  7:処理月               8:請求ステータス   9:請求ステータス名 10:金額税込み
    # 11:更新時間 12:備考                13:請求先ID
    awk '{if($5==$13){$13="1"}else{$13="0"};print}' - |
    # 1:行の色    2:請求対象選択disabled 3:請求対象チェック 4:居室番号         5:入居者ID
    # 6:入居者名  7:処理月               8:請求ステータス   9:請求ステータス名 10:金額税込み
    # 11:更新時間 12:備考                13:合算フラグ
    awk '{$8=$8":"$9; $12=substr($12,1,4)"/"substr($12,5,2)"/"substr($12,7,2)"_"substr($12,9,2)":"substr($12,11,2)":"substr($12,13,2); print}' - |
    # 1:行の色    2:請求対象選択disabled 3:請求対象チェック             4:居室番号         5:入居者ID
    # 6:入居者名  7:処理月               8:請求ステータスとステータス名 9:請求ステータス名 10:金額税込み
    # 11:更新時間 12:備考                13:合算フラグ
    comma 10
  ;;
  # ------------------------------------------

  # ------------------------------------------
  # 請求側
  search | keisan | seikyu_koushin | tougetsukakutei | karikakutei | karikakutei_kaijyo )
    # 繰越対象選択済みステータスの請求対象disabledと印刷disabled設定
    awk '{if($8=="4" || $14!="_"){flg="disabled";}
          else{flg="_";};
          print $0,flg,flg}' - |
    # 1:請求先          2:処理月            3:金額税抜き        4:金額税込み            5:税額
    # 6:入居者ID        7:入居者名          8:請求ステータス    9:施設ID                10:建屋ID
    # 11:フロア         12:ユニットID       13:居室番号         14:支払合算相手ID       15:合算相手名
    # 16:明細ファイル名 17:請求書設定フラグ 18:仮請求書出力時間 19:請求書出力時間       20:請求確定月
    # 21:更新時間       22:更新者           23:印刷disabled設定 24:請求対象選択disabled
    # -
    # 備考欄メッセージ
    # (繰越ぶん設定後、合算分設定。もし繰越かつ合算ならば合算のメッセージを表示)
    awk '{if($8=="4"){bikou=$7"様"substr($2,1,4)"/"substr($2,5,2)"分と合算されます"}
                 else{bikou="_"};
          print $0,bikou}' - |
    # 1:請求先          2:処理月            3:金額税抜き        4:金額税込み            5:税額
    # 6:入居者ID        7:入居者名          8:請求ステータス    9:施設ID                10:建屋ID
    # 11:フロア         12:ユニットID       13:居室番号         14:支払合算相手ID       15:合算相手名
    # 16:明細ファイル名 17:請求書設定フラグ 18:仮請求書出力時間 19:請求書出力時間       20:請求確定月
    # 21:更新時間       22:更新者           23:印刷disabled設定 24:請求対象選択disabled 25:備考
    awk '{if($14!="_"){bikou=$15"様"substr($2,1,4)"/"substr($2,5,2)"分と合算されます";}
                  else{bikou=$25};
          $25=bikou; print $0}' - |
    self 1/2 13 6 8 13 6/7 2 8 4 21 25 23/24 |
    # 1:請求先      2:処理月    3:居室番号 4:入居者ID          5:請求ステータス
    # 6:居室番号    7:入居者ID  8:入居者名 9:処理月            10:請求ステータス
    # 11:金額税込み 12:更新時間 13:備考    14:印刷disabled設定 15:請求対象選択disabled
    LANG=C sort -k10,10 |
    join1 key=10 ${home_tbl_dir}/CONFIG/SEIKYU_STATUS - |
    # 1:請求先                2:処理月      3:居室番号  4:入居者ID 5:請求ステータス
    # 6:居室番号              7:入居者ID    8:入居者名  9:処理月   10:請求ステータス
    # 11:請求ステータス名     12:金額税込み 13:更新時間 14:備考    15:印刷disabled設定
    # 16:請求対象選択disabled
    self 1/5 15/16 6/14 1 |
    # 1:請求先           2:処理月               3:居室番号          4:入居者ID    5:請求ステータス
    # 6:印刷disabled設定 7:請求対象選択disabled 8:居室番号          9:入居者ID    10:入居者名
    # 11:処理月          12:請求ステータス      13:請求ステータス名 14:金額税込み 15:更新時間
    # 16:備考            17:請求先
    # -
    # キーでソート後見た目を整える
    LANG=C sort -k1,5 |
    delf 1/5 |
    # 1:印刷disabled設定 2:請求対象選択disabled 3:居室番号         4:入居者ID   5:入居者名
    # 6:処理月           7:請求ステータス       8:請求ステータス名 9:金額税込み 10:更新時間
    # 11:備考            12:請求先
    awk '{if($7=="4" || $7=="5" || $7=="6"){flg="checked";}
          else{flg="_"};
          print flg,$0}' - |
    # 1:請求対象選択チェック 2:印刷disabled設定 3:請求対象選択disabled 4:居室番号         5:入居者ID
    # 6:入居者名             7:処理月           8:請求ステータス       9:請求ステータス名 10:金額税込み
    # 11:更新時間            12:備考            13:請求先
    awk '{if($NF%2==0){color="white"}
          else{color="white"};
          print color,$0}' - |
    # 1:行の色      2:請求対象選択チェック 3:印刷disabled設定 4:請求対象選択disabled 5:居室番号
    # 6:入居者ID    7:入居者名             8:処理月           9:請求ステータス       10:請求ステータス名
    # 11:金額税込み 12:更新時間            13:備考            14:請求先
    awk '{if($5==$14){$14="1"}else{$14="0"};print}' - |
    # 1:行の色      2:請求対象選択チェック 3:印刷disabled設定 4:請求対象選択disabled 5:居室番号
    # 6:入居者ID    7:入居者名             8:処理月           9:請求ステータス       10:請求ステータス名
    # 11:金額税込み 12:更新時間            13:備考            14:合算フラグ
    awk '{$9=$9":"$10; $12=substr($12,1,4)"/"substr($12,5,2)"/"substr($12,7,2)"_"substr($12,9,2)":"substr($12,11,2)":"substr($12,13,2); print}' - |
    comma 11
  ;;
  # ------------------------------------------
esac
# -------------------

# 合算フラグ
# 0:合算しない
# 1:誰かと合算

# 請求確定
# -
# 1:請求対象チェック 2:居室     3:対象者名 4:請求年月     5:ステータス
# 6:請求金額         7:最終更新 8:備考     9:印刷disabled 10:請求対象disabled
# 4：繰越選択済みのステータスは、印刷と請求対象disabledして備考に「${請求先}様${処理年月}分と合算されます」
# 合算の人は、印刷と請求対象disabledして備考に「${請求先}様${処理年月}分と合算されます」
# -

# 繰越
# -
# 1:請求対象チェック 2:居室     3:対象者名 4:請求年月         5:ステータス
# 6:請求金額         7:最終更新 8:備考     9:請求対象disabled
# -
# 合算の人は、請求対象disabledして備考に「${請求先}様${処理年月}分と合算されます」

# ソート
# 合算と繰越を続けて表示したい
# 請求先 年月 居室 入居者 ステータス
# をキーにしてソート


# ---------------------------------------

#rm -f ${tmp}-*
exit 0

