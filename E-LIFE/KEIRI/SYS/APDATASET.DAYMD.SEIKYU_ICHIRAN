#!/bin/bash
#
# APDATASET.DAYMD.SEIKYU_ICHIRAN　(請求一覧のPOMPA更新)
#
# Usage:APDATASET.DAYMD.SEIKYU_ICHIRAN
#
# Written By Aoyagi (HandsLab .Inc) :
#

# 設定ファイ読込 #########################################################################
source /home/hands/.bashrc &> /dev/null

#--------------------ログ出力--------------------
mkdir -p /home/hands/E-LIFE/KEIRI/APLOG/$(date +%Y%m%d)
exec 2> /home/hands/E-LIFE/KEIRI/APLOG/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv


#}}}Functions#############################################################################
upcnt "$HOSTNAME $(basename ${0}) START $(date +%Y%m%d%H%M%S)"


# エラー終了  ############################################################################
function error_exit {
  touch ${semaphore_dir}/$(basename ${0}).${HOSTNAME}.ERROR.${today}
  rm -f ${tmp}-*
  exit 1
}


# 起動時に入力がない場合当日を変数todayに設定
[ -n "$(echo "${1}" | awk --re-interval '$1 ~ /[0-9]{6}/')" ] && seikyu_syori_month="${1}" || seikyu_syori_month="$(date "+%Y%m")"
shisetsu=${2}


# 変数・ディレクトリ設定 #################################################################
current_time="$(date "+%Y%m%d%H%M%S")"
yesterday=$(mdate $today/-1)
home_dir="/home/hands"
app_dir="${home_dir}/E-LIFE/KEIRI"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
tbl_dir="${app_dir}/TBL"
tmp="/var/tmp/${$}"
semaphore_dir="${home_dir}/SEMAPHORE"
meisai_dir="${app_dir}/MEISAI"
rireki_dir="${app_dir}/RIREKI"
kanri_dir="${app_dir}/KANRI"
pompa_dir="${app_dir}/POMPA/SEIKYU_ICHIRAN"
work="${app_dir}/WORK"
riyosha_dir="/DATA/E-LIFE/UNEI/RIYOUSHA"
keiri_input="${app_dir}/INPUT"
seikyu_dir="/DATA/E-LIFE/SEIKYU/SHISETSU"

# inputディレクトリ作成
mkdir -p ${keiri_input}/${today}/SHOKYAKU

# 集計グループマスタ準備
cat /home/hands/E-LIFE/TBL/SEIKYU/SHUKEIGROUP_MASTER                 |
awk '$3=="'${shisetsu}'" && $(NF-2)!=9{print $1}'                    > $tmp-shukei_gr_master
# 1:集計GrID 2:集計Gr名 3:施設ID 4:請求書分類 5:予備
# 6:予備 7:予備 8:予備 9:予備 10:有効フラグ
# 11:更新日 12:userid

# 月額利用料のマスタ
awk '$2=="管理費" || $2=="管理費関係" || $2=="会員"' /home/hands/E-LIFE/TBL/SEIKYU/SHUKEIGROUP_MASTER |
awk '$3=="'${shisetsu}'" && $(NF-2)!=9{print $1}'                |
awk '{print "H",$1}'                                            > $tmp-H_henrei
cat /home/hands/E-LIFE/TBL/SEIKYU/RIYOURYOU_SHUKEI                          |
# 1:施設ID 2:利用料ID 3:利用料名 4:？ 5:?
# 6:? 7:? 8:集計GrID 9:有効フラグ 10:更新時間
# 11:userid
awk '$1=="'${shisetsu}'" && $(NF-2)!=9{print $2,$8}'                 |
cat - $tmp-H_henrei | LANG=C sort                                    > $tmp-getsugakuriyou_master
# 1:利用料ID 2:集計GrID

# サービス利用料のマスタ
awk '$2=="サービス費" || $2=="管理費関係"' /home/hands/E-LIFE/TBL/SEIKYU/SHUKEIGROUP_MASTER |
awk '$3=="'${shisetsu}'" && $(NF-2)!=9{print $1}'                |
awk '{print "SH",$1}'                                            > $tmp-SH_henrei
cat /home/hands/E-LIFE/TBL/SEIKYU/SERVICE_MASTER                     |
# 1:施設ID 2:建屋 3:サービス利用料ID 4:区分 5:サービス利用名
# 6:集計GrID 7:金額 8:
awk '$1=="'${shisetsu}'"{print "service"$3,$6}'                      |
cat - $tmp-SH_henrei       | LANG=C sort                             > $tmp-service_gr_master
# 1:サービス利用ID 2:集計GrID

# 食事代のマスタ
awk '$2~/食費/ || $2~/食事代/' /home/hands/E-LIFE/TBL/SEIKYU/SHUKEIGROUP_MASTER |
awk '$3=="'${shisetsu}'" && $(NF-2)!=9{print $1}'                |
awk '{print $1,"shokuji","shokuji_senior","kesshoku"}'           |
tarr num=1                                                       |
self 2 1                                                         > $tmp-shokuji_gr_master
# 1:食事ID 2:集計GrID

# 立替金のマスタ
awk '$2~/^立替金/' /home/hands/E-LIFE/TBL/SEIKYU/SHUKEIGROUP_MASTER |
awk '$3=="'${shisetsu}'" && $(NF-2)!=9{print $1}'                |
awk '{print $1,"tatekae"}'           |
tarr num=1                                                       |
self 2 1                                                         > $tmp-tatekae_gr_master
# 1:立替ID 2:集計GrID

# その他立替金のマスタ(青葉台二丁目対応)
awk '$2~/その他立替金/' /home/hands/E-LIFE/TBL/SEIKYU/SHUKEIGROUP_MASTER |
awk '$3=="'${shisetsu}'" && $(NF-2)!=9{print $1}'                |
awk '{print $1,"sonota_tatekae"}'           |
tarr num=1                                                       |
self 2 1                                                         > $tmp-sonota_tatekae_master
# 1:立替ID 2:集計GrID
SONOTA_TA="$(self 2 $tmp-sonota_tatekae_master)"

# 電話のマスタ
awk '$2~/電話/ || $2~/通話/ || $2~/公共料金/' /home/hands/E-LIFE/TBL/SEIKYU/SHUKEIGROUP_MASTER |
awk '$3=="'${shisetsu}'" && $(NF-2)!=9{print $1}'                |
awk '{print $1,"denki denwa suido"}'           |
tarr num=1                                                       |
self 2 1                                                         > $tmp-denwa_gr_master
# 1:denwaID 2:集計GrID

# マスタ合体
cat $tmp-getsugakuriyou_master $tmp-service_gr_master $tmp-shokuji_gr_master $tmp-tatekae_gr_master  $tmp-sonota_tatekae_master $tmp-denwa_gr_master |
LANG=C sort                          > $tmp-Gr_master

# ディレクトリ作成
mkdir -p /home/hands/E-LIFE/KEIRI/POMPA/SEIKYU_ICHIRAN
mkdir -p /home/hands/E-LIFE/KEIRI/POMPA/SEIKYU_ICHIRAN/${shisetsu}
mkdir -p /home/hands/E-LIFE/KEIRI/POMPA/SEIKYU_ICHIRAN/${shisetsu}/${seikyu_syori_month}

POMPADIR="/home/hands/E-LIFE/KEIRI/POMPA/SEIKYU_ICHIRAN/${shisetsu}/${seikyu_syori_month}"

# ヘッダ取得
LANG=C sort -k1,2 -k25,25 ${seikyu_dir}/${shisetsu}/HEAD/SEIKYU_HEAD |
awk '$24!="9"' -                          |
getlast 1 2                               |
cjoin0 key=3 <(echo "4 5 6 7" | tarr) -   |
tee ${work}/head_2 |
cjoin0 key=14 <(echo "${seikyu_syori_month}") - |
self 8 2 1 10                             > $tmp-head_kari
# 1:居室番号 2:入居者ID 3:処理月 4:明細ファイル名
cp $tmp-head_kari ${work}/head_kaari
[ ${?} -eq 0 ] || error_exit

# 集計グループマスタ

echo "sonota その他"            > $tmp-sonota_master
awk '$3=="'${shisetsu}'" && $(NF-2)!=9' /home/hands/E-LIFE/TBL/SEIKYU/SHUKEIGROUP_MASTER  |
self 1 2                        |
cat - $tmp-sonota_master        |
LANG=C sort                     > $tmp-shukei_master
# 1:集計GrID 2:集計Gr名

self 3 $tmp-head_kari                      |
LANG=C sort -u                             |
while read MONTH ;do
  awk '$22!="9"' ${riyosha_dir}/RIYOUSHA_KEIYAKU |
  # 1:利用者ID   2:契約ID      3:施設ID      4:建屋ID     5:フロアID
  # 6:ユニットID 7:居室ID      8:入居時年齢  9:契約種類ID 10:契約日
  # 11:引渡し日  12:契約開始日 13:契約終了日 14:退去理由  15:退去理由詳細
  # 16:備考      17:予備       18:予備       19:予備      20:予備
  # 21:予備      22:削除フラグ 23:更新日     24:更新者
  
  # 契約種別IDは固定(001：体験、002：ショートステイ、003-007：本入居)のため絞込み
  awk '$9=="002"'                    |
  # 請求の月を含む期間を抽出し、同じ利用者で複数行出る場合は最新をとる
  awk '$12<="'${MONTH}'31" && $13>="'${MONTH}'01"' |
  self 7 |
  LANG=C sort -u > $tmp-short_stay_room

  awk '$(NF-2)!=9' /DATA/E-LIFE/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
  # 1:施設ID   2:建屋ID 3:フロアID 4:ユニットID 5:居室ID
  # 6:入居者ID 7:入居日 8:退去日   9:削除フラグ 10:更新時間
  # 11:更新者
  awk '$1=="'${shisetsu}'" && $7<="'${MONTH}'31"&&$8>="'${MONTH}'"'    |
  LANG=C sort -k5,5 |
  join0 +ng key=5 $tmp-short_stay_room 2>&1 1> /dev/null 
done                                       |
LANG=C sort -k6,7 |
getlast 6 6      > $tmp-shisetsu_riyosha


# 明細ファイル展開
self 2 $tmp-head_kari                        |
LANG=C sort -u |
while read id ; do
  user_heya="$(cjoin0 key=6 <(echo "${id}") ${tmp}-shisetsu_riyosha | self 5 | LANG=C sort -u | tail -1)"
  cjoin0 key=2 <(echo "${id}") ${tmp}-head_kari |
    while read heya u_id syori_month file_name ; do
    self 1/3 5 7 9/11 ${seikyu_dir}/${shisetsu}/MEISAI/${syori_month}/${file_name} |
    # 1:処理月     2:入居者ID   3:行分類フラグ 4:項目ID 5:提供年月日
    # 6:金額税抜き 7:金額税込み 8:税額
    # -
    # 合計項目(行分類フラグ15,25,30)を除く
    cjoin0 +ng key=3 <(echo "15 25 30" | tarr) - 2>&1   > /dev/null               |
    # 請求先設定で入居者IDが処理中の人じゃない場合があるのでよみかえる
    awk '{$2="'${id}'";
          print}'                                                                 |
    # 集計グループマスタ
    cjoin2 +sonota key=4 $tmp-Gr_master                                           > $tmp-all_shisetsu
    # 1:処理月     2:入居者ID   3:行分類フラグ 4:項目ID 5:集計GrID
    # 6:提供年月日 7:金額税抜き 8:金額税込み   9:税額   10:-
    if [ "${shisetsu}" = "0001" ];then
      awk '$5=="00019"' $tmp-all_shisetsu                                        > $tmp-base_tatekae
      awk '$5!="00019"' $tmp-all_shisetsu                                        > $tmp-base_not_tatekae

      # その他立替金のデータ
      # その他立替金のマスタ
      snt_tatekae="$(cat /home/hands/E-LIFE/TATEKAEKIN/TBL/${shisetsu}/SHUKKIN_KOUMOKU | awk '$2~/その他立替金/{print $1}')"

      # 立替金のデータあるかどうか
      if [ "$(gyo $tmp-base_tatekae)" -ne 0 ];then
        cat $tmp-base_tatekae |
        self 6.1.6            |
        LANG=C sort -u        > $tmp-tatekae_month
        # 1:年月
        # あったら月ごとにその他立替金の金額を計算
        for month in $(yarr $tmp-tatekae_month);do
          cat /DATA/E-LIFE/SEIKYU/SHISETSU/TATEKAEKIN/${shisetsu}/${month}/${month}.TATEKAEKIN |
          # 1:立替日付 2:立替対象 3:対象者ID 4:入出金フラグ 5:立替方法
          # 6:立替項目フラグ 7:立替項目 8:摘要 9:入金額 10:出金額
          # 11:所属建屋 12:所属フロア 13:所属ユニット 14:ID 15:登録時間
          awk '$2=="nyukyosha" && $3=="'${id}'" && $4=="2" && $7=="'${snt_tatekae}'"'          |
          self 1.1.6 10                                                                        |
          sm2 1 1 2 2                                                                          > $tmp-month_snt
          if [ "$(gyo $tmp-month_snt)" = 0 ];then
            echo "${month} 0"
          else
            cat $tmp-month_snt
          fi
        done                                                                                   > $tmp-snt_tatekae
        # 1:年月 2:金額

        # 立替金のデータからその他立替金のデータを引いて新しいデータを作る
        cat $tmp-base_tatekae                                                                  |
        # 1:処理月     2:入居者ID   3:行分類フラグ 4:項目ID 5:集計GrID
        # 6:提供年月日 7:金額税抜き 8:金額税込み   9:税額   10:-
        self 6.1.6 1/NF                                                                        |
        loopj num=1 - $tmp-snt_tatekae                                                         |
        delf 1                                                                                 |
        tee $tmp-sonota_sonota_base                                                            |
        awk '{$8=$8-$NF;$7=$7-$NF;print}'                                                      |
        delf NF                                                                                > $tmp-new_base_tatekae

        # その他立替金のデータ
        cat $tmp-sonota_sonota_base                                                            |
        awk '{$4="sonota_tatekae";$5="'${SONOTA_TA}'";$7=$NF;$8=$NF;print}'                    |
        delf NF                                                                                > $tmp-sonota_data

        # 3行はく
        cat $tmp-new_base_tatekae $tmp-sonota_data $tmp-base_not_tatekae
      else
        cat $tmp-base_not_tatekae
      fi
    else
      cat $tmp-all_shisetsu
    fi
  done > ${tmp}-meisai_kihon_${id}

  # 項目ごとにまとめる
  # -
  bango="1"
  for koumoku in $(self 1 $tmp-shukei_master | yarr);do
    awkbango=$(echo $bango | lcalc '$1+5')
    cat ${tmp}-meisai_kihon_${id}                   |
    awk '$5=="'${koumoku}'"'                        |
    awk '{print $2,substr($6,1,6),$7,$8,$9}'        |
    # 1:入居者ID 2:提供年月 3:金額税抜き 4:金額税込み 5:税額
    sm2 1 2 3 5                                     |
    # 1:入居者ID 2:提供年月 3:金額税抜き 4:金額税込み 5:税額
    awk '{print $0,"'${user_heya}'","'${bango}'"}' - |
    # 1:入居者ID 2:提供年月 3:金額税抜き 4:金額税込み 5:税額
    # 6:居室 7:項目番号
    self 6 1 7 2 4                                  > $tmp-basedata
    cp $tmp-basedata ${work}/${koumoku}basedata
    # 1:居室 2:入居者ID 3:項目番号 4:提供年月 5:金額税込み
    KAZU=$(gyo $tmp-shukei_master)
    seq ${KAZU}                                     |
    awk '{$1=0;print}'                              |
    yarr                                            |
    awk '{print "'${user_heya}'","'${id}'",$0}'                      > $tmp-zero

    loopj num=2 $tmp-basedata $tmp-zero                    |
    awk '{$'${awkbango}'=$5;print}'                 |
    delf 5                                          > $tmp-koumoku_1
    if [ ! -s ${tmp}-basedata ];then
      delf 1 2 $tmp-zero > $tmp-zero_2
      echo "${user_heya} ${id}"             |
      awk '{print $1,$2,"'${bango}'","_"}' |
      ycat - $tmp-zero_2   > $tmp-koumoku_1
    else
      :
    fi

    if [ "${koumoku}" = "tatekae" ];then
      cat $tmp-koumoku_1                            |
      # 1:居室       2:入居者ID   3:項目番号   4:提供年月   5:金額税込み
      # 6:金額税込み 7:金額税込み 8:金額税込み 9:金額税込み 10:金額税込み
      # 11:金額税込み 12:金額税込み 13:金額税込み 14:金額税込み
      awk '{if($4!="_"){print $4}}'                 |
      LANG=C sort -u -k1,1                          > $tmp-tatekae_month
      # その他立替金のマスタ
      snt_tatekae="$(cat /home/hands/E-LIFE/TATEKAEKIN/TBL/${shisetsu}/SHUKKIN_KOUMOKU | awk '$2~/その他立替金/{print $1}')"

      if [ "$(gyo $tmp-tatekae_month)" -ne 0 ];then
        for month in $(cat $tmp-tatekae_month | yarr);do
          cat /DATA/E-LIFE/SEIKYU/SHISETSU/TATEKAEKIN/${shisetsu}/${month}/${month}.TATEKAEKIN |
          # 1:立替日付 2:立替対象 3:対象者ID 4:入出金フラグ 5:立替方法
          # 6:立替項目フラグ 7:立替項目 8:摘要 9:入金額 10:出金額
          # 11:所属建屋 12:所属フロア 13:所属ユニット 14:ID 15:登録時間
          awk '$2=="nyukyosha" && $3=="'${id}'" && $4=="2" && $7=="'${snt_tatekae}'"'          |
          self 3 10                                                                            |
          sm2 1 1 2 2                                                                          |
          awk '{print "'${month}'",$2}'                                                        > $tmp-month_snt
          if [ "$(gyo $tmp-month_snt)" = 0 ];then
            echo ${month} "0"
          else
            cat $tmp-month_snt
          fi                                                                                   >> $tmp-snt_tatekae
        done
        cat ${tmp}-koumoku_1                                                                     |
        self 4 1/3 5/NF                                                                          |
        # 1:提供年月   2:居室       3:入居者ID   4:項目番号   5:金額税込み
        # 6:金額税込み 7:金額税込み 8:金額税込み 9:金額税込み 10:金額税込み
        # 11:金額税込み 12:金額税込み 13:金額税込み 14:金額税込み
        loopj num=1 - $tmp-snt_tatekae                                        |
        # 1:提供年月   2:居室       3:入居者ID   4:項目番号   5:金額税込み
        # 6:金額税込み 7:金額税込み 8:金額税込み 9:金額税込み 10:金額税込み
        # 11:金額税込み 12:金額税込み 13:金額税込み 14:金額税込み 15:その他立替金
        self 2/4 1 5/NF                                                       |
        awk '{$'${awkbango}'=$'${awkbango}'-$NF;print}'                       |
        delf NF
        # 1:居室       2:入居者ID   3:項目番号   4:提供年月   5:金額税込み
        # 6:金額税込み 7:金額税込み 8:金額税込み 9:金額税込み 10:金額税込み
        # 11:金額税込み 12:金額税込み 13:金額税込み 14:金額税込み
      else
        cat $tmp-koumoku_1                                                   > $tmp-koumoku_7
      # その他立替金
      LST=$(gyo $tmp-shukei_master | lcalc '$1+1')
      cat $tmp-koumoku_7                                                                       |
      # 1:居室       2:入居者ID   3:項目番号   4:提供年月   5:金額税込み
      # 6:金額税込み 7:金額税込み 8:金額税込み 9:金額税込み 10:金額税込み
      # 11:金額税込み 12:金額税込み 13:金額税込み 14:金額税込み
      if [ -n "$(cat $tmp-snt_tatekae)" ];then
        self 4 1/3 5/NF                                                                          |
        # 1:提供年月 2:居室    3:入居者ID   4:項目番号  5:金額税込み
        # 6:金額税込み 7:金額税込み 8:金額税込み 9:金額税込み 10:金額税込み
        # 11:金額税込み 12:金額税込み 13:金額税込み 14:金額税込み
        loopj num=1 - $tmp-snt_tatekae                                                         |
        # 1:居室       2:入居者ID   3:項目番号   4:提供年月   5:金額税込み
        # 6:金額税込み 7:金額税込み 8:金額税込み 9:金額税込み 10:金額税込み
        # 11:金額税込み 12:金額税込み 13:金額税込み 14:金額税込み 15:その他立替金
        self 2/4 1 5/NF                                                                        |
        awk '{$3="'${LST}'";$'${awkbango}'="0";print $0}'
      else
        awk '{$3="'${LST}'";print $0,"0"}'
      fi                                                                                       > $tmp-koumoku_8
      # 1:居室       2:入居者ID   3:項目番号   4:提供年月   5:金額税込み
      # 6:金額税込み 7:金額税込み 8:金額税込み 9:金額税込み 10:金額税込み
      # 11:金額税込み 12:金額税込み 13:金額税込み 14:金額税込み

      # データクリア
      rm $tmp-snt_tatekae
      fi
      cat $tmp-koumoku_7 $tmp-koumoku_8
    else
      cat $tmp-koumoku_1
    fi                 > $tmp-koumoku
    bango=$(echo $bango | lcalc '$1+1')
    cat $tmp-koumoku
  done                  > $tmp-koumoku_goukei

  # 項目番号でソートして横展開
  if [ "$(self 4 $tmp-koumoku_goukei | awk '$1!="_"' | gyo)" = 0 ];then
    cat $tmp-koumoku_goukei
  else
    awk '$4!="_"' $tmp-koumoku_goukei
  fi                   |
  delf 3               |
  LANG=C sort -k1,3 -  |
tee ${work}/goukeigoukeigoukei |
#  yarr num=2           |
  sm2 1 3 4 NF          |
  # 1:居室                2:入居者ID               3:提供年月                       4:金額税込み(賃料)       5:金額税込み(管理費)
  # 6:金額税込み(食費)    7:金額税込み(サービス費) 8:金額税込み(介護支援サービス費) 9:金額税込み(月額利用料) 10:金額税込み(立替金)
  # 11:金額税込み(その他立替金) 12:金額税込み(サービス利用料金) 13:金額税込み(その他)
  # -
  # 合計の算出
  ysum num=3                   |
  self 1/3 NF 4/NF-1           |
  sm4 1 2 3 3 4 NF             |
  awk '{if($3~/@/){$3="個別合計";print}else if($3=="_"){print $0}else{$3=substr($3,1,4)"/"substr($3,5,2);print}}' > $tmp-NEW_${id}
  # 1:居室             2:入居者ID               3:提供年月           4:全項目合計         5:金額税込み(賃料)
  # 6:金額税込み(管理費) 7:金額税込み(食費) 8:金額税込み(サービス費) 9:金額税込み(介護支援サービス費) 10:金額税込み(月額利用料)
  # 11:金額税込み(立替金) 12:金額税込み(その他立替金) 13:金額税込み(サービス利用料金) 14:金額税込み(その他)

  #cp ${tmp}-meisai_kihon_${id} ${POMPADIR}/${id} 
  cp $tmp-NEW_${id} ${POMPADIR}/${id}.SEIKYU_ICHIRAN
  cp $tmp-Gr_master ${POMPADIR}/HEADER
done




# 終了 ######################################################################
rm -f ${tmp}-*
exit 0

