#!/bin/bash
#
# CARECALL_RIREKI.DISPLAY2 : ケアコール履歴グラフ.DISPLAY
#
# Usage : CARECALL_RIREKI.DISPLAY2 namefile datafile
#
# Written by K.Aoyama(hands lab.inc)

# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null
source /home/hands/E-LIFE/SHISETSU_KAIGOKIROKU/CGI/SHISETSU_KAIGOKIROKU.INI &> /dev/null
mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date +%Y%m%d) ; set -xv

# 変数設定
tmp=/var/tmp/${$}

#ゴミtmpの消去
rm -f $tmp-*

today="$(date +%Y%m%d)"
this_month="$(date +%Y%m)"

# ディレクトリ設定
home_dir="/home/hands/E-LIFE"
app_dir="${home_dir}/SHISETSU_KAIGOKIROKU"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
pompa_dir="${app_dir}/POMPA"
input_dir="${app_dir}/INPUT"
apptbl_dir="${app_dir}/TBL"
kyoutsu_dir="${home_dir}/KYOUTSU/HTML"
test_tbl_dir="${home_dir}/TEST/TBL"
kengen_dir="${home_dir}/TBL/KENGEN_KANRI"
data_dir="/DATA/E-LIFE"

# 引数設定
namefile=${1}
checkfile=${2}
searchfile=${3}

# eval
eval $(name-source ${namefile})

# 画面の描画モードを決定する。
MODE="$(nameread "MODE" ${namefile})"

echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu
nengetsu=$(echo ${nengetsumonth} | sed 's/-//g')

# ログインUSER名と施設の取得（仮）
cat ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
tee ${tmp}-jugyoin                                 |
# 1:USER_ID 2:ユーザー名
join1 key=1 ${tmp}-user                            |
# 1:USER_ID 2:ユーザー名
self 2                                             > ${tmp}-usermei

cat ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON |
# 1:施設コード 2:施設名
join1 key=1 ${tmp}-shisetsu                        |
self 2                                             > ${tmp}-user_shisetsu


self 1 2 /home/hands/E-LIFE/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 /home/hands/E-LIFE/TBL/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst

cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst


# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou

echo "35" > $tmp-cgi
# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -k4,4                                          |
join0 key=4 $tmp-cgi                                       > ${tmp}-kengenlist

cat ${searchfile} > $work_dir/carecall_rireki_search

# MODEがinitだったら渡ってきたネームをクリア
if [ "$(gyo ${searchfile})" = "0" ];then
  echo "###DEFAULT_MES###" "データがありません" >> ${tmp}-calsed1
else
  echo "###DEFAULT_MES###" "" >> ${tmp}-calsed1
fi

[ -z "${tateya}" -o "${tateya}" = "_" ] && tateya="02"

# 利用者名の取得
if [ -z "${riyosha_name}" -o "${riyosha_name}" = "_" ] ; then
riyosha_name="全て"
else
cat ${data_dir}/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS             |
awk '$1=="'$shisetsu'"&&$7<="'${nengetsu}'31"&&"'${nengetsu}'01"<=$8{print $6}'                                  |
LANG=C sort -k1,1                                                  |
join1 key=1 <(self 1 2 ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_MASTER)    |
# 1:RIYOSHA_CODE 2:RIYOSHA_NAME 
awk '$1=="'${riyosha_name}'"{print $2}'                           > ${tmp}-riyosha_name

riyosha_name=$(tail -1 ${tmp}-riyosha_name)
fi

# フロアの取得
cat ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR             |
awk '$1=="'$shisetsu'"&&$2=="'${tateya}'"{print $3,$3"F"}'   |
# 1:FLOOR_CODE 2:FLOOR_NAME
awk '$1=="'${floor}'"{print $2}'                                > ${tmp}-floor_name

floor_name=$(tail -1 ${tmp}-floor_name)

# ユニットの取得
cat ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT        |
awk '$1=="'$shisetsu'"&&$2=="'$tateya'"&&$3=="'${floor}'"{print $4}'  |
join1 key=1 ${home_dir}/TBL/SHISETSU_MASTER/UNIT_NAME                |
self 1 2                                                     |
# 1:UNIT_CODE 2:UNIT_NAME
awk '$1=="'${unit}'"{print $2}'                              > ${tmp}-unit_name

unit_name=$(tail -1 ${tmp}-unit_name)

currentmonth=$(mdate today | awk '{print substr($1,1,6)}')
# 年月の取得
mdate -e ${currentmonth}m/-3                                |
tarr                                                      |
LANG=C sort -k1,1nr                                       |
awk '$1=="'${nengetsu}'"{print $1}'                          |
awk '{all=substr($1,1,6);nen=substr($1,1,4);getu=substr($1,5,2);print nen"年"getu"月"}' > ${tmp}-nengetsu

#dispNengetsu=$(tail -1 ${tmp}-nengetsu)

dispNengetsu=$(echo "${nengetsu}" | awk '{print substr($1,1,4)"年"substr($1,5,2)"月"}')

echo "Q" "緊急" > $tmp-calltype_mst_work
echo "R" "通常" >> $tmp-calltype_mst_work
echo "X" "脱落" >> $tmp-calltype_mst_work
echo "_" "統計" >> $tmp-calltype_mst_work

cat $tmp-calltype_mst_work |
LANG=C sort -k1,1          > $tmp-calltype_mst

dispCallType=$(echo $call_type | join1 key=1 $tmp-calltype_mst | self 2)

# searchfileの処理
if [ -e "${searchfile}" ];then
  cat ${searchfile} |
  awk '$1=="t"'     |
  delf 1            > $tmp-search_file
  # 0～8
  cat ${tmp}-search_file      |
  awk '$1=="1"'      |
  delf 1                 > ${tmp}-asa

  # 8～16
  cat ${tmp}-search_file      |
  awk '$1=="2"'     |
  delf 1                 > ${tmp}-hiru  

  # 16～24
  cat ${tmp}-search_file      |
  awk '$1=="3"'     |
  delf 1                 > ${tmp}-yoru

  cat ${searchfile} |
  awk '$1=="g"'     |
  delf 1            > $tmp-graph_file

  echo "###NURSECALLGRAPH###" "$(cat ${tmp}-graph_file)" >> ${tmp}-calsed1
else
  :                     > ${tmp}-asa
  :                     > ${tmp}-hiru
  :                     > ${tmp}-yoru
  :                     > $tmp-graph_file
fi

dispYear=$(echo "${nengetsu}" | awk '{print substr($1,1,4)}')
dispMonth=$(echo "${nengetsu}" | awk '{print substr($1,5,2)}')

#######################################################################################
# formhame前の実態参照変換
calsed "&" "&amp;" ${namefile}                      |
calsed "<" "&lt;"                                   |
calsed ">" "&gt;"                                   |
calsed "\"" "&quot;"                                |
# formhame前にキーワードが　"_"　のみの場合、消去
awk '{if($1~/SEARCH_WORD/){if($2~/^_$/){$2=""};}print}'  |
# formhame前にキーワードが検索ボックスの空白を "_"から" "に戻す
awk '{if($1~/SEARCH_WORD/){gsub(/_/," ",$2)};print}'     > $tmp-namefile

#######################################################################################

#######################################################################################
# namefileの再構成

cat <<- FIN > ${tmp}-namefile
MODE ${MODE}
FIN
#######################################################################################


#######################################################################################
# calsedするfileをつくろう
cat <<- FIN | sed 's/ _$/ @/g' >> ${tmp}-calsed1
###DROPDOWN_ACTIVE6### active
###LI_KANGOKAIGOKIROKU14### active
###USERID### ${userid}
###SHISETSUID### ${shisetsu}
###PASSWORD### ${password}
###keyword### ${keyword}
###SETSUMEI### block
###MONTH### ${dispMonth}
###YEAR### ${dispYear}
###SELECT_SHISETSU### $select_shisetsu
###FLOOR_NAME### $floor_name
###UNIT_NAME### $unit_name
###RIYOSHA_NAME### $riyosha_name
###CALL_TYPE### $dispCallType
###NENGETSU### $dispNengetsu
###DOMAIN### $domain
FIN



#### MODEが修正のときは処理を分岐する
cat ${html_dir}/PRINT_CARECALL_RIREKI.html   |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -l###ASADATA### - ${tmp}-asa |
mojihame -l###HIRUDATA### - ${tmp}-hiru |
mojihame -l###YORUDATA### - ${tmp}-yoru |
calsed -f ${tmp}-calsed1 - > $tmp-carecall-base_pdf.html
#formhame -d"_" - ${tmp}-namefile 


cp $tmp-carecall-base_pdf.html $work_dir/carecall-base_pdf.html
mkdir -p ${home_dir}/SHISETSU_KAIGOKIROKU/DOWNLOAD/${riyosha_name}

# 過去のPDFを一旦消す
rm ${home_dir}/SHISETSU_KAIGOKIROKU/DOWNLOAD/${riyosha_name}/CARECALL_RIREKI.pdf

/home/hands/E-LIFE/TOOL/wkhtmltopdf-amd64 --orientation Landscape $tmp-carecall-base_pdf.html ${home_dir}/SHISETSU_KAIGOKIROKU/DOWNLOAD/${riyosha_name}/CARECALL_RIREKI.pdf
#--------------------------------------------------------------
#formhame -d"_" - ${namedata}

# HTML の出力
cat << EOF > ${tmp}-html.html
<HTML>
  <HEAD>
    <SCRIPT type="text/javascript" language="Javascript">
      //<![CDATA[
      window.onload=init
      function init(){
           window.open("/E-LIFE/SHISETSU_KAIGOKIROKU/DOWNLOAD/${riyosha_name}/CARECALL_RIREKI.pdf","pdfprint");
           window.self.close();
      }
      //]]>
    </SCRIPT>
  </HEAD>
</HTML>
EOF

cat ${tmp}-html.html


rm -f ${tmp}-*
exit 0

