#!/bin/bash
#
# KAIGOJISSEIKI_GRAPH_MONTHLY_VITAL.DISPLAY : 介護実績一覧表示.DISPLAY
#
# Usage : KAIGOJISSEKI_GRAPH_MONTHLY_VITAL.DISPLAY namefile datafile
#
# Written by j.aoyagi(hands lab.inc)


# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null

#--------------------ログ出力--------------------
mkdir -p /home/hands/E-LIFE/SHISETSU_KAIGOKIROKU/APLOG/$(date +%Y%m%d)
exec 2> /home/hands/E-LIFE/SHISETSU_KAIGOKIROKU/APLOG/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv
# 変数設定
tmp=/var/tmp/${$}

#ゴミtmpの消去
rm -f $tmp-*

today="$(date +%Y%m%d)"
this_month="$(date +%Y%m)"

# ディレクトリ設定
home_dir="/home/hands"
app_dir="${home_dir}/E-LIFE/SHISETSU_KAIGOKIROKU"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
pompa_dir="${app_dir}/POMPA"
input_dir="${app_dir}/INPUT"
apptbl_dir="${app_dir}/TBL"
kyoutsu_dir="${home_dir}/E-LIFE/KYOUTSU/HTML"
test_tbl_dir="${home_dir}/E-LIFE/TEST/TBL"
hometbl_dir="${home_dir}/E-LIFE/TBL"
riyosha_dir="/DATA/E-LIFE/UNEI/RIYOUSHA"
tbl_dir="${home_dir}/E-LIFE/TBL"
# 引数設定
namefile=${1}
checkfile=${2}
searchfile=${3}
downloadfile=${4}

# eval
eval $(name-source ${namefile})

# 権限でボタンの使用可否
cat /home/hands/E-LIFE//SYSTEM_SETTEI/POMPA/KENGEN_KANRI/USER_KENGEN/${userid}.USER_KENGEN |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
awk '$2=="0000" || $2=="'${shisetsu}'"'                                                    |
awk '$7=="MONTHLY_VITAL_GRAPH.CGI"{print $1,$9}'                                                                |
LANG=C sort -u -k2,2n                                                                       |
getlast 1 1                                                                                |
self 2                                                                                     > $tmp-btn_kengen

[ "$(cat $tmp-btn_kengen)" = "3" ] && echo "###BTN_SEIGYO###" " " >> $tmp-calsed1
[ "$(cat $tmp-btn_kengen)" = "2" -o "$(cat $tmp-btn_kengen)" = "1" ] && echo "###BTN_SEIGYO###" "none" >> $tmp-calsed1



#--------------------------------------------------------------
# ログインUSER名と施設の取得
cat /home/hands/E-LIFE/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
tee ${tmp}-jugyoin        |
# 1:USER_ID 2:ユーザー名
awk '$1=="'${userid}'"'   |
# 1:USER_ID 2:ユーザー名
self 2                    > ${tmp}-usermei


self 1 2 /home/hands/E-LIFE/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 /home/hands/E-LIFE/TBL/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst

cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst


# 施設名はログインユーザーの権限のある施設を取得
cat /home/hands/E-LIFE//SYSTEM_SETTEI/POMPA/KENGEN_KANRI/USER_KENGEN/${userid}.USER_KENGEN |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou
#-----------------------------------------------------------
# SHISETSU_TATEYA_FLOOR_ROOMのマスタ準備
echo $shisetsu > $tmp-shisetsu

# ユニットマスタの準備
awk '$(NF-2)!=9' ${tbl_dir}/SHISETSU_MASTER/UNIT_NAME        |
self 1 2                                                     > $tmp-unit_master

# 利用者マスタの準備
awk '$(NF-2)!=9' ${riyosha_dir}/RIYOUSHA_MASTER              |
self 1 2                                                     > $tmp-riyosha_master

awk '$(NF-2)!=9' ${riyosha_dir}/RIYOUSHA_MASTER              |
self 1 2 3                                                   > $tmp-riyosha_master_kana
# SHISETSU_RIYOSHA_STATUSの準備
if [ -n "${nengetsu}" -a "${nengetsu}" != "_" ];then
  shonichi=$(echo $nengetsu | awk '{print $1"01"}')
  matsubi=$(mdate ${nengetsu}m | tarr | tail -n1)
else
  shonichi=$(echo $this_month | awk '{print $1"01"}')
  matsubi=$(mdate ${this_month}m | tarr | tail -n1)
fi

awk '$(NF-2)!=9' ${riyosha_dir}/SHISETSU_RIYOUSHA_STATUS     |
# 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
join0 key=1 $tmp-shisetsu                                    |
if [ $shisetsu = "0001" ];then
  join0 key=2 <(echo "02")
else
  join0 key=2 <(echo "00")
fi |
awk '$7<="'${matsubi}'" && $8>="'${shonichi}'"'              > $tmp-riyosha_status


# 画面の描画モードを決定する。
MODE="$(nameread "MODE" ${namefile})"
if [ -n "${MODE}" -a "${MODE}" != "_" ];then
  :
else
  MODE="init"
fi
if [ -z ${downloadfile} ];then
  FILE_NAME="null"
else
  file=$(cat ${downloadfile})
  FILE_NAME="\"/E-LIFE/SHISETSU_KAIGOKIROKU/DOWNLOAD/${file}\""
fi

echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu


# MODEがinitだったら渡ってきたネームをクリア
if [ "${MODE}" = "init" ];then
  riyosha_name="_"
  nengetsu="_"
  floor=$(self 3 $tmp-riyosha_status | head -n1)
  unit=$(self 4 $tmp-riyosha_status  | head -n1)
  room_select=$(cat $tmp-riyosha_status                     |
         awk '$3=="'${floor}'"'                                |
         self 5 | head -n1)
  # デフォルトメッセージを作成
  echo "###DEFAULT_MES###" "条件を設定して「表示」ボタンをクリックしてください" >> ${tmp}-calsed1
else
  if [ "$(gyo ${searchfile})" = "0" ];then
    echo "###DEFAULT_MES###" "データがありません" >> ${tmp}-calsed1
  else
    echo "###DEFAULT_MES###" "" >> ${tmp}-calsed1
  fi
fi
# 利用者名の取得
if [ -n "${riyosha_name}" -a "${riyosha_name}" != "_" ];then
  cat $tmp-riyosha_status                                           |
# 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
  self 6                                                            |
  LANG=C sort -k1,1                                                |
  join1 key=1 $tmp-riyosha_master_kana                             |
  LANG=C sort -k3,3 |
  delf 3 |
  awk '{print $0,"'${riyosha_name}'"}'                              |
# 1:RIYOSHA_CODE 2:RIYOSHA_NAME 3:riyosha_name
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'    |
  sed 's/###SPACE###/　/g'                                          > ${tmp}-riyosha_name
else
  cat $tmp-riyosha_status                                           |
# 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
  self 6 5                                                          |
  LANG=C sort -k1,1                                                |
  join1 key=1 $tmp-riyosha_master_kana                             |
  LANG=C sort -k3,3 |
  delf 3 |
  awk '{print $0,"'${room_select}'"}'                              |
  awk '{if($3==$4){$3="selected"}else{$3="@"};print $1,$2,$3}'     |
  sed 's/###SPACE###/　/g'                                          > ${tmp}-riyosha_name
fi
# フロアの取得
if [ -n "${floor}" -a "${floor}" != "_" ];then
  self 3 $tmp-riyosha_status                      |
# 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  LANG=C sort -u -k1,1n                                        |
  awk '{print $0,"'${floor}'"}'                                |
# 1:FLOOR_CODE 2:floor_name
  awk '{if($1==$2){print $1,$1"F","selected"}else{print $1,$1"F",""}}'   > ${tmp}-floor_name
else
  self 3 $tmp-riyosha_status                      |
# 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  LANG=C sort -u -k1,1n                                        |
  awk '{print $1,$1"F"}'                                       > ${tmp}-floor_name
fi

# ユニットの取得
if [ -n "${unit}" -a "${unit}" != "_" ];then
# 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  awk '$3=="'${floor}'"' $tmp-riyosha_status                   |
  self 4                                                       |
# 1:UNIT_CODE 2:UNIT_NAME
  LANG=C sort -u -k1,1                                        |
  join1 key=1 $tmp-unit_master                                 |
  awk '{print $0,"'${unit}'"}'                                 |
# 1:UNTI_CODE 2:unit_name
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'   > ${tmp}-unit_name
else
# 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  self 4 $tmp-riyosha_status                                   |
# 1:UNIT_CODE 2:UNIT_NAME
  LANG=C sort -u -k1,1                                        |
  join1 key=1 $tmp-unit_master                                 > $tmp-unit_name
fi

# 居室
cat $tmp-riyosha_status                                   |
# 1:施設コード 2:建屋   3:フロア 4:ユニット   5:居室
# 6:利用者ID   7:入居日 8:退去日 9:有効フラグ 10:更新日
# 11:更新者
#awk '$3=="'${floor}'"&&$4=="'${unit}'"{print $5}'         |
self 5 5 |
LANG=C sort -u                                            |
awk '{print $0,"'${room_select}'"}'                          |
awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,"@"}}' > $tmp-room_select

# 年月の取得
if [ -n "${nengetsu}" -a "${nengetsu}" != "_" ];then
  mdate -e ${this_month}m/-3                                |
  tarr                                                      |
  LANG=C sort -k1,1nr                                       |
  awk '{print $0,"'${nengetsu}'"}'                          |
  awk '{if($1==$2){print $1,"selected"}else{print $1,""}}'  |
  awk '{all=substr($1,1,6);nen=substr($1,1,4);getu=substr($1,5,2);print all,nen"年"getu"月",$2}' > ${tmp}-nengetsu
else
  mdate -e ${this_month}m/-3                                |
  tarr                                                      |
  LANG=C sort -k1,1nr                                       |
  awk '{all=substr($1,1,6);nen=substr($1,1,4);getu=substr($1,5,2);print all,nen"年"getu"月"}' > ${tmp}-nengetsu
fi


# searchfileの処理
if [ -s "${searchfile}" ];then
  :
else
  :                     > ${tmp}-header
  :                     > ${tmp}-taijyu_hyo
  :                     > ${tmp}-taijyu_header
  :                     > ${tmp}-taion_hyo
  :                     > ${tmp}-taion_header
  :                     > ${tmp}-myakuhaku_hyo
  :                     > ${tmp}-myakuhaku_header
  :                     > ${tmp}-kokyu_hyo
  :                     > ${tmp}-kokyu_header
  :                     > ${tmp}-ketsu_ue_hyo
  :                     > ${tmp}-ketsu_shita_hyo
  :                     > ${tmp}-ketsu_ue_header
  :                     > ${tmp}-ketsu_shita_header
fi

#######################################################################################
# formhame前の実態参照変換
calsed "&" "&amp;" ${namefile}                      |
calsed "<" "&lt;"                                   |
calsed ">" "&gt;"                                   |
calsed "\"" "&quot;"                                |
# formhame前にキーワードが　"_"　のみの場合、消去
awk '{if($1~/SEARCH_WORD/){if($2~/^_$/){$2=""};}print}'  |
# formhame前にキーワードが検索ボックスの空白を "_"から" "に戻す
awk '{if($1~/SEARCH_WORD/){gsub(/_/," ",$2)};print}'     > $tmp-namefile

#######################################################################################

#######################################################################################
# namefileの再構成

cat <<- FIN > ${tmp}-namefile
MODE ${MODE}
FIN
#######################################################################################


#######################################################################################
# calsedするfileをつくろう
cat <<- FIN | sed 's/ _$/ @/g' >> ${tmp}-calsed1
###DROPDOWN_ACTIVE6### active
###LI_KANGOKAIGOKIROKU8### active
###USERID### ${userid}
###SHISETSUID### ${shisetsu}
###PASSWORD### ${password}
###FILE_NAME### ${FILE_NAME}
###SELECT_SHISETSU### $select_shisetsu
FIN
cat ${tmp}-calsed1 ${checkfile} > ${tmp}-calsed

#### MODEが修正のときは処理を分岐する
cat ${html_dir}/KAIGOJISSEKI_GRAPH_MONTHLY_VITAL1.html ${kyoutsu_dir}/MENUBAR.html ${html_dir}/KAIGOJISSEKI_GRAPH_MONTHLY_VITAL2.html   |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -l###UNIT_NAME### - ${tmp}-unit_name |
mojihame -l###FLOOR_NAME### - ${tmp}-floor_name |
mojihame -l###ROOM_NAME### - ${tmp}-room_select |
mojihame -l###RIYOSHA_NAME### - ${tmp}-riyosha_name |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###USER_SHISETSU_NAME### - ${tmp}-user_shisetsu |
mojihame -l###NENGETSU### - ${tmp}-nengetsu |
mojihame -l###TAIJYU_DATA### - ${tmp}-taijyu_hyo |
mojihame -l###TAION_DATA### - ${tmp}-taion_hyo |
mojihame -l###MYAKUHAKU_DATA### - ${tmp}-myakuhaku_hyo |
mojihame -l###KOKYU_DATA### - ${tmp}-kokyu_hyo |
mojihame -l###KETSU_UE_DATA### - ${tmp}-ketsu_ue_hyo |
mojihame -l###KETSU_SHITA_DATA### - ${tmp}-ketsu_shita_hyo |
mojihame -l###HEADER### - ${tmp}-header |
mojihame -l###TAIJYU_HEADER### - ${tmp}-taijyu_header |
mojihame -l###TAION_HEADER### - ${tmp}-taion_header |
mojihame -l###MYAKUHAKU_HEADER### - ${tmp}-myakuhaku_header |
mojihame -l###KOKYU_HEADER### - ${tmp}-kokyu_header |
mojihame -l###KETSU_UE_HEADER### - ${tmp}-ketsu_ue_header |
mojihame -l###KETSU_SHITA_HEADER### - ${tmp}-ketsu_shita_header |
calsed -f ${tmp}-calsed - 
#formhame -d"_" - ${tmp}-namefile 
# HTMLの作成

rm -f ${tmp}-*
exit 0
