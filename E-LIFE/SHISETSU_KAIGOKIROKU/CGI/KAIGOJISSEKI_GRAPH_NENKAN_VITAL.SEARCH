#!/bin/bash
#
# KAIGOJISSEKI_GRAPH_MONTHLY_VITAL.SEARCH : 月間バイタルグラフ検索用CGI
#
# Usage : KAIGOJISSEKI_GRAPH_MONTHLY_VITAL.SEARCH ${namefile}
#
# Written by j.aoyagi(hands lab.inc)



#--------------------設定ファイル読込--------------------
source /home/hands/.bashrc &> /dev/null
#--------------------ログ出力--------------------
mkdir -p /home/hands/E-LIFE/SHISETSU_KAIGOKIROKU/APLOG/$(date +%Y%m%d)
exec 2> /home/hands/E-LIFE/SHISETSU_KAIGOKIROKU/APLOG/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv
#


#--------------------変数設定--------------------
tmp=/var/tmp/$$

#ゴミtmpの消去
rm -f $tmp-*

namefile=${1}
current_time="$(date "+%Y%m%d%H%M%S")"

today="$(date +%Y%m%d)"
this_month="$(date +%Y%m)"

# ディレクトリの設定
home_dir="/home/hands"
app_dir="${home_dir}/E-LIFE/SHISETSU_KAIGOKIROKU"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
tbl_dir="${app_dir}/TBL"
pompa_dir="${app_dir}/POMPA/KAIGOJISSEKI"
input_dir="${app_dir}/INPUT/KAIGOJISSEKI"
aplog_dir="${app_dir}/AP_LOG"
download_dir="${app_dir}/DOWNLOAD"
temp_dir="${app_dir}/TEMPLATE"
riyosha_dir="/DATA/E-LIFE/UNEI/RIYOUSHA"
tbl_dir="${home_dir}/E-LIFE/TBL"


# 必要な値の取得
cat ${namefile} > ${tmp}-name


#--------------------エラー時の対応--------------------
function error_exit(){
  message=$1
  echo ${message}

  rm -f $tmp-*
  exit 1
}

eval $(name-source ${namefile})

# 画面の描画モードを決定する。
MODE="$(nameread "MODE" ${namefile})"
if [ -n "${MODE}" -a "${MODE}" != "_" ];then
  :
else
  MODE="search"
fi

# 年月の取得
echo ${nengetsu} > ${tmp}-nengetsu
echo ${riyosha_name} > ${tmp}-taishosha

# 検索する年月を取得
mdate -e ${nengetsu}m/-11    > ${tmp}-search_month
# 最初に年間の計算
for month in $(cat $tmp-search_month);do
  cat ${pompa_dir}/${shisetsu}/${month}/${month}.KAIGOJISSEKI_IKKATSU_VITAL  |
  # 1:riyosha 2:nengetsu 3:taion 4:ketsu_ue 5:ketsu_shita 6:myakuhaku 7:kokyu 8:sat 9:taijyu 10:time 11:shoyotime 12:biko 13:tourokuday 13:ID
  sed 's/_/0/g'                                                  |
  LANG=C sort -k1,1                                              |
  join0 key=1 ${tmp}-taishosha                                   > ${tmp}-original

  # 体温
  cat ${tmp}-original                                            |
  self 1 3                                                       > $tmp-taion_base
  # 1:riyosha 2:taion
  taion_kaisu=$(cat $tmp-taion_base | awk '$2!=0' | gyo)
  if [ "${taion_kaisu}" = 0 ];then
    cat $tmp-taion_base
  else
    cat $tmp-taion_base                                          |
    sm2 1 1 2 2                                                  |
    awk '{print $0,"'${taion_kaisu}'"}'                          |
    lcalc '$1,$2/$3'                                             |
    marume 2.1
  fi                                                             > $tmp-taion

  # 血圧上
  cat ${tmp}-original                                            |
  self 1 4                                                       > $tmp-ketsu_ue_base
  # 1:riyosha 2:ketsu_ue
  ketsu_ue_kaisu=$(cat $tmp-ketsu_ue_base | awk '$2!=0' | gyo)
  if [ "${ketsu_ue_kaisu}" = 0 ];then
    cat $tmp-ketsu_ue_base
  else
    cat $tmp-ketsu_ue_base                                       |
    sm2 1 1 2 2                                                  |
    awk '{print $0,"'${ketsu_ue_kaisu}'"}'                       |
    lcalc '$1,$2/$3'                                             |
    marume 2.0
  fi                                                             > $tmp-ketsu_ue

  # 血圧下
  cat ${tmp}-original                                            |
  self 1 5                                                       > $tmp-ketsu_shita_base
  # 1:riyosha 2:ketsu_ue
  ketsu_shita_kaisu=$(cat $tmp-ketsu_shita_base | awk '$2!=0' | gyo)
  if [ "${ketsu_shita_kaisu}" = 0 ];then
    cat $tmp-ketsu_shita_base
  else
    cat $tmp-ketsu_shita_base                                    |
    sm2 1 1 2 2                                                  |
    awk '{print $0,"'${ketsu_shita_kaisu}'"}'                    |
    lcalc '$1,$2/$3'                                             |
    marume 2.0
  fi                                                             > $tmp-ketsu_shita

  # 脈拍
  cat ${tmp}-original                                            |
  self 1 6                                                       > $tmp-myakuhaku_base
  # 1:riyosha 2:ketsu_ue
  myakuhaku_kaisu=$(cat $tmp-myakuhaku_base | awk '$2!=0' | gyo)
  if [ "${myakuhaku_kaisu}" = 0 ];then
    cat $tmp-myakuhaku_base
  else
    cat $tmp-myakuhaku_base                                      |
    sm2 1 1 2 2                                                  |
    awk '{print $0,"'${myakuhaku_kaisu}'"}'                      |
    lcalc '$1,$2/$3'                                             |
    marume 2.0
  fi                                                             > $tmp-myakuhaku

  # 呼吸
  cat ${tmp}-original                                            |
  self 1 7                                                       > $tmp-kokyu_base
  # 1:riyosha 2:ketsu_ue
  kokyu_kaisu=$(cat $tmp-kokyu_base | awk '$2!=0' | gyo)
  if [ "${kokyu_kaisu}" = 0 ];then
    cat $tmp-kokyu_base
  else
    cat $tmp-kokyu_base                                          |
    sm2 1 1 2 2                                                  |
    awk '{print $0,"'${kokyu_kaisu}'"}'                          |
    lcalc '$1,$2/$3'                                             |
    marume 2.0
  fi                                                             > $tmp-kokyu

  # sat
  cat ${tmp}-original                                            |
  self 1 8                                                       > $tmp-sat_base
  # 1:riyosha 2:ketsu_ue
  sat_kaisu=$(cat $tmp-sat_base | awk '$2!=0' | gyo)
  if [ "${sat_kaisu}" = 0 ];then
    cat $tmp-sat_base
  else
    cat $tmp-sat_base                                            |
    sm2 1 1 2 2                                                  |
    awk '{print $0,"'${sat_kaisu}'"}'                            |
    lcalc '$1,$2/$3'                                             |
    marume 2.0
  fi                                                             > $tmp-sat

  # 体重
  cat ${tmp}-original                                            |
  self 1 9                                                       > $tmp-taijyu_base
  # 1:riyosha 2:ketsu_ue
  taijyu_kaisu=$(cat $tmp-taijyu_base | awk '$2!=0' | gyo)
  if [ "${taijyu_kaisu}" = 0 ];then
    cat $tmp-taijyu_base
  else
    cat $tmp-taijyu_base                                         |
    sm2 1 1 2 2                                                  |
    awk '{print $0,"'${taijyu_kaisu}'"}'                         |
    lcalc '$1,$2/$3'                                             |
    marume 2.0
  fi                                                             > $tmp-taijyu

  cat ${tmp}-original                                            |
  # 1:riyosha 2:nengetsu 3:taion 4:ketsu_ue 5:ketsu_shita 6:myakuhaku 7:kokyu 8:sat 9:taijyu 10:time 11:shoyotime 12:biko 13:tourokuday 13:ID
  self 1                                                         |
  loopj num=1 ${tmp}-taion ${tmp}-ketsu_ue ${tmp}-ketsu_shita ${tmp}-myakuhaku ${tmp}-kokyu ${tmp}-sat ${tmp}-taijyu |
  awk '{print $1,"'${month}'",$2,$3,$4,$5,$6,$7,$8}'             > ${tmp}-month_data
  # 1:利用者ID 2:年月 3:体温 4:血圧(上) 5:血圧(下) 6:脈拍 7:呼吸 8:SAT 9:体重
  mv ${tmp}-month_data ${pompa_dir}/${shisetsu}/${month}/${month}.KAIGOJISSEKI_IKKATSU_VITAL_MONTHLY
done



# 検索する
for month in $(cat ${tmp}-search_month);do
  cat ${pompa_dir}/${shisetsu}/${month}/${month}.KAIGOJISSEKI_IKKATSU_VITAL_MONTHLY     |
# 1:利用者 2:作成日  3:体温 4:血圧(上) 5:血圧(下) 6:脈拍 7:呼吸 8:SAT 9:体重
  LANG=C sort -k1,1                                                        |
  join0 key=1 ${tmp}-taishosha                                              |
  awk '{print $1,substr($2,5,2),$3,$4,$5,$6,$7,$8,$9}'                      >> ${tmp}-daydata
done
# データを整形
# 先に目盛りの月データを作成
cat  ${tmp}-search_month             |
tarr                                 |
awk '{print substr($1,5,2),"0"}'     |
rank                                 |
self 2 3 1                           |
LANG=C sort -k1,1n                   > ${tmp}-calender_new

# 表のヘッダーを作成
cat $tmp-calender_new                 |
LANG=C sort -k3,3n                    |
self 1 2                              > $tmp-calender
echo "月"                             |
cat - ${tmp}-calender                 |
self 1                                |
yarr                                  > ${tmp}-header
#--------------------------------------------------------------------------------
# 体重
#--------------------------------------------------------------------------------
cat ${tmp}-daydata                    |
# 1:利用者 2:日  3:体温 4:血圧(上) 5:血圧(下) 6:脈拍 7:呼吸 8:SAT 9:体重
self 2 9                              |
# 1:日 2:体温
awk '$2!="0"'                         > ${tmp}-taijyuuu
if [ "$(gyo ${tmp}-taijyuuu)" = "0" ];then
  cat  ${tmp}-search_month             |
  tarr                                 |
  awk '{print substr($1,5,2),"0"}'     |
  awk 'BEGIN{OFS=","}{print "[""'\''"$1"'\''",$2"]"}' |
  yarr                                 |
  sed 's/ /,/g'                         |
  awk '{print "taijyu",$0}'          > ${tmp}-taijyu_data

# 体重の表のデータ
  cat  ${tmp}-search_month             |
  tarr                                 |
  awk '{print substr($1,5,2),"0"}'     |
  self 2                               |
  yarr                                 |
  awk '{print "体重",$0}'              > ${tmp}-taijyu_hyo
else
  cat ${tmp}-taijyuuu                   |
  loopj num=1 - ${tmp}-calender_new     |
tee taijyu |
  LANG=C sort -k4,4n                    |
  self 1 2                              |
  awk 'BEGIN{OFS=","}{print "[""'\''"$1"'\''",$2"]"}' |
  # 1:['日' 2:体重]
  yarr                                  |
  sed 's/ /,/g'                         |
  awk '{print "taijyu",$0}'             > ${tmp}-taijyu_data


# 体重の表のデータ
  cat ${tmp}-taijyuuu                 |
  loopj num=1 - ${tmp}-calender_new   |
  LANG=C sort -k4,4n                  |
  self 2                              |
  yarr                                |
  awk '{print "体重",$0}'             > ${tmp}-taijyu_hyo
fi

#--------------------------------------------------------------------------------
# 体温
#--------------------------------------------------------------------------------
cat ${tmp}-daydata                    |
# 1:利用者 2:日  3:体温 4:血圧(上) 5:血圧(下) 6:脈拍 7:呼吸 8:SAT 9:体重
self 2 3                              |
# 1:日 2:体温
awk '$2!="0"'                         |
tee ${tmp}-taion_totyu                |
awk 'BEGIN{OFS=","}{print "[""'\''"$1"'\''",$2"]"}' |
# 1:['日' 2:体重]
yarr                                  |
sed 's/ /,/g'                         |
awk '{print "taion",$0}'              > ${tmp}-taion_data

# 体温の表のデータ
if [ "$(gyo  "${tmp}-taion_totyu")" = 0 ];then
  cat  ${tmp}-search_month             |
  tarr                                 |
  awk '{print substr($1,5,2),"0"}'     |
  awk 'BEGIN{OFS=","}{print "[""'\''"$1"'\''",$2"]"}' |
  yarr                                 |
  sed 's/ /,/g'                         |
  awk '{print "taion",$0}'              > ${tmp}-taion_data

  cat ${tmp}-search_month              |
  tarr                                 |
  awk '{print substr($1,5,2),"0"}'     |
  self 2                               |
  yarr                                 |
  awk '{print "体温",$0}'              > ${tmp}-taion_hyo
else
  loopj num=1  ${tmp}-taion_totyu ${tmp}-calender_new |
  LANG=C sort -k4,4n                   |
  self 2                               |
  yarr                                 |
  awk '{print "体温",$0}'              > ${tmp}-taion_hyo
fi

## 脈拍
cat ${tmp}-daydata                    |
# 1:利用者 2:日  3:体温 4:血圧(上) 5:血圧(下) 6:脈拍 7:呼吸 8:SAT 9:体重
self 2 6                              |
# 1:日 2:体温
awk '$2!="0"'                         |
tee ${tmp}-myakuhaku_totyu                |
awk 'BEGIN{OFS=","}{print "[""'\''"$1"'\''",$2"]"}' |
# 1:['日' 2:体重]
yarr                                  |
sed 's/ /,/g'                         |
awk '{print "myakuhaku",$0}'          > ${tmp}-myakuhaku_data

# 脈拍の表のデータ
if [ "$(gyo  "${tmp}-myakuhaku_totyu")" = 0 ];then
  cat  ${tmp}-search_month             |
  tarr                                 |
  awk '{print substr($1,5,2),"0"}'     |
  awk 'BEGIN{OFS=","}{print "[""'\''"$1"'\''",$2"]"}' |
  yarr                                 |
  sed 's/ /,/g'                         |
  awk '{print "myakuhaku",$0}'         > ${tmp}-myakuhaku_data

  cat  ${tmp}-search_month             |
  tarr                                 |
  awk '{print substr($1,5,2),"0"}'     |
  self 2                               |
  yarr                                 |
  awk '{print "脈拍",$0}'              > ${tmp}-myakuhaku_hyo
else
  loopj num=1  ${tmp}-myakuhaku_totyu ${tmp}-calender_new |
  LANG=C sort -k4,4n                   |
  self 2                               |
  yarr                                 |
  awk '{print "脈拍",$0}'              > ${tmp}-myakuhaku_hyo
fi

## 呼吸
cat ${tmp}-daydata                    |
# 1:利用者 2:日  3:体温 4:血圧(上) 5:血圧(下) 6:脈拍 7:呼吸 8:SAT 9:体重
self 2 7                              |
# 1:日 2:体温
awk '$2!="0"'                         |
tee ${tmp}-kokyu_totyu                |
awk 'BEGIN{OFS=","}{print "[""'\''"$1"'\''",$2"]"}' |
# 1:['日' 2:体重]
yarr                                  |
sed 's/ /,/g'                         |
awk '{print "kokyu",$0}'          > ${tmp}-kokyu_data

# 呼吸の表のデータ
if [ "$(gyo  "${tmp}-kokyu_totyu")" = 0 ];then
  cat  ${tmp}-search_month             |
  tarr                                 |
  awk '{print substr($1,5,2),"0"}'     |
  awk 'BEGIN{OFS=","}{print "[""'\''"$1"'\''",$2"]"}' |
  yarr                                 |
  sed 's/ /,/g'                         |
  awk '{print "kokyu",$0}'         > ${tmp}-kokyu_data
  cat  ${tmp}-search_month             |
  tarr                                 |
  awk '{print substr($1,5,2),"0"}'     |
  self 2                               |
  yarr                                 |
  awk '{print "呼吸",$0}'              > ${tmp}-kokyu_hyo
else
  loopj num=1  ${tmp}-kokyu_totyu ${tmp}-calender_new |
  LANG=C sort -k4,4n                   |
  self 2                               |
  yarr                                 |
  awk '{print "呼吸",$0}'              > ${tmp}-kokyu_hyo
fi

## 血圧
cat ${tmp}-daydata                    |
# 1:利用者 2:日  3:体温 4:血圧(上) 5:血圧(下) 6:脈拍 7:呼吸 8:SAT 9:体重
self 2 5 4                            |
# 1:日 2:血圧(下) 3:血圧(上)
awk '$2!="0" || $3!="0"'              |
tee ${tmp}-ketsu_totyu                |
awk 'BEGIN{OFS=","}{print "[""'\''"$1"'\''",$2,$3"]"}' |
# 1:['日' 2:血圧(下) 3:血圧(上)]
yarr                                  |
sed 's/ /,/g'                         |
awk '{print "ketsu",$0}'              > ${tmp}-ketsu_data

# 血圧の表のデータ
if [ "$(gyo  "${tmp}-ketsu_totyu")" = 0 ];then
  cat  ${tmp}-search_month             |
  tarr                                 |
  awk '{print substr($1,5,2),"0"}'     |
  awk 'BEGIN{OFS=","}{print "[""'\''"$1"'\''",$2,$3"]"}' |
  yarr                                 |
  sed 's/ /,/g'                         |
  awk '{print "ketsu",$0}'         > ${tmp}-ketsu_data
  cat  ${tmp}-search_month             |
  tarr                                 |
  awk '{print substr($1,5,2),"0"}'     |
  self 2                               |
  yarr                                 |
  awk '{print "血圧(上)",$0}'              > ${tmp}-ketsu_ue_hyo

  cat  ${tmp}-search_month             |
  tarr                                 |
  awk '{print substr($1,5,2),"0"}'     |
  self 2                               |
  yarr                                 |
  awk '{print "血圧(下)",$0}'              > ${tmp}-ketsu_shita_hyo
else
  # 血圧(下)
  cat  ${tmp}-ketsu_totyu              |
  self 1 2                             |
  loopj num=1 - ${tmp}-calender_new    |
  LANG=C sort -k4,4n                   |
  self 2                               |
  yarr                                 |
  awk '{print "血圧(下)",$0}'          > ${tmp}-ketsu_shita_hyo
  # 血圧(上)
  cat  ${tmp}-ketsu_totyu              |
  self 1 3                             |
  loopj num=1 - ${tmp}-calender_new    |
  LANG=C sort -k4,4n                   |
  self 2                               |
  yarr                                 |
  awk '{print "血圧(上)",$0}'          > ${tmp}-ketsu_ue_hyo
fi


cat  ${tmp}-search_month             |
tarr                                 |
awk '{print substr($1,7,2),"0"}'     |
awk 'BEGIN{OFS=","}{print "[""'\''"$1"'\''",$2"]"}' |
yarr                                 |
sed 's/ /,/g'                         |
awk '{print "memori",$0}'          > ${tmp}-momeri

cat ${tmp}-taijyu_data ${tmp}-taion_data ${tmp}-myakuhaku_data ${tmp}-kokyu_data ${tmp}-ketsu_data ${tmp}-header ${tmp}-taijyu_hyo ${tmp}-taion_hyo ${tmp}-myakuhaku_hyo ${tmp}-kokyu_hyo ${tmp}-ketsu_ue_hyo ${tmp}-ketsu_shita_hyo

# 終了
rm -f $tmp-*

exit 0
