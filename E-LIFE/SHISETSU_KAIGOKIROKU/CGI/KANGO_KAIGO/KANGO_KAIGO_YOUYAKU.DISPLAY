#!/bin/bash
#
# KANGO_KAIGO_YOUYAKU.DISPLAY : 看護介護要約.DISPLAY
#
# Usage : KANGO_KAIGO_YOUYAKU.DISPLAY namefile datafile
#
# Written by j.aoyagi(hands lab.inc)

# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null

#--------------------ログ出力--------------------
mkdir -p /home/hands/E-LIFE/SHISETSU_KAIGOKIROKU/APLOG/$(date +%Y%m%d)
exec 2> /home/hands/E-LIFE/SHISETSU_KAIGOKIROKU/APLOG/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv

# 変数設定
tmp=/var/tmp/${$}

#ゴミtmpの消去
rm -f $tmp-*

today="$(date +%Y%m%d)"
this_month="$(date +%Y%m)"

# ディレクトリ設定
home_dir="/home/hands"
app_dir="${home_dir}/E-LIFE/SHISETSU_KAIGOKIROKU"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
pompa_dir="${app_dir}/POMPA"
input_dir="${app_dir}/INPUT"
apptbl_dir="${app_dir}/TBL"
kyoutsu_dir="${home_dir}/E-LIFE/KYOUTSU/HTML"
test_tbl_dir="${home_dir}/E-LIFE/TEST/TBL"
hometbl_dir="${home_dir}/E-LIFE/TBL"
riyosha_dir="/DATA/E-LIFE/UNEI/RIYOUSHA"
tbl_dir="${home_dir}/E-LIFE/TBL"
work="${app_dir}/WORK"


# 引数設定
namefile=${1}
checkfile=${2}
searchfile=${3}


# eval
eval $(name-source ${namefile})

# 権限でボタンの使用可否
cat /home/hands/E-LIFE//SYSTEM_SETTEI/POMPA/KENGEN_KANRI/USER_KENGEN/${userid}.USER_KENGEN |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
awk '$2=="0000" || $2=="'${shisetsu}'"'                                                    |
awk '$7=="KAIGO_KANGO_YOUYAKU.CGI"{print $1,$9}'                                                                |
LANG=C sort -u -k2,2n                                                                       |
getlast 1 1                                                                                |
self 2                                                                                     > $tmp-btn_kengen

[ "$(cat $tmp-btn_kengen)" = "3" -o "$(cat $tmp-btn_kengen)" = "2" ] && echo "###BTN_SEIGYO###" " " >> $tmp-calsed1
[ "$(cat $tmp-btn_kengen)" = "1" -o "$(cat $tmp-btn_kengen)" = "0" ] && echo "###BTN_SEIGYO###" "none" >> $tmp-calsed1

[ "$(cat $tmp-btn_kengen)" = "3" ] && echo "###PRINT_BTN_SEIGYO###" " " >> $tmp-calsed1
[ "$(cat $tmp-btn_kengen)" = "2" -o "$(cat $tmp-btn_kengen)" = "1" ] && echo "###PRINT_BTN_SEIGYO###" "none" >> $tmp-calsed1

#--------------------------------------------------------------
# ログインUSER名と施設の取得
cat /home/hands/E-LIFE/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |

#--------------------------------------------------------------
# ログインUSER名と施設の取得
cat /home/hands/E-LIFE/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
tee ${tmp}-jugyoin        |
# 1:USER_ID 2:ユーザー名
awk '$1=="'${userid}'"'   |
# 1:USER_ID 2:ユーザー名
self 2                    > ${tmp}-usermei


self 1 2 /home/hands/E-LIFE/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 /home/hands/E-LIFE/TBL/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst

cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst


# 施設名はログインユーザーの権限のある施設を取得
cat /home/hands/E-LIFE//SYSTEM_SETTEI/POMPA/KENGEN_KANRI/USER_KENGEN/${userid}.USER_KENGEN |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou
#-----------------------------------------------------------

# SHISETSU_TATEYA_FLOOR_ROOMのマスタ準備
echo $shisetsu > $tmp-shisetsu
# ユニットマスタの準備
awk '$(NF-2)!=9' ${tbl_dir}/SHISETSU_MASTER/UNIT_NAME        |
self 1 2                                                     > $tmp-unit_master

# 利用者マスタの準備
awk '$(NF-2)!=9' ${riyosha_dir}/RIYOUSHA_MASTER              |
self 1 2                                                     > $tmp-riyosha_master
awk '$(NF-2)!=9' ${riyosha_dir}/RIYOUSHA_MASTER              |
self 1 2 3                                                   > $tmp-riyosha_master_kana

# SHISETSU_RIYOSHA_STATUSの準備
awk '$(NF-2)!=9' ${riyosha_dir}/SHISETSU_RIYOUSHA_STATUS     |
# 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
join0 key=1 $tmp-shisetsu                                    |
if [ $shisetsu = "0001" ];then
  join0 key=2 <(echo "02")
else
  join0 key=2 <(echo "00")
fi |
awk '$8>="'${today}'"'                > $tmp-riyosha_status

# 画面の描画モードを決定する。
MODE="$(nameread "MODE" ${namefile})"
if [ -n "${MODE}" -a "${MODE}" != "_" ];then
  :
else
  MODE="init"
fi

if [ "$MODE" = "init" -o "$MODE" = "search" ];then
# nameをクリアする
floor=$(self 3 $tmp-riyosha_status | head -n1)
unit=$(self 4 $tmp-riyosha_status  | head -n1)
room_select=""
riyosha_name=""
text_kikan_from=""
hd_kikan_from=""
text_kikan_to=""
hd_kikan_to=""
kyoshitsu=""
shubetsu=""
txtarea_haisetsu=""
nyukyosha_shimei=""
furigana=""
kaigodo=""
kaigodo_kikan=""
seibetsu=""
birthday=""
nenrei=""
txtarea1=""
txtarea3=""
txtarea4=""
txtarea_senmen=""
text_b_t_koukan=""
hd_b_t_koukan=""
text_m_t_koukan=""
hd_m_t_koukan=""
text_irou=""
hd_irou=""
b_T=""
M_T=""
irou=""
kikan_ryoku=""
text_irou=""
hd_irou=""
nyure=""
text_nyure=""
hd_nyure=""
sanso=""
ivh=""
iryo_sonota=""
yakuzai="off"
yakuzai_text=""
kansensho="off"
kansensho_text=""
ninchisho="off"
ninchisho_text=""
mondai="off"
mondai_haikai=""
mondai_ishoku=""
mondai_genshi=""
mondai_genkaku=""
mondai_boukou=""
mondai_bougen=""
mondai_shushu=""
mondai_higai=""
mondai_sonota=""
mondai_sonota_text=""
txtarea_kihon=""
txtarea_shinri=""
riha_risho=""
riha_adl=""
riha_ido=""
riha_ijyo=""
riha_kikyo=""
riha_sonota=""
staff_hoko=""
staff_kurumaisu=""
staff_ritsui=""
staff_sonota=""
pt_riha="off"
pt_shudan=""
pt_group=""
pt_kobetsu=""
masa_mon=""
masa_tue=""
masa_wed=""
masa_thu=""
masa_fri=""
masa_sat=""
masa_sun=""
mas_text=""
taii_koukan="off"
txtarea_care_keika=""
txtarea_kioureki=""
txtarea_seikatsu_reki=""
txtarea_gokazoku=""
text_vital=""
hd_vital=""
vital_text=""
vital_taion=""
vital_ketsuatsu_ue=""
vital_ketsuatsu_shita=""
vital_kokyu=""
vital_spo2=""
text_last_haiben=""
hd_last_haiben=""
koushinbi=""
koushinsha=""
else
 :
fi

echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu


###searchfileの処理
if [ -s "${searchfile}" ];then
# eval
  eval $(name-source ${searchfile})
 [ -s /home/hands/E-LIFE/SHISETSU_KAIGOKIROKU/HTML/${riyosha_name}/output-kazokukousei.html ] && htmlkazokukousei="/E-LIFE/SHISETSU_KAIGOKIROKU/HTML/${riyosha_name}/output-kazokukousei.html" || htmlkazokukousei=""

else
  :
fi


# 利用者名の取得
echo "_ 選択してください"                                           > $tmp-riyousya_hedder
if [ -n "${riyosha_name}" -a "${riyosha_name}" != "_" ];then
  cat $tmp-riyosha_status                                           |
# 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
  awk '$4=="'${unit}'"'                                             |
  self 6                                                            |
  LANG=C sort -k1,1                                                |
  join1 key=1 $tmp-riyosha_master_kana                                   |
  LANG=C sort -k3,3                                               |
  delf 3 |
  cat $tmp-riyousya_hedder -                                        |
  awk '{print $0,"'${riyosha_name}'"}'                              |
# 1:RIYOSHA_CODE 2:RIYOSHA_NAME 3:riyosha_name
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'    |
  sed 's/###SPACE###/　/g'                                          > ${tmp}-riyosha_name
else
  cat $tmp-riyosha_status                                           |
# 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
  awk '$4=="'${unit}'"'                                             |
  self 6                                                            |
  LANG=C sort -k1,1                                                |
  join1 key=1 $tmp-riyosha_master_kana                            |
  LANG=C sort -k3,3 |
  delf 3 |
  awk '{print $0,""}'                                               |
  cat $tmp-riyousya_hedder -                                        |
  sed 's/###SPACE###/　/g'>                                         ${tmp}-riyosha_name
fi
# フロアの取得
if [ -n "${floor}" -a "${floor}" != "_" ];then
  self 3 $tmp-riyosha_status                                   |
  LANG=C sort -u -k1,1n                                        |
  awk '{print $0,"'${floor}'"}'                                |
# 1:FLOOR_CODE 2:floor_name
  awk '{if($1==$2){print $1,$1"F","selected"}else{print $1,$1"F",""}}'   > ${tmp}-floor_name
else
# 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  self 3 $tmp-riyosha_status                                   |
  LANG=C sort -u -k1,1n                                        |
  awk '{print $1,$1"F"}'                                       > ${tmp}-floor_name
fi

# ユニットの取得
if [ -n "${unit}" -a "${unit}" != "_" ];then
# 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  awk '$3=="'${floor}'"' $tmp-riyosha_status                   |
  self 4                                                       |
# 1:UNIT_CODE 2:UNIT_NAME
  LANG=C sort -u -k1,1                                        |
  join1 key=1 $tmp-unit_master                                 |
  awk '{print $0,"'${unit}'"}'                                 |
# 1:UNTI_CODE 2:unit_name
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'   > ${tmp}-unit_name
else
# 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  self 4 $tmp-riyosha_status                                   |
# 1:UNIT_CODE 2:UNIT_NAME
  LANG=C sort -u -k1,1                                        |
  join1 key=1 $tmp-unit_master                                 > $tmp-unit_name
fi

# 居室
echo "---" > $tmp-room_header
cat $tmp-riyosha_status                                   |
# 1:施設コード 2:建屋   3:フロア 4:ユニット   5:居室
# 6:利用者ID   7:入居日 8:退去日 9:有効フラグ 10:更新日
# 11:更新者
awk '$3=="'${floor}'"&&$4=="'${unit}'"{print $5}'         |
LANG=C sort -u                                            |
cat $tmp-room_header - |
awk '{print $1,$1,"'${room_select}'"}'                          |
awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,"@"}}' > $tmp-room_select


#######################################################################################
# formhame前の実態参照変換
calsed "&" "&amp;" ${namefile}                      |
calsed "<" "&lt;"                                   |
calsed ">" "&gt;"                                   |
calsed "\"" "&quot;"                                |
# formhame前にキーワードが　"_"　のみの場合、消去
awk '{if($1~/SEARCH_WORD/){if($2~/^_$/){$2=""};}print}'  |
# formhame前にキーワードが検索ボックスの空白を "_"から" "に戻す
awk '{if($1~/SEARCH_WORD/){gsub(/_/," ",$2)};print}'     > $tmp-namefile

#######################################################################################

#######################################################################################
# namefileの再構成

cat <<- FIN > ${tmp}-namefile
MODE ${MODE}
FIN
#######################################################################################


#######################################################################################
# calsedするfileをつくろう
cat <<- FIN | sed 's/ _$/ @/g' >> ${tmp}-calsed1
###DROPDOWN_ACTIVE6### active
###TEXT_KIKAN_FROM### ${text_kikan_from}
###HD_KIKAN_FROM### ${hd_kikan_from}
###TEXT_KIKAN_TO### ${text_kikan_to}
###HD_KIKAN_TO### ${hd_kikan_to}
###KYOSHITSU### ${kyoshitsu}
###SHUBETSU### ${shubetsu}
###NYUKYOSHA_SHIMEI### ${nyukyosha_shimei}
###FURIGANA### ${furigana}
###KAIGODO### ${kaigodo}
###KAIGODO_KIKAN### ${kaigodo_kikan}
###SEIBETSU### ${seibetsu}
###BIRTHDAY### ${birthday}
###NENREI### ${nenrei}
###TXTAREA1### ${txtarea1}
###TXTAREA3### ${txtarea3}
###TXTAREA4### ${txtarea4}
###TXTAREA_HAISETSU### ${txtarea_haisetsu}
###TEXT_B_T_KOUKAN### ${text_b_t_koukan}
###HD_B_T_KOUKAN### ${hd_b_t_koukan}
###M_T### ${M_T}
###TEXT_M_T_KOUKAN### ${text_m_t_koukan}
###HD_M_T_KOUKAN### ${hd_m_t_koukan}
###IROU### ${irou}
###TEXT_IROU### ${text_irou}
###HD_IROU### ${hd_irou}
###HD_KIKAN_RYOKU### ${hd_kikan_ryoku}
###TEXT_KIKAN_RYOKU### ${text_kikan_ryoku}
###KIKAN_RYOKU### ${kikan_ryoku}
###TXTAREA_SENMEN### ${txtarea_senmen}
###TEXT_NYURE### ${text_nyure}
###HD_NYURE### ${hd_nyure}
###NYURE### ${nyure}
###SANSO### ${sanso}
###IVH### ${ivh}
###IRYO_SONOTA### ${iryo_sonota}
###B_T### ${b_T}
###YAKUZAI_TEXT### ${yakuzai_text}
###KANSENSHO_TEXT### ${kansensho_text}
###NINCHISHO_TEXT### ${ninchisho_text}
###MONDAI_SONOTA_TEXT### ${mondai_sonota_text}
###TXTAREA_KIHON### ${txtarea_kihon}
###TXTAREA_SHINRI### ${txtarea_shinri}
###MAS_TEXT### ${mas_text}
###TXTAREA_CARE_KEIKA### ${txtarea_care_keika}
###TXTAREA_KIOUREKI### ${txtarea_kioureki}
###TXTAREA_SEIKATSU_REKI### ${txtarea_seikatsu_reki}
###TXTAREA_GOKAZOKU### ${txtarea_gokazoku}
###TEXT_VITAL### ${text_vital}
###HD_VITAL### ${hd_vital}
###VITAL_TXT### ${vital_text}
###VITAL_TAION### ${vital_taion}
###VITAL_KETSUATSU_UE### ${vital_ketsuatsu_ue}
###VITAL_KETSUATSU_SHITA### ${vital_ketsuatsu_shita}
###VITAL_KOKYU### ${vital_kokyu}
###VITAL_SPO2### ${vital_spo2}
###TEXT_LAST_HAIBEN### ${text_last_haiben}
###HD_LAST_HAIBEN### ${hd_last_haiben}
###KOUSHINBI### ${koushinbi}
###LI_KANGOKAIGOKIROKU1### active
###USERID### ${userid}
###SHISETSUID### ${shisetsu}
###PASSWORD### ${password}
###SELECT_SHISETSU### $select_shisetsu
###KOUSHINSHA### $koushinsha
###HTMLKAZOKUKOUSEI### $htmlkazokukousei
FIN
case ${yakuzai} in
  on )
    echo "###YAKUZAI_ARI###" "checked"
    echo "###YAKUZAI_NASHI###" ""
  ;;
  off )
    echo "###YAKUZAI_ARI###" ""
    echo "###YAKUZAI_NASHI###" "checked"
  ;;
esac                            >> ${tmp}-calsed1
case ${kansensho} in
  on )
    echo "###KANSENSHO_ON###" "checked"
    echo "###KANSENSHO_OFF###" ""
  ;;
  off )
    echo "###KANSENSHO_ON###" ""
    echo "###KANSENSHO_OFF###" "checked"
  ;;
esac                            >> ${tmp}-calsed1
case ${ninchisho} in
  on )
    echo "###NINCHI_ON###" "checked"
    echo "###NINCHI_OFF###" ""
  ;;
  off )
    echo "###NINCHI_ON###" ""
    echo "###NINCHI_OFF###" "checked"
  ;;
esac                            >> ${tmp}-calsed1
case ${mondai} in
  on )
    echo "###MONDAI_ON###" "checked"
    echo "###MONDAI_OFF###" ""
  ;;
  off )
    echo "###MONDAI_ON###" ""
    echo "###MONDAI_OFF###" "checked"
  ;;
esac                            >> ${tmp}-calsed1
case ${pt_riha} in
  on )
    echo "###PT_RIHA_ON###" "checked"
    echo "###PT_RIHA_OFF###" ""
  ;;
  off )
    echo "###PT_RIHA_ON###" ""
    echo "###PT_RIHA_OFF###" "checked"
  ;;
esac                            >> ${tmp}-calsed1
case ${taii_koukan} in
  on )
    echo "###TAII_KOUKAN_ON###" "checked"
    echo "###TAII_KOUKAN_OFF###" ""
  ;;
  off )
    echo "###TAII_KOUKAN_ON###" ""
    echo "###TAII_KOUKAN_OFF###" "checked"
  ;;
esac                            >> ${tmp}-calsed1
[ "${mondai_haikai}" = "on" ] && echo "###HAIKAI###" "checked" >> ${tmp}-calsed1
[ "${mondai_ishoku}" = "on" ] && echo "###ISHOKU###" "checked" >> ${tmp}-calsed1
[ "${mondai_genshi}" = "on" ] && echo "###GENSHI###" "checked" >> ${tmp}-calsed1
[ "${mondai_genkaku}" = "on" ] && echo "###GENKAKU###" "checked" >> ${tmp}-calsed1
[ "${mondai_boukou}" = "on" ] && echo "###BOUKOU###" "checked" >> ${tmp}-calsed1
[ "${mondai_bougen}" = "on" ] && echo "###BOUGEN###" "checked" >> ${tmp}-calsed1
[ "${mondai_shushu}" = "on" ] && echo "###SHUSHU###" "checked" >> ${tmp}-calsed1
[ "${mondai_higai}" = "on" ] && echo "###HIGAI###" "checked" >> ${tmp}-calsed1
[ "${mondai_sonota}" = "on" ] && echo "###SONOTA###" "checked" >> ${tmp}-calsed1
[ "${riha_risho}" = "on" ] && echo "###RIHA_RISHO###" "checked" >> ${tmp}-calsed1
[ "${riha_adl}" = "on" ] && echo "###RIHA_ADL###" "checked" >> ${tmp}-calsed1
[ "${riha_ido}" = "on" ] && echo "###RIHA_IDO###" "checked" >> ${tmp}-calsed1
[ "${riha_ijyo}" = "on" ] && echo "###RIHA_IJYO###" "checked" >> ${tmp}-calsed1
[ "${riha_kikyo}" = "on" ] && echo "###RIHA_KIKYO###" "checked" >> ${tmp}-calsed1
[ "${riha_sonota}" = "on" ] && echo "###RIHA_SONOTA###" "checked" >> ${tmp}-calsed1
[ "${staff_hoko}" = "on" ] && echo "###STAFF_HOKO###" "checked" >> ${tmp}-calsed1
[ "${staff_kurumaisu}" = "on" ] && echo "###STAFF_KURUMAISU###" "checked" >> ${tmp}-calsed1
[ "${staff_ritsui}" = "on" ] && echo "###STAFF_RITSUI###" "checked" >> ${tmp}-calsed1
[ "${staff_sonota}" = "on" ] && echo "###STAFF_SONOTA###" "checked" >> ${tmp}-calsed1
[ "${pt_shudan}" = "on" ] && echo "###PT_SHUDAN###" "checked" >> ${tmp}-calsed1
[ "${pt_group}" = "on" ] && echo "###PT_GROUP###" "checked" >> ${tmp}-calsed1
[ "${pt_kobetsu}" = "on" ] && echo "###PT_KOBETSU###" "checked" >> ${tmp}-calsed1
[ "${masa_mon}" = "on" ] && echo "###MASA_MON###" "checked" >> ${tmp}-calsed1
[ "${masa_tue}" = "on" ] && echo "###MASA_TUE###" "checked" >> ${tmp}-calsed1
[ "${masa_wed}" = "on" ] && echo "###MASA_WED###" "checked" >> ${tmp}-calsed1
[ "${masa_thu}" = "on" ] && echo "###MASA_THU###" "checked" >> ${tmp}-calsed1
[ "${masa_fri}" = "on" ] && echo "###MASA_FRI###" "checked" >> ${tmp}-calsed1
[ "${masa_sat}" = "on" ] && echo "###MASA_SAT###" "checked" >> ${tmp}-calsed1
[ "${masa_sun}" = "on" ] && echo "###MASA_SUN###" "checked" >> ${tmp}-calsed1

cat ${tmp}-calsed1 ${checkfile} > ${tmp}-calsed

# HTMLの作成

# 初期表示メッセージ
cat <<- FIN > ${tmp}-html
<table>
  <tr>
    <td style="font-size:14pt; color:blue; font-weight:bold;">
実績入力する入居者のフロア・ユニット、介護分類・介護項目を選択して「表示」ボタンをクリックしてください。
    </td>
  </tr>
</table>
FIN

cat ${html_dir}/KANGO_KAIGO_YOUYAKU1.html ${kyoutsu_dir}/MENUBAR.html ${html_dir}/KANGO_KAIGO_YOUYAKU2.html   |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -l###UNIT_NAME### - ${tmp}-unit_name |
mojihame -l###FLOOR_NAME### - ${tmp}-floor_name |
mojihame -l###ROOM_NAME### - ${tmp}-room_select |
mojihame -l###RIYOSHA_NAME### - ${tmp}-riyosha_name |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###USER_SHISETSU_NAME### - ${tmp}-user_shisetsu |
calsed -f ${tmp}-calsed - |
sed 's/\\n/\n/g'
#formhame -d"_" - ${tmp}-namefile 

rm -f ${tmp}-*
exit 0

