#
# KONDATE_TOUROKU.DISPLAY : 献立登録.DISPLAY
#
# Usage : KONDATE_TOUROKU.DISPLAY namefile datafile
#
# Written by j.aoyagi(hands lab.inc)


# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null

#--------------------ログ出力--------------------
mkdir -p /home/hands/E-LIFE/SHOKUJI/APLOG/$(date +%Y%m%d)
exec 2> /home/hands/E-LIFE/SHOKUJI/APLOG/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv


# 変数設定
tmp=/var/tmp/${$}

#ゴミtmpの消去
rm -f $tmp-*

today="$(date +%Y%m%d)"
this_month="$(date +%Y%m)"

# ディレクトリ設定
home_dir="/home/hands"
app_dir="${home_dir}/E-LIFE/SHOKUJI"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
pompa_dir="${app_dir}/POMPA"
input_dir="${app_dir}/INPUT"
apptbl_dir="${app_dir}/TBL"
kyoutsu_dir="${home_dir}/E-LIFE/KYOUTSU/HTML"
hometbl_dir="${home_dir}/E-LIFE/TBL"
riyosha_dir="/DATA/E-LIFE/UNEI/RIYOUSHA"
tbl_dir="${home_dir}/E-LIFE/TBL"
work="${app_dir}/WORK"

# 引数設定
namefile=${1}
checkfile=${2}
searchfile=${3}
downloadfile=${4}

# eval
eval $(name-source ${namefile})

# 権限でボタンの使用可否
cat /home/hands/E-LIFE//SYSTEM_SETTEI/POMPA/KENGEN_KANRI/USER_KENGEN/${userid}.USER_KENGEN |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
awk '$2=="0000" || $2=="'${shisetsu}'"'                                                    |
awk '$7=="KONDATE_TOUROKU.CGI"{print $1,$9}'                           |
LANG=C sort -u -k2,2n                                                                      |
getlast 1 1                                                                                |
self 2                                                                 > $tmp-btn_kengen

[ "$(cat $tmp-btn_kengen)" = "3" ] && echo "###BTN_SEIGYO###" " " >> $tmp-calsed1
[ "$(cat $tmp-btn_kengen)" = "2" -o "$(cat $tmp-btn_kengen)" = "1" ] && echo "###BTN_SEIGYO###" "none" >> $tmp-calsed1

[ "$(cat $tmp-btn_kengen)" = "3" -o "$(cat $tmp-btn_kengen)" = "2" ] && echo "###INPUT_BTN_SEIGYO###" " " >> $tmp-calsed1
[ "$(cat $tmp-btn_kengen)" = "1" -o "$(cat $tmp-btn_kengen)" = "0" ] && echo "###INPUT_BTN_SEIGYO###" "none" >> $tmp-calsed1

#--------------------------------------------------------------
# 画面の描画モードを決定する。
MODE="$(nameread "MODE" ${namefile})"
if [ -n "${MODE}" -a "${MODE}" != "_" ];then
  :
else
  MODE="init"
fi
if [ -z ${downloadfile} ];then
  FILE_NAME="null"
else
  file=$(cat ${downloadfile})
  FILE_NAME="\"/E-LIFE/SHOKUJI/DOWNLOAD/${file}\""
fi

echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu

# ログインUSER名と施設の取得
cat /home/hands/E-LIFE/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
tee ${tmp}-jugyoin        |
# 1:USER_ID 2:ユーザー名
awk '$1=="'${userid}'"'   |
# 1:USER_ID 2:ユーザー名
self 2                    > ${tmp}-usermei


self 1 2 /home/hands/E-LIFE/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 /home/hands/E-LIFE/TBL/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst

cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst


# 施設名はログインユーザーの権限のある施設を取得
cat /home/hands/E-LIFE//SYSTEM_SETTEI/POMPA/KENGEN_KANRI/USER_KENGEN/${userid}.USER_KENGEN |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou
#-----------------------------------------------------------


# MODEがinitだったら渡ってきたネームをクリア
if [ "${MODE}" = "init" ];then
  kondate_shurui="1"
  date=""
else
  if [ "$(gyo ${searchfile})" = "0" ];then
    echo "###DEFAULT_MES###" "データがありません" >> ${tmp}-calsed1
  else
    echo "###DEFAULT_MES###" "" >> ${tmp}-calsed1
  fi
fi

# 日付が渡って来なかったら当日をセット
if [ -n "${date}" -a ${date} != "_" ];then
  :
else
  date=$(echo $today | dayslash yyyy-mm-dd 1)
fi

cgi_date=$(echo $date | dayslash -r yyyy-mm-dd 1)
[ $(mdate -y ${cgi_date}) = 7 ] && cgi_date=$(mdate ${cgi_date}/+1)

# 表示する週を取得　選択された日付を含む週を対象週とする
sch_week=$(mdate -w ${cgi_date})
mdate ${sch_week} |
self 1/6          |
tarr              > $tmp-kari_seven

monday=$(awk 'NR==1' $tmp-kari_seven)
sunday=$(mdate ${monday}/-1)
echo ${sunday} |
cat - $tmp-kari_seven |
tee $tmp-taisho_days_day |
awk '{print substr($1,7,2)}' |
yarr > $tmp-taisho_days


# 食事種類
case ${kondate_shurui} in
  1 )
    kondate_shurui01="selected"
    kondate_shurui02="@"
    kondate_shurui03="@"
  ;;
  2 )
    kondate_shurui01="@"
    kondate_shurui02="selected"
    kondate_shurui03="@"
  ;;
  3 )
    kondate_shurui01="@"
    kondate_shurui02="@"
    kondate_shurui03="selected"
  ;;
  * )
    kondate_shurui01="selected"
    kondate_shurui02="@"
    kondate_shurui03="@"
  ;;
esac

# 関連する食事メニュの取得
awk '$(NF-2)!=9' ${pompa_dir}/${shisetsu}/SHOKUJI_MENU |
# 1:メニューID  2:メニュー名  3:食事種類(01メイン02サイド03ドリンク他) 4:施設ID       5:建屋id
# 6:入居者価格  7:ゲスト価格1 8:ゲスト価格2                            9:スタッフ価格 10:朝食フラグ
# 11:昼食フラグ 12:夕食フラグ 13:おやつフラグ                          14:期間from    15:期間TO
# 16:表示色     17:表示順     18:喫食率計算対象                        19:予備3       20:予備4
# 21:予備5      22:削除フラグ 23:日時                                  24:ユーザ
awk '$14<="'${cgi_date}'"&&$15>="'${cgi_date}'"' |
if [ ${kondate_shurui} = "2" ];then
  # 朝食の場合
  awk '$11==1'
elif [ ${kondate_shurui} = "3" ];then
  # 昼食の場合
  awk '$12==1'
else
  # 朝食の場合
  awk '$10==1'
fi                                      |
self 1 2 17       |
awk '{if($3=="_"){$3=99};print}'        |
LANG=C sort -k3,3n > $tmp-kanren_menu
cp $tmp-kanren_menu ${work}/kanrensuru
awk '{if(NR==2){$3="selected"};print}' $tmp-kanren_menu > $tmp-kanren_menu_B
cp $searchfile ${work}/searchinko
if [ $(gyo $searchfile) -ne 0 ];then
  awk '$2=="A"' $searchfile |
  awk '{for(i=1;i<=NF;i++){if($i=="_"){$i="@"}};print}' |
#  sed 's/_/@/g'              |
  self 1 4/NF               > $tmp-search_A
  awk '$2=="B"' $searchfile |
  awk '{for(i=1;i<=NF;i++){if($i=="_"){$i="@"}};print}' |
#  sed 's/_/@/g'              |
  self 1 4/NF               > $tmp-search_B
else
  cat $tmp-taisho_days_day  |
  for DAYS in $(yarr $tmp-taisho_days_day);do
    echo "$DAYS"
  done  > $tmp-search_A
  for DAYS in $(yarr $tmp-taisho_days_day);do
    echo "$DAYS"
  done  > $tmp-search_B
fi

# calsedするfileをつくろう
cat <<- FIN | sed 's/ _$/ @/g' >> ${tmp}-calsed1
###DROPDOWN_ACTIVE2### active
###LI_SHOKUJI10### active
###USERID### ${userid}
###SHISETSUID### ${shisetsu}
###PASSWORD### ${password}
###FILE_NAME### ${FILE_NAME}
###SELECT_SHISETSU### $select_shisetsu
###DATE### $date
###kondate_shurui01### $kondate_shurui01
###kondate_shurui02### $kondate_shurui02
###kondate_shurui03### $kondate_shurui03
FIN

cat ${tmp}-calsed1 ${checkfile} > ${tmp}-calsed

#### MODEが修正のときは処理を分岐する
cat ${html_dir}/KONDATE_TOUROKU1.html ${kyoutsu_dir}/MENUBAR.html ${html_dir}/KONDATE_TOUROKU2.html   |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###USER_SHISETSU_NAME### - ${tmp}-user_shisetsu |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -l###YOUBI_DATA### - ${tmp}-taisho_days |
mojihame -l###KANREN_MENU1### - ${tmp}-kanren_menu |
mojihame -l###KANREN_MENU2### - ${tmp}-kanren_menu_B |
mojihame -l###YOUBI_TD### - ${tmp}-search_A          |
mojihame -l###YOUBI_TD2### - ${tmp}-search_B > $tmp-totyu_html

sed 's/###PER1###/%1/g' $tmp-totyu_html            |
sed 's/###PER2###/%2/g'                            |
sed 's/###PER3###/%3/g'                            > $tmp-base_html
cp $searchfile ${work}/search_file

if [ $(gyo $searchfile) -ne 0 ];then
  self 1 2 14 $searchfile                                   |
  while read HIDUKE TYPE VAL ;do
    cat $tmp-kanren_menu                                    |
    awk '{print $1,$2,"'${VAL}'"}'                          |
    awk '{if($1==$3){$3="selected"};print}'                 > $tmp-kanren_mojihame
    cat $tmp-base_html                                      |
    mojihame -l###S_MENU_$TYPE$HIDUKE - $tmp-kanren_mojihame    > $tmp-totyu_2
    mv $tmp-totyu_2 $tmp-base_html
  done
else
  echo "A A A A A A A"               |
  tarr                               > $tmp-type_data_A
  echo "B B B B B B B"               |
  tarr                               > $tmp-type_data_B
  tarr $tmp-taisho_days_day          |
  ycat - $tmp-type_data_A            > $tmp-AAA
  tarr $tmp-taisho_days_day          |
  ycat - $tmp-type_data_B            |
  cat $tmp-AAA -                     |
tee ${work}/konoyo |
  while read HIDUKE TYPE ;do
    if [ ${TYPE} = A ];then
      KANRENFILE=$tmp-kanren_menu
    else
      KANRENFILE=$tmp-kanren_menu_B
    fi
    cat $tmp-base_html                                      |
    mojihame -l###S_MENU_$TYPE$HIDUKE - ${KANRENFILE}    > $tmp-totyu_2
    mv $tmp-totyu_2 $tmp-base_html
  done
fi
#mojihame -l###S_MENU### - ${tmp}-kanren_menu > $tmp-totyu_html

cat $tmp-base_html |
calsed -f ${tmp}-calsed - 
# HTMLの作成

rm -f ${tmp}-*
exit 0
