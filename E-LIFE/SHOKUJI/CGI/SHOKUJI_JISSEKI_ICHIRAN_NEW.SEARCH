#!/bin/bash
#
# SHOKUJI_JISSEKI_ICHIRAN_NEW.SEARCH
# 食事実績検索
#
# Written by E.Okuda  : 2013/11/25

#--------------------------------------------------------------
# ログ
exec 2> /home/hands/E-LIFE/SHOKUJI/APLOG/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv
# 設定ファイル読込
source  /home/hands/E-LIFE/SHOKUJI/CGI/SHOKUJI.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null
#--------------------------------------------------------------
#--------------------------------------------------------------
# 変数の定義
tmp=/var/tmp/${$}

#ゴミtmpの消去
rm -f $tmp-*

namedata=$1
#--------------------------------------------------------------
#--------------------------------------------------------------
function error_exit {
  rm -f $tmp-*
  exit 0
}
#--------------------------------------------------------------
#--------------------------------------------------------------
# ディレクトリ設定
app_dir="${home_dir}/SHOKUJI"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
pompa_dir="${app_dir}/POMPA"
today=$(date +%Y%m%d)
seikyuu_dir="/DATA/E-LIFE/SEIKYU/SHISETSU/SHOKUJI"
# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------------
Shisetsu=$(nameread "Shisetsu" ${namedata})
[ -z "${Shisetsu}" -o "${Shisetsu}" = "_" ] && Shisetsu="$(nameread "shisetsu" ${namedata})"
Tateya=$(nameread "Tateya" ${namedata})
[ -z "${Tateya}" -o "${Tateya}" = "_" ] && Tateya="$(awk '$1=="'${USERID}'"&&$2=="'${Shisetsu}'"{print $3}' ${tbl_dir}/JYUUGYOUIN_MASTER/USER_SHISETSU)" # 建屋がなければデフォルトシニア
[ -z "${Tateya}" -o "${Tateya}" = "_" ] && Tateya=$(awk '$1=="'${Shisetsu}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR | LANG=C sort |uniq |head -1)

  Shokuji=$(nameread      "SELECTShokuji"   $namedata)
  Shokushu=$(nameread     "SELECTShokushu"   $namedata)
  Taishousha=$(nameread   "SELECTTaishousha"   $namedata)
  Menu=$(nameread     "SELECTMenu"   $namedata)


Taishoubi=$(nameread "Taishoubi" ${namedata} | sed 's/\///g')
[ -z "${Taishoubi}" -o "${Taishoubi}" = "_" ] && Taishoubi="$(echo ${today})"

TaishouNengetsu=$(echo "${Taishoubi}" | awk '{print substr($1,1,6)}')

NyuuryokuMODE=$(nameread "NyuuryokuMODE" ${namedata})

# 現在の居室を取得
awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$(NF-2)!="9"{print $0}' /DATA/E-LIFE/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
# 対象日よりﾀｲｷｮ日が後で2行以上あったら
awk '$7<="'${Taishoubi}'"&&$8>="'${Taishoubi}'"{print $6,$0}' |
LANG=C sort -k1,1 -k8,9                 |
rank ref=1                 |
awk '$1=="1"'              |
self 8 7                   > $tmp-riyousha_kyoshitsu
# 1:利用者ID 2: 居室No

#------------------------------------------------------------
# データの絞込み
#----------------------

## 20140908変更
# 消費税率を取得
cat ${tbl_dir}/ZEIRITSU_GENGOU_MASTER/ZEIRITSU  |
# 1:ID 2:税率 3:適用開始日 4:適用終了日 5:削除フラグ 6:更新日時 7:userid
awk '$3<="'${Taishoubi}'"&&$4>="'${Taishoubi}'"{print $0}'   |
self 2                                               > ${tmp}-zeiritsu
zeiritsu=$(cat ${tmp}-zeiritsu | awk '{print $1+"1"}')
###


if [ ! -z "${NyuuryokuMODE}" -a "${NyuuryokuMODE}" = "StaffNyuuryoku" ] ; then

   if [ -s ${pompa_dir}/${Shisetsu}/STAFF/${TaishouNengetsu}/STAFF_SHOKUJI_JISSEKI ] ; then
   cat ${pompa_dir}/${Shisetsu}/STAFF/${TaishouNengetsu}/STAFF_SHOKUJI_JISSEKI    |
   # 1:利用者ID       2:施設ID           3:日付       4:食事（朝昼夜おやつ他） 5:食事ID
   # 6:食事メニューID 7:食事メニュー名称 8:食事種類ID 9:単価(税抜き)           10:数量
   # 11:色ID          12:単価(税込み)    13:予備項目2 14:予備項目3             15:予備項目4
   # 16:予備項目5
   awk '$3=="'${Taishoubi}'"&&$(NF-2)!="9"{print $0,"STAFF","1"}'    |
   # 0908以前のデータで税込価格が入力されていないものは計算する
   self NF-1 1 NF 4/7 11 12 10 9                         |
   awk '{print $0,$9!="_"?$9:$NF*"'${zeiritsu}'"}'       |
   marume -sage 12.0                                     |
   self 1/8 NF 10                                        > $tmp-shokuji_jisseki_jyunbi
   # 1:居室           2:USERID         3:"1"  4:食事（朝昼夜おやつ他 5:食事ID
   # 6:食事メニューID 7:食事メニュー名 8:色ID 9:単価(zeikomi)         10:数量
   else
    :
fi

# 入居者
else
#cat ${pompa_dir}/${Shisetsu}/${Tateya}/${TaishouNengetsu}/RIYOUSHA_SHOKUJI_JISSEKI |
## 1:利用者ID    2:施設ID                 3:建屋       4:居室           5:入居者ゲストフラグ
## 6:日付        7:食事（朝昼夜おやつ他） 8:食事ID     9:食事メニューID 10:食事メニュー名称
## 11:食事種類ID 12:単価(税抜き)          13:数量      14:色ID          15:予備項目1
## 16:予備項目2  17:予備項目3             18:予備項目4 19:予備項目5

#awk '$6=="'${Taishoubi}'"&&$(NF-2)!="9"{print $0}'    |
#self 4 1 5 7 8/10 14 12 13 |
#LANG=C sort -k1,4          > $tmp-shokuji_jisseki_jyunbi_jyunbi
## 1:居室           2:利用者      3:入居者ゲストフラグ  4:食事（朝昼夜おやつ他 5:食事ID
## 6:食事メニューID 7:食事メニュー名 8:色ID 9:単価(税抜き)         10:数量
    :> $tmp-shokuji_jisseki_jyunbi_jyunbi
    if [ -s ${pompa_dir}/${Shisetsu}/${Tateya}/${TaishouNengetsu}/RIYOUSHA_SHOKUJI_JISSEKI ] ; then
    ## 20140908変更
    # 消費税率を取得
    cat ${tbl_dir}/ZEIRITSU_GENGOU_MASTER/ZEIRITSU  |
    # 1:ID 2:税率 3:適用開始日 4:適用終了日 5:削除フラグ 6:更新日時 7:userid
    awk '$3<="'${Taishoubi}'"&&$4>="'${Taishoubi}'"{print $0}'   |
    self 2                                               > ${tmp}-zeiritsu
    zeiritsu=$(cat ${tmp}-zeiritsu | awk '{print $1+"1"}')
    
    cat ${pompa_dir}/${Shisetsu}/${Tateya}/${TaishouNengetsu}/RIYOUSHA_SHOKUJI_JISSEKI |
    ## 1:利用者ID    2:施設ID                 3:建屋       4:居室           5:入居者ゲストフラグ
    ## 6:日付        7:食事（朝昼夜おやつ他） 8:食事ID     9:食事メニューID 10:食事メニュー名称
    ## 11:食事種類ID 12:単価(税抜き)          13:数量      14:色ID          15:税込価格
    ## 16:予備項目2  17:予備項目3             18:予備項目4 19:予備項目5
    awk '$6=="'${Taishoubi}'"&&$(NF-2)!="9"{print $0}'    |
    self 4 1 5 7 8/10 14 15 13 12 |
    # 1:居室           2:利用者         3:入居者ゲストフラグ 4:食事（朝昼夜おやつ他 5:食事ID
    # 6:食事メニューID 7:食事メニュー名 8:色ID               9:税込価格             10:数量
    # 11:単価(税抜き)
    # 0908以前のデータで税込価格が入力されていないものは計算する
    awk '{print $0,$9!="_"?$9:$NF*"'${zeiritsu}'"}'       |
    marume -sage 12.0                                     |
    self 1/8 NF 10                                        |
    LANG=C sort -k1,4          > $tmp-shokuji_jisseki_jyunbi_jyunbi
    # 1:居室           2:利用者      3:入居者ゲストフラグ  4:食事（朝昼夜おやつ他 5:食事ID
    # 6:食事メニューID 7:食事メニュー名 8:色ID 9:単価(税込)         10:数量
    fi
    
    # 欠食情報の取得
    awk '$5=="'${Taishoubi}'"&&$(NF-2)!="9"{print $0}' ${seikyuu_dir}/${Shisetsu}/${Tateya}/${TaishouNengetsu}/RIYOUSHA_KESSHOKU > $tmp-kesshoku
    # 1:利用者(入居者)ID 2:施設ID     3:建屋 4:居室 5:欠食年月日
    # 6:欠食食事         7:入院外泊ID
    
      if [ -s $tmp-kesshoku ] ; then
        cat $tmp-kesshoku |
        awk '{print $4,$1,"1",$6,"00000","000","<b>欠食</b>","002","0","1"}'     |
      LANG=C sort -k1,4 > $tmp-kesshoku_data
    # 1:居室 2:利用者 3:入居者ゲストフラグ  4:欠食食事 5:食事ID
    # 6:食事メニューID 7:食事メニュー名 8:色ID 9:単価(税抜き)         10:数量
    
    #  join1 +ng key=1/4 $tmp-kesshoku_data $tmp-shokuji_jisseki_jyunbi_jyunbi  >$tmp-ok 2>$tmp-ng
    
       # 欠食のデータと欠食なしの人データを足す
       if [ -s $tmp-shokuji_jisseki_jyunbi_jyunbi ] ; then
        cat $tmp-shokuji_jisseki_jyunbi_jyunbi $tmp-kesshoku_data > $tmp-shokuji_jisseki_jyunbi
       else
        cat $tmp-kesshoku_data  > $tmp-shokuji_jisseki_jyunbi
       fi
    
      else 
       cat $tmp-shokuji_jisseki_jyunbi_jyunbi > $tmp-shokuji_jisseki_jyunbi 
    
      fi
#    else
#     :
#    fi


fi

cp $tmp-shokuji_jisseki_jyunbi $work_dir/shokuji_jisseki_jyunbi

if [ -s $tmp-shokuji_jisseki_jyunbi ] ; then
  cat $tmp-shokuji_jisseki_jyunbi |
  LANG=C sort -k8,8               |
  join2 key=8 ${tbl_dir}/CONFIG/COLOR_TABLE -  |
  delf 8 10    > $tmp-shokuji_jisseki
# 1:居室       2:利用者ID   3:入居者ゲストフラグ 4:食事（朝昼夜おやつ他） 5:食事ID
# 6:メニューid 7:メニュー名 8:色                 9:単価(税抜き)           10:数量
fi


#cp $tmp-* /home/hands/work/okuda
if [ -s $tmp-shokuji_jisseki -a "${NyuuryokuMODE}" != "StaffNyuuryoku" ] ; then
  cat $tmp-shokuji_jisseki |
  delf 1 |
  cjoin2 key=1 $tmp-riyousha_kyoshitsu - |
  self 2 1 3/NF
elif  [ -s $tmp-shokuji_jisseki -a "${NyuuryokuMODE}" = "StaffNyuuryoku" ] ; then
  cat $tmp-shokuji_jisseki 
else
  :
fi 
# 1:居室       2:利用者ID   3:入居者ゲストフラグ 4:食事（朝昼夜おやつ他） 5:食事ID
# 6:メニューid 7:メニュー名 8:色                 9:単価(税抜き)           10:数量
## 終了
rm -f $tmp-*
exit 0
