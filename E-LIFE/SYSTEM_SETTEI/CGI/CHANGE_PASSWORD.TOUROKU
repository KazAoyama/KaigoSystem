#!/bin/bash
#
# パスワード変更登録CGI
#
# Written by Jun Aoyagi

#--------------------------------------------------------------
# 設定ファイル読込
source  /home/hands/E-LIFE/SYSTEM_SETTEI/CGI/SYSTEM_SETTEI.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null

# ログ
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date +%Y%m%d) ; set -xv

# 変数設定
tmp=/var/tmp/${$}

#ゴミtmpの消去
rm -f ${tmp}-*

# ディレクトリ設定
home_dir="/home/hands"
app_dir="${home_dir}/E-LIFE/SYSTEM_SETTEI"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
input_dir="${app_dir}/INPUT/${today}/$(basename ${0})"
pompa_dir="${app_dir}/POMPA/JYUUGYOUIN"
kanri_dir="/DATA/E-LIFE/SYSTEM_SETTEI/KANRI"
tbl_di="${home_dir}/E-LIFE/TBL/CONFIG"
#--------------------------------------------------------------

#--------------------------------------------------------------
function error_exit {
  message="$1"
  echo "message ${message}"
  echo "result ng"
  rm -f $tmp-*
  exit 1
}
function error_unlock {
  message="$1"
  cat $tmp-target-table |
  while read table base ;do
    rm -f $lock_dir/$base.lock
  : ;done
  error_exit ${message}
}
#--------------------------------------------------------------

#################################################################################################
# 変更するのはここから
#################################################################################################

#--------------------------------------------------------------
# 変数の定義
namedata=$1

# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------------

#--------------------------------------------------------------
# 更新対象ファイルのリスト化

## 更新ファイルの作成とチェック用のテーブル
## 6/7フィールド目は、アプリ間連携で別アプリの配下にあるINPUTを更新する場合用
cat <<- FIN > $tmp-koushin_pompa
user_kihon USER_KIHON 1 9 10 ${pompa_dir} ${input_dir}
FIN
# 1:tmpファイル名 2:更新ファイル名 3:キーフィールド 4:更新時間フィールド 5:全体列数
# 6:POMPA場所     7:INPUT場所

## ロックファイル作成用テーブル
## POMPAファイルがPOMPA直下でなく、店などのサブディレクトリ配下にいる場合には
## 1フィールド目が「${TEN_CODE}/SAMPLE_DATA」などになる
cat <<- FIN | LANG=C sort -u > $tmp-koushin_table
JYUUGYOUIN/USER_KIHON USER_KIHON
FIN
# 1:ファイルのパス 2:ファイル名
#--------------------------------------------------------------

#--------------------------------------------------------------
awk '$(NF-2)!=9' ${tbl_dir}/JYUUGYOUIN_MASTER/USER_KIHON |
# 1:従業員ID 2:従業員名 3:従業員名カナ 4:勤務期間FROM 5:勤務期間TO
# 6:ID       7:PASS     8:削除フラグ   9:更新日時     10:UserID
# 該当従業員を抽出する
awk '$1=="'${JYUUGYOUINID}'"'               |
# パスワードと更新日時を書き換える
awk '{
      $7="'${PASSWORD}'";
      $9="'${cur_time}'";
      print $0
    }'                                      > ${tmp}-user_kihon_input
[ $(plus ${PIPESTATUS[@]}) -eq 0 ] || error_exit

#cat $tmp-target-table |
#awk '$1!~/*tbl_dir*/{print $0}' |
#while read file_name base ;do
# cp ${pompa_dir}/${file_name} ${pompa_dir}/back/${file_name}.${today}
#done

#################################################################################################
# 変更するのはここまで
#################################################################################################

#--------------------------------------------------------------
# データロック
#$function_dir/FUNCTION.LOCK_CHECK $tmp-target-table
#if [ $? -ne 0 ]; then
  # エラー（ロックに失敗）
#  error_unlock "ロック処理失敗"
  ## error_exit ではなく error_unlock である点に注意！
#fi
#--------------------------------------------------------------

#--------------------------------------------------------------
# 更新版作成
# POMPAと指定されたキー項目をつかってマージする
cat $tmp-koushin_pompa |
while read input_name file_name sort_key time_key retu_no pompa_dir_name input_dir_name ; do
#  cat $tmp-${input_name}_input                          |
  if [ -e ${pompa_dir_name}/${file_name} ] ; then
    awk '{if($1=="'${JYUUGYOUINID}'"){$(NF-2)=9};print}' ${pompa_dir_name}/${file_name} |
    cat - $tmp-${input_name}_input
  else
    cat $tmp-${input_name}_input
  fi                                                    |
  LANG=C sort -k1,${sort_key} -k${time_key},${time_key} > $tmp-${input_name}_new
#  getlast 1 ${sort_key}                                 > $tmp-${input_name}_new
done
#--------------------------------------------------------------
#--------------------------------------------------------------
# 列数チェック
cat $tmp-koushin_pompa |
while read input_name file_name sort_key time_key retu_no pompa_dir_name input_dir_name ; do
  [ "$(retu $tmp-${input_name}_new)" != "${retu_no}" ] && : > $tmp-err
  [ "$(retu $tmp-${input_name}_new | gyo)" != "1" ] && : > $tmp-err
  [ "$(awk 'NF!="'${retu_no}'"' $tmp-${input_name}_new | gyo)" != "0" ] && : > $tmp-err
done
[ -e $tmp-err ] && error_unlock "列数エラー"
## error_exit ではなく error_unlock である点に注意！
#--------------------------------------------------------------

#--------------------------------------------------------------
# 更新
cat $tmp-koushin_pompa |
while read input_name file_name sort_key time_key retu_no pompa_dir_name input_dir_name ; do
  mkdir -p ${pompa_dir_name}
  mkdir -p ${input_dir_name}

  mv -f $tmp-${input_name}_input ${input_dir_name}/${file_name}.${cur_time}.$(basename $0).$$
  mv -f $tmp-${input_name}_new ${pompa_dir_name}/${file_name}
done
#--------------------------------------------------------------

#--------------------------------------------------------------
# ロックの解除
#cat $tmp-target-table |
#while read table base ;do
#  rm -f $lock_dir/$base.lock
#: ;done
#--------------------------------------------------------------

cp -p ${pompa_dir}/USER_KIHON ${home_dir}/E-LIFE/TBL/JYUUGYOUIN_MASTER/USER_KIHON.new
mv -f ${home_dir}/E-LIFE/TBL/JYUUGYOUIN_MASTER/USER_KIHON.new ${home_dir}/E-LIFE/TBL/JYUUGYOUIN_MASTER/USER_KIHON

## 終了
rm -f $tmp-*
exit 0
