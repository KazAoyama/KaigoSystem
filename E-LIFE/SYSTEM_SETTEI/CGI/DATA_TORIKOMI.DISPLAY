#!/bin/bash
#
# DATA_TORIKOMI.DISPLAY
# 従業員マスタ一覧ディスプレイCGI
#
# Written by E.Okuda :2014/01/08

exec 2> /home/hands/E-LIFE/SYSTEM_SETTEI/APLOG/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv

# 設定ファイル読込
source /home/hands/E-LIFE/SYSTEM_SETTEI/CGI/SYSTEM_SETTEI.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null

# 変数設定
tmp=/var/tmp/${$}

#ゴミtmpの消去
rm -f $tmp-*

# ディレクトリ設定

app_dir="${home_dir}/SYSTEM_SETTEI"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
kengen_dir="/home/hands/E-LIFE/TBL/KENGEN_KANRI"
tbl_dir="/home/hands/E-LIFE/TBL"
#-------------------------------------------------------------
# 変数の定義
namedata="$1"
#checkfile="$2"
#data="$3"
result_data="$2"
#-------------------------------------------------------------
#-------------------------------------------------------------
# 必要な値の取得
name-source $namedata > $tmp-source
source $tmp-source
#-------------------------------------------------------------
[ -z "${MODE}" -o "${MODE}" = "_" ] && MODE="init"
#-------------------------------------------------------------
#-------------------------------------------------------------
# formhame 前の実体参照変換
calsed "&" "&amp;" ${namedata} |
calsed "<" "&lt;"              |
calsed ">" "&gt;"              |
calsed "\"" "&quot;"           > $tmp-namedata

#-------------------------------------------------------------
### モードによる表示の分岐
case "${MODE}" in
  init)

    Shisetsu=""
    message1=""
    message2=""
    message3=""
    message4=""
    message5=""
    message6=""
    message7=""
    message8=""
    message9=""
    message10=""
    message11=""
    message12=""
    message13=""
    message14=""
    MESSAGECOLOR=""
    MESSAGECOLOR2=""
    MESSAGECOLOR3=""
    MESSAGECOLOR4=""
    MESSAGECOLOR5=""
    MESSAGECOLOR6=""
    MESSAGECOLOR7=""
    MESSAGECOLOR8=""
    MESSAGECOLOR9=""
    MESSAGECOLOR10=""
    MESSAGECOLOR11=""
    MESSAGECOLOR12=""
    MESSAGECOLOR13=""
    MESSAGECOLOR14=""

  ;;

  touroku)

    result=$(awk '$1=="result"{print $2}' ${result_data})
    if [ "${result}" = "ok" ] ; then
      message1="登録しました。"
      MESSAGECOLOR="blue"
    else
      message1=$(awk '$1=="message"{print $3}' ${result_data})
      MESSAGECOLOR="red"
    fi

  ;;

  kyoshitsu)

    result=$(awk '$1=="result"{print $2}' ${result_data})
    if [ "${result}" = "ok" ] ; then
      message2="登録しました。"
      MESSAGECOLOR2="blue"
    else
      message2=$(awk '$1=="message"{print $3}' ${result_data})
      MESSAGECOLOR2="red"
    fi

  ;;


  kouza)

    result=$(awk '$1=="result"{print $2}' ${result_data})
    [ -z "${result}" -o "${result}" = "_" ] && result="_"
    if [ "${result}" = "ok" ] ; then
      message3="登録しました。取り込めなかったデータと2つ以上口座情報があるデータの確認をしてください。"
      MESSAGECOLOR3="blue"
    else
      message3=$(awk '$1=="message"{print $3}' ${result_data})
      MESSAGECOLOR3="red"
    fi

  ;;

  renrakusaki)

    result=$(awk '$1=="result"{print $2}' ${result_data})
    [ -z "${result}" -o "${result}" = "_" ] && result="_"
    if [ "${result}" = "ok" ] ; then
      message4="登録しました。取り込めなかったデータと2つ以上口座情報があるデータの確認をしてください。"
      MESSAGECOLOR4="blue"
    else
      message4=$(awk '$1=="message"{print $3}' ${result_data})
      MESSAGECOLOR4="red"
    fi

  ;;

  riyouryou)

    result=$(awk '$1=="result"{print $2}' ${result_data})
    if [ "${result}" = "ok" ] ; then
      message7="登録しました。"
      MESSAGECOLOR7="blue"
    else
      message7=$(awk '$1=="message"{print $3}' ${result_data})
      MESSAGECOLOR7="red"
    fi
  ;;

  keiyakukin)

    result=$(awk '$1=="result"{print $2}' ${result_data})
    if [ "${result}" = "ok" ] ; then
      message8="登録しました。"
      MESSAGECOLOR8="blue"
    else
      message8=$(awk '$1=="message"{print $3}' ${result_data})
      MESSAGECOLOR8="red"
    fi
  ;;



  shokuji_menu)

    result=$(awk '$1=="result"{print $2}' ${result_data})
    [ -z "${result}" -o "${result}" = "_" ] && result="_"
    if [ "${result}" = "ok" ] ; then
      message6="登録しました。"
      MESSAGECOLOR6="blue"
    else
      message6=$(awk '$1=="message"{print $3}' ${result_data})
      MESSAGECOLOR6="red"
    fi

  ;;


  shokuji)

    result=$(awk '$1=="result"{print $2}' ${result_data})
    if [ "${result}" = "ok" ] ; then
      message5="登録しました。"
      MESSAGECOLOR5="blue"
    else
      message5=$(awk '$1=="message"{print $3}' ${result_data})
      MESSAGECOLOR5="red"
    fi

  ;;

  service)

    result=$(awk '$1=="result"{print $2}' ${result_data})
    if [ "${result}" = "ok" ] ; then
      message9="登録しました。"
      MESSAGECOLOR9="blue"
    else
      message9=$(awk '$1=="message"{print $3}' ${result_data})
      MESSAGECOLOR9="red"
    fi

  ;;


  tatekaekin)

    result=$(awk '$1=="result"{print $2}' ${result_data})
    if [ "${result}" = "ok" ] ; then
      message10="登録しました。"
      MESSAGECOLOR10="blue"
    else
      message10=$(awk '$1=="message"{print $3}' ${result_data})
      MESSAGECOLOR10="red"
    fi

  ;;

  nyuuingaihaku)

    result=$(awk '$1=="result"{print $2}' ${result_data})
    if [ "${result}" = "ok" ] ; then
      message11="登録しました。"
      MESSAGECOLOR11="blue"
    else
      message11=$(awk '$1=="message"{print $3}' ${result_data})
      MESSAGECOLOR11="red"
    fi

  ;;

  a)

    result=$(awk '$1=="result"{print $2}' ${result_data})
    if [ "${result}" = "ok" ] ; then
      message12="登録しました。"
      MESSAGECOLOR12="blue"
    else
      message12=$(awk '$1=="message"{print $3}' ${result_data})
      MESSAGECOLOR12="red"
    fi

  ;;

  b)

    result=$(awk '$1=="result"{print $2}' ${result_data})
    if [ "${result}" = "ok" ] ; then
      message13="登録しました。"
      MESSAGECOLOR13="blue"
    else
      message13=$(awk '$1=="message"{print $3}' ${result_data})
      MESSAGECOLOR13="red"
    fi

  ;;

esac

cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON |
#施設が選択されてたら"selected"
awk '{if($1=="'${Shisetsu}'"){print $1,$2,"selected"}
           else{print $1,$2,"_"}
          }' > $tmp-shisetsu_master
##------------------------------------------------------------
## メッセージがあればalertで表示させる
#if [ ! -z "${message}" ] ; then
#cat <<- FIN > $tmp-html2
#          <script type="text/javascript" language="javascript">
#            alert('${message}');
#          </script>
#FIN
#fi
##-------------------------------------------------------------
# 嵌め込みデータの作成
cat << FIN | sed 's/ _$/ @/g' > $tmp-calsed
###MESSAGE1### ${message1}
###MESSAGECOLOR### ${MESSAGECOLOR}
###MESSAGE2### ${message2}
###MESSAGECOLOR2### ${MESSAGECOLOR2}
###MESSAGE3### ${message3}
###MESSAGECOLOR3### ${MESSAGECOLOR3}
###MESSAGE4### ${message4}
###MESSAGECOLOR4### ${MESSAGECOLOR4}
###MESSAGE5### ${message5}
###MESSAGECOLOR5### ${MESSAGECOLOR5}
###MESSAGE6### ${message6}
###MESSAGECOLOR6### ${MESSAGECOLOR6}
###MESSAGE7### ${message7}
###MESSAGECOLOR7### ${MESSAGECOLOR7}
###MESSAGE8### ${message8}
###MESSAGECOLOR8### ${MESSAGECOLOR8}
###MESSAGE9### ${message9}
###MESSAGECOLOR9### ${MESSAGECOLOR9}
###MESSAGE10### ${message10}
###MESSAGECOLOR10### ${MESSAGECOLOR10}
###MESSAGE11### ${message11}
###MESSAGECOLOR11### ${MESSAGECOLOR11}
###MESSAGE12### ${message12}
###MESSAGECOLOR12### ${MESSAGECOLOR12}
###MESSAGE13### ${message13}
###MESSAGECOLOR13### ${MESSAGECOLOR13}
FIN

#-----------------------------------------------------------
#cp $tmp-* /home/hands/work/okuda

# htmlの作成
cat ${html_dir}/DATA_TORIKOMI.html |

#データの嵌め込み
mojihame -lshisetsu_select - $tmp-shisetsu_master   |
calsed -f $tmp-calsed - |
#tee /home/hands/work/okuda/Result |
sed 's/###SPACE###/ /g' |
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |
cat -

# 終了
rm -f $tmp-*
exit 0

