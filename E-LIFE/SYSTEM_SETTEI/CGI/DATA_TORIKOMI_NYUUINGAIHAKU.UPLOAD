#!/bin/bash
#
# DATA_TORIKOMI_NYUUINGAIHAKU.UPLOAD
#
# データ取込：入院外泊情報
# Written by Y.kashiyama(tokyu-hands.co.jp) ; 20140306

exec 2> /home/hands/E-LIFE/SYSTEM_SETTEI/APLOG/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv

# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null
source /home/hands/E-LIFE/SYSTEM_SETTEI/CGI/SYSTEM_SETTEI.INI &> /dev/null

#ゴミtmpの消去
rm -f $tmp-*

#-------------------------------------------------------------
# 変数の定義
param_name="$1"
mime="$2"
excel="$3"
#excel="$1"
#-------------------------------------------------------------

#-------------------------------------------------------------
function error_exit {
  message=$1
  [ -z "${message}" ] && message="登録に失敗しました。"
  echo "message ng ${message}"
  rm -f $tmp-*
  exit 0
}
#-------------------------------------------------------------

#-------------------------------------------------------------
# 必要な値の取得
#name-source "$param" > $tmp-source
#source $tmp-source

eval $(name-source ${param_name})

mime-read -v $mime |
grep FILE - |
sed 's/^.*filename="\(.*\)".*$/\1/; s/^.*\\\([^\]*\)$/\1/; s/ /_/g; s/#/＃/g; s/%/％/g' > $tmp-keiyakusho_name

mime-read "FILE11" $mime > $tmp-excel_file
#-------------------------------------------------------------

#-------------------------------------------------------------
# 拡張子チェック
awk '$0~/filename="/' ${mime}         |
awk '$0~/FILE11/'       |
sed 's/^.*filename="\(.*\)".*$/\1/; s/^.*\\\([^\]*\)$/\1/; s/ /_/g; s/#/＃/g; s/%/％/g' |
nkf -w80Lu                                |
# 1:ファイル名
sed 's/\./ /g'                            |
self NF                                   |
# 1:拡張子
awk '$1~/xls/' > $tmp-filemark

#cp $tmp-* /home/hands/work/okuda 
## 画像ファイルの情報取得
#identify $tmp-image                       > $tmp-identiy_image
#[ $? != "0" ] && error_exit "MST_UPIMG002"
#
## 拡張子エラーなら終了
[ ! -s $tmp-filemark ] && error_exit "エクセルではありません"
#[ ! -s $tmp-identiy_image ] && error_exit "MST_UPIMG002"
#[ $(gyo $tmp-identiy_image ) - gt "1" ] && error_exit "MST_UPIMG002"
#-------------------------------------------------------------

##-------------------------------------------------------------
## ファイルサイズチェック
#ls -l $tmp-image                          |
#self 5                                    > $tmp-file_size
#[ "$(cat $tmp-file_size)" -gt 5000000 ] && error_exit "MST_UPIMG003"
##-------------------------------------------------------------
cat ${excel} |
e2t2 1 a2 ad-  > $tmp-data
# 1:StayInOutNo       2:UserID             3:OutType          4:PlanOutDay         5:PlanInDay
# 6:OutDay            7:InDay              8:OutFlg           9:InFlg              10:HospitalID
# 11:HospitalName     12:HospitalSicｋName 13:HospitalPostNo  14:HospitalAdr       15:HospitalTelNo
# 16:HospitalStayRoom 17:HospitalDoctor1   18:HospitalDoctor2 19:StayReason        20:StayPostNo
# 21:StayPerson       22:StayAdr           23:StayTelNo       24:GoWithServiceType 25:GoWithID
# 26:GoWithName       27:GoWithRelation    28:GoWithAdr       29:GoWithTelNo       30:StayHospitalMemo

[ -s "$tmp-data" ] || error_exit

[ $(plus ${PIPESTATUS[@]}) -eq 0 ] || error_exit

[ -s "/home/hands/work/okuda/DATA_TORIKOMI_RESULT/${Shisetsu}/RIYOUSHA_NUMBER_${Shisetsu}" ] || error_exit "新利用者IDをひも付けるテー>ブルがありません。先>に利用者情報をアップロードしてください"

# 入院外泊情報
cat $tmp-data           |
self 2 3 6 7 11/23 30   |
# 1:UserID            2:OutType          3:OutDay            4:InDay         5:HospitalName
# 6:HospitalSicｋName 7:HospitalPostNo   8:HospitalAdr       9:HospitalTelNo 10:HospitalStayRoom
# 11:HospitalDoctor1  12:HospitalDoctor2 13:StayReason       14:StayPostNo   15:StayPerson
# 16:StayAdr          17:StayTelNo       18:StayHospitalMemo
awk '{print $1,$2!="10"?"2":"1",$3,$4!="@"?$4:"99999999",$2!="10"?"_":$5,$2!="10"?$13:$6,$2!="10"?$15:$11,$2!="10"?$16:$8,$18}' |
# 1:UserID       2:種別          3:期間From     4:期間To       5:入院外泊先
# 6:入院外泊理由 7:入院外泊理由2 8:入院外泊住所 9:入院外泊メモ
awk '{print $0,$6$7$8}'  |
awk '{if($NF=="@@@"){gsub("@@@","_");print $0}else{gsub("@","",$NF);print $0}}' |
# 1:UserID       2:種別          3:期間From     4:期間To       5:入院外泊先
# 6:入院外泊理由 7:入院外泊理由2 8:入院外泊住所 9:入院外泊メモ 10:入院外泊理由･住所 
self 1/5 NF NF-1         |
# 1:UserID            2:種別         3:期間From 4:期間To 5:入院外泊先
# 6:入院外泊理由･住所 7:入院外泊メモ
awk '{print $0,$6!="_"?$6"###KAIGYO###"$7:$7}' |
sed 's/###KAIGYO###@//g' |
self 1/5 NF              |
# 1:UserID 2:種別 3:期間From 4:期間To 5:入院外泊先
# 6:備考
rank                     |
maezero 1.5              |
LANG=C sort -k2,2        |
#> $tmp-riyousha_nyuuingaihaku_before
# 1:入院外泊ID 2:UserID 3:種別 4:期間From 5:期間To
# 6:入院外泊先 7:備考
cjoin1 +ng key=2 /home/hands/work/okuda/DATA_TORIKOMI_RESULT/${Shisetsu}/RIYOUSHA_NUMBER_${Shisetsu} - > $tmp-nyuuingaihaku_${Shisetsu} 2>$tmp-nyuuingaihaku_${Shisetsu}_riyoushaid_ng

[ -s $tmp-nyuuingaihaku_${Shisetsu} ] || error_exit "入院外泊情報と利用者情報が一致しません。データと施設IDを確認してください"

# 施設情報の準備
cat /home/hands/work/okuda/DATA_TORIKOMI_RESULT/${Shisetsu}/SHISETSU_RIYOUSHA_STATUS_${Shisetsu} |
# 1:施設ID   2:建屋ID 3:フロア 4:ユニットID 5:居室
# 6:入居者ID 7:入居日 8:退去日 9:削除フラグ 10:更新時間
# 11:更新者 
self 1 6 2 5  |
LANG=C sort   > $tmp-shisetsu_riyousha_status_${Shisetsu}
# 1:施設ID 2:入居者ID 3:建屋ID 4:居室

cat $tmp-nyuuingaihaku_${Shisetsu} |
# 1:入院外泊ID 2:UserID     3:新利用者ID 4:種別 5:期間From
# 6:期間To     7:入院外泊先 8:備考
awk '{print "'${Shisetsu}'",$3,$1,$4,$5,$6,$7,$8}' |
# 1:施設ID 2:新利用者ID 3:入院外泊ID 4:種別 5:期間From
# 6:期間To 7:入院外泊先 8:備考
LANG=C sort |
cjoin1 +ng key=1/2 $tmp-shisetsu_riyousha_status_${Shisetsu} - > $tmp-riyousha_nyuuingaihaku_${Shisetsu} 2>$tmp-riyousha_nyuuingaihaku_${Shisetsu}_kyoshitsu_ng
# 1:施設ID 2:新利用者ID 3:建屋ID 4:居室       5:入院外泊ID
# 6:種別   7:期間From   8:期間To 9:入院外泊先 10:備考

[ -s $tmp-riyousha_nyuuingaihaku_${Shisetsu} ] || error_exit
[ $(plus ${PIPESTATUS[@]}) -eq 0 ] || error_exit

cat $tmp-riyousha_nyuuingaihaku_${Shisetsu} |
awk '{print $2,$5,$1,$3,$4,$6,$7,$8,"00:00","23:59",$9,$10,"0","_","_","_","1","2014070100000000","00078"}' |
# 1:利用者ID    2:入院外泊ID 3:施設      4:建屋     5:居室
# 6:種別        7:期間FROM   8:期間TO    9:出発時間 10:帰宅時間
# 11:入院外泊先 12:備考      13:欠食登録 14予備１   15:予備２
# 16:予備3
LANG=C sort  > $tmp-riyousha_nyuuingaihaku_${Shisetsu}_result

[ -s $tmp-riyousha_nyuuingaihaku_${Shisetsu}_result ] || error_exit

[ $(plus ${PIPESTATUS[@]}) -eq 0 ] || error_exit

# 入院外泊欠食情報
cat $tmp-riyousha_nyuuingaihaku_${Shisetsu}_result |
self 1/5 |
awk '{print $0,"0","_","1","_","1","1","2014070100000000","00078"}' > $tmp-riyousha_nyuuingaihaku_kesshoku_${Shisetsu}_result
# 1:利用者(入居者)ID 2:入院外泊ID   3:施設ID       4:建屋       5:居室
# 6:欠食登録         7:欠食期間FROM 8:欠食食事FROM 9:欠食期間TO 10:欠食食事TO


#-------------------------
# 現在の入院外泊情報があれば合体！ついでに縛アップとる

if [ -s /home/hands/E-LIFE/UNEI/POMPA/NYUUINGAIHAKU/${Shisetsu}/01/RIYOUSHA_NYUUINGAIHAKU ] ; then
  cat $tmp-riyousha_nyuuingaihaku_${Shisetsu}_result /home/hands/E-LIFE/UNEI/POMPA/NYUUINGAIHAKU/${Shisetsu}/01/RIYOUSHA_NYUUINGAIHAKU |
  LANG=C sort -u |
  getlast 1 2    > $tmp-RIYOUSHA_NYUUINGAIHAKU_${Shisetsu}_01

  mkdir -p /home/hands/E-LIFE/UNEI/POMPA/NYUUINGAIHAKU/${Shisetsu}/01/back
  cp -p /home/hands/E-LIFE/UNEI/POMPA/NYUUINGAIHAKU/${Shisetsu}/01/RIYOUSHA_NYUUINGAIHAKU /home/hands/E-LIFE/UNEI/POMPA/NYUUINGAIHAKU/${Shisetsu}/01/back/RIYOUSHA_NYUUINGAIHAKU_${cur_time}
else
  cat $tmp-riyousha_nyuuingaihaku_${Shisetsu}_result |
  LANG=C sort -u |
  getlast 1 2    > $tmp-RIYOUSHA_NYUUINGAIHAKU_${Shisetsu}_01
fi

if [ -s /home/hands/E-LIFE/UNEI/POMPA/NYUUINGAIHAKU/${Shisetsu}/01/RIYOUSHA_NYUUINGAIHAKU_KESSHOKU ] ; then
  cat $tmp-riyousha_nyuuingaihaku_kesshoku_${Shisetsu}_result /home/hands/E-LIFE/UNEI/POMPA/NYUUINGAIHAKU/${Shisetsu}/01/RIYOUSHA_NYUUINGAIHAKU_KESSHOKU |
  LANG=C sort -u |
  getlast 1 2    > $tmp-RIYOUSHA_NYUUINGAIHAKU_KESSHOKU_${Shisetsu}_01

  mkdir -p /home/hands/E-LIFE/UNEI/POMPA/NYUUINGAIHAKU/${Shisetsu}/01/back
  cp -p  /home/hands/E-LIFE/UNEI/POMPA/NYUUINGAIHAKU/${Shisetsu}/01/RIYOUSHA_NYUUINGAIHAKU_KESSHOKU  /home/hands/E-LIFE/UNEI/POMPA/NYUUINGAIHAKU/${Shisetsu}/01/back/RIYOUSHA_NYUUINGAIHAKU_KESSHOKU_${cur_time}
else
  cat $tmp-riyousha_nyuuingaihaku_kesshoku_${Shisetsu}_result |
  LANG=C sort -u |
  getlast 1 2    > $tmp-RIYOUSHA_NYUUINGAIHAKU_KESSHOKU_${Shisetsu}_01
fi

# 管理番号
NEW_NYUUINGAIHAKU_ID="$(cat $tmp-RIYOUSHA_NYUUINGAIHAKU_${Shisetsu}_01 | self 2 | LANG=C sort -u | tail -1 )"

#-----------------------------------
# 所定の場所と本番の場所とへこぴー
cp $tmp-RIYOUSHA_NYUUINGAIHAKU_${Shisetsu}_01 /home/hands/work/okuda/DATA_TORIKOMI_RESULT/${Shisetsu}/RIYOUSHA_NYUUINGAIHAKU_${Shisetsu}_01
cp $tmp-RIYOUSHA_NYUUINGAIHAKU_KESSHOKU_${Shisetsu}_01 /home/hands/work/okuda/DATA_TORIKOMI_RESULT/${Shisetsu}/RIYOUSHA_NYUUINGAIHAKU_KESSHOKU_${Shisetsu}_01
echo "${NEW_NYUUINGAIHAKU_ID}" > /home/hands/work/okuda/DATA_TORIKOMI_RESULT/${Shisetsu}/NYUUINGAIHAKU_ID_${Shisetsu}


mkdir -p /home/hands/E-LIFE/UNEI/POMPA/NYUUINGAIHAKU/${Shisetsu}/01
cp $tmp-RIYOUSHA_NYUUINGAIHAKU_${Shisetsu}_01 /home/hands/E-LIFE/UNEI/POMPA/NYUUINGAIHAKU/${Shisetsu}/01/RIYOUSHA_NYUUINGAIHAKU
cp $tmp-RIYOUSHA_NYUUINGAIHAKU_KESSHOKU_${Shisetsu}_01 /home/hands/E-LIFE/UNEI/POMPA/NYUUINGAIHAKU/${Shisetsu}/01/RIYOUSHA_NYUUINGAIHAKU_KESSHOKU

mkdir -p /DATA/E-LIFE/UNEI/KANRI/NYUUINGAIHAKU/${Shisetsu}/01
echo "${NEW_NYUUINGAIHAKU_ID}" > /DATA/E-LIFE/UNEI/KANRI/NYUUINGAIHAKU/${Shisetsu}/01/NYUUINGAIHAKU_ID

mkdir -p /DATA/E-LIFE/UNEI/NYUUINGAIHAKU/${Shisetsu}/01
cp $tmp-RIYOUSHA_NYUUINGAIHAKU_${Shisetsu}_01 /DATA/E-LIFE/UNEI/NYUUINGAIHAKU/${Shisetsu}/01/RIYOUSHA_NYUUINGAIHAKU
cp $tmp-RIYOUSHA_NYUUINGAIHAKU_KESSHOKU_${Shisetsu}_01 /DATA/E-LIFE/UNEI/NYUUINGAIHAKU/${Shisetsu}/01/RIYOUSHA_NYUUINGAIHAKU_KESSHOKU

cp $tmp-*ng /home/hands/work/okuda/DATA_TORIKOMI_DATA/${Shisetsu}
cp $tmp-* /home/hands/work/okuda/DATA_TORIKOMI_DATA
#-------------------------------------------------------------

echo "result ok"

# 終了
rm -f $tmp-*
exit 0
