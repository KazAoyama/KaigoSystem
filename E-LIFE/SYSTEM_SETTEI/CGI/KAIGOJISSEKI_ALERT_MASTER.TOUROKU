#!/bin/bash
#
# KAIGOJISSEKI_ALERT_MASTER.TOUROKU : 介護実績マスタ登録用CGI
#
# Usage : KAIGOJISSEKI_ALERT_MASTER.TOUROKU ${namefile}
#
# Written by j.aoyagi(hands lab.inc)

source /home/hands/.bashrc &> /dev/null
source /home/hands/E-LIFE/SYSTEM_SETTEI/CGI/SYSTEM_SETTEI.INI &> /dev/null
mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date +%Y%m%d) ; set -xv

#ゴミtmpの消去
rm -f $tmp-*


kyoutsu_dir=${home_dir}/KYOUTSU/HTML
apptbl_dir=${home_dir}/SHISETSU_KAIGOKIROKU/TBL
test_tbl_dir=${home_dir}/TEST/TBL
test_pompa_dir=${home_dir}/TEST/POMPA
current_time="$(date "+%Y%m%d%H%M%S")"

namefile=${1}
# 必要な値の取得
cat ${namefile} > ${tmp}-name
cp ${tmp}-name namefile

#--------------------エラー時の対応--------------------
function error_exit(){
  message=$1
  echo ${message}

  rm -f $tmp-*
  exit 1
}

eval $(name-source ${namefile})

# 利用者を決める
cat ${apptbl_dir}/RIYOSHA_SHOZOKU        |
# 1:floor 2:unit 3:riyosha_id
LANG=C sort -k2,2n                       |
join0 key=2 <(echo ${unit})              |
self 3                                   > ${tmp}-riyosha

echo "00"                                |
cat - ${tmp}-riyosha                     |
LANG=C sort -k1,1n                       > ${tmp}-member

# shisetsuのディレクトリを作成
mkdir ${pompa_dir}/KAIGOJISSEKI_ALERT/${shisetsu}
hozon_dir="${pompa_dir}/KAIGOJISSEKI_ALERT/${shisetsu}"

# まわして保存
for member in $(cat ${tmp}-member);do
  # namefileを再構成
  cat ${namefile} |
  awk '{gsub(/'$member'/,"",$1);print}' > ${tmp}-newname
  eval $(name-source ${tmp}-newname)

  [ "${taion1_00}" != "${taion1_}" -o "${taion2_00}" != "${taion2_}" -o "${ketsu1_00}" != "${ketsu1_}" -o "${ketsu2_00}" != "${ketsu2_}" -o "${myaku1_00}" != "${myaku1_}" -o "${myaku2_00}" != "${myaku2_}" -o "${kokyu1_00}" != "${kokyu1_}" -o "${kokyu2_00}" != "${kokyu2_}" -o "${haiben1_00}" != "${haiben1_}" -o "${nyuyoku1_00}" != "${nyuyoku1_}" ] && flag_="1"

  echo "${member}" "${taion1_}" "${taion2_}" "${ketsu1_}" "${ketsu2_}" "${myaku1_}" "${myaku2_}" "${kokyu1_}" "${kokyu2_}" "${haiben1_}" "${nyuyoku1_}" "${flag_}" >> ${tmp}-data
 
done

# sort
cat ${tmp}-data    |
LANG=C sort -k1,1n |
awk '$1!="00" && $12!="0"{print}' > ${tmp}-not_defa

cat ${tmp}-data    |
LANG=C sort -k1,1n |
awk '$1=="00"{print}' > ${tmp}-defa

cat ${tmp}-defa ${tmp}-not_defa > ${tmp}-input_data
[ $(plus ${PIPESTATUS[@]}) -eq 0 ] || exit 1

# INPUTに保存
# ディレクトリ作成
mkdir -p ${input_dir}/${today}
cp -p ${tmp}-input_data ${input_dir}/${today}/KAIGOJISSEKI_ALERT_MASTER.${current_time}.${userid}.$(basename ${0}).${HOSTNAME}.${$}
[ $(plus ${PIPESTATUS[@]}) -eq 0 ] || exit 1

# POMPAに保存
lock_file=${pompa_dir}/KAIGOJISSEKI_ALERT.LOCK
lockfile -1 -r 3 -l 10 ${lock_file} || error_exit "処理の途中でエラーが発生しました"

if [ -e ${tmp}-input_data ];then
  cp -p ${tmp}-input_data ${hozon_dir}/${shisetsu}.KAIGOJISSEKI_ALERT_MASTER
else
  :
fi

# ロック解除
rm -f ${lock_file}
unset lock_file

cat ${tmp}-input_data

# 終了
rm -f $tmp-*

exit 0
