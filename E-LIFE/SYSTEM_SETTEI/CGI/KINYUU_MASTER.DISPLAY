#!/bin/bash
#
# KINYUU_MASTER.DISPLAY : 金融マスタ
#
# Written by S.Otsubo

# ログ
source /home/hands/E-LIFE/SYSTEM_SETTEI/CGI/SYSTEM_SETTEI.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null

mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date +%Y%m%d) ; set -xv


rm -f $tmp-*

# 変数の定義
namedata=$1
checkfile=$2
koushin_data=$3
today="$(date +%Y%m%d)"
kengen_dir="/home/hands/E-LIFE/TBL/KENGEN_KANRI"

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------


echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu


#--------------------------------------------------------------
# ログインUSER名と施設の取得
cat /home/hands/E-LIFE/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
tee ${tmp}-jugyoin        |
# 1:USER_ID 2:ユーザー名
awk '$1=="'${userid}'"'   |
# 1:USER_ID 2:ユーザー名
self 2                    > ${tmp}-usermei


self 1 2 /home/hands/E-LIFE/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 /home/hands/E-LIFE/TBL/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst

cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst


# 施設名はログインユーザーの権限のある施設を取得
cat /home/hands/E-LIFE/TBL/KENGEN_KANRI/USER_KENGEN/${userid}.USER_KENGEN |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou
#-----------------------------------------------------------

[ -z "${MODE}" ] && MODE="init"
#--------------------------------------------------------------

#--------------------------------------------------------------
# 表示の処理

# 金融機関テーブルは全て表示
self 1 3 ${home_dir}/TBL/KINYUU_MASTER/KINYUUKIKAN_NAME |
LANG=C sort > ${tmp}-kikan_data
# 1:金融機関コード 2:金融機関名

# 支店テーブルはメッセージ表示
echo "@ 金融機関名を指定してください。" > ${tmp}-shiten_data

# MODE=regist時のみ処理
case "${MODE}" in
  # 更新
  regist)
    # 結果判定
    result=$(awk '$1=="result"{print $2}' ${koushin_data})
    # メッセージ作成
    if [ "${result}" = "ok" ] ; then
      message="更新完了"
    else
      message=$(awk '$1=="message"{print $2}' ${koushin_data})
      [ -z "${message}" ] && message="処理エラー"
    fi
  ;;
esac


#--------------------------------------------------------------
# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
cat << FIN > $tmp-html_alert
    <script type="text/javascript" language="javascript">
      alert('${message}');
    </script>
FIN
fi
#--------------------------------------------------------------
# 共通設定項目
# DROPDOWN_ACTIVE:メニューのどのドロップダウンが選択されているか
# LI_SYSTEMSETTEIi:ドロップダウン内のどこが選択されているか
# KIKAN_ACTIVE:金融機関名インデックスの選択(みため) ＊支店名インデックスは初期に支店を表示しないので選択しない
# 初期表示ではテキストボックスに入力が無い状態なので空
cat << FIN | sed 's/ _$/ @/g' > $tmp-calsed
###USERID### $userid
###PASSWORD### $password
###SHISETSUID### $shisetsu
###DROPDOWN_ACTIVE9### active
###LI_SYSTEMSETTEI15### active
###KIKAN_ACTIVE0### active
###KIKAN_CODE###
###KIKAN_NAME###
###KIKAN_NAME_KANA###
###SHITEN_CODE###
###SHITEN_NAME###
###SHITEN_NAME_KANA###
###KIKAN_CODE_DISABLED###
###KIKAN_NAME_DISABLED###
###KIKAN_NAME_KANA_DISABLED###
###SHITEN_CODE_DISABLED###
###SELECT_SHISETSU### $select_shisetsu
FIN

#-----------------------------------------------------------
# 登録・印刷ボタンの表示
# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME
# 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
awk '$7=="KINYU_MASTER.CGI"{print $2,$9}' |
LANG=C sort > $tmp-dispkengen_all
# 1:施設ID 2:STATUS

cat $tmp-dispkengen_all |
if [ -s $tmp-dispkengen_all -a $(self 1 $tmp-dispkengen_all |head -1) = "0000" ] ; then
  awk '{print $2}' |
  head -1
else
  awk '$1=="'${shisetsu}'"{print $0}' |
  LANG=C sort |
  getlast 1 1 |
  self 2
fi > $tmp-dispkengen


# 権限がない人は新規登録や出力が出来ない
if [ $(cat $tmp-dispkengen) = "3" ] ;then
  echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed
  echo "###TOUROKUDISP### @" >> $tmp-calsed
  echo "###PRINTDISP### @"   >> $tmp-calsed
elif [ $(cat $tmp-dispkengen) = "2" ] ;then
  echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed
  echo "###TOUROKUDISP### @" >> $tmp-calsed
  echo "###PRINTDISP### none"   >> $tmp-calsed
else
  echo "###SHINKITOUROKUDISP### none" >> $tmp-calsed
  echo "###TOUROKUDISP### none" >> $tmp-calsed
  echo "###PRINTDISP### none"   >> $tmp-calsed
fi

#----------------------------------

cat $checkfile >> $tmp-calsed

cat $tmp-calsed      |
sed 's/\\n/###KAIGYO###/g'     >  $tmp-calsed_kaigyozumi

# --------------------------------------------------------------
# HTMLの作成

cat ${html_dir}/KINYUU_MASTER1.html ${home_dir}/KYOUTSU/HTML/MENUBAR.html ${html_dir}/KINYUU_MASTER2.html |
calsed -f $tmp-calsed_kaigyozumi - |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -l"KINYUU_KIKAN_TBL" - ${tmp}-kikan_data |
mojihame -l"KINYUU_KIKAN_SHITEN_TBL" - ${tmp}-shiten_data |
#sed 's/###KAIGYO###/\n/g'     |
#sed 's/###SPACE###/ /g' |
if [ -e $tmp-html_alert ] ; then
  cat - $tmp-html_alert
else
  cat -
fi 
#formhame -d"_" - ${namedata}
# --------------------------------------------------------------

rm -f ${tmp}-*
exit 0
