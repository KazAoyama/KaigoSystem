#!/bin/bash
#
# SHISETSU_MASTER_KYOSHITSU.DISPLAY : 施設情報マスタ 居室情報
#
# Written by S.Otsubo

# tateya_selectは空のとき01であることを想定して処理(テーブル絞込み時を除く)

# ログ
source /home/hands/E-LIFE/SYSTEM_SETTEI/CGI/SYSTEM_SETTEI.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null

mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date +%Y%m%d) ; set -xv


#ゴミtmpの消去
rm -f $tmp-*

# ディレクトリ設定
test_tbl_dir="${home_dir}/TEST/TBL"
kengen_dir="/home/hands/E-LIFE/TBL/KENGEN_KANRI"

# 変数の定義
namedata=$1
checkfile=$2
koushin_data=$3
search_data=$4
today="$(date +%Y%m%d)"

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------


echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu

#--------------------------------------------------------------
# ログインUSER名と施設の取得
cat /home/hands/E-LIFE/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
tee ${tmp}-jugyoin        |
# 1:USER_ID 2:ユーザー名
awk '$1=="'${userid}'"'   |
# 1:USER_ID 2:ユーザー名
self 2                    > ${tmp}-usermei


self 1 2 /home/hands/E-LIFE/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 /home/hands/E-LIFE/TBL/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst

cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst


# 施設名はログインユーザーの権限のある施設を取得
cat /home/hands/E-LIFE/TBL/KENGEN_KANRI/USER_KENGEN/${userid}.USER_KENGEN |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou
#-----------------------------------------------------------

[ -z "${MODE}" ] && MODE="init"
#--------------------------------------------------------------

#--------------------------------------------------------------
# 表示の処理

# ドロップダウンの作成
# ------------
# 施設名
cjoin0 key=1 <(echo "${shisetsu_key}") ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON |
# 1:施設ID   2:施設名 3:略称       4:電話番号 5:FAX
# 6:郵便番号 7:住所   8:削除フラグ 9:更新日時 10:ユーザID
awk '$(NF-2)!="9"' |
self 1/2 |
tee ${tmp}-shisetsu_name |
# 1:施設ID 2:施設名
awk '{if($1=="'${shisetsu_key}'"){$3="selected"}
      else{$3="disabled"}; print}' > ${tmp}-shisetsu_select
# ------------
# ------------
# 建屋名

cjoin0 key=1 <(echo "${shisetsu_key}") ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM |
# 1:施設ID   2:建屋ID   3:フロア 4:ユニットID 5:削除フラグ
# 6:更新日時 7:ユーザID
awk '$(NF-2)!="9"' |
self 2 |
# 1:建屋ID
LANG=C sort -u > ${tmp}-tateya_id

awk '$(NF-2)!="9"' ${home_dir}/TBL/SHISETSU_MASTER/TATEYA_NAME |
# 1:建屋ID   2:建屋名 3:建屋略 4:削除フラグ 5:更新日時
# 6:ユーザID
self 1 3 > ${tmp}-tateya_name
# 1:建屋ID 2:建屋名

cjoin0 key=1 ${tmp}-tateya_id ${tmp}-tateya_name |
awk '{if($1=="'${Tateya_select}'"){$3="selected"};print}' > ${tmp}-tateya_select

[ -z "${Tateya_select}" -o "${Tateya_select}" = "_" ] && Tateya_select="$(head -1 ${tmp}-tateya_select | self 1)"
# ------------
# ------------
# フロア名

join0 key=1/2 <(echo "${shisetsu_key} ${Tateya_select}") ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR |
# 1:施設ID   2:建屋ID 3:フロア 4:削除フラグ 5:更新日時
# 6:ユーザID
awk '$(NF-2)!="9"' |
self 3 3 |
# 1:フロア 2:フロア
awk '{if($1=="'${Floor_select}'"){$3="selected"}else{$3="@"};print}' |
cat <(echo "_ 全て") - > ${tmp}-floor_select
# ------------
# ------------
# ユニット名

awk '$(NF-2)!="9"' ${home_dir}/TBL/SHISETSU_MASTER/UNIT_NAME |
# 1:ユニットID 2:ユニット名 3:削除フラグ 4:更新日時 5:ユーザID
self 1 2 > ${tmp}-unit_name
# 1:ユニットID 2:ユニット名

cjoin0 key=1/3 <(echo "${shisetsu_key} ${Tateya_select} ${Floor_select}") ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT |
# 1:施設ID   2:建屋ID   3:フロア 4:ユニットID 5:削除フラグ
# 6:更新日時 7:ユーザID
awk '$(NF-2)!="9"' |
self 4 |
# 4:ユニットID
LANG=C sort -u |
cjoin0 key=1 - ${tmp}-unit_name |
# 1:ユニットID 2:ユニット名
awk '{if($1=="'${Unit_select}'"){$3="selected"};print}' - |
cat <(echo "_ 全て") - > ${tmp}-unit_select
# ------------
# ------------
# サーチ結果の編集

# ${search_data}
# 1:施設ID    2:建屋ID      3:フロア      4:ユニットID 5:居室
# 6:居室定員  7:居室タイプ1 8:居室タイプ2 9:金額       10:削除フラグ
# 11:更新日時 12:ユーザID

# 名称系つける
LANG=C sort -k1,1 ${search_data} |
join2 key=1 ${tmp}-shisetsu_name - |
# 1:施設ID      2:施設名    3:建屋ID      4:フロア      5:ユニットID
# 6:居室        7:居室定員  8:居室タイプ1 9:居室タイプ2 10:金額
# 11:削除フラグ 12:更新日時 13:ユーザID
LANG=C sort -k3,3 |
join2 key=3 ${tmp}-tateya_name - |
# 1:施設ID     2:施設名      3:建屋ID    4:建屋名      5:フロア
# 6:ユニットID 7:居室        8:居室定員  9:居室タイプ1 10:居室タイプ2
# 11:金額      12:削除フラグ 13:更新日時 14:ユーザID
LANG=C sort -k6,6 |
join2 key=6 ${tmp}-unit_name - |
# 1:施設ID       2:施設名     3:建屋ID      4:建屋名    5:フロア
# 6:ユニットID   7:ユニット名 8:居室        9:居室定員  10:居室タイプ1
# 11:居室タイプ2 12:金額      13:削除フラグ 14:更新日時 15:ユーザID
LANG=C sort |
# 金額にカンマ
comma 12 |
# 表示の都合上ユニットIDのアンスコを文字列nullに変換
awk '{if($6=="_"){$6="null"};print}' > ${tmp}-search_result
# ------------

# ドロップダウンの表示設定(Tateya_select=01のときかくす)
if [ "${Tateya_select}" == "01" -o "${Tateya_select}" == "" -o "${Tateya_select}" == "_" ] ; then
  visivility="hidden"
else
  visivility="visible"
fi

# MODE=regist時のみ処理
case "${MODE}" in
  # 更新
  regist)
    # 結果判定
    result=$(awk '$1=="result"{print $2}' ${koushin_data})
    # メッセージ作成
    if [ "${result}" = "ok" ] ; then
      message="更新完了"
    else
      message=$(awk '$1=="message"{print $2}' ${koushin_data})
      [ -z "${message}" ] && message="処理エラー"
    fi
  ;;
esac


#--------------------------------------------------------------
# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
cat << FIN > $tmp-html_alert
    <script type="text/javascript" language="javascript">
      alert('${message}');
    </script>
FIN
fi
#--------------------------------------------------------------

echo "SHISETSUJOHO_MASTER.CGI" > $tmp-cgi
# 施設名はログインユーザーの権限のある施設を取得
cat ${home_dir}/TBL/KENGEN_KANRI/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -k7,7                                          |
join0 key=7 $tmp-cgi                                       > ${tmp}-kengenlist

# 共通設定項目
# DROPDOWN_ACTIVE:メニューのどのドロップダウンが選択されているか
# LI_SYSTEMSETTEIi:ドロップダウン内のどこが選択されているか
cat << FIN | sed 's/ _$/ @/g' > $tmp-calsed
###USERID### $userid
###PASSWORD### $password
###SHISETSUID### $shisetsu
###DROPDOWN_ACTIVE9### active
###shisetsu_key### ${shisetsu_key}
###shisetsu_key2### ${shisetsu_key}
###visivility1### ${visivility}
###visivility2### ${visivility}
###SELECT_SHISETSU### $select_shisetsu
FIN

###LI_SYSTEMSETTEI3### active
#-----------------------------------------------------------
#-----------------------------------------------------------
# 登録・印刷ボタンの表示
# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME
# 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
awk '$7=="SHISETSUJOHO_MASTER.CGI"{print $2,$9}' |
LANG=C sort > $tmp-dispkengen_all
# 1:施設ID 2:STATUS

cat $tmp-dispkengen_all |
if [ -s $tmp-dispkengen_all -a $(self 1 $tmp-dispkengen_all |head -1) = "0000" ] ; then
  awk '{print $2}' |
  head -1
else
  awk '$1=="'${shisetsu}'"{print $0}' |
  LANG=C sort |
  getlast 1 1 |
  self 2
fi > $tmp-dispkengen

# 権限がない人は新規登録や出力が出来ない
if [ "$(cat $tmp-dispkengen)" = "3" ] ;then
  echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed
  echo "###TOUROKUDISP### @" >> $tmp-calsed
  echo "###PRINTDISP### @"   >> $tmp-calsed
elif [ "$(cat $tmp-dispkengen)" = "2" ] ;then
  echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed
  echo "###TOUROKUDISP### @" >> $tmp-calsed
  echo "###PRINTDISP### none"   >> $tmp-calsed
else
  echo "###SHINKITOUROKUDISP### none" >> $tmp-calsed
  echo "###TOUROKUDISP### none" >> $tmp-calsed
  echo "###PRINTDISP### none"   >> $tmp-calsed
fi

cat $checkfile >> $tmp-calsed
cat $tmp-calsed      |
sed 's/\\n/###KAIGYO###/g'     >  $tmp-calsed_kaigyozumi

# --------------------------------------------------------------
# HTMLの作成

cat ${html_dir}/SHISETSU_MASTER_KYOSHITSU1.html ${home_dir}/KYOUTSU/HTML/MENUBAR.html ${html_dir}/SHISETSU_MASTER_KYOSHITSU2.html |
calsed -f $tmp-calsed_kaigyozumi - |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -l"SHISETSU_SELECT" - ${tmp}-shisetsu_select |
mojihame -l"TATEYA_SELECT" - ${tmp}-tateya_select |
mojihame -l"FLOOR_SELECT" - ${tmp}-floor_select |
mojihame -l"UNIT_SELECT" - ${tmp}-unit_select |
mojihame -l"KYOSHITSU_TBL" - ${tmp}-search_result |
if [ -e $tmp-html_alert ] ; then
  cat - $tmp-html_alert
else
  cat -
fi |
if [ "${MODE}" == "regist" ] ; then
  formhame -d"_" - ${namedata}
else
  cat -
fi
# --------------------------------------------------------------

rm -f ${tmp}-*
exit 0
