#!/bin/bash
#
# KINYUU_MASTER.TOUROKU : 金融マスタ
#
# Written by S.Otsubo

# input_mae_check：上書きなのか新規なのか確認して、それを画面にかえす
# touroku：内容チェックと登録を行いOKでもNGでもメッセージを出す

#--------------------------------------------------------------
# ログ
source /home/hands/E-LIFE/SYSTEM_SETTEI/CGI/SYSTEM_SETTEI.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null
mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).$HOSTNAME.$(date +%Y%m%d) ; set -xv

#rm -f $tmp-*


#--------------------------------------------------------------
function error_exit {
  message="$1"
  echo "message ${message}"
  echo "result ng"
#  rm -f $tmp-*
  exit 1
}
function error_unlock {
  message="$1"
  cat ${tmp}-taisyou |
  while read File;do
    rm -f ${home_dir}/TBL/KINYUU_MASTER/${File}.lock
  : ;done
  error_exit ${message}
}
#--------------------------------------------------------------

#---- 処理日時 ----
sdaytime=$(date +%Y%m%d%H%M%S)

#--------------------------------------------------------
# 引数設定
namedata=$1

# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------


#--------------------------------------------------------
# 本日のinputディレクトリ作成

[ -e ${input_dir}/${today} ] || mkdir ${input_dir}/${today}
#--------------------------------------------------------

#--------------------------------------------------------------
# 入力データのチェック
# ユーザＩＤ
[ -z "${userid}" -o "${userid}" = "_" ] && error_exit "ログインユーザが不明です"

#--------------------------------------------------------------

# ------------------------------------------
# inputの値のチェック
# (必須項目入力の件はjavascriptでチェック中)

if [ "${is_kikan_check}" = "true" -a "${is_shiten_check}" = "true" ] ; then
  # --------------------------------------
  # 機関・支店メンテ

  # 金融機関コードは半角数字4桁
  [[ "${kikan_code}" =~ [0-9]{4} ]] || error_exit "金融機関コードは半角数字4桁で入力してください"
  # 支店コードは半角数字3桁
  [[ "${shiten_code}" =~ [0-9]{3} ]] || error_exit "支店コードは半角数字3桁で入力してください"
  # --------------------------------------
else
  # --------------------------------------
  # 機関のみメンテ

  # 金融機関コードは半角数字4桁
  [[ "${kikan_code}" =~ [0-9]{4} ]] || error_exit "金融機関コードは半角数字4桁で入力してください"
  # --------------------------------------
fi
# ------------------------------------------


# ------------------------------------------
# 更新データの作成

# チェック更新用テーブル
cat << FIN > ${tmp}-taisyou
KINYUUKIKAN_NAME
KINYUUKIKAN_SHITEN_NAME
FIN
cat << FIN > ${tmp}-check
${tmp}-input_KINYUUKIKAN_NAME 6
${tmp}-pompa_KINYUUKIKAN_NAME 6
${tmp}-input_KINYUUKIKAN_SHITEN_NAME 7
${tmp}-pompa_KINYUUKIKAN_SHITEN_NAME 7
FIN
# 1:ファイル名 2:列数

# データ作成
# (支店のみメンテのときは金融機関メンテをしない)
if [ "${is_kikan_check}" = "true" -a "${is_shiten_check}" = "true" ] ; then
  # --------------------------------------
  # 機関・支店メンテ

  # 金融機関が新規登録orメンテか判断
  cjoin0 key=1/3 <(echo "${kikan_code} ${kikan_name} ${kikan_name_kana}") ${home_dir}/TBL/KINYUU_MASTER/KINYUUKIKAN_NAME > ${tmp}-is_kikan_koushin_result
  is_kikan_koushin="$([ -s ${tmp}-is_kikan_koushin_result ] && echo "false" || echo "true")"

  # 上記結果をふまえて分岐
  if [ "${is_kikan_koushin}" = "true" ] ; then
    # 金融機関
    echo "${kikan_code} ${kikan_name_kana} ${kikan_name} 0 ${sdaytime} ${userid}" > ${tmp}-input_KINYUUKIKAN_NAME
    cat ${tmp}-input_KINYUUKIKAN_NAME ${home_dir}/TBL/KINYUU_MASTER/KINYUUKIKAN_NAME |
    LANG=C sort -k1,1 -k5,5 |
    getlast 1 1 > ${tmp}-pompa_KINYUUKIKAN_NAME
  else
    # 金融機関はメンテしないのでチェック用更新テーブルの編集
    grep -v "KINYUUKIKAN_NAME" ${tmp}-taisyou > ${tmp}-taisyou_new
    mv ${tmp}-taisyou_new ${tmp}-taisyou
    grep -v "KINYUUKIKAN_NAME" ${tmp}-check > ${tmp}-check_new
    mv ${tmp}-check_new ${tmp}-check
  fi

  # 支店
  echo "${kikan_code} ${shiten_code} ${shiten_name_kana} ${shiten_name} 0 ${sdaytime} ${userid}" > ${tmp}-input_KINYUUKIKAN_SHITEN_NAME
  cat ${tmp}-input_KINYUUKIKAN_SHITEN_NAME ${home_dir}/TBL/KINYUU_MASTER/KINYUUKIKAN_SHITEN_NAME |
  LANG=C sort -k1,2 -k6,6 |
  getlast 1 2 > ${tmp}-pompa_KINYUUKIKAN_SHITEN_NAME
  # --------------------------------------
else
  # --------------------------------------
  # 金融機関メンテ

  # 金融機関
  echo "${kikan_code} ${kikan_name_kana} ${kikan_name} 0 ${sdaytime} ${userid}" > ${tmp}-input_KINYUUKIKAN_NAME
  cat ${tmp}-input_KINYUUKIKAN_NAME ${home_dir}/TBL/KINYUU_MASTER/KINYUUKIKAN_NAME |
  LANG=C sort -k1,1 -k5,5 |
  getlast 1 1 > ${tmp}-pompa_KINYUUKIKAN_NAME

  # チェック用更新テーブルの編集
  grep -v "KINYUUKIKAN_SHITEN_NAME" ${tmp}-taisyou > ${tmp}-taisyou_new
  mv ${tmp}-taisyou_new ${tmp}-taisyou
  grep -v "KINYUUKIKAN_SHITEN_NAME" ${tmp}-check > ${tmp}-check_new
  mv ${tmp}-check_new ${tmp}-check
  # --------------------------------------
fi

# ロックファイル作成
cat ${tmp}-taisyou |
while read File ; do
  lockfile -1 -r 3 -l 10 ${home_dir}/TBL/KINYUU_MASTER/${File}.LOCK
  [ "${?}" != "0" ] && error_unlock "再度登録してください"
done


# 列チェック
cat ${tmp}-check |
while read File retu_no; do
  [ "$(retu ${File})" != "${retu_no}" ] && : > $tmp-err
  [ "$(retu ${File} | gyo)" != "1" ] && : > $tmp-err
  [ "$(awk 'NF!="'${retu_no}'"' ${File} | gyo)" != "0" ] && : > $tmp-err
done
[ -e $tmp-err ] && error_unlock "列数エラー"


# 更新
cat ${tmp}-taisyou |
while read Name ; do
  # input
  cp -p ${tmp}-input_${Name} ${input_dir}/${today}/$(basename ${0}).$(date +%Y%m%d%H%M%S).${userid}.${HOSTNAME}
  [ "${?}" != "0" ] && error_unlock "更新に失敗しました"
  # pompa
  cp -p ${tmp}-pompa_${Name} ${home_dir}/TBL/KINYUU_MASTER/${Name}
  [ "${?}" != "0" ] && error_unlock "更新に失敗しました"
done


# ロックファイル削除
cat ${tmp}-taisyou |
while read File; do
  rm ${home_dir}/TBL/KINYUU_MASTER/${File}.LOCK
done
# ------------------------------------------


echo "result ok"

#rm -f ${tmp}-*
exit 0
