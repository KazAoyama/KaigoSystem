#!/bin/bash
#
# MASTER_POPUP_KYOSHITSU.DISPLAY : ユニット入力ポップアップ画面
#
# Written by S.Otsubo

# 初期表示のみとおる予定

# ログ
source /home/hands/E-LIFE/SYSTEM_SETTEI/CGI/SYSTEM_SETTEI.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null

mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date +%Y%m%d) ; set -xv



#rm -f $tmp-*

# ディレクトリ設定
test_tbl_dir="${home_dir}/TEST/TBL"

# 変数の定義
namedata=$1
checkfile=$2
koushin_data=$3
today="$(date +%Y%m%d)"

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------


echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu

## ログインUSER名と施設の取得（仮）
#cat ${test_tbl_dir}/STAFF_NAME                     |
## 1:USER_ID 2:ユーザー名
#join1 key=1 ${tmp}-user                            |
## 1:USER_ID 2:ユーザー名
#self 2                                             > ${tmp}-usermei
#
#cat ${test_tbl_dir}/SHISETSU_NAME                  |
## 1:施設コード 2:施設名
#join1 key=1 ${tmp}-shisetsu                        |
#self 2                                             > ${tmp}-user_shisetsu

[ -z "${MODE}" ] && MODE="init"

## 親からわたってきた${Click_id}が
## unit_tsuika以外ならばばらして値取得(メンテ)、フロアは入力可能に
## unit_tsuikaならば空にする、フロアは入力不可に
#case "${Click_id}" in
#  unit_tsuika )
#    shinki_flg="true"
#    Tateya_id="02" #いまのところユニットはケアのみなので02ケア固定
#    Floor_id=""
#    Unit_id=""
#  ;;
#  * )
#    shinki_flg="false"
#    echo "${Click_id}" |
#    sed 's/-/ /g' - > ${tmp}-click_id
#    # 1:建屋ID 2:フロア 3:ユニットID
#    Tateya_id="$(self 1 ${tmp}-click_id)"
#    Floor_id="$(self 2 ${tmp}-click_id)"
#    Unit_id="$(self 3 ${tmp}-click_id)"
#  ;;
#esac

# 初期表示はTateya_id=01
# display初期表示のみです
[ "${Tateya_id}" == "" -o "${Tateya_id}" == "_" ] && Tateya_id="01"
[ "${Tateya_id}" == "" -o "${Tateya_id}" == "_" -o "${Tateya_id}" == "01" ] && visivility="hidden"
#--------------------------------------------------------------

#--------------------------------------------------------------
# 表示の処理

# 施設名称
SHISETSU_NAME="$(awk '$1=="'${shisetsu_key}'" && $8!="9"' ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON | LANG=C sort -k1,1 -k9,9 | getlast 1 1 | self 2)"

# 建屋テーブル
# -
# 施設に存在する建屋取得
cjoin0 key=1 <(echo "${shisetsu_key}") ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT |
# 1:施設ID   2:建屋ID   3:フロア 4:ユニットID 5:削除フラグ
# 6:更新日時 7:ユーザID
awk '$5!="9"' |
self 2 |
# 1:建屋ID
LANG=C sort -u > ${tmp}-tateya_id
# -
# 建屋名一覧取得
awk '$4!="9"' ${home_dir}/TBL/SHISETSU_MASTER/TATEYA_NAME |
# 1:建屋ID   2:建屋名 3:建屋略 4:削除フラグ 5:更新日時
# 6:ユーザID
self 1 3 > ${tmp}-tateya_name
# 1:建屋ID 2:建屋名
# -
# 建屋名テーブル作成
cjoin0 key=1 ${tmp}-tateya_id ${tmp}-tateya_name > ${tmp}-tateya_select

# フロアテーブル
awk '$1=="'${shisetsu_key}'" && $2=="'${Tateya_id}'" && $4!="9"' ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR |
self 3 3 |
LANG=C sort > ${tmp}-floor_tbl
# 1:フロア 2:フロア

# ユニットテーブル
# -
# ユニット名一覧取得
awk '$3!="9"' ${home_dir}/TBL/SHISETSU_MASTER/UNIT_NAME |
# 1:ユニットID 2:ユニット名 3:削除フラグ 4:更新日時 5:ユーザID
self 1 2 > ${tmp}-unit_name
# 1:ユニットID 2:ユニット名
# -
# 建屋にあるユニット一覧を取得しテーブル作成
cjoin0 key=1/2 <(echo "${shisetsu_key} ${Tateya_id}") ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT |
# 1:施設ID   2:建屋ID   3:フロア 4:ユニットID 5:削除フラグ
# 6:更新日時 7:ユーザID
awk '$5!="9"' |
self 4 |
# 4:ユニットID
LANG=C sort -u |
cjoin0 key=1 - ${tmp}-unit_name |
# 1:ユニットID 2:ユニット名
cat <(echo "_ なし") - > ${tmp}-unit_select

## MODE=regist時のみ処理
#case "${MODE}" in
#  # 更新
#  regist)
#    # 結果判定
#    result=$(awk '$1=="result"{print $2}' ${koushin_data})
#    # メッセージ作成
#    if [ "${result}" = "ok" ] ; then
#      message="更新完了"
#    else
#      message=$(awk '$1=="message"{print $2}' ${koushin_data})
#      [ -z "${message}" ] && message="処理エラー"
#    fi
#  ;;
#esac
#
#
##--------------------------------------------------------------
## メッセージがあればalertで表示させる
#if [ ! -z "${message}" ] ; then
#cat << FIN > $tmp-html_alert
#    <script type="text/javascript" language="javascript">
#      alert('${message}');
#    </script>
#FIN
#fi
##--------------------------------------------------------------

# 共通設定項目
cat << FIN | sed 's/ _$/ @/g' > $tmp-calsed
###USERID### $userid
###PASSWORD### $password
###SHISETSUID### $shisetsu
###SHISETSU_NAME### ${SHISETSU_NAME}
###shisetsu_key### ${shisetsu_key}
###visivility1### ${visivility}
FIN

cat $tmp-calsed      |
sed 's/\\n/###KAIGYO###/g'     >  $tmp-calsed_kaigyozumi

# --------------------------------------------------------------
# HTMLの作成

cat ${html_dir}/MASTER_POPUP_KYOSHITSU.html |
calsed -f $tmp-calsed_kaigyozumi - |
mojihame -l"TATEYA_SELECT" - ${tmp}-tateya_select |
mojihame -l"FLOOR_SELECT" - ${tmp}-floor_tbl |
mojihame -l"UNIT_SELECT" - ${tmp}-unit_select
#if [ -e $tmp-html_alert ] ; then
#  cat - $tmp-html_alert
#else
#  cat -
#fi
# --------------------------------------------------------------

rm -f ${tmp}-*
exit 0
