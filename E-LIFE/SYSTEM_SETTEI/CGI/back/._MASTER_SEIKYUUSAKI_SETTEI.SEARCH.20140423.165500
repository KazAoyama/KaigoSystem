#!/bin/bash
#
# MASTER_SEIKYUUSAKI_SETTEI.SEARCH : 請求先設定
#
# Written by S.Otsubo


# ログ
source /home/hands/E-LIFE/SYSTEM_SETTEI/CGI/SYSTEM_SETTEI.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null

mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date +%Y%m%d) ; set -xv


# ディレクトリ設定
test_tbl_dir="${home_dir}/TEST/TBL"

# 変数の定義
namedata=$1
checkfile=$2
koushin_data=$3
search_data=$4
today="$(date +%Y%m%d)"

#ゴミtmpの消去
rm -f $tmp-*

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------


echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu

# ログインUSER名と施設の取得（仮）
cat ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER       |
# 1:USER_ID 2:ユーザー名 3・・・・
join1 key=1 ${tmp}-user                                |
# 1:USER_ID 2:ユーザー名
self 2                                                 > ${tmp}-usermei

cat ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON      |
# 1:施設コード 2:施設名 3・・・・
join1 key=1 ${tmp}-shisetsu                            |
self 2                                                 > ${tmp}-user_shisetsu

# 基本的に自身の施設しか設定変更しないので固定
shisetsu_key="${shisetsu}"

# 初期表示の際は建屋はシニアに固定
[ "${Tateya_select}" == "" -o "${Tateya_select}" == "_" ] && Tateya_select="01"

[ -z "${MODE}" ] && MODE="init"
#--------------------------------------------------------------

#--------------------------------------------------------------
# 表示の処理

# 利用者情報取得する
# -
# 利用者一覧
# /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_MASTER
# 1:利用者ID 2:利用者氏名 3:利用者氏名カナ 4:利用者氏名外字 5:削除フラグ
# 6:更新日時 7:更新者
# -
# 利用者所属
# /DATA/E-LIFE/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS
# 1:施設ID   2:建屋ID 3:フロア 4:ユニット   5:居室
# 6:入居者ID 7:入居日 8:退去日 9:削除フラグ 10:更新日時
# 11:更新者
# -
# 利用者利用料
# 1:利用者ID   2:契約ID     3:施設ID 4:建屋ID     5:利用料種別ID
# 6:起算開始日 7:起算終了日 8:金額   9:削除フラグ 10:更新日時
# 11:更新者
# -
# 利用料マスタ
# 1:施設ID   2:利用料種別ID 3:利用科目名 4:税区分 5:金額
# 6:支払区分 7:費用算出方法 8:有効フラグ 9:更新日 10:更新者
# -
# 利用者口座
# 1:利用者ID    2:口座ID    3:金融機関コード 4:支店コード    5:請求内容コード
# 6:口座種類    7:口座番号  8:請求期間FROM   9:請求期間TO    10:名義人
# 11:備考       12:一括請求 13:一括請求ID    14:一括請求口座 15:一括請求書フラグ
# 16:削除フラグ 17:更新日   18:更新者

# 繰り返し処理で最新版取得
cat << FIN | self 1/NF > ${tmp}-riyousha_syutoku
RIYOUSHA_MASTER          ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_MASTER          5  6 
SHISETSU_RIYOUSHA_STATUS ${data_dir}/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS 9  10
RIYOUSHA_RIYOURYOU       ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_RIYOURYOU       9  10
RIYOURYOU_MASTER         ${tbl_dir}/RIYOURYOU_MASTER/RIYOURYOU_MASTER       8  9 
RIYOUSHA_KOUZA           ${tbl_dir}/RIYOURYOU_MASTER/RIYOUSHA_KOUZA         16 17
FIN
cat ${tmp}-riyousha_syutoku |
while read Name Pass Delete_field Update_field; do
  awk '$"'${Delete_field}'"!="9"{print}' ${Pass} > ${tmp}-${Name}
done

# 選択された部屋にいる人を有効な日付で絞る
cjoin0 key=1/3 <(echo "${Shisetsu} ${Tateya_select} ${Floor_select}") ${tmp}-SHISETSU_RIYOUSHA_STATUS |
cjoin0 key=4 <(echo "${Room_select}") - |
# 1:施設ID   2:建屋ID 3:フロア 4:ユニット   5:居室
# 6:入居者ID 7:入居日 8:退去日 9:削除フラグ 10:更新日時
# 11:更新者
awk '{$7=substr($7,1,6); $8=substr($8,1,6); print}' |
awk '$7<="'${Disp_month_select}'"&&$8>"'${Disp_month_select}'"' |
# 絞り込んだ情報から利用者の名前テーブルを取得
self 6 |
LANG=C sort |
cjoin0 key=1 - ${tmp}-RIYOUSHA_MASTER |
self 1 2 > ${tmp}-riyousha_tbl
# 1:利用者ID 2:利用者氏名

# 利用料テーブルをだす項目を設定
# -
# 利用者利用料を有効な日付で絞る
cjoin0 key=1 ${tmp}-riyousha_tbl ${tmp}-RIYOUSHA_RIYOURYOU |
awk '{$6=substr($6,1,6); $7=substr($7,1,6); print}' |
awk '$6<="'${Disp_month_select}'"&&$7>"'${Disp_month_select}'"' |
# 表示するかどうかのふりわけ
self 5 1 |
# 1:利用料種別ID 2:利用者ID
LANG=C sort -k2,2 > ${tmp}-riyouryou_tbl_kari
# -
# 利用者口座を有効な日付で絞る
cjoin0 key=1 ${tmp}-riyousha_tbl ${tmp}-RIYOUSHA_KOUZA |
# 1:利用者ID    2:口座ID    3:金融機関コード 4:支店コード    5:請求内容コード
# 6:口座種類    7:口座番号  8:請求期間FROM   9:請求期間TO    10:名義人
# 11:備考       12:一括請求 13:一括請求ID    14:一括請求口座 15:一括請求書フラグ
# 16:削除フラグ 17:更新日   18:更新者
awk '{$8=substr($8,1,6); $9=substr($9,1,6); print}' |
awk '$8<="'${Disp_month_select}'"&&$9>"'${Disp_month_select}'"' |
# 施設請求(もしくは全請求に絞る(全請求で設定してたら施設で設定しないはず))
cjoin0 key=5 <(echo "1 2" | tarr) - |
# 一括請求フラグがアンスコなら全請求か施設請求で自身の支払口座をもっている
cjoin0 key=12 <(echo "_") - |
self 1 |
LANG=C sort -u > ${tmp}-kouza_ari
# 1:利用者ID
# -
# 利用者利用料テーブルを口座がある人で絞り込む
cjoin0 key=2 ${tmp}-kouza_ari ${tmp}-riyouryou_tbl_kari |
# 1:利用料種別ID 2:利用者ID
LANG=C sort > ${tmp}-riyouryou_tbl_kari2
# -
# 利用者利用料テーブルでその部屋の入居者の人数だけあるもののみに絞り込む
room_ninzuu="$(gyo ${tmp}-riyousha_tbl)"
count 1 1 ${tmp}-riyouryou_tbl_kari2 |
# 1:利用料種別ID 2:カウント数
cjoin0 key=2 <(echo "")

cat << FIN > ${tmp}-calsed
FIN


#--------------------------------------------------------------

# --------------------------------------------------------------
# HTMLの作成

awk '/\<filehame_start\>/,/\<filehame_end\>/' ${html_dir}/MASTER_SEIKYUUSAKI_SETTEI.FILEHAME.html |
calsed -f $tmp-calsed - |
while read Mojihame_Label Table_name ; do
done < ${tmp}-mojihame_list
# --------------------------------------------------------------

rm -f ${tmp}-*
exit 0
