#!/bin/bash
#
# SHISETSU_MASTER_KOUZA.DISPLAY : 施設情報マスタ 口座情報
#
# Written by S.Otsubo

# ${shisetsu_key}から口座情報をもってくる


# ログ
source /home/hands/E-LIFE/SYSTEM_SETTEI/CGI/SYSTEM_SETTEI.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null

mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date +%Y%m%d) ; set -xv


# ディレクトリ設定
test_tbl_dir="${home_dir}/TEST/TBL"

# 変数の定義
namedata=$1
checkfile=$2
koushin_data=$3
#search_data=$4
today="$(date +%Y%m%d)"

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------


echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu

# ログインUSER名と施設の取得（仮）
cat ${test_tbl_dir}/STAFF_NAME                     |
# 1:USER_ID 2:ユーザー名
join1 key=1 ${tmp}-user                            |
# 1:USER_ID 2:ユーザー名
self 2                                             > ${tmp}-usermei

cat ${test_tbl_dir}/SHISETSU_NAME                  |
# 1:施設コード 2:施設名
join1 key=1 ${tmp}-shisetsu                        |
self 2                                             > ${tmp}-user_shisetsu


[ -z "${MODE}" ] && MODE="init"
#--------------------------------------------------------------

##--------------------------------------------------------------
## 表示の処理
#
## ドロップダウンの作成
## ------------
## 施設名
#cjoin0 key=1 <(echo "${shisetsu_key}") ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON |
## 1:施設ID   2:施設名 3:略称       4:電話番号 5:FAX
## 6:郵便番号 7:住所   8:削除フラグ 9:更新日時 10:ユーザID
#awk '$8!="9"' |
#LANG=C sort -k1,1 -k9,9 |
#getlast 1 1 |
#self 1/2 |
#tee ${tmp}-shisetsu_name |
## 1:施設ID 2:施設名
#awk '{if($1=="'${shisetsu_key}'"){$3="selected"}
#      else{$3="disabled"}; print}' > ${tmp}-shisetsu_select
## ------------
## ------------
## フロア名
#
#cjoin0 key=1/2 <(echo "${shisetsu_key} ${Tateya_select}") ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR |
## 1:施設ID   2:建屋ID 3:フロア 4:削除フラグ 5:更新日時
## 6:ユーザID
#awk '$4!="9"' |
#LANG=C sort -k1,3 -k5,5 |
#getlast 1 3 |
#self 3 3 |
## 1:フロア 2:フロア
#awk '{if($1=="'${Floor_select}'"){$3="selected"};print}' |
#cat <(echo "_ 全て") - > ${tmp}-floor_select
## ------------
## ------------
## ユニット名
#
#awk '$3!="9"' ${home_dir}/TBL/SHISETSU_MASTER/UNIT_NAME |
## 1:ユニットID 2:ユニット名 3:削除フラグ 4:更新日時 5:ユーザID
#LANG=C sort -k1,1 -k4,4 |
#getlast 1 1 |
#self 1 2 > ${tmp}-unit_name
## 1:ユニットID 2:ユニット名
#
#cjoin0 key=1/3 <(echo "${shisetsu_key} ${Tateya_select} ${Floor_select}") ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT |
## 1:施設ID   2:建屋ID   3:フロア 4:ユニットID 5:削除フラグ
## 6:更新日時 7:ユーザID
#awk '$5!="9"' |
#LANG=C sort -k1,4 -k6,6 |
#getlast 1 4 |
#self 4 |
## 4:ユニットID
#LANG=C sort -u |
#cjoin0 key=1 - ${tmp}-unit_name |
## 1:ユニットID 2:ユニット名
#awk '{if($1=="'${Unit_select}'"){$3="selected"};print}' - |
#cat <(echo "_ 全て") - > ${tmp}-unit_select
## ------------
## ------------
## 建屋名
#
#cjoin0 key=1 <(echo "${shisetsu_key}") ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT |
## 1:施設ID   2:建屋ID   3:フロア 4:ユニットID 5:削除フラグ
## 6:更新日時 7:ユーザID
#awk '$5!="9"' |
#LANG=C sort -k1,4 -k6,6 |
#getlast 1 4 |
#self 2 |
## 1:建屋ID
#LANG=C sort -u > ${tmp}-tateya_id
#
#awk '$4!="9"' ${home_dir}/TBL/SHISETSU_MASTER/TATEYA_NAME |
## 1:建屋ID   2:建屋名 3:建屋略 4:削除フラグ 5:更新日時
## 6:ユーザID
#LANG=C sort -k1,1 -k5,5 |
#getlast 1 1 |
#self 1 3 > ${tmp}-tateya_name
## 1:建屋ID 2:建屋名
#
#cjoin0 key=1 ${tmp}-tateya_id ${tmp}-tateya_name |
#awk '{if($1=="'${Tateya_select}'"){$3="selected"};print}' > ${tmp}-tateya_select
## ------------
#
## ------------
## サーチ結果の編集
#
## ${search_data}
## 1:施設ID    2:建屋ID      3:フロア      4:ユニットID 5:居室
## 6:居室定員  7:居室タイプ1 8:居室タイプ2 9:金額       10:削除フラグ
## 11:更新日時 12:ユーザID
#
## 名称系つける
#LANG=C sort -k1,1 ${search_data} |
#join2 key=1 ${tmp}-shisetsu_name - |
## 1:施設ID      2:施設名    3:建屋ID      4:フロア      5:ユニットID
## 6:居室        7:居室定員  8:居室タイプ1 9:居室タイプ2 10:金額
## 11:削除フラグ 12:更新日時 13:ユーザID
#LANG=C sort -k3,3 |
#join2 key=3 ${tmp}-tateya_name - |
## 1:施設ID     2:施設名      3:建屋ID    4:建屋名      5:フロア
## 6:ユニットID 7:居室        8:居室定員  9:居室タイプ1 10:居室タイプ2
## 11:金額      12:削除フラグ 13:更新日時 14:ユーザID
#LANG=C sort -k6,6 |
#join2 key=6 ${tmp}-unit_name - |
## 1:施設ID       2:施設名     3:建屋ID      4:建屋名    5:フロア
## 6:ユニットID   7:ユニット名 8:居室        9:居室定員  10:居室タイプ1
## 11:居室タイプ2 12:金額      13:削除フラグ 14:更新日時 15:ユーザID
#LANG=C sort |
## 金額にカンマ
#comma 12 |
## 表示の都合上ユニットIDのアンスコを文字列nullに変換
#awk '{if($6=="_"){$6="null"};print}' > ${tmp}-search_result
## ------------
#
## ドロップダウンの表示設定(Tateya_select=01のときかくす)
#if [ "${Tateya_select}" == "01" -o "${Tateya_select}" == "" -o "${Tateya_select}" == "_" ] ; then
#  visivility="hidden"
#else
#  visivility="visible"
#fi
#
## MODE=regist時のみ処理
#case "${MODE}" in
#  # 更新
#  regist)
#    # 結果判定
#    result=$(awk '$1=="result"{print $2}' ${koushin_data})
#    # メッセージ作成
#    if [ "${result}" = "ok" ] ; then
#      message="更新完了"
#    else
#      message=$(awk '$1=="message"{print $2}' ${koushin_data})
#      [ -z "${message}" ] && message="処理エラー"
#    fi
#  ;;
#esac


#--------------------------------------------------------------
# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
cat << FIN > $tmp-html_alert
    <script type="text/javascript" language="javascript">
      alert('${message}');
    </script>
FIN
fi
#--------------------------------------------------------------

# 共通設定項目
# DROPDOWN_ACTIVE:メニューのどのドロップダウンが選択されているか
# LI_SYSTEMSETTEIi:ドロップダウン内のどこが選択されているか
cat << FIN | sed 's/ _$/ @/g' > $tmp-calsed
###USERID### $userid
###PASSWORD### $password
###SHISETSUID### $shisetsu
###DROPDOWN_ACTIVE9### active
###LI_SYSTEMSETTEI3### active
###shisetsu_key### ${shisetsu_key}
###shisetsu_key2### ${shisetsu_key}
###visivility1### ${visivility}
###visivility2### ${visivility}
FIN


cat $tmp-calsed      |
sed 's/\\n/###KAIGYO###/g'     >  $tmp-calsed_kaigyozumi

# --------------------------------------------------------------
# HTMLの作成

cat ${html_dir}/SHISETSU_MASTER_KOUZA1.html ${home_dir}/KYOUTSU/HTML/MENUBAR.html ${html_dir}/SHISETSU_MASTER_KOUZA2.html |
calsed -f $tmp-calsed_kaigyozumi - |
#mojihame -l###USER_NAME### - ${tmp}-usermei |
#mojihame -l###USER_SHISETSU_NAME### - ${tmp}-user_shisetsu |
#mojihame -l"SHISETSU_SELECT" - ${tmp}-shisetsu_select |
#mojihame -l"TATEYA_SELECT" - ${tmp}-tateya_select |
#mojihame -l"FLOOR_SELECT" - ${tmp}-floor_select |
#mojihame -l"UNIT_SELECT" - ${tmp}-unit_select |
#mojihame -l"KOUZA_TBL" - ${tmp}-search_result |
if [ -e $tmp-html_alert ] ; then
  cat - $tmp-html_alert
else
  cat -
fi |
if [ "${MODE}" == "regist" ] ; then
  formhame -d"_" - ${namedata}
else
  cat -
fi
# --------------------------------------------------------------

#rm -f ${tmp}-*
exit 0
