#!/bin/bash
#
# JOURNAL_KENSAKU.DISPLAY
# HDBジャーナル検索　表示用CGI
#
# Written by T.Osako (Tokyu-hands.co.jp) :20100615

#--------------------------------------------------------------
# ログ
source /home/hands/BUSINESS_AIRPORT/SAMPLE/CGI/SAMPLE.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null
mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).$HOSTNAME.$(date +%Y%m%d%H%M%S).$$ ; set -xv
#--------------------------------------------------------------

#--------------------------------------------------------------
rm -f $tmp-*
#--------------------------------------------------------------

#--------------------------------------------------------------
# 変数の定義
namedata=$1
result_data=$2
today="$(date +%Y%m%d)"

# 必要な値の取得
eval $(name-source ${namedata})
USER_NAME=$(awk '$1=="'${USER_ID}'"{print $2}' ${tbl_dir}/JYUGYOIN_NAME)
USER_TEN=$(awk '$1=="'${USER_ID}'"{print $2}' ${tbl_dir}/JYUGYOIN_TEN_TBL)
[ -z "${MODE}" ] && MODE="init"
#--------------------------------------------------------------

#--------------------------------------------------------------
### モードによる表示の分岐
case "${MODE}" in

  # 初期表示
  init | to_reset)
    # 空のリストデータを作成する
    : > $tmp-listdata
  ;;

  # 検索結果
  to_search)
    if [ "$(gyo ${result_data})" != 0 ] ; then
      cat ${result_data}        |
      # 1:ID         2:入力内容 3:入力者 4:入力者名 5:最終更新日時
      # 6:最終更新者
      LANG=C sort -k6,6nr       |
      self 1 2 3 4 5            |
      rank                      |
      head -10                  > $tmp-listdata
    else
      : > $tmp-listdata  
    fi
  ;;

  # 更新
  to_koshin)
    # 結果判定
    result=$(awk '$1=="result"{print $2}' ${result_data})
    result_all="$(gyo ${listdata})"
    if [ "${result}" = "ok" ] ; then
      message="更新完了"
      INPUT_TEXT1=""
    else
      message=$(awk '$1=="message"{print $2}' ${result_data})
      [ -z "${message}" ] && message="処理エラー"
    fi
    : > $tmp-listdata
  ;;
esac
#--------------------------------------------------------------

#--------------------------------------------------------------
# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
	cat <<- FIN > $tmp-html2
	  <script type="text/javascript" language="javascript">
	    alert('${message}');
	  </script>
	FIN
fi
#--------------------------------------------------------------

#--------------------------------------------------------------
# 他画面へのリンク（左側フレーム部分）のネタ作成
cat ${roottbl_dir}/GAMEN_LINK_TBL |
# 1:並び順         2:系統順 3:系統名     4:系統ID 5:画面名
# 6:ディレクトリ名 7:画面ID 8:有効フラグ
awk '$8=="1"'                  |
LANG=C sort -k1,1n             |
delf 1                         > $tmp-gamen_link
# 1:系統順 2:系統名     3:系統ID 4:画面名 5:ディレクトリ名
# 6:画面ID 7:有効フラグ
#--------------------------------------------------------------

#--------------------------------------------------------------
# セレクトボックス準備
echo "_ 選択してください"      > $tmp-header1

cat ${tbl_dir}/JYUGYOIN_NAME   |
grep "ＩＴコマース部"          |
self 1 2                       |
awk '{if($1=="'${SAMPLE_SELECT}'"){$3="selected"};print}' |
LANG=C sort -k1,1              |
cat $tmp-header1 -             > $tmp-sample_header
#--------------------------------------------------------------

#--------------------------------------------------------------
# テキスト系は_を空白に直してやる
[ "${SAMPLE_TEXT1}" = "_" ] && SAMPLE_TEXT1=""
sample_area=$(echo "${SAMPLE_AREA}" | sed 's/\\n/###RETURN###/g')

# calsedファイル
cat << FIN > $tmp-calsed
###USER_ID###       ${USER_ID}      
###USER_NAME###     ${USER_NAME}    
###SAMPLE_TEXT1###  ${SAMPLE_TEXT1}
###INPUT_TEXT1###   ${INPUT_TEXT1}
###SAMPLE_AREA###   ${sample_area}    
###ERROR_MESSAGE### ${error_message}
FIN
#--------------------------------------------------------------

#--------------------------------------------------------------
# データのはめ込み
cat ${html_dir}/SAMPLE.html                |
calsed -f $tmp-calsed -                    |
mojihame -hLABEL - $tmp-gamen_link         |
mojihame -lSAMPLE_SELECTLIST - $tmp-sample_header |
mojihame -lLIST_BODY - $tmp-listdata       |
sed 's/###RETURN###/\n/g'                  |
tee $tmp-html |
#--------------------------------------------------------------

#--------------------------------------------------------------
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |
cat -
#--------------------------------------------------------------


## 終了
rm -f $tmp-*
exit 0
