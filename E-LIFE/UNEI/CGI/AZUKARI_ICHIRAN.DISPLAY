#!/bin/bash
#
# SHOKYAKU_KANRI.DISPLAY : 償却管理.DISPLAY
#
# Usage : SHOKYAKU_KANRI.DISPLAY namefile datafile
#
# Written by j.aoyagi(hands lab.inc)


# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null

#--------------------ログ出力--------------------
mkdir -p /home/hands/E-LIFE/UNEI/APLOG/$(date +%Y%m%d)
exec 2> /home/hands/E-LIFE/UNEI/APLOG/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv


# 変数設定
tmp=/var/tmp/${$}

#ゴミtmpの消去
rm -f $tmp-*

today="$(date +%Y%m%d)"
this_month="$(date +%Y%m)"
this_year="$(date +%Y)"

# ディレクトリ設定
home_dir="/home/hands"
app_dir="${home_dir}/E-LIFE/UNEI"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
pompa_dir="${app_dir}/POMPA"
input_dir="${app_dir}/INPUT"
apptbl_dir="${app_dir}/TBL"
kyoutsu_dir="${home_dir}/E-LIFE/KYOUTSU/HTML"
tbl_dir="${home_dir}/E-LIFE/TBL/AZUKARI_TOUROKU"
hometbl_dir="${home_dir}/E-LIFE/TBL"
riyosha_dir="/DATA/E-LIFE/UNEI/RIYOUSHA"
work="${app_dir}/WORK"

# 引数設定
namefile=${1}
checkfile=${2}
searchfile=${3}
tourokufile=${4}
downloadfile=${5}

# eval
eval $(name-source ${namefile})

#--------------------------------------------------------------
# ログインUSER名と施設の取得
cat /home/hands/E-LIFE/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
tee ${tmp}-jugyoin        |
# 1:USER_ID 2:ユーザー名
awk '$1=="'${userid}'"'   |
# 1:USER_ID 2:ユーザー名
self 2                    > ${tmp}-usermei


self 1 2 /home/hands/E-LIFE/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 /home/hands/E-LIFE/TBL/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst

cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst


# 施設名はログインユーザーの権限のある施設を取得
cat /home/hands/E-LIFE//SYSTEM_SETTEI/POMPA/KENGEN_KANRI/USER_KENGEN/${userid}.USER_KENGEN |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou
#-----------------------------------------------------------




# 画面の描画モードを決定する。
MODE="$(nameread "MODE" ${namefile})"
if [ -n "${MODE}" -a "${MODE}" != "_" ];then
  :
else
  MODE="init"
fi
if [ -z ${downloadfile} ];then
  FILE_NAME="null"
else
  file=$(cat ${downloadfile})
  FILE_NAME="\"/E-LIFE/UNEI/DOWNLOAD/${file}\""
fi

# エラーメッセージ
case "${MODE}" in
  search )
    [ "$(gyo ${searchfile})" = 0 ] && message="対象者データがありません"
  ;;
  touroku )
    result=$(awk '$1=="result"{print $2}' ${tourokufile})
    if [ "${result}" = "ok" ];then
      message="登録しました"
    else
      message=$(awk '$1=="message"{print $2}' ${tourokufile})
      [ -z "${message}" ] && message="処理エラー"
    fi
  ;;
esac

# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
cat <<- FIN > $tmp-html2
  <script type="text/javascript" language="javascript">
    alert('${message}');
  </script>
FIN
fi

echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu

# ログインUSER名と施設の取得（仮）
cat ${hometbl_dir}/JYUUGYOUIN_MASTER/USER_MASTER                   |
# 1:USER_ID 2:ユーザー名
join1 key=1 ${tmp}-user                            |
# 1:USER_ID 2:ユーザー名
self 2                                             > ${tmp}-usermei

cat ${hometbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON                  |
# 1:施設コード 2:施設名
join1 key=1 ${tmp}-shisetsu                        |
self 2                                             > ${tmp}-user_shisetsu

# MODEがinitだったら渡ってきたネームをクリア
if [ "${MODE}" = "init" -o "${MODE}" = "touroku" ];then
  KOUMOKU=""
  hd_azukari_hiduke=""
  hd_azukari_hiduke_to=""
  watashita_hiduke=""
  watashita_hiduke_to=""
  TAIOU=""
  FLOOR="0"
else
  :
fi

# 日付の取得
[ -z "${hd_azukari_hiduke}" ] &&
  hd_azukari_hiduke=$(date +%Y%m%d | awk '{print substr($1,1,4)"-"substr($1,5,2)"-"substr($1,7,2)}')

[ -z "${hd_azukari_hiduke_to}" ] &&
  hd_azukari_hiduke_to=$(date +%Y%m%d | awk '{print substr($1,1,4)"-"substr($1,5,2)"-"substr($1,7,2)}')

[ -z "${watashita_hiduke}" ] &&
  watashita_hiduke=$(date +%Y%m%d | awk '{print substr($1,1,4)"-"substr($1,5,2)"-"substr($1,7,2)}')

[ -z "${watashita_hiduke_to}" ] &&
  watashita_hiduke_to=$(date +%Y%m%d | awk '{print substr($1,1,4)"-"substr($1,5,2)"-"substr($1,7,2)}')
# 項目のセット
echo "0 全て"                                 > $tmp-koumoku_all
if [ -n "${KOUMOKU}" -a "${KOUMOKU}" != "_" ];then
  cat ${tbl_dir}/${shisetsu}/AZUKARI_KOUMOKU  |
  awk '$4!=9'                                 |
  LANG=C sort -k3,3n                          |
  self 1 2                                    |
  cat $tmp-koumoku_all -                      |
  awk '{print $0,"'${KOUMOKU}'"}'             |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,"@"}}'
else
  cat ${tbl_dir}/${shisetsu}/AZUKARI_KOUMOKU  |
  awk '$4!=9'                                 |
  LANG=C sort -k3,3n                          |
  self 1 2                                    |
  cat $tmp-koumoku_all -
fi                                            > $tmp-koumoku


# 対応のセット
cat <<-FIN                                    > $tmp-taiou_master
1 預り中
2 お渡し済
FIN

if [ -n "${TAIOU}" -a "${TAIOU}" != "_" ];then
  cat $tmp-koumoku_all $tmp-taiou_master           |
  awk '{print $0,"'${TAIOU}'"}'                    |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,"@"}}'
else
  cat $tmp-koumoku_all $tmp-taiou_master                       
fi                                                 > $tmp-taiou

# フロアのセット
cat ${riyosha_dir}/SHISETSU_RIYOUSHA_STATUS                    |
# 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
join0 key=1 <(echo $shisetsu)                                      |
join0 key=2 <(echo "01")                                       |
awk '$9==1'                                                    |
self 3                                                         |
LANG=C sort -u                                                 > $tmp-floor_base
echo "0 全て"                                                  > $tmp-floor_all
awk '{print $1,$1"F"}' $tmp-floor_base                         |
cat $tmp-floor_all -                                           |
awk '{print $0,"'${FLOOR}'"}'                                  |
awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,"@"}}' > $tmp-floor

# ソート順
cat <<-FIN >> $tmp-floor_sort
1 昇順
2 降順
FIN

if [ -n "${FLOOR_SORT}" -a "${FLOOR_SORT}" != "_" ];then
  awk '{print $0,"'${FLOOR_SORT}'"}' $tmp-floor_sort            |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,"@"}}'
else
  cat $tmp-floor_sort
fi                                                              > $tmp-sort_select

# 入居者のセット
cat ${riyosha_dir}/RIYOUSHA_KIHON |
self 1 2                          > $tmp-riyosha_kihon

# 日付
cal_azukari_hiduke=$(echo $hd_azukari_hiduke | sed 's/-//g')
cal_azukari_hiduk_toe=$(echo $hd_azukari_hiduke_to | sed 's/-//g')


# SHISETSU_RIYOSHA_STATUSの準備
cat ${riyosha_dir}/SHISETSU_RIYOUSHA_STATUS                  |
# 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
join0 key=1 $tmp-shisetsu                                    |
join0 key=2 <(echo "01")                                     |
awk '$9==1'                                                  |
awk '$7<="'${cal_azukari_hiduke_to}'" && $8>="'${cal_azukari_hiduke}'"'   > $tmp-riyosha_status

cat $tmp-riyosha_status                                           |
# 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
if [ "${FLOOR}" = 0 ];then
  cat -
else
  awk '$3=="'${FLOOR}'"'
fi                                                                |
self 6 5                                                          |
LANG=C sort -k1,1                                                 |
join1 key=1 $tmp-riyosha_kihon                                    |
LANG=C sort -k1,2 -u                                              |
sed 's/###SPACE###/　/g'                                          |
self 1 3 2                                                        > ${tmp}-riyosha_name

# 検索項目の入居者
echo "0 全て"                                                > $tmp-riyosha_head
self 1 3 $tmp-riyosha_name                                   |
cat $tmp-riyosha_head -                                      > $tmp-riyosha_select

# searchfileの処理
cat ${riyosha_dir}/RIYOUSHA_KIHON |
self 1 2                          > $tmp-riyosha_kihon

if [ "$(gyo ${searchfile})" -ne 0 ];then
  cat ${searchfile}
else
  :
fi                               > $tmp-search




#######################################################################################
# calsedするfileをつくろう
cat <<- FIN | sed 's/ _$/ @/g' >> ${tmp}-calsed1
###DROPDOWN_ACTIVE1### active
###LI_UNEI4### active
###HD_AZUKARI_HIDUKE### ${hd_azukari_hiduke}
###HD_AZUKARI_HIDUKE_TO### ${hd_azukari_hiduke_to}
###WATASHITA_HIDUKE### ${watashita_hiduke}
###WATASHITA_HIDUKE_TO### ${watashita_hiduke_to}
###USERID### ${userid}
###SHISETSUID### ${shisetsu}
###PASSWORD### ${password}
###keyword### ${keyword}
###FILE_NAME### ${FILE_NAME}
###SELECT_SHISETSU### $select_shisetsu
FIN

cat ${tmp}-calsed1 ${checkfile} > ${tmp}-calsed

cat ${html_dir}/AZUKARI_ICHIRAN1.html ${kyoutsu_dir}/MENUBAR.html ${html_dir}/AZUKARI_ICHIRAN2.html   |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -l###KOUMOKU_SELECT### - ${tmp}-koumoku        |
mojihame -l###TAIOU_SELECT### - ${tmp}-taiou        |
mojihame -l###NYUKYOSHA_SELECT### - ${tmp}-riyosha_select |
mojihame -l###FLOOR_SELECT### - ${tmp}-floor              |
mojihame -l###SORT_SELECT### - ${tmp}-sort_select              |
mojihame -l###SEARCH_KEKKA### - ${tmp}-search       |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###USER_SHISETSU_NAME### - ${tmp}-user_shisetsu |
#mojihame -l###SEARCH_DATA### - ${tmp}-search_data |
calsed -f ${tmp}-calsed - |
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |
cat -

rm -f ${tmp}-*
exit 0

