#!/bin/bash
#
# AZUKARI_TOUROKU.SEARCH
#
# Usage : AZUKARI_TOUROKU.SEARCH namefile datafile
#
# Written by j.aoyagi(hands lab.inc)


# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null

#--------------------ログ出力--------------------
mkdir -p /home/hands/E-LIFE/UNEI/APLOG/$(date +%Y%m%d)
exec 2> /home/hands/E-LIFE/UNEI/APLOG/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv


# 変数設定
tmp=/var/tmp/${$}

#ゴミtmpの消去
rm -f $tmp-*

today="$(date +%Y%m%d)"
this_month="$(date +%Y%m)"
this_year="$(date +%Y)"

# ディレクトリ設定
home_dir="/home/hands"
app_dir="${home_dir}/E-LIFE/UNEI"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
pompa_dir="${app_dir}/POMPA/AZUKARI_TOUROKU"
input_dir="${app_dir}/INPUT"
apptbl_dir="${app_dir}/TBL"
kyoutsu_dir="${home_dir}/E-LIFE/KYOUTSU/HTML"
tbl_dir="${home_dir}/E-LIFE/TBL/AZUKARI_TOUROKU"
hometbl_dir="${home_dir}/E-LIFE/TBL"
riyosha_dir="/DATA/E-LIFE/UNEI/RIYOUSHA"
work="${app_dir}/WORK"

# 引数設定
namefile=${1}
checkfile=${2}
searchfile=${3}
downloadfile=${4}

# eval
eval $(name-source ${namefile})

echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu

# 日付
cal_azukari_hiduke=$(echo $hd_azukari_hiduke | sed 's/-//g')

# searchfileの処理
cat ${riyosha_dir}/RIYOUSHA_KIHON |
self 1 2                          > $tmp-riyosha_kihon

# SHISETSU_RIYOSHA_STATUSの準備
cat ${riyosha_dir}/SHISETSU_RIYOUSHA_STATUS                  |
# 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
join0 key=1 $tmp-shisetsu                                    |
join0 key=2 <(echo "01")                                     |
awk '$9==1'                                                  |
awk '$7<="'${cal_azukari_hiduke}'" && $8>="'${cal_azukari_hiduke}'"'   > $tmp-riyosha_status

# 対応が預りかお渡しかどうか

case ${TAIOU} in
  1 )
    cat $tmp-riyosha_status                                           |
    # 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
    if [ "${FLOOR}" = 0 ];then
      cat -
    else
      awk '$3=="'${FLOOR}'"'                                          
    fi                                                                |
    self 6 5                                                          |
    LANG=C sort -k1,1                                                 |
    join1 key=1 $tmp-riyosha_kihon                                    |
    LANG=C sort -k1,2 -u                                              |
    sed 's/###SPACE###/　/g'                                          |
    self 1 3 2                                                        > ${tmp}-riyosha_name
    cat $tmp-riyosha_name
  ;;
  2 )
    cat $tmp-riyosha_status                                           |
    # 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
    self 6 5                                                          |
    LANG=C sort -k1,1                                                 |
    join1 key=1 $tmp-riyosha_kihon                                    |
    self 1 3 2                                                        > $tmp-riyosha_room
    # 1:利用者ID 2:部屋番号 3:利用者名
    cat ${tbl_dir}/${shisetsu}/AZUKARI_KOUMOKU                        |
    awk '$4!=9{print $1,$2}'                                          > $tmp-koumoku 

    cat ${pompa_dir}/${shisetsu}/AZUKARI_TOUROKU                    |
    # 1:対応       2:利用者ID    3:預り項目    4:預り日付   5:預り時間
    # 6:預り対応者 7:預り数量    8:お渡し数量@ 9:誰にお渡し 10:備考
    # 11:渡した日  12:渡した時間 13:対応者     14:データID  15:有効フラグ
    # 16:処理日時
    awk '$15!=9'                                                      |
    delf 1                                                            |
    # 1:利用者ID    2:預り項目    3:預り日付   4:預り時間    5:預り対応者
    # 6:預り数量    7:お渡し数量@ 8:誰にお渡し 9:備考        10:渡した日
    # 11:渡した時間 12:対応者     13:データID  14:有効フラグ 15:処理日時
    LANG=C sort -k1,1                                                 |
    join1 key=1 $tmp-riyosha_room                                     |
    # 1:利用者ID    2:部屋       3:利用者名    4:預り項目    5:預り日付
    # 6:預り時間    7:預り対応者 8:預り数量    9:お渡し数量@ 10:誰にお渡し
    # 11:備考       12:渡した日  13:渡した時間 14:対応者     15:データID
    # 16:有効フラグ 17:処理日時
    LANG=C sort -k4,4                                                 |
    join1 key=4 $tmp-koumoku                                          |
    delf 4                                                            |
    # 1:利用者ID    2:部屋       3:利用者名    4:預り項目名  5:預り日付
    # 6:預り時間    7:預り対応者 8:預り数量    9:お渡し数量@ 10:誰にお渡し
    # 11:備考       12:渡した日  13:渡した時間 14:対応者     15:データID
    # 16:有効フラグ 17:処理日時
    LANG=C sort -k1,1 -k5,5                                           |
    self 1 2 3 4 5 6 8 9 10 11 15                                     |
    # 1:利用者ID 2:部屋     3:利用者名    4:預り項目名 5:預り日付
    # 6:預り時間 7:預り数量 8:お渡し数量@ 9:誰にお渡し 10:備考
    # 11:データID
    awk '{print $1,$2,$3,$4,substr($5,5,2)"/"substr($5,7,2),$6,$7,$8,$9,$10,$11}' |
    awk '{if($9=="_"){$9="@"};print}'                                         |
    awk '{if($10=="_"){$10="@"};print}'
  ;;
  * )
    cat ${tbl_dir}/${shisetsu}/AZUKARI_KOUMOKU                        |
    awk '$4!=9{print $1,$2}'                                          > $tmp-koumoku 

    cat $tmp-riyosha_status                                           |
    # 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
    self 6 5                                                          |
    LANG=C sort -k1,1                                                 |
    join1 key=1 $tmp-riyosha_kihon                                    |
    self 1 3 2                                                        > $tmp-riyosha_room
    # 1:利用者ID 2:部屋番号 3:利用者名
    if [ "${MODE}" = "shusei" ];then
      echo ${Shusei_Id}                     |
      awk '{print substr($1,1,8),substr($1,10,7),substr($1,18,4)substr($1,26,2)}'  > $tmp-ShuseiId

      Riyousha=$(self 1 $tmp-ShuseiId)
      ShuseiID=$(self 2 $tmp-ShuseiId)
      Month=$(self 3 $tmp-ShuseiId)

      # POMPAデータ呼出
      cat ${pompa_dir}/${shisetsu}/AZUKARI_TOUROKU ${pompa_dir}/${shisetsu}/${Month}.AZUKARI_TOUROKU |
      # 1:対応       2:利用者ID    3:預り項目    4:預り日付   5:預り時間
      # 6:預り対応者 7:預り数量    8:お渡し数量@ 9:誰にお渡し 10:備考
      # 11:渡した日  12:渡した時間 13:対応者     14:データID  15:有効フラグ
      # 16:処理日時
      awk '$15!=9 && $14=="'${ShuseiID}'"'                             |
      # 1:対応       2:利用者ID    3:預り項目    4:預り日付   5:預り時間
      # 6:預り対応者 7:預り数量    8:お渡し数量@ 9:誰にお渡し 10:備考
      # 11:渡した日  12:渡した時間 13:対応者     14:データID  15:有効フラグ
      # 16:処理日時
      join1 key=2 $tmp-riyosha_room                                    |
      # 1:対応        2:利用者ID    3:部屋番号   4:利用者名    5:預り項目
      # 6:預り日付    7:預り時間    8:預り対応者 9:預り数量    10:お渡し数量@
      # 11:誰にお渡し 12:備考       13:渡した日  14:渡した時間 15:対応者
      # 16:データID   17:有効フラグ 18:処理日時
      delf 1                                                           |
      # 1:利用者ID    2:部屋       3:利用者名    4:預り項目    5:預り日付
      # 6:預り時間    7:預り対応者 8:預り数量    9:お渡し数量@ 10:誰にお渡し
      # 11:備考       12:渡した日  13:渡した時間 14:対応者     15:データID
      # 16:有効フラグ 17:処理日時
      LANG=C sort -k4,4                                                 |
      join1 key=4 $tmp-koumoku                                          |
      delf 4                                                            |
      # 1:利用者ID    2:部屋       3:利用者名    4:預り項目名  5:預り日付
      # 6:預り時間    7:預り対応者 8:預り数量    9:お渡し数量@ 10:誰にお渡し
      # 11:備考       12:渡した日  13:渡した時間 14:対応者     15:データID
      # 16:有効フラグ 17:処理日時
      LANG=C sort -k1,1 -k5,5                                           |
      self 1 2 3 4 5 6 8 9 10 11 15                                     |
      # 1:利用者ID 2:部屋     3:利用者名    4:預り項目名 5:預り日付
      # 6:預り時間 7:預り数量 8:お渡し数量@ 9:誰にお渡し 10:備考
      # 11:データID
      awk '{print $1,$2,$3,$4,substr($5,5,2)"/"substr($5,7,2),$6,$7,$8,$9,$10,$11}' |
      awk '{if($9=="_"){$9="@"};print}'                                         |
      awk '{if($10=="_"){$10="@"};print}'
    else
      :
    fi
  ;;
esac                                                                  |

# sort
if [ "${FLOOR_SORT}" = "1" ];then
  LANG=C sort -k2,2n
else
  LANG=C sort -k2,2nr
fi




rm -f ${tmp}-*
exit 0

