#!/bin/bash
#
# AZUKARI_TOUROKU.TOUROKU
#
# Usage : AZUKARI_TOUROKU.SEARCH namefile datafile
#
# Written by j.aoyagi(hands lab.inc)


# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null

#--------------------ログ出力--------------------
mkdir -p /home/hands/E-LIFE/UNEI/APLOG/$(date +%Y%m%d)
exec 2> /home/hands/E-LIFE/UNEI/APLOG/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv


# 変数設定
tmp=/var/tmp/${$}

#ゴミtmpの消去
rm -f $tmp-*

#--------------------------------------------------------------
function error_exit {
  message="$1"
  echo "message ${message}"
  echo "result ng"
  rm -f $tmp-*
  exit 1
}

today="$(date +%Y%m%d)"
this_month="$(date +%Y%m)"
this_year="$(date +%Y)"
current_time="$(date "+%Y%m%d%H%M%S")"

# ディレクトリ設定
home_dir="/home/hands"
app_dir="${home_dir}/E-LIFE/UNEI"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
pompa_dir="${app_dir}/POMPA/AZUKARI_TOUROKU"
input_dir="${app_dir}/INPUT"
apptbl_dir="${app_dir}/TBL"
kyoutsu_dir="${home_dir}/E-LIFE/KYOUTSU/HTML"
tbl_dir="${home_dir}/E-LIFE/TBL/AZUKARI_TOUROKU"
hometbl_dir="${home_dir}/E-LIFE/TBL"
riyosha_dir="/DATA/E-LIFE/UNEI/RIYOUSHA"
work="${app_dir}/WORK"
idkanri_dir="/DATA/E-LIFE/UNEI/KANRI/AZUKARI_TOUROKU"

# 引数設定
namefile=${1}
checkfile=${2}
searchfile=${3}
downloadfile=${4}

# eval
eval $(name-source ${namefile})
cp ${namefile} ${work}/namefile

echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu

# 日付
cal_azukari_hiduke=$(echo $hd_azukari_hiduke | sed 's/-//g')


# 対応によって分岐
case ${TAIOU} in
  1 )
    # 登録する利用者を決める
    awk '$1~/kazu_/ && $2!="_"{print substr($1,6,8)}' ${namefile}  > $tmp-taishosha_list
    [ "$(gyo $tmp-taishosha_list)" -eq 0 ] && error_exit "対象データがありません"
    # 対象者ごとに処理を回して処理
    for member in $(yarr $tmp-taishosha_list);do
      awk '{gsub(/'$member'/,"",$1);print}' ${namefile}   |
      awk '{if($1~/biko__/){$1="biko__"};print}'          |
      awk '{if($1~/dareni_/){$1="dareni_"};print}'        > $tmp-new_name
      eval $(name-source $tmp-new_name)
    
      # 登録データ作成
      echo ${TAIOU} ${member} ${KOUMOKU} ${cal_azukari_hiduke} ${AZUKARI_TIME} ${TAIOU_USER} ${kazu_} "@" ${dareni_} ${biko__} "@" "@" "@"  > $tmp-karidata
      # 1:対応       2:利用者ID    3:預り項目    4:預り日付   5:預り時間
      # 6:預り対応者 7:預り数量    8:お渡し数量@ 9:誰にお渡し 10:備考
      # 11:渡した日  12:渡した時間 13:対応者
    
      if [ -n "${Shusei_Id}" -a "${Shusei_Id}" != "_" ];then
        new_num=$(echo ${Shusei_Id} | awk '{print substr($1,10,7)}')
      else
        # データIDを発行して保存
        if [ -e "${idkanri_dir}/${shisetsu}/ID" ];then
          new_num="$(getno -s 1 ${idkanri_dir}/${shisetsu}/ID)"
          echo ${new_num} > ${tmp}-new_num
          mv ${tmp}-new_num ${idkanri_dir}/${shisetsu}/ID
        else
          [ ! -e ${idkanri_dir}/${shisetsu} ] && mkdir -p ${idkanri_dir}/${shisetsu}
          new_num="$(echo "0000001")"
          echo ${new_num} > ${idkanri_dir}/${shisetsu}/ID
        fi
      fi
    
      awk '{print $0,"'${new_num}'","1","'${current_time}'"}' $tmp-karidata  |
      # 数量が0だったら削除フラグ
      awk '{if($7==0){$15=9};print}'                                         > $tmp-member_data
      # 1:対応       2:利用者ID    3:預り項目    4:預り日付   5:預り時間
      # 6:預り対応者 7:預り数量    8:お渡し数量@ 9:誰にお渡し 10:備考
      # 11:渡した日  12:渡した時間 13:対応者     14:データID  15:有効フラグ
      # 16:処理日時

      cat $tmp-member_data
    done                                  > $tmp-input
    # 列数チェック
    [ "$(retu $tmp-input)" -ne 16 ] && error_exit "データ不正"
    
    # inputデータ保存
    mkdir -p ${input_dir}/${today}
    cp -p ${tmp}-input ${input_dir}/${today}/AZUKARI_TOUROKU.${current_time}.${userid}.$(basename ${0}).${HOSTNAME}.${$}
    
    # POMPAデータ保存
    save_month=$(echo ${cal_azukari_hiduke} | awk '{print substr($1,1,6)}')
    mkdir -p ${pompa_dir}/${shisetsu}
    
    lock_file=${pompa_dir}/${shisetsu}/AZUKARI.LOCK
    lockfile -1 -r 3 -l 10 ${lock_file} || error_exit "処理の途中でエラーが発生しました"
    
    if [ -e ${pompa_dir}/${shisetsu}/AZUKARI_TOUROKU ];then
      cat ${pompa_dir}/${shisetsu}/AZUKARI_TOUROKU ${tmp}-input |
      self 1 2 14 16 3/13 15                                    |
      LANG=C sort -k1,4                                         |
      getlast 1 3                                               |
      self 1 2 5/15 3 16 4                                      |
      LANG=C sort -k1,1n
    else
      cat ${tmp}-input
    fi                                                          > ${tmp}-pompa
    cp -p ${tmp}-pompa ${pompa_dir}/${shisetsu}/AZUKARI_TOUROKU
    # ロック解除
    rm -f ${lock_file}
    unset lock_file
  ;;
  2 )
    # 修正するデータを呼び出して処理
    awk '$1~/watasita_kazu_/ && $2!="_"{print substr($1,15,7)}' ${namefile}  > $tmp-taisho_list
    [ "$(gyo $tmp-taisho_list)" -eq 0 ] && error_exit "対象データがありません"

    for dataNo in $(yarr $tmp-taisho_list);do
      
      member=$(cat ${pompa_dir}/${shisetsu}/AZUKARI_TOUROKU | awk '$15!=9 && $14=="'${dataNo}'"{print $2}')
      
      awk '{gsub(/'$member'/,"",$1);print}' ${namefile}   |
      awk '{gsub(/'$dataNo'/,"",$1);print}'               > $tmp-new_name
      eval $(name-source $tmp-new_name)

      # 登録データ作成
      if [ -n "${Shusei_Id}" -a "${Shusei_Id}" != "_" ];then
        MONTH="$(echo ${Shusei_Id} | awk '{print substr($1,18,4)substr($1,26,2)}')"
        MEMBER=$(echo ${Shusei_Id} | awk '{print substr($1,1,8)}')
        biko__=$(awk '$1~/biko_/{print $2}' $tmp-new_name)
        cat ${pompa_dir}/${shisetsu}/${MONTH}.AZUKARI_TOUROKU | awk '$15!=9 && $14=="'${dataNo}'"'    
      else
        cat ${pompa_dir}/${shisetsu}/AZUKARI_TOUROKU | awk '$15!=9 && $14=="'${dataNo}'"'
      fi                                                                                       > $tmp-keika_data
      # 1:対応       2:利用者ID    3:預り項目    4:預り日付   5:預り時間
      # 6:預り対応者 7:預り数量    8:お渡し数量@ 9:誰にお渡し 10:備考
      # 11:渡した日  12:渡した時間 13:対応者     14:データID  15:有効フラグ
      # 16:処理日時

      # 完了したらTAIOUのステータスを変える
      BUTACHECK=$(self 7 $tmp-keika_data | awk '{print $1,"'${watasita_kazu_}'"}' | lcalc '$1-$2')
      [ "${BUTACHECK}" -ne 0 ] && TAIOU=1

      awk '{$1="'${TAIOU}'";$8="'${watasita_kazu_}'";$9="'${dareni_}'";$10="'${biko__}'";$11="'${cal_azukari_hiduke}'";$12="'${AZUKARI_TIME}'";$13="'${TAIOU_USER}'";$16="'${current_time}'";print}' $tmp-keika_data  > $tmp-new_pompa

      cat $tmp-new_pompa

    done                                   > $tmp-input
    # 列数チェック
    [ "$(retu $tmp-input)" -ne 16 ] && error_exit "データ不正"
    
    for dataNo in $(yarr $tmp-taisho_list);do

      awk '$14=="'${dataNo}'"' $tmp-input     > $tmp-save_data
      self 7 8 $tmp-save_data                 > $tmp-check_data
      CHECK=$(cat $tmp-check_data | lcalc '$1-$2')
      save_month=$(self 4 $tmp-save_data | awk '{print substr($1,1,6)}')
      if [ "${CHECK}" -ne 0 ];then
        lock_file=${pompa_dir}/${shisetsu}/AZUKARI.LOCK
        lockfile -1 -r 3 -l 10 ${lock_file} || error_exit "処理の途中でエラーが発生しました"
        
        if [ -e ${pompa_dir}/${shisetsu}/AZUKARI_TOUROKU ];then
          cat ${pompa_dir}/${shisetsu}/AZUKARI_TOUROKU ${tmp}-save_data |
          self 1 2 14 16 3/13 15                                    |
          LANG=C sort -k1,4                                         |
          getlast 1 3                                               |
          self 1 2 5/15 3 16 4                                      |
          LANG=C sort -k1,1n
        else
          cat ${tmp}-save_data
        fi                                                          > ${tmp}-pompa
        cp -p ${tmp}-pompa ${pompa_dir}/${shisetsu}/AZUKARI_TOUROKU
        # ロック解除
        rm -f ${lock_file}
        unset lock_file
      else
        # 完了したから預かり中ファイルから除外
        awk '$14!="'${dataNo}'"' ${pompa_dir}/${shisetsu}/AZUKARI_TOUROKU                    > $tmp-koushin_pompa
        lock_file=${pompa_dir}/${shisetsu}/AZUKARI.LOCK
        lockfile -1 -r 3 -l 10 ${lock_file} || error_exit "処理の途中でエラーが発生しました"
      
        cp -p ${tmp}-koushin_pompa ${pompa_dir}/${shisetsu}/AZUKARI_TOUROKU
        # ロック解除
        rm -f ${lock_file}
        unset lock_file

        # 完了データのPOMPAデータ保存
        mkdir -p ${pompa_dir}/${shisetsu}
        
        lock_file=${pompa_dir}/${shisetsu}/AZUKARI.LOCK
        lockfile -1 -r 3 -l 10 ${lock_file} || error_exit "処理の途中でエラーが発生しました"
        
        if [ -e ${pompa_dir}/${shisetsu}/${save_month}.AZUKARI_TOUROKU ];then
          cat ${pompa_dir}/${shisetsu}/${save_month}.AZUKARI_TOUROKU ${tmp}-save_data |
          self 1 2 14 16 3/13 15                                    |
          LANG=C sort -k1,4                                         |
          getlast 1 3                                               |
          self 1 2 5/15 3 16 4                                      |
          LANG=C sort -k1,1n
        else
          cat ${tmp}-save_data
        fi                                                                              > ${tmp}-pompa
        cp -p ${tmp}-pompa ${pompa_dir}/${shisetsu}/${save_month}.AZUKARI_TOUROKU
        # ロック解除
        rm -f ${lock_file}
        unset lock_file

      fi
    done

    # inputデータ保存
    mkdir -p ${input_dir}/${today}
    cp -p ${tmp}-input ${input_dir}/${today}/AZUKARI_TOUROKU.${current_time}.${userid}.$(basename ${0}).${HOSTNAME}.${$}
  ;;
esac



echo "result ok"


rm -f ${tmp}-*
exit 0

