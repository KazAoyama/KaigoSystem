#!/bin/bash
#
# GENKIN_KANRI.TOUROKU :
#
# Usage : GENKIN_KANRI.TOUROKU
#
# Written by aoyagi


#--------------------------------------------------------------
# ログ
source /home/hands/E-LIFE/UNEI/CGI/AZUKARIHIN.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null
mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).$HOSTNAME.$(date +%Y%m%d) ; set -xv

rm -f $tmp-*


#--------------------------------------------------------------
function error_exit {
  message="$1"
  echo "message ${message}"
  echo "result ng"
  rm -f $tmp-*
  exit 1
}
function error_unlock {
  message="$1"
  cat $tmp-target-table |
  while read table base ;do
    rm -f $lock_dir/$base.lock
  : ;done
  error_exit ${message}
}
#--------------------------------------------------------------

#---- 処理日時 ----
sdaytime=$(date +%Y%m%d%H%M%S)


# 引数設定
namedata=$1
cp $namedata ${work}/namefile

# デフォルト値セット

#--------------------------------------------------------
# 必要な値の取得
input_tatekae_check=0
input_seikyu_check=0
eval $(name-source ${namedata})
[ ${input_shunyu_su} = "_" ]&&input_shunyu_su=0
[ ${input_shunyu_kingaku} = "_" ]&&input_shunyu_kingaku=0
[ ${input_shishutsu_su} = "_" ]&&input_shishutsu_su=0
[ ${input_shishutsu_kingaku} = "_" ]&&input_shishutsu_kingaku=0
#--------------------------------------------------------
if [ ${MODE} = "delete" ];then
  FLAG="9"
else
  FLAG="1"
fi

if [ $MODE = "new_touroku" ];then
  if [ -e ${idkanri_dir}/GENKIN_KANRI ];then
    ShuseiId=$(getno -s 1 ${idkanri_dir}/GENKIN_KANRI)
    echo $ShuseiId > $tmp-new_num
    mv $tmp-new_num ${idkanri_dir}/GENKIN_KANRI
  else
    ShuseiId="000001"
    echo $ShuseiId > $tmp-new_num
    mv $tmp-new_num ${idkanri_dir}/GENKIN_KANRI1
  fi
else
  :
fi
# データ作成
echo "$ShuseiId $input_riyosha_floor $input_riyosha_room $input_riyosha_id $input_kubun $input_kubun $nengappi $input_shunyu_su $input_shunyu_kingaku $input_shishutsu_su $input_shishutsu_kingaku $userid 1 0 0 $input_tatekae_check 0 $input_seikyu_check $input_biko $FLAG $sdaytime $userid" > $tmp-koushin_input
# 1:現金管理id          2:フロア            3:居室          4:入居者id    5:立替項目id
# 6:立替項目id          7:日付              8:収入数        9:収入金      10:支出数
# 11:支出金額           12:対応者id         13:印刷対象区分 14:印刷済区分 15:申込書番号
# 16:立替金移行対象区分 17:立替金移行済区分 18:請求対象区分 19:備考       20:有効フラグ
# 21:更新時間           22:userid

#--------------------------------------------------------------
# 列数チェック
[ $(retu $tmp-koushin_input) -ne 22 ] && : > $tmp-err
[ -e $tmp-err ] && error_unlock "列数エラー"
## error_exit ではなく error_unlock である点に注意！
# 更新対象ファイルのリスト化

# 1:ファイルのパス 2:ファイル名
## ロックファイル作成用テーブル
## POMPAファイルがPOMPA直下でなく、店などのサブディレクトリ配下にいる場合には
## 1フィールド目が「${TEN_CODE}/SAMPLE_DATA」などになる
cat <<- FIN | LANG=C sort -u > $tmp-target-table
GENKIN_KANRI GENKIN_KANRI
FIN

input_detail_dir=GENKIN_KANRI/${shisetsu}
month=$(echo $nengappi | awk '{print substr($1,1,4)substr($1,6,2)}')
# 1:tmpファイル名 2:更新ファイル名 3:キーフィールド 4:更新時>間フィールド 5:全体列数
# 6:POMPA場所     7:INPUT場所
## 更新ファイルの作成とチェック用のテーブル
## 6/7フィールド目は、アプリ間連携で別アプリの配下にあるINPUTを更新する場合用
cat <<- FIN > $tmp-koushin_pompa
koushin GENKIN_KANRI_${month} 1 21 22 ${pompa_dir}/GENKIN_KANRI/${shisetsu}/${month} ${input_dir}
FIN

# 1:tmpファイル名 2:更新ファイル名 3:キーフィールド 4:更新時間フィールド 5:全体列数
# 6:POMPA場所     7:INPUT場所
## 更新ファイルの作成とチェック用のテーブル
## 6/7フィールド目は、アプリ間連携で別アプリの配下にあるINPUTを更新する場合用


#--------------------------------------------------------------
# データロック
#$function_dir/FUNCTION.LOCK_CHECK $tmp-target-table
#if [ $? -ne 0 ]; then
  # エラー（ロックに失敗）
#  error_unlock "ロック処理失敗"
  ## error_exit ではなく error_unlock である点に注意！
#fi
cat $tmp-target-table |
while read table base ;do
   mkdir -p $tmplock_dir/$table
   lockfile -1 -r 3 -l 10 $tmplock_dir/$table/$base.lock
   [ $? -ne 0 ] && :> $tmp-err
   [ -e $tmp-err ] && break;
: ; done

[ -e $tmp-err ] && error_exit "ロック処理に失敗しました。"
#--------------------------------------------------------------

#--------------------------------------------------------------
# 更新版作成
# POMPAと指定されたキー項目をつかってマージする
#--------------------------------------------------------------
#--------------------------------------------------------------

#--------------------------------------------------------------

#--------------------------------------------------------------
# 更新
cat $tmp-koushin_pompa         |
while read input_name file_name sort_key time_key retu_no pompa_dir_name input_dir_name ; do
  mkdir -p ${pompa_dir_name}
  mkdir -p ${input_dir_name}
  mkdir -p ${input_dir_name}/${today}/${input_detail_dir}

  cat ${pompa_dir_name}/${file_name} |
  awk '{if($1=="'${ShuseiId}'"){$(NF-2)=9};print}' |
  cat - $tmp-${input_name}_input |
  LANG=C sort -k1,1 -k21,21 |
  getlast 1 1               > $tmp-pompa_new
  cp -f $tmp-pompa_new ${pompa_dir_name}/${file_name}
  mv -f $tmp-${input_name}_input ${input_dir_name}/${today}/${input_detail_dir}/${file_name}.${cur_time}.$(basename $0).$$
done
#--------------------------------------------------------------

#--------------------------------------------------------------
# ロックの解除
cat $tmp-target-table |
while read table base ;do
  rm -f $tmplock_dir/$table/$base.lock
: ;done
#--------------------------------------------------------------

echo "result ok"

rm -f ${tmp}-*
exit 0
