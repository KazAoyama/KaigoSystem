#!/bin/bash
#
# KIHONJYOUHOU_ICHIRAN.DISPLAY
# 基本情報一覧ディスプレイCGI
#
# Written by Y.kashiyama :2014/03/11

exec 2> /home/hands/E-LIFE/UNEI/APLOG/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv

# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null
source /home/hands/E-LIFE/UNEI/CGI/UNEI.INI &> /dev/null

# 変数設定
tmp=/var/tmp/${$}

#ゴミtmpの消去
rm -f $tmp-*

# ディレクトリ設定
tbl_dir="/home/hands/E-LIFE/TBL"
cgi_name="$(basename ${0})"
kengen_dir="/home/hands/E-LIFE/TBL/KENGEN_KANRI"
#-------------------------------------------------------------
# 変数の定義
namedata="$1"
checkfile="$2"
searchfile="$3"
downloadfile="$4"
#-------------------------------------------------------------
#-------------------------------------------------------------
# 必要な値の取得
eval $(name-source ${namedata})
#-------------------------------------------------------------
#-------------------------------------------------------------
# ユーザー名取得
#[ ! -z "$USER_ID" ] && USER_NAME="$(grep "^$USER_ID " ${tbl_dir}/JYUGYOIN_NAME | awk '{print $2}')"
USERID="$(nameread "userid" $namedata)"
USERNAME="$(awk '$1=="'${USERID}'"{print $2}' ${tbl_dir}/JYUUGYOUIN_MASTER/USER_MASTER | head -1)"
SHISETSUID="$(nameread "shisetsu" $namedata)"
#"${shisetsu}"
 if [ "$(echo "${SHISETSUID}" | awk '{print substr($1,1,1)}')" = "1" ] ; then
    SHISETSUNAME="$(awk '$1=="'${SHISETSUID}'"{print $2}' ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER | head -1)"
  else
    SHISETSUNAME="$(awk '$1=="'${SHISETSUID}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON | head -1)"
  fi
[ -z "${MODE}" -o "${MODE}" = "_" ] && MODE="init"
#-------------------------------------------------------------
if [ -z ${downloadfile} ];then
  FILE_NAME="null"
elif [ $(cat ${downloadfile}) == "zero" ];then
  FILE_NAME="null"
  # 検索結果がゼロであればメッセージ表示
cat <<- FIN > $tmp-html2
  <script type="text/javascript" language="javascript">
    alert('抽出データがありません');
  </script>
FIN
else
  file=$(cat ${downloadfile})
  FILE_NAME="\"/E-LIFE/UNEI/DOWNLOAD/${file}\""
fi

#共通ヘッダー-------------------------------------------------------

# ログインUSER名と施設の取得
cat /home/hands/E-LIFE/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
tee ${tmp}-jugyoin        |
# 1:USER_ID 2:ユーザー名
awk '$1=="'${userid}'"'   |
# 1:USER_ID 2:ユーザー名
self 2                                             > ${tmp}-usermei
#-----------------------------------------------------------

self 1 2 /home/hands/E-LIFE/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 /home/hands/E-LIFE/TBL/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst

cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst


# 施設名はログインユーザーの権限のある施設を取得
cat /home/hands/E-LIFE//SYSTEM_SETTEI/POMPA/KENGEN_KANRI/USER_KENGEN/${userid}.USER_KENGEN |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
 # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}' 
fi  > ${tmp}-shisetsu_kengen

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou
#-----------------------------------------

#select_shisetsu=$(awk '$1=="'${SHISETSUID}'"{print $2}' ${tmp}-shisetsu_kengen)
#select_shisetsu="${SHISETSUNAME}"
#awk '$1!="'${SHISETSUID}'"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou

#-----------------------------------------------------------
Shisetsu="$(nameread "Shisetsu" $namedata)"
[ -z "${Shisetsu}" -o "${Shisetsu}" = "_" ] && Shisetsu="$(nameread "shisetsu" $namedata)"
Tateya="$(nameread "Tateya" $namedata)"
[ -z "${Tateya}" -o "${Tateya}" = "_" ] && Tateya="_"

# MODEがinitだったら渡ってきたネームをクリア
if [ "${MODE}" = "init" ];then
  Tateya="_"
  Floor="_"
  Unit="_"
  Kyoshitsu=""
  Nyuukyosha=""
  Keiyaku=""
  KeiyakukaishibiFrom=""
  KeiyakukaishibiTo=""
  KeiyakukaishibiFrom=""
  KeiyakukaishibiTo=""
  KeiyakuendbiFrom=""
  KeiyakuendbiTo=""
  KeiyakuendbiFrom=""
  KeiyakuendbiTo=""
  Tokuhan=""
  RiyouStatus="01"
  HyoujiJyun=""
  HyoujiShoukou=""
  Shisetsu="${SHISETSUID}"
  Keyword=""
  PAGE="1"
  # デフォルトメッセージを作成
  echo "###DEFAULT_MES###" "条件を設定して「検索」ボタンをクリックしてください" >> ${tmp}-calsed1
else
  if [ "$(gyo ${searchfile})" = "0" ];then
    echo "###DEFAULT_MES###" "データがありません" >> ${tmp}-calsed1
  else
    echo "###DEFAULT_MES###" "" >> ${tmp}-calsed1
  fi
fi

  [ -z "${Shisetsu}" -o "${Shisetsu}" = "9999" ] && Shisetsu="_"
  [ -s "${tmp}-shisetsu_kengen" -a "${Shisetsu}" = "_" ] && Shisetsu="$(head -1 ${tmp}-shisetsu_kengen | self 1)"

# 建屋がなければUser所属建屋
[ "${Shisetsu}" != "_" -a "${Tateya}" = "_" ] && Tateya="$(awk '$1=="'${USERID}'"&&$2=="'${Shisetsu}'"{print $3}' ${tbl_dir}/JYUUGYOUIN_MASTER/USER_SHISETSU)"
# 建屋がなければデフォルトシニア
[ "${Shisetsu}" != "_" -a "${Tateya}" = "_" ] && Tateya=$(awk '$1=="'${Shisetsu}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR | LANG=C sort |uniq |head -1)


# SHISETSU_TATEYA_FLOOR_ROOMのマスタ準備
echo $Shisetsu > $tmp-shisetsu
cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM               |
# 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
join0 key=1 $tmp-shisetsu                                    |
awk '$9=="1"'                                                > $tmp-shisetsu_tateya_floor_id

# 建屋準備
cat ${tbl_dir}/SHISETSU_MASTER/TATEYA_NAME                   |
self 1 3                                                     > $tmp-tateya_master

# ユニットマスタの準備
cat ${tbl_dir}/SHISETSU_MASTER/UNIT_NAME                     |
self 1 2                                                     > $tmp-unit_master

# 利用者マスタの準備
cat ${riyosha_dir}/RIYOUSHA_MASTER                           |
self 1 2                                                     > $tmp-riyosha_master

# SHISETSU_RIYOSHA_STATUSの準備
cat ${riyosha_dir}/SHISETSU_RIYOUSHA_STATUS                  |
# 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
# 初期表示は本日入居者
if [ "${Shisetsu}" != "0000" ] ; then
  join0 key=1 $tmp-shisetsu
else
  cat -
fi |
awk '$8>="'${today}'" && $(NF-2)!="9"'                       |
LANG=C sort -u -k1,3n -k4,4n -k6,6n                          > $tmp-riyosha_status

# JIGYOUSHO_RIYOUSHA_STATUSの準備
cat ${riyosha_dir}/JIGYOUSHO_RIYOUSHA_STATUS                 |
# 1:事業所ID 2:入居者ID 3:契約開始日 4:契約終了日
LANG=C sort                                                  |
if [ "${Shisetsu}" != "0000" ] ; then
  join0 key=1 $tmp-shisetsu
else
  cat -
fi |
awk '$4>"'${today}'" && $(NF-2)!="9"{print $1,$2}'          > $tmp-jigyousho_status


# 事業所選択の表示
JIGYOUSHOHANTEI=$(echo ${SHISETSUID} | awk '{print substr($1,1,1)}')
#----------------------
# 施設選択されていない(初期状態)はログイン施設をセット
#----------------------
[ -z "${Shisetsu}" -o "${Shisetsu}" = "_" -a "${JIGYOUSHOHANTEI}" -eq "0" ] && Shisetsu="${SHISETSUID}"
[ "${Jigyousho}" = "_" -a "${JIGYOUSHOHANTEI}" = "1" ] && Jigyousho=$(echo ${SHISETSUID})

  # 事業所名
  cat ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER |
  # 1:グループ事業所ＩＤ 2:グループ事業所名 3:電話番号 4:住所   5:金融機関コード
  # 6:金融機関支店コード 7:口座区分         8:口座番号 9:口座名
  awk '$(NF-2)!="9"{print $1,$2}'                        > $tmp-jigyousho_name
#  awk '{if($1=="'${Jigyousho}'"){print $0,"selected"}
#      else{print $0,"@"}
#      }'                                                 > $tmp-jigyousho_name
  # 1:グループ事業所ＩＤ 2:グループ事業所名 3:Selected

  # 施設名
  cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON      |
  awk '$1!="1000"&&$(NF-2)!="9"{print $1,$2}'        |
  cat - $tmp-jigyousho_name                          > ${tmp}-shisetsu_jigyousho_name

# 施設名はログインユーザーの権限のある施設を取得
cat ${system_settei_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
awk '$7=="KEIYAKUJYOUHOU_ICHIRAN.CGI"{print $0}'              |
LANG=C sort -u -k2,2n                                         |
self 1 2                                                      > ${tmp}-keiyaku_kengen
# 1:userid 2:SHISETSU_ID

if [ "$(cat ${tmp}-keiyaku_kengen | getfirst 1 1 | self 2)" = "0000" ];then
  cat ${tmp}-shisetsu_jigyousho_name             |
  awk 'BEGIN{print "0000","全て"}{print $0}'     |
  awk '{print $0,"'${Shisetsu}'"}'               |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-shisetsu_jigyousho_name            |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 - ${tmp}-keiyaku_kengen           |
  delf 1                                        |
  awk 'BEGIN{print "0000","全て"}{print $0}'    |
  awk '{print $0,"'${Shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu
fi

if [ "${Shisetsu}" != "0000" ] ; then

# 建屋の取得
if [ -n "${Tateya}" -a "${Tateya}" != "_" ];then
  cat $tmp-shisetsu_tateya_floor_id                            |
  # 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  self 2                                                       |
  LANG=C sort -u -k1,1n                                        |
  join1 key=1 $tmp-tateya_master                               |
  awk '{print $0,"'${Tateya}'"}'                               |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}' > $tmp-tateya_name
else
  cat $tmp-shisetsu_tateya_floor_id                            |
  # 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  self 2                                                       |
  LANG=C sort -u -k1,1n                                        |
  join1 key=1 $tmp-tateya_master                                 > $tmp-tateya_name
fi


# フロアの取得
      #建屋が選択されずに自動的に何かを指している場合それをtateyaにする
      if [ "${Tateya}" = "" -o "${Tateya}" = "_" ] ;then
         if [ $(awk '$3=="selected"' $tmp-tateya_name | gyo ) = "1" ] ;then
            Tateya=$(awk '$3=="selected"{print $1}' $tmp-tateya_name)
         else
         #何も選択していなくても表示されてるのは一番上
            Tateya=$(head -1 $tmp-tateya_name | self 1)
         fi
      fi
if [ -n "${Floor}" -a "${Floor}" != "_" ];then
  echo "_" "全て"                                              > $tmp-all_floor
  cat $tmp-shisetsu_tateya_floor_id                            |
# 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  awk '$2=="'${Tateya}'"'                                      |
  self 3                                                       |
  LANG=C sort -u -k1,1n                                        |
  awk '{print $1,$1"F"}'                                       |
  cat $tmp-all_floor -                                         |
  awk '{print $0,"'${Floor}'"}'                                |
# 1:FLOOR_CODE 2:floor_name
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'   > ${tmp}-floor_name
else
  echo "_" "全て"                                              > $tmp-all_floor
  cat $tmp-shisetsu_tateya_floor_id                            |
# 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  awk '$2=="'${Tateya}'"'                                      |
  self 3                                                       |
  LANG=C sort -u -k1,1n                                        |
  awk '{print $1,$1"F"}'                                       |
  cat $tmp-all_floor -                                         > ${tmp}-floor_name
fi

# 入居名の取得
if [ -n "${Nyuukyosha}" -a "${Nyuukyosha}" != "_" ];then
  echo "_" "全て"                                                  > $tmp-all
  cat $tmp-riyosha_status                                           |
# 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
  awk '$2=="'${Tateya}'"'                                           |
#  self 6                                                            |
  LANG=C sort -k6,6n                                                |
  join1 key=6 $tmp-riyosha_master                                   |
#  cat $tmp-all -                                                    |
  awk '{print $6,$7,$1$5,"'${Nyuukyosha}'"}'                                |
# 1:RIYOSHA_CODE 2:RIYOSHA_NAME 3:施設居室 4:nyuukyosha
  LANG=C sort -k3,3 |
  awk '{if($1==$4){print $1,$2,"selected"}else{print $1,$2,""}}'    |
  cat $tmp-all -                                                    > ${tmp}-nyuukyosha
else
  echo "_" "全て"                                                  > $tmp-all
  cat $tmp-riyosha_status                                           |
# 1:施設id 2:建屋 3:フロア 4:ユニット 5:部屋番号 6:利用者id
  awk '$2=="'${Tateya}'"'                                           |
#  self 6                                                            |
  LANG=C sort -k6,6n                                                |
  join1 key=6 $tmp-riyosha_master                                   |
#  cat $tmp-all -                                                    |
  awk '{print $6,$7,$1$5,"'${Nyuukyosha}'"}'                             |
  LANG=C sort -k3,3 |
  awk '{if($1==$4){print $1,$2,$3,"selected"}else{print $1,$2,$3,""}}'   |
  cat $tmp-all -                                                         > ${tmp}-nyuukyosha
fi

# ユニットの取得
if [ -n "${Unit}" -a "${Unit}" != "_" ];then
  echo "_" "全て"                                              > $tmp-all_unit
  cat $tmp-shisetsu_tateya_floor_id                            |
# 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  awk '$2=="'${Tateya}'"'                                      |
  awk '$3=="'${Floor}'"'                                       |
  self 4                                                       |
# 1:UNIT_CODE 2:UNIT_NAME
  LANG=C sort -u -k1,1n                                        |
  join1 key=1 $tmp-unit_master                                 |
  cat $tmp-all_unit -                                          |
  awk '{print $0,"'${Unit}'"}'                                 |
# 1:UNTI_CODE 2:unit_name
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'   > ${tmp}-unit_name
else
  echo "_" "全て"                                              > $tmp-all_unit
  cat $tmp-shisetsu_tateya_floor_id                            |
# 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  awk '$2=="'${Tateya}'"'                                      |
  self 4                                                       |
# 1:UNIT_CODE 2:UNIT_NAME
  LANG=C sort -u -k1,1n                                        |
  join1 key=1 $tmp-unit_master                                 |
  cat $tmp-all_unit -                                          > $tmp-unit_name
fi

# 居室の取得
if [ -n "${Kyoshitsu}" -a "${Kyoshitsu}" != "_" ];then
  echo "_" "全て"                                              > $tmp-all_kyoshitsu
  cat $tmp-shisetsu_tateya_floor_id                            |
# 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  awk '$2=="'${Tateya}'" || $3=="'${Floor}'"' |
  self 5                                                       |
  LANG=C sort -u -k1,1n                                        |
  awk '{print $1,$1}'                                    |
  cat $tmp-all_kyoshitsu -                                     |
  awk '{print $0,"'${Kyoshitsu}'"}'                            |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}' > ${tmp}-kyoshitsu_name
else
  echo "_" "全て"                                              > $tmp-all_kyoshitsu
  cat $tmp-shisetsu_tateya_floor_id                            |
# 1:施設id 2:建屋id 3:フロア 4:ユニットid 5:居室 6・・・
  awk '$2=="'${Tateya}'"'                                      |
  self 5                                                       |
  LANG=C sort -u -k1,1n                                        |
  awk '{print $1,$1}'                                    |
  cat $tmp-all_kyoshitsu -                                          > $tmp-kyoshitsu_name
fi
else
 :
fi

JIGYOUSHO_FLG=$(echo "${Shisetsu}" | awk '{print substr($1,1,1)}')

#  if [ ${JIGYOUSHO_FLG} = "1" -o ${SHISETSUID} = "0000" ]; then
  if [ ${JIGYOUSHO_FLG} = "1" ]; then

    # 建屋
    echo "@ @ @" > $tmp-tateya_name
    # フロア
    echo "@ @ @" > $tmp-floor_name
    # ユニット
    echo "@ @ @" > $tmp-unit_name
    # 居室
    echo "@ @ @" > $tmp-kyoshitsu_name
    # 入居者
    echo "_" "全て"                    > $tmp-all
    self 2 $tmp-jigyousho_status                             |
    # 1:施設id 2:利用者ID
    LANG=C sort                                                |
    join1 key=1 $tmp-riyosha_master                            |
    cat $tmp-all -                                             |
    awk '{print $0,"'${Nyuukyosha}'"}'                         |
    tee $tmp-nannnannnan |
# 1:RIYOSHA_CODE 2:RIYOSHA_NAME 3:nyuukyosha
    awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}' > $tmp-riyosha

  elif [ ${Shisetsu} = "0000" ] ; then
    # 建屋
    echo "@ @ @" > $tmp-tateya_name
    # フロア
    echo "@ @ @" > $tmp-floor_name
    # ユニット
    echo "@ @ @" > $tmp-unit_name
    # 居室
    echo "@ @ @" > $tmp-kyoshitsu_name
    # 入居者
    echo "_" "全て"                    > $tmp-all

    # 全ての施設・事業所の権限があったら
    if [ "$(self 2 ${tmp}-kengen | head -1)" = "0000" ] ; then
      self 1 5 6 $tmp-riyosha_status       > $tmp-riyousha_1
      awk '{print $1,"_",$2}' $tmp-jigyousho_status     |
      cat $tmp-riyousha_1 -            |
#      LANG=C sort -u                   |
      LANG=C sort -k3,3                |
      getfirst 3 3                     |
      LANG=C sort                      |
      self 3                           |
      cjoin1 key=1 $tmp-riyosha_master -  |
#      head -300                        |
      cat $tmp-all -                   |
      
      awk '{if($1=="'${Nyuukyosha}'"){print $0,"selected"}
            else{print $0,"_"}
           }'                          > $tmp-riyosha
    # 一部の施設・事業所に権限があったら
    else
      self 2 $tmp-kengen               > $tmp-kengen_shisetsu
      join1 key=1 $tmp-kengen_shisetsu $tmp-riyosha_status   |
      self 6                           > $tmp-riyousha_1
      join1 key=1 $tmp-kengen_shisetsu $tmp-jigyousho_status |
      self 2                           |
      cat $tmp-riyousha_1 -            |
      LANG=C sort -u                   |
      join1 key=1 $tmp-riyosha_master  |
#      head -300                        |
      cat $tmp-all -                   |
      awk '{if($1=="'${Nyuukyosha}'"){print $0,"selected"}
            else{print $0,"_"}
           }'                          > $tmp-riyosha
    fi
   else
    :
   fi

if [ -s $tmp-riyosha ] ; then
  cat $tmp-riyosha    |
  uniq                |
  head -500        > $tmp-nyuukyosha_500
else
  cat $tmp-nyuukyosha  |
  uniq                 |
  head -500        > $tmp-nyuukyosha_500
fi
###################
# 契約種類
###################
if [ "${Shisetsu}" != "0000" ] ; then
  cat ${tbl_dir}/KEIYAKU_MASTER/SHISETSU_KEIYAKU_MASTER |
# 1:施設/事業所名 2:契約ID 3:有効フラグ

  # 施設番号が一致し、有効フラグが1:有効なもの
  awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"&&$(NF-2)!="2"{print $2}'  |
  LANG=C sort -u                                                  |
  join1 key=1 ${tbl_dir}/KEIYAKU_MASTER/KEIYAKU_NAME -            
else
  cat ${tbl_dir}/KEIYAKU_MASTER/SHISETSU_KEIYAKU_MASTER |
  awk '$(NF-2)!="9"&&$(NF-2)!="2"{print $2}'             |
  LANG=C sort -u                                        |
  join1 key=1 ${tbl_dir}/KEIYAKU_MASTER/KEIYAKU_NAME -
fi |
awk '{if($1=="'${Keiyaku}'"){print $1,$2,"selected"}
      else{print $1,$2,"@"}}'                                   |
awk 'BEGIN{print "@ 全て @"}{print $1,$2,$3}' > $tmp-keiyaku_syurui

###################
# 特販名
###################
cat ${tbl_dir}/RIYOURYOU_MASTER/TOKUHAN_SHUBETSU                |
if [ "${Shisetsu}" = "0000" ] ; then
#   self 2 3 |
   awk '$(NF-2)!="9"&&$(NF-2)!="2"{print $2,$3}'                 |
   LANG=C sort -u
else
   awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"&&$(NF-2)!="2"{print $2,$3}'
fi |
awk '{if($1=="'${Tokuhan}'"){print $1,$2,"selected"}
      else{print $1,$2,"@"}}'                                   |
awk 'BEGIN{print "@ 全て @"}{print $1,$2,$3}'              > $tmp-tokuhan

###################
# 利用状態
###################
cat << FIN | awk '{if($1=="'${RiyouStatus}'"){print $1,$2,"selected"}else{print $1,$2,"@"}}' | awk 'BEGIN{print "@ 全て"}{print $1,$2,$3}' > ${tmp}-riyou_status
01 有効
02 終了
FIN

###################
# 表示順
###################
#cat << FIN | awk '{if($1=="'${HyoujiJyun}'"){print $1,$2,"selected"}else{print $1,$2,"@"}}' | awk 'BEGIN{print "@ 全て @"}{print $1,$2,$3}' > ${tmp}-hyouji_jun
cat << FIN | awk '{if($1=="'${HyoujiJyun}'"){print $1,$2,"selected"}else{print $1,$2,"@"}}'  > ${tmp}-hyouji_jun
01 居室番号
02 入居者名
03 契約開始日
04 契約終了日
05 契約種類
FIN




case "${MODE}" in

  # 初期表示
  init)
   # 空のリストデータを作成する
   : > $tmp-listdata

  ;;

  # 検索結果表示
  search | excel_out )
    cat ${searchfile} |
    # 1:施設ID      2:建屋ID      3:居室ID        4:標準賃料    5:利用者(入居者)ID
    # 6:契約ID      7:利用者名    8:施設名        9:フロアID    10:ユニットID
    # 11:入居時年齢 12:契約種類ID 13:契約名称     14:契約日     15:引渡し日
    # 16:契約開始日 17:契約終了日 18:退去理由     19:退去理由名 20:退去理由詳細
    # 21:備考       22:予備1      23:予備2        24:予備3      25:予備4
    # 26:予備5      27:削除フラグ 28:更新日       29:更新者     30:特販ID
    # 31:特販内容   32:特販名     33:値引き後金額 34:利用状態

    ############################
    # 整形
    ############################
    # 利用状況
    awk '{if($16<='"${today}"' && $17>='"${today}"'){$34="有効"}else{$34="終了"} if($16>'"${today}"'){$34="未"}else{$34=$34}print $0}' |
    # 日付
    awk '{if($17=="99999999"){$17="@" ;print}else{$17=$17 ;print}}' |
    dayslash yyyy/mm/dd 16 |
    dayslash yyyy/mm/dd 17 |
    # 退去理由
    awk '{if($20=="_"){$20="@" ;print}else{$20=$20 ;print}}' |
    # 備考
    awk '{if($21=="_"){$21="@" ;print}else{$21=$21 ;print}}' |
    # 賃料
    comma 4 33 |

    # 色 #--追記--
    awk '{if($12=="001"){print $0,"#F9E3FC"}
          else if($12=="002"){print $0,"#FCECE3"}
          else if($12>="003"&&$12<="007"){print $0,"#E3F2FC"}
          else{print $0,"@"}
         }'    |

    # ファイル名
    awk '{print $0,$5"_"$6}' > $tmp-listdata_kari
    # 1:施設ID      2:建屋ID      3:居室ID        4:標準賃料    5:利用者(入居者)ID
    # 6:契約ID      7:利用者名    8:施設名        9:フロアID    10:ユニットID
    # 11:入居時年齢 12:契約種類ID 13:契約名称     14:契約日     15:引渡し日
    # 16:契約開始日 17:契約終了日 18:退去理由     19:退去理由名 20:退去理由詳細
    # 21:備考       22:予備1      23:予備2        24:予備3      25:予備4
    # 26:予備5      27:削除フラグ 28:更新日       29:更新者     30:特販ID
    # 31:特販内容   32:特販名     33:値引き後金額 34:利用状態   35:色
    # 36:ファイル名

    # 添付ファイルがあれば「閲覧」、なければ非表示
    self 5 36 6 $tmp-listdata_kari |
    while read user_id filename keiyaku_id ; do
      ls ${tenpu_dir}/${user_id}/${filename}* > $tmp-pdf_file_${filename}

      if [ -s $tmp-pdf_file_${filename} ]; then
        echo "%1" "%2" >> $tmp-hyouji
      else
        echo "@" "@"    >> $tmp-hyouji
      fi
    done
    
    # 表示、非表示くっつける
    if [ -s $tmp-listdata_kari ] ; then
      ycat $tmp-listdata_kari $tmp-hyouji |
      delf NF-2                           > $tmp-listdata_before
    else
      : > $tmp-listdata_before
    fi
esac

#--------------------------------------------------------------
# キーワード検索
#--------------------------------------------------------------
if [ ! -z "${Keyword}" -a "${Keyword}" != "_" ] ; then
  echo "${Keyword}" |
  zen 1                 > $tmp-keyword-zen
  cat $tmp-keyword-zen  |
  han 1                 > $tmp-keyword-han


  if [ -s "$tmp-keyword-zen" ] ; then
    zen=$(awk '{print $1}' $tmp-keyword-zen)
  else
   :
  fi
  if [ -s "$tmp-keyword-han" ] ; then
    han=$(awk '{print $1}' $tmp-keyword-han)
  else
   :
  fi

  cat $tmp-listdata_before | 
  grep -ie ${zen} -ie ${han} > $tmp-listdata
else
  cat $tmp-listdata_before  > $tmp-listdata
fi

#--------------------------------------------------------------
#######################################################################################
# ページ分け
ichi_page=100
# MODEがsearchだったらページを表示
if [ -n "${MODE}" -a "${MODE}" = "search" -o "${MODE}" = "excel_out" ];then
  gyo=$(cat $tmp-listdata | gyo)
  GYO=$(echo ${gyo})
  # 表示するページを確認 (1ページ当たり最大100)
  start=$(expr \( ${PAGE} - 1 \) \* ${ichi_page} + 1)
  START=$(echo ${start})
  if [ ${gyo} -le $(expr ${PAGE} \* 100) ];then
    end=${gyo}
  else
    end=$(expr ${ichi_page} \* ${PAGE})
  fi
  END=$(echo ${end})
  echo ${GYO} ${START} ${END}                                              > ${tmp}-gyo_mes

  #最終ページを確認
  saishu=$(expr ${gyo} \/ 100 + 1)

  #ページ数は何ページになるか
  i=1
  while true; do
    echo ${i}
    i=$((i + 1))
    [ ${i} -gt ${saishu} ] && break
  done                                                                     > ${tmp}-page_ichiran

  # 表示ページの1ページ前を確認
  expr ${PAGE} - 1                       |
  # そのページがページ数の一覧にあるか確認
  cjoin0 key=1 - ${tmp}-page_ichiran                                       > ${tmp}-maehe

  # 表示ページの1ページ後ろを確認
  expr ${PAGE} + 1                                                         |
  # そのページがページ数の一覧にあるか確認
  cjoin0 key=1 - ${tmp}-page_ichiran                                       > ${tmp}-tsugihe

  # 表示ページの前4ページ分を抽出する
  i=${PAGE}
  while true; do
    [ ${i} -le "1" ] && break
    i=$((i - 1))
    echo ${i}
    [ ${i} -eq $(expr ${PAGE} - 4) ] && break
  done  |
  LANG=C sort -k1n  |
  cjoin0 key=1 - ${tmp}-page_ichiran                                       > ${tmp}-pre
  # 表示ページの後ろ4ページ分を抽出する
  i=${PAGE}
  while true; do
    i=$((i + 1))
    echo ${i}
    [ ${i} -eq $(expr ${PAGE} + 4) ] && break
  done                                                                     |
  LANG=C sort -k1n                                                         |
  cjoin0 key=1 - ${tmp}-page_ichiran                                       > ${tmp}-after
  echo ${PAGE}                                                             > ${tmp}-now

  # 表示ページの5ページ前のデータを抽出する
  expr ${PAGE} - 5                                                         |
  cjoin0 key=1 - ${tmp}-page_ichiran                                       > ${tmp}-sonomae

  # 表示ページの5ページ後のデータを抽出する
  expr ${PAGE} + 5                                                         |
  cjoin0 key=1 - ${tmp}-page_ichiran                                       > ${tmp}-sonoato

# MODEがsearch以外の場合はページ表示をしない
else
  touch ${tmp}-gyo_mes
  touch ${tmp}-maehe
  touch ${tmp}-tsugihe
  touch ${tmp}-pre
  touch ${tmp}-after
  touch ${tmp}-now
  touch ${tmp}-sonomae
  touch ${tmp}-sonoato
fi

if [ -s "$tmp-listdata" ] ; then
  cat $tmp-listdata   |
  tail -n +${start}   > $tmp-listdata2
  cat $tmp-listdata2  |
  head -${ichi_page}  
else
  :
fi > $tmp-list_result

# 最大行
#cat $tmp-listdata |
#gyo                > $tmp-saidai_gyo

# 表示行と表示データの用意
#cat $tmp-listdata |
#head -300         > $tmp-list_result

cat $tmp-list_result |
self NF              > $tmp-list_result_tmp

#gyo $tmp-list_result >$tmp-hyouji_gyo

#saidai_gyo="$(cat $tmp-saidai_gyo)"
#hyouji_gyo="$(cat $tmp-hyouji_gyo)"


cat << FIN | sed 's/ _$/ @/g' >> $tmp-calsed
###KeiyakukaishibiFrom### ${KeiyakukaishibiFrom}
###KeiyakukaishibiTo### ${KeiyakukaishibiTo}
###KeiyakuendbiFrom### ${KeiyakuendbiFrom}
###KeiyakuendTo### ${KeiyakuendbiTo}
###USERNAME### ${USERNAME}
###SHISETSUNAME### ${SHISETSUNAME}
###DROPDOWN_ACTIVE1### active
###LI_UNEI8### active
###HYOZI_GYO### ${hyouji_gyo}
###SKU_COUNT### ${saidai_gyo}
###USERID### ${userid}
###SHISETSUID### ${shisetsu}
###PASSWORD### ${password}
###FILE_NAME### ${FILE_NAME}
###SELECT_SHISETSU### $select_shisetsu
###Keyword### ${Keyword}
FIN


#-----------------------------------------------------------
# 登録・印刷ボタンの表示
# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME
# 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
awk '$7=="KEIYAKUJYOUHOU_ICHIRAN.CGI"{print $2,$9}' |
LANG=C sort > $tmp-dispkengen_all
# 1:施設ID 2:STATUS

cat $tmp-dispkengen_all |
if [ -s $tmp-dispkengen_all -a $(self 1 $tmp-dispkengen_all |head -1) = "0000" ] ; then
  awk '{print $2}' |
  head -1
else
  awk '$1=="'${shisetsu}'"{print $0}' |
  LANG=C sort |
  getlast 1 1 |
  self 2
fi > $tmp-dispkengen


# 権限がない人は新規登録や出力が出来ない
if [ "$(cat $tmp-dispkengen)" = "3" ] ;then
  echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed
  echo "###TOUROKUDISP### @" >> $tmp-calsed
  echo "###PRINTDISP### @"   >> $tmp-calsed
elif [ "$(cat $tmp-dispkengen)" = "2" ] ;then
  echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed
  echo "###TOUROKUDISP### @" >> $tmp-calsed
  echo "###PRINTDISP### none"   >> $tmp-calsed
else
  echo "###SHINKITOUROKUDISP### none" >> $tmp-calsed
  echo "###TOUROKUDISP### none" >> $tmp-calsed
  echo "###PRINTDISP### none"   >> $tmp-calsed
fi

#----------------------------------

echo "3" > $tmp-cgi

self 1 2 ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON |
join0 key=1 $tmp-shisetsu > $tmp-shisetsu_list

cat ${tmp}-calsed ${checkfile} > ${tmp}-calsed_result

#cp $tmp-* /home/hands/work/okuda

# htmlの作成
cat ${html_dir}/KEIYAKU_ICHIRAN1.html |
cat -\
    ${home_dir}/KYOUTSU/HTML/MENUBAR.html\
    ${html_dir}/KEIYAKU_ICHIRAN2.html |
#データの嵌め込み
mojihame -l###USER__NAME### - ${tmp}-usermei         |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -ljigyousho_select - $tmp-jigyousho_name    |
mojihame -lcaremanager_select - $tmp-caremane_name   |
#mojihame -lshisetsu_select - $tmp-shisetsu_kengen   |
mojihame -lshisetsu_select - $tmp-shisetsu           |
mojihame -ltateya_select - $tmp-tateya_name          |
mojihame -lfloor_select - $tmp-floor_name            |
mojihame -lunit_select - $tmp-unit_name              |
mojihame -lkyoshitsu_select - $tmp-kyoshitsu_name    |
mojihame -lnyuukyosha_select - $tmp-nyuukyosha_500   |
mojihame -lkeiyaku_syurui_select - $tmp-keiyaku_syurui          |
mojihame -ltokuhan_select - $tmp-tokuhan             |
mojihame -lriyou_status_select - $tmp-riyou_status   |
mojihame -lhyouji_jun_select - $tmp-hyouji_jun       |
mojihame -lgengoufrom_select - $tmp-gengou_from      |
mojihame -lgengouto_select - $tmp-gengou_to          |
mojihame -llist_result - $tmp-list_result            > $tmp-html
#mojihame -llist_tenpu - $tmp-list_result_tmp             |
#cp $tmp-* /home/hands/work/okuda

cat $tmp-listdata |
self 6 5          |
# 1:契約ID
while read keiyaku_id user_id ; do
  if [ -s $tmp-pdf_file_${user_id}_${keiyaku_id} ] ; then
    cat $tmp-pdf_file_${user_id}_${keiyaku_id}  |
    sed 's/\// /g'                   |
    self NF                          |
    rank                             |
    awk '{print $2,"PDF"$1}'         > $tmp-keiyakusyo${keiyaku_id}

    cat $tmp-html |
    mojihame -lkeiyakusho_${user_id}${keiyaku_id} - $tmp-keiyakusyo${keiyaku_id} > $tmp-html_new

    mv $tmp-html_new $tmp-html
  else
    :
  fi

done


cat $tmp-html |
mojihame -l###RESULT_GYO### - ${tmp}-gyo_mes             |
mojihame -l###MAEHE### - ${tmp}-maehe                    |
mojihame -l###SONOMAEHE### - ${tmp}-sonomae              |
mojihame -l###PRE_SELECT### - ${tmp}-pre                 |
mojihame -l###NOW_SELECT### - ${tmp}-now                 |
mojihame -l###AFTER_SELECT### - ${tmp}-after             |
mojihame -l###SONOATO### - ${tmp}-sonoato                |
mojihame -l###TSUGIHE### - ${tmp}-tsugihe                |


calsed -f $tmp-calsed_result -                       |
sed 's/###SPACE###/ /g'                              |
#--------------------------------------------------------------

#--------------------------------------------------------------
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi                                                    |
cat -
#--------------------------------------------------------------

# 終了
rm -f $tmp-*
exit 0

