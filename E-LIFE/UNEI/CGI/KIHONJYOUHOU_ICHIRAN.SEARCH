#!/bin/bash
#
# KIHONJYOUHOU_ICHIRAN.SEARCH
# 基本情報一覧検索
#
# Written by E.Okuda  : 2013/11/25
# update  by R.Suzuki : 2015/09/02 QR対応

#--------------------------------------------------------------
# ログ
exec 2> /home/hands/E-LIFE/UNEI/APLOG/$(date "+%Y%m%d")/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv
# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null
source /home/hands/E-LIFE/UNEI/CGI/UNEI.INI &> /dev/null
#--------------------------------------------------------------
#--------------------------------------------------------------
# 変数の定義
tmp=/var/tmp/${$}
namedata=$1

#ゴミtmpの消去
rm -f $tmp-*

#--------------------------------------------------------------
#--------------------------------------------------------------
function error_exit {
  rm -f $tmp-*
  exit 0
}
#--------------------------------------------------------------
#--------------------------------------------------------------
# ディレクトリ設定
app_dir="${home_dir}/UNEI"
data_dir="/DATA/E-LIFE"
tbl_dir="${home_dir}/TBL"
pompa_dir="${app_dir}/POMPA"
kengen_dir="/home/hands/E-LIFE/TBL/KENGEN_KANRI"
# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------------
  Shisetsu=$(nameread      "Shisetsu"       $namedata)
  Tateya=$(nameread        "Tateya"         $namedata)
  Floor=$(nameread         "Floor"          $namedata)
  Unit=$(nameread          "Unit"           $namedata)
  Kyoshitsu=$(nameread     "Kyoshitsu"      $namedata)
  Nyuukyosha=$(nameread    "Nyuukyosha"     $namedata)
  TaikyoshaHyouji=$(nameread    "TaikyoshaHyouji"     $namedata)

[ -z "${Jigyousho}" ] && Jigyousho="00"
[ -z "${Shisetsu}" ] && Shisetsu="_"
[ -z "${Tateya}" ] && Tateya="_"
[ -z "${Floor}" ] && Floor="_"
[ -z "${Unit}" ] && Unit="_"
[ -z "${Kyoshitsu}" ] && Kyoshitsu="_"
[ -z "${Nyuukyosha}" ] && Nyuukyosha="_"
[ -z "${TaikyoshaHyouji}" ] && TaikyoshaHyouji="0"
#施設が00(施設外)で飛んできたら"_"に読み替える
#[ "${Shisetsu}" = "00" ] && Shisetsu="_"
#事業所が"9999"選択しないで来ていたら"_"に読み替える
#[ "${Jigyousho}" = "9999" ] && Jigyousho="_"

#--------------------------------------------------------------
# キーワードの準備
#--------------------------------------------------------------
if [ ! -z "${Keyword}" -a "${Keyword}" != "_" ] ; then
  echo "${Keyword}" |
  zen 1                 > $tmp-keyword-zen
  cat $tmp-keyword-zen  |
  han 1                 > $tmp-keyword-han
else
  :
fi

if [ -s "$tmp-keyword-zen" ] ; then
  zen=$(awk '{print $1}' $tmp-keyword-zen)
else
  :
fi
if [ -s "$tmp-keyword-han" ] ; then
  han=$(awk '{print $1}' $tmp-keyword-han)
else
  :
fi
#--------------------------------------------------------------
#-------------------------------------------------------------=
cat ${namefile} |
## formhame 前に、キーワードが "_" のみの場合、消去
awk '{if($1~/Keyword*/){if($2~/^_$/){$2=""};}print}' |
# formhame 前に、キーワード検索ボックスの空白を、"_"から" "に戻す
awk '{if($1~/Keyword*/){gsub(/_/," ",$2)};print}'    > $tmp-namefile
#--------------------------------------------------------------
#--------------------------------------------------------------
# 生年月日の準備
# -------------------------------------------------------------

[ -z "${MonthFrom}" ] && MonthFrom="_"
[ "${MonthFrom}" != "_" ] && MonthFrom="$(echo "${MonthFrom}" | maezero 1.2)"  
[ -z "${DayFrom}" ]  && DayFrom="_"
[ "${DayFrom}" != "_" ] && DayFrom="$(echo "${DayFrom}" | maezero 1.2)"

# 生年月日From
if [ "${YearFrom}" != "_" ] ; then
  cat ${tbl_dir}/ZEIRITSU_GENGOU_MASTER/GENGOU |
  awk '$1=="'${GengouFrom}'"{print substr($3,1,4)}' |
  awk '{print $1+"'${YearFrom}'"-1}'           |
# 1:西暦年号
  # 月が入っていたらそのまま入っていなかったら1月を設定
  if [ "${MonthFrom}" != "_" ] ; then
   awk '{print $1"'${MonthFrom}'"}' 
  else
   awk '{print $1"01"}'
  fi |

  # 日が入っていたらそのまま入っていなかったら1日を設定
  if [ "${DayFrom}" != "_" ] ; then
   awk '{print $1"'${DayFrom}'"}'
  else
   awk '{print $1"01"}'
  fi

fi > $tmp-seinegappi_from

[ -z "${MonthTo}" ] && MonthTo="_"
[ "${MonthTo}" != "_" ] && MonthTo="$(echo "${MonthTo}" | maezero 1.2)"
[ -z "${DayTo}" ]  && DayTo="_"
[ "${DayTo}" != "_" ] && DayTo="$(echo "${DayTo}" | maezero 1.2)"

# 生年月日To
if [ -n "${YearTo}" -a "${YearTo}" != "_" ] ; then
  cat ${tbl_dir}/ZEIRITSU_GENGOU_MASTER/GENGOU |
  awk '$1=="'${GengouTo}'"{print substr($3,1,4)}' |
  awk '{print $1+"'${YearTo}'"-1}' |
# 1:西暦年号

  # 月が入っていたらそのまま入っていなかったら12月を設定
  if [ ! -z "${MonthTo}" -a "${MonthTo}" != "_" ] ; then
   awk '{print $1"'${MonthTo}'"}'
  else
   awk '{print $1"12"}'
  fi |

  # 日が入っていたらそのまま入っていなかったら31日を設定
  if [ ! -z "${DayTo}" -a "${DayTo}" != "_" ] ; then
   awk '{print $1"'${DayTo}'"}'
  else
   awk '{print $1"31"}'
  fi

fi > $tmp-seinegappi_to

if [ -s "$tmp-seinegappi_from" ] ;then
  BIRTH_FROM="$(cat $tmp-seinegappi_from)"
fi
if [ -s "$tmp-seinegappi_to" ] ;then
  BIRTH_TO="$(cat $tmp-seinegappi_to)"
fi

#------------------------------------------------------------
#-------------------------------------------------------------
# 検索対象者の絞込み
#------------------------
# 利用者全て
# 施設
cat ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
awk '$(NF-2)!="9"{print $0}'                       |
# 同じ施設内で居室移動してる場合は退去じゃないので新しいほうの居室の情報で判断
self 6 1/NF       |
LANG=C sort -k1,3 -k8,8 -k7,7                      |
getlast 1 3       |
delf 1            > $tmp-shisetsu_riyousha_all
# 1:施設ID   2:建屋ID 3:フロア 4:ユニットID 5:居室
# 6:入居者ID 7:入居日 8:退去日 9:削除フラグ 10:更新時間
# 11:更新者

# 事業所
cat ${pompa_dir}/RIYOUSHA/JIGYOUSHO_RIYOUSHA_STATUS |
awk '$(NF-2)!="9"{print $0}' > $tmp-jigyousho_riyousha_all
# 1:事業所ID 2:入居者ID 3:契約開始日 4:契約終了日 5:削除フラグ
# 6:更新時間 7:更新者


# 事業所ログインかどうかの判定用
JigyoushoFLG=$(echo "${shisetsu}" | awk '{print substr($1,1,1)}')
# 1：フラグ(1：事業所 0:施設)

#--------------------
# 退去者を表示する
#-------------------

# 施設ログイン時(施設ログイン時は事業所契約終了日については一切考えない)
if [ "${JigyoushoFLG}" != "1" ] ; then

    cat $tmp-jigyousho_riyousha_all    |
    awk '{print $0,"_","施設外"}'      |
    self 1 NF-1 NF-1 NF-1 NF 2/NF-2    |
    self 1/8                           |
    LANG=C sort -k6,6n                 > $tmp-jigyousho_riyousha_status

  # 退去者除く
  if [ "${TaikyoshaHyouji}" = "0" ] ; then
    cat $tmp-shisetsu_riyousha_all     |
    awk '$8>"'${today}'"{print $0}'    |
    self 1/8   |
    LANG=C sort -k6,6n                 > $tmp-shisetsu_riyousha_status

  # 退去者のみ
  elif [ "${TaikyoshaHyouji}" = "2" ] ; then
    cat $tmp-shisetsu_riyousha_all     |
    # 同じ施設内(建屋違いも含めて)で部屋が変わった方がいた場合、後の日付だけにして退去者と部屋移動者を区別する
    awk '{print $6,$0}'                |
#    # 1:入居者ID  2:施設ID   3:建屋ID 4:フロア 5:ユニットID
#    # 6:居室      7:入居者ID 8:入居日 9:退去日 10:削除フラグ
#    # 11:更新時間 12:更新者
    LANG=C sort -k1,2 -k8,8 -k7,7      |
    getlast 1 2                        |
    delf 1                             |

    awk '$8<"'${today}'"{print $0}'    |
    self 1/8   |
    LANG=C sort -k6,6n                 > $tmp-shisetsu_riyousha_status

  # 退去者も含む=全ての入居者
  else
    cat $tmp-shisetsu_riyousha_all     |
    self 1/8                           |
    LANG=C sort -k6,6n                 > $tmp-shisetsu_riyousha_status

  fi

# 事業所ログイン時（事業所でログインの時は施設は一番新しくかつ有効なものだけ。本日時点で施設がない＝退去＝施設外となる)
else

    cat $tmp-shisetsu_riyousha_all     |
    self 1/8                           |
    awk '$8>"'${today}'"{print $0}'    |
    # 2つ以上施設の施設に所属している場合はとりあえず残しておく(所属施設の絞込みがまだのため)
    LANG=C sort -k6,6n -k8,8n -k7,7n   > $tmp-shisetsu_riyousha_status
#    getlast 6 6                        > $tmp-shisetsu_riyousha_status

  # 契約終了者除く
  if [ "${TaikyoshaHyouji}" = "0" ] ; then
     cat $tmp-jigyousho_riyousha_all   |
     awk '{print $0,"_","施設外"}'     |
     self 1 NF-1 NF-1 NF-1 NF 2/NF-2   |
     awk '$8>"'${today}'"{print $0}'   |
     self 1/8                          |
     LANG=C sort -k6,6n                > $tmp-jigyousho_riyousha_status

  # 契約修了者のみ
  elif [ "${TaikyoshaHyouji}" = "2" ] ; then
     cat $tmp-jigyousho_riyousha_all   |
     awk '{print $0,"_","施設外"}'     |
     self 1 NF-1 NF-1 NF-1 NF 2/NF-2   |
     awk '$8<"'${today}'"{print $0}'   |
     self 1/8   |
     LANG=C sort -k6,6n                 > $tmp-jigyousho_riyousha_status
# 1:施設ID   2:建屋ID 3:フロア 4:ユニットID 5:居室
# 6:入居者ID

  # 契約終了者を含む=全て
  else
    cat $tmp-jigyousho_riyousha_all    |
    awk '{print $0,"_","施設外"}'      |
    self 1 NF-1 NF-1 NF-1 NF 2/NF-2    |
    self 1/8   |
    LANG=C sort -k6,6n                 > $tmp-jigyousho_riyousha_status
  fi
fi

#----------------------------------------------------------
# 権限のある範囲
#echo "3" > $tmp-cgi
echo "KIHONJYOUHOU_ICHIRAN.CGI" > $tmp-cgi
# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
LANG=C sort -k7,7                                      |
join0 key=7 $tmp-cgi                                   |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME
# 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
#LANG=C sort -u -k2,2n  |
self 2               |
LANG=C sort -u       > $tmp-kengen_shisetsu
#-----------------------------------------------------------

# 全権限があったら施設利用者ステータスそのまま
if [ "$(cat $tmp-kengen_shisetsu | head -1)" = "0000" ] ; then
  cat $tmp-shisetsu_riyousha_status  > $tmp-shisetsu_riyousha_kengen
  cat $tmp-jigyousho_riyousha_status > $tmp-jigyousho_riyousha_kengen

# 全権限以外の方でログインが事業所だったら
elif [ "${JigyoushoFLG}" = "1" ] ; then
  cjoin1 key=1 $tmp-kengen_shisetsu $tmp-shisetsu_riyousha_status  > $tmp-shisetsu_riyousha_kengen
  cjoin1 key=1 $tmp-kengen_shisetsu $tmp-jigyousho_riyousha_status > $tmp-jigyousho_riyousha_kengen

# 全権限以外の方でログインが事業所じゃない
else
  cat $tmp-shisetsu_riyousha_status  |
  cjoin1 key=1 $tmp-kengen_shisetsu - > $tmp-shisetsu_riyousha_kengen

  cat $tmp-jigyousho_riyousha_status > $tmp-jigyousho_riyousha_kengen
fi

#-----------------------------------------------------------
# 対象者最終絞込み
#-----------------------------------------------------------

#####################
# 施設ログインの場合
#####3###############
if [ "${JigyoushoFLG}" = "0" ] ; then

  # 施設全て
  if [ "${Shisetsu}" = "_" ] ; then
    cat $tmp-shisetsu_riyousha_all  |
    # 1:事業所ID 2:建屋ID("_") 3:フロア("_") 4:ユニットID("_") 5:居室
    # 6:入居者ID 7:入居日      8:退去日
    self 6         |
    LANG=C sort -u |
    cjoin1 +ng key=6 - $tmp-jigyousho_riyousha_status  >/dev/null  2>$tmp-shisetsu_gai_before

    cat $tmp-shisetsu_gai_before  |
    LANG=C sort -k6,6 -k8,8 -k7,7 |
    getlast 6 6                   |
    # 退去者除く
    if [ "${TaikyoshaHyouji}" = "0" ] ; then
       awk '$8>"'${today}'"{print $0}'
    # 退去者のみ
    elif [ "${TaikyoshaHyouji}" = "2" ] ; then
       awk '$8<"'${today}'"{print $0}'
    # 退去者含む＝全て
    else
       cat -
    fi > $tmp-shisetsu_gai

    # 退去者のみの場合は施設利用者の有効を再度確認
    if [ "${TaikyoshaHyouji}" = "2" ] ; then
     # 施設：全て、退去者のみの場合は施設外の人はのぞく
      cat $tmp-shisetsu_riyousha_all  |
     # 全施設の中で最新の1入居者に対し入居状況をgrtlastしてから退去日を考慮
      LANG=C sort -k6,6 -k8,8 -k7,7   | 
      getlast 6 6                     |
      self 1/8                        |
      awk '$8<"'${today}'"'           |
     # 権限のある施設
     if [ "$(cat $tmp-kengen_shisetsu | head -1)" = "0000" ] ; then
      cat -
     else
      cjoin1 key=1 $tmp-kengen_shisetsu - 
     fi |
#      cat $tmp-shisetsu_riyousha_kengen |
      cat $tmp-shisetsu_gai -           |
      LANG=C sort -k6,6               > $tmp-taishousha
    else
      # 施設利用者と施設外利用者をくっつけて最新の施設のものだけにする
      cat $tmp-shisetsu_riyousha_kengen $tmp-shisetsu_gai |
      LANG=C sort -k6,6 -k8,8 -k7,7       |
      getlast 6 6    > $tmp-taishousha 
    fi

  # 施設外
  elif [ "${Shisetsu}" = "00" ] ; then

    # 施設外の時だけは全ての施設にいない人を求めるため、施設利用者ALLを使用
    cat $tmp-shisetsu_riyousha_all |
    # 1:事業所ID 2:建屋ID("_") 3:フロア("_") 4:ユニットID("_") 5:居室
    # 6:入居者ID 7:入居日      8:退去日
    self 6          |
    LANG=C sort -u  |
    cjoin1 +ng key=6 - $tmp-jigyousho_riyousha_status  > /dev/null  2>$tmp-taishousha_kari

    # 施設外の時だけは退去者表示のフラグを契約終了日で判断するため際判定
    cat $tmp-taishousha_kari      |
    LANG=C sort -k6,6 -k8,8 -k7,7 |
    getlast 6 6                   | 
    # 施設外の時の入居者指定をやってみる(2015/9/9)
    if [ "${Nyuukyosha}" != "_" ] ; then
       awk '$6=="'${Nyuukyosha}'"{print $0}'
    else
       cat -
    fi |
    # 退去者除く
    if [ "${TaikyoshaHyouji}" = "0" ] ; then
       awk '$8>"'${today}'"{print $0}'  
    # 退去者のみ
    elif [ "${TaikyoshaHyouji}" = "2" ] ; then
       awk '$8<"'${today}'"{print $0}'
    # 退去者含む＝全て
    else
       cat -
    fi  > $tmp-taishousha

  # 施設指定あり
  else
    cat $tmp-shisetsu_riyousha_kengen   |
    awk '$1=="'${Shisetsu}'"{print $0}' |
    LANG=C sort -k6,6 -k8,8 -k7,7       |
    getlast 6 6       |
#> $tmp-shisetsu_riyousha_kari
# 1:施設ID   2:建屋ID 3:フロア 4:ユニットID 5:居室
# 6:入居者ID 7:入居日 8:退去日

    # 居室の絞りこみがあれば
    if [ "${Nyuukyosha}" != "_" ] ; then
      awk '$2=="'${Tateya}'"&&$6=="'${Nyuukyosha}'"{print $0}'
    elif [ "${Kyoshitsu}" != "_" ] ; then
      awk '$2=="'${Tateya}'"&&$5=="'${Kyoshitsu}'"{print $0}'
    elif [ "${Unit}" != "_" ] ; then
      awk '$2=="'${Tateya}'"&&$4=="'${Unit}'"{print $0}'
    elif [ "${Floor}" != "_" ] ; then
      awk '$2=="'${Tateya}'"&&$3=="'${Floor}'"{print $0}'
    elif [ "${Tateya}" != "_" ] ; then
      awk '$2=="'${Tateya}'"{print $0}'
    else
      cat -
    fi > $tmp-taishousha
  fi 
############################
# 事業所ログイン
############################
else
  # 居宅事業所の選択
  #---------------------------------
  # 事業所全て / 事業所選択あり
  #---------------------------------
  if [ "${Jigyousho}" = "_" -o "${Jigyousho}" != "9999" ] ; then
    # 全ての事業所ステータス(その人の権限のある事業所全て)
    cat $tmp-jigyousho_riyousha_kengen |
# 1:施設ID   2:建屋ID 3:フロア 4:ユニットID 5:居室
# 6:入居者ID 7:入居日 8:退去日

    if [ "${Jigyousho}" != "_" ] ; then
      awk '$1=="'${Jigyousho}'"'
    else
      cat -
    fi |

    # 複数事業所に所属する人がいたら新しい方だけにする
    LANG=C sort -k6,6 -k8,8 -k7,7      |
    getlast 6 6                        > $tmp-jigyousho_riyousha_kari
## 1:事業所ID 2:建屋ID("_") 3:フロア("_") 4:ユニットID("_") 5:居室
## 6:入居者ID 7:入居日      8:退去日

    cat $tmp-jigyousho_riyousha_kari  |
    self 6                            |
    LANG=C sort -u                    |
    cjoin1 key=6 - $tmp-shisetsu_riyousha_status > $tmp-shisetsu_riyousha_kari

   # 施設外の方取得
    cat $tmp-shisetsu_riyousha_kari   |
    self 6                            |
    LANG=C sort -u                    |
    cjoin1 +ng key=6 - $tmp-jigyousho_riyousha_kari > /dev/null  2>$tmp-shisetsu_gai

     #---------
     # 施設：全て
     #---------
     if [ "${Shisetsu}" = "_" ] ; then
       cat $tmp-shisetsu_gai $tmp-shisetsu_riyousha_kari |
       LANG=C sort -k6,6                 |
       # 全施設の時の入居者指定をやってみる(2015/9/9)
       if [ "${Nyuukyosha}" != "_" ] ; then
          awk '$6=="'${Nyuukyosha}'"{print $0}'
       else
          cat -
       fi > $tmp-taishousha
     #---------
     # 施設：施設外
     #---------
     elif [ "${Shisetsu}" = "00" ] ; then
       cat $tmp-shisetsu_gai  |
       LANG=C sort -k6,6                 |
       # 施設外の時の入居者指定をやってみる(2015/9/9)
       if [ "${Nyuukyosha}" != "_" ] ; then
          awk '$6=="'${Nyuukyosha}'"{print $0}'
       else
          cat -
       fi > $tmp-taishousha
     #-----------
     # 施設：指定あり
     #------------
     else
       cat $tmp-shisetsu_riyousha_kari |
       awk '$1=="'${Shisetsu}'"'       |
       LANG=C sort -k6,6               |
      # 居室の絞りこみがあれば
      if [ "${Nyuukyosha}" != "_" ] ; then
        awk '$2=="'${Tateya}'"&&$6=="'${Nyuukyosha}'"{print $0}'
      elif [ "${Kyoshitsu}" != "_" ] ; then
        awk '$2=="'${Tateya}'"&&$5=="'${Kyoshitsu}'"{print $0}'
      elif [ "${Unit}" != "_" ] ; then
        awk '$2=="'${Tateya}'"&&$4=="'${Unit}'"{print $0}'
      elif [ "${Floor}" != "_" ] ; then
        awk '$2=="'${Tateya}'"&&$3=="'${Floor}'"{print $0}'
      elif [ "${Tateya}" != "_" ] ; then
        awk '$2=="'${Tateya}'"{print $0}'
      else
        cat -
      fi   > $tmp-taishousha
     fi
  #--------------------------------------
  # 事業所選択なし（事業所契約は考えない）
  #--------------------------------------
  else
    # 事業所の利用者ではなく施設の利用者で絞込み
    # 退去者除く
    if [ "${TaikyoshaHyouji}" = "0" ] ; then
      cat $tmp-shisetsu_riyousha_all     |
      awk '$8>"'${today}'"{print $0}'    |
      self 1/8   |
      LANG=C sort -k6,6n                 > $tmp-shisetsu_riyousha_status2
    # 退去者のみ
    elif [ "${TaikyoshaHyouji}" = "2" ] ; then
      cat $tmp-shisetsu_riyousha_all  |
     # 全施設の中で最新の1入居者に対し入居状況をgrtlastしてから退去日を考慮
      LANG=C sort -k6,6 -k8,8 -k7,7   |
      getlast 6 6                     |
      self 1/8                        |
      awk '$8<"'${today}'"'           |
      LANG=C sort -k6,6n              > $tmp-shisetsu_riyousha_status2
    # 退去者も含む=全ての入居者
    else
     cat $tmp-shisetsu_riyousha_all     |
     self 1/8                           |
     LANG=C sort -k6,6n                 > $tmp-shisetsu_riyousha_status2
   fi

    # 施設の選択があるか
   if [ "${Shisetsu}" != "_" ] ; then
      cat $tmp-shisetsu_riyousha_status2 | 
      awk '$1=="'${Shisetsu}'"{print $0}'  
   # 施設全て
   else
      cat $tmp-shisetsu_riyousha_all  |
      # 1:事業所ID 2:建屋ID("_") 3:フロア("_") 4:ユニットID("_") 5:居室
      # 6:入居者ID 7:入居日      8:退去日
      self 6         |
      LANG=C sort -u |
      cjoin1 +ng key=6 - $tmp-jigyousho_riyousha_status  >/dev/null  2>$tmp-shisetsu_gai_before

      cat $tmp-shisetsu_gai_before  |
      LANG=C sort -k6,6 -k8,8 -k7,7 |
      getlast 6 6                   |
      # 退去者除く
      if [ "${TaikyoshaHyouji}" = "0" ] ; then
        awk '$8>"'${today}'"{print $0}'
      # 退去者のみ
      elif [ "${TaikyoshaHyouji}" = "2" ] ; then
         awk '$8<"'${today}'"{print $0}'
      # 退去者含む＝全て
      else
         cat -
      fi > $tmp-shisetsu_gai
      cat $tmp-shisetsu_riyousha_status2 $tmp-shisetsu_gai
    fi |
    LANG=C sort -k6,6 -k8,8 -k7,7        |
    getlast 6 6       |
#> $tmp-shisetsu_riyousha_kari
# 1:施設ID   2:建屋ID 3:フロア 4:ユニットID 5:居室
# 6:入居者ID 7:入居日 8:退去日

    # 居室の絞りこみがあれば
    if [ "${Nyuukyosha}" != "_" ] ; then
      awk '$2=="'${Tateya}'"&&$6=="'${Nyuukyosha}'"{print $0}'
    elif [ "${Kyoshitsu}" != "_" ] ; then
      awk '$2=="'${Tateya}'"&&$5=="'${Kyoshitsu}'"{print $0}'
    elif [ "${Unit}" != "_" ] ; then
      awk '$2=="'${Tateya}'"&&$4=="'${Unit}'"{print $0}'
    elif [ "${Floor}" != "_" ] ; then
      awk '$2=="'${Tateya}'"&&$3=="'${Floor}'"{print $0}'
    elif [ "${Tateya}" != "_" ] ; then
      awk '$2=="'${Tateya}'"{print $0}'
    else
      cat -
    fi > $tmp-taishousha
  fi
# 1:施設ID   2:建屋ID 3:フロア 4:ユニットID 5:居室
# 6:入居者ID 7:入居日 8:退去日
fi

cp -p $tmp-taishousha $work_dir/taishousha_kihon_ichiran

# 移行者データを追記　##20141030
#-------------------------------------
# 検索対象施設が全ての場合、契約情報で退去理由に「03:グランクレール住替契約」を選択している入居者を、
# 権限に関係なく表示する

# 事業所が選択されていない(施設ログイン)or事業所：選択なし
if [ "${Jigyousho}" = "00" ] ; then

# もし検索対象施設が全てだったら
if [ "${Shisetsu}" = "_" ] ; then
  # 契約情報の退去理由に03の人がいるか
  cat ${pompa_dir}/RIYOUSHA/RIYOUSHA_KEIYAKU |
# 1:利用者(入居者)ID 2:契約ID      3:施設ID      4:建屋ID     5:フロアID
# 6:ユニットID       7:居室ID      8:入居時年齢  9:契約種類ID 10:契約日
# 11:引渡し日        12:契約開始日 13:契約終了日 14:退去理由  15:退去理由詳細
# 16:備考            17:予備1      18:予備2      19:予備3     20:予備4
# 21:予備5           22:削除フラグ 23:更新日     24:更新者
  awk '$3~/^0/&&$(NF-2)!="9"{print $1,$13,$12,$0}'    |
  LANG=C sort -k1,3                          |    
  getlast 1 1                                |
  delf 1/3                                   |
  awk '$14=="03"&&$(NF-2)!="9"{print $3,$4,$5,$6,$7,$1,$12,$13}'    > $tmp-ikousha

  # 移行の方がいたら
  if [ -s $tmp-ikousha ] ; then
   # 対象者とjoin
   cat $tmp-taishousha |
   self 6           |
   LANG=C sort -u   |
   cjoin1 +ng key=6 - $tmp-ikousha  >/dev/null 2>$tmp-ikousha_tuiki_data

    # 対象者にいない人がいたら移行データとして追記する
    if [ -s $tmp-ikousha_tuiki_data ] ; then
      cat $tmp-ikousha_tuiki_data  | 
      awk '{print $0,"IKOUDATA"}'  |
      self 1/4 NF 6/NF-1           >> $tmp-taishousha
    else
      :
    fi

  else
   :
  fi

else
  :
fi

else
 :
fi
#cp $tmp-* /home/hands/work/okuda

# 居宅事業所の選択
# 事業所全て
#if [ "${Jigyousho}" = "_" ] ; then
#  # 全ての事業所ステータス(その人の権限のある事業所全て)
#  cat $tmp-jigyousho_riyousha_kengen |
#  # 複数事業所に所属する人がいたら新しい方だけにする
#  LANG=C sort -k6,8 |
#  getlast 6 6       > $tmp-jigyousho_riyousha_kari
## 1:事業所ID 2:建屋ID("_") 3:フロア("_") 4:ユニットID("_") 5:居室
## 6:入居者ID 7:入居日      8:退去日
#
## 事業所選択有り
#elif [ "${Jigyousho}" != "9999" -a  "${Jigyousho}" != "00" ] ; then
#  cat $tmp-jigyousho_riyousha_kengen   |
#  awk '$1=="'${Jigyousho}'"{print $0}' |
#  LANG=C sort -u                       > $tmp-jigyousho_riyousha_kari
## 1:事業所ID 2:建屋ID("_") 3:フロア("_") 4:ユニットID("_") 5:居室
## 6:入居者ID 7:入居日      8:退去日
#
## 事業所選択なし
#else
#  cat $tmp-jigyousho_riyousha_kengen |
#  # 複数事業所に所属する人がいたら新しい方だけにする
#  LANG=C sort -k6,8 |
#  getlast 6 6       > $tmp-jigyousho_riyousha_kari
## 1:事業所ID 2:建屋ID("_") 3:フロア("_") 4:ユニットID("_") 5:居室
## 6:入居者ID 7:入居日      8:退去日
#fi
#
#
#
## 事業所利用者と施設利用者を合わせる
## 事業所と施設両方が全てだったら
#if [ "${Jigyousho}" = "_" -a "${Shisetsu}" = "_" ] ; then
#   cat $tmp-jigyousho_riyousha_kari $tmp-shisetsu_riyousha_kari |
#   # 同じ人が2行以上あるなら施設名を優先
#   awk '{if($1~/^0/){print "2",$0}
#         else if($1~/^1/){print "1",$0}
#        }'                       |
#   LANG=C sort -k7,7 -k1,1 -k8,9 |
#   getlast 7 7                   |
#   delf 1                  > $tmp-taishousha
#
## 事業所が全てで施設の指定がある
#elif [ "${Jigyousho}" = "_" -a "${Shisetsu}" != "_" ] ; then
#
#   # 施設指定がならば
#   if [ "${Shisetsu}" != "00" ] ; then
#     cat $tmp-jigyousho_riyousha_kari |
#     self 6 |
#     LANG=C sort -u |
#     cjoin1 key=6 - $tmp-shisetsu_riyousha_kari > $tmp-taishousha
#   # 施設外
#   else
#     cat $tmp-shisetsu_riyousha_kari |
#     self 6 |
#     LANG=C sort -u |
#     cjoin1 +ng key=6 - $tmp-jigyousho_riyousha_kari > /dev/null  2> $tmp-taishousha
#   fi
#
## 事業所の選択がある
#elif [ "${Jigyousho}" != "_" -a "${Jigyousho}" != "9999" -a "${Jigyousho}" != "00" ] ; then
#   # 施設：全て
#   if [ "${Shisetsu}" = "_" ] ; then
#     cat $tmp-jigyousho_riyousha_kari |
#     LANG=C sort -k6,6            |
#     self 6                       > $tmp-jigyousho_riyousha_forjoin
#
#     # 施設に所属する人は施設利用者ステータスから取得
#     cat $tmp-shisetsu_riyousha_kari   |
#     join1 key=6 $tmp-jigyousho_riyousha_forjoin - > $tmp-shisetsu_jigyousho_riyousha_result
#
#     # 施設所属じゃない人は事業所利用者ステータスから取得
#     cat $tmp-shisetsu_jigyousho_riyousha_result |
#     LANG=C sort -k6,6 |
#     self 6 |
#     join1 +ng key=6 - $tmp-jigyousho_riyousha_kari   > /dev/null 2> $tmp-jigyousho_riyousha_result
#
#     cat $tmp-shisetsu_jigyousho_riyousha_result $tmp-jigyousho_riyousha_result |
#     LANG=C sort -k6,6 > $tmp-taishousha
#
#   # 施設：どこか指定有り
#   elif [ "${Shisetsu}" != "_" -a "${Shisetsu}" != "00" ] ; then
#     cat $tmp-jigyousho_riyousha_kari   |
#     LANG=C sort -k6,6                  |
#     tee $tmp-jigyousho_riyousha_forcat |
#     self 6                       > $tmp-jigyousho_riyousha_forjoin
#
#     # 施設に所属する人は施設利用者ステータスから取得
#     cat $tmp-shisetsu_riyousha_kari   |
#     # join相手がいてかつ退去者のみではない場合
#     if [ -s $tmp-jigyousho_riyousha_forjoin -a "${TaikyoshaHyouji}" != "2" ] ; then
#       cjoin1 key=6 $tmp-jigyousho_riyousha_forjoin - 
#     # 退去者のみ
#     elif [ -s $tmp-jigyousho_riyousha_forjoin -a "${TaikyoshaHyouji}" = "2" ] ; then
#       cat $tmp-jigyousho_riyousha_forcat -  |
#       LANG=C sort -k6,6 -k1,1               |
#       getlast 6 6                           
#     else
#       cat -
#     fi > $tmp-taishousha
#
#   # 施設：施設以外
#   else
#     cat $tmp-shisetsu_riyousha_status  |
#     LANG=C sort -k6,6                  |
#     self 6                        > $tmp-shisetsu_riyousha_forjoin
#
#     cat $tmp-jigyousho_riyousha_kari  |
#     join1 +ng key=6 $tmp-shisetsu_riyousha_forjoin  > /dev/null 2> $tmp-taishousha
#   fi
#
## 施設の選択のみ
#else
#  # 事業所選択なし(施設ログイン)で施設が全てだった場合、施設外もあわせる
##  if [ "${Shisetsu}" = "_" -a "${Jigyousho}" = "00" -a "$(cat $tmp-kengen_shisetsu | head -1)" = "0000" ] ; then
#  if [ "${Shisetsu}" = "_" -a "${Jigyousho}" = "00" ] ; then
#    # どこの施設にも所属しない人
#    cat $tmp-shisetsu_riyousha_status |
#    self 6 |
#    LANG=C sort -u > $tmp-shisetsu_riyousha_mas
#
#    cat $tmp-jigyousho_riyousha_status   |
##    awk '{print $0,"_","施設外"}'        |
##    self 1 NF-1 NF-1 NF-1 NF 2/NF-2      |
#    join1 +ng key=6 $tmp-shisetsu_riyousha_mas - >$tmp-shisetsu_aru 2>$tmp-shisetsu_nashi
#
##  cat $tmp-shisetsu_riyousha_kari |
##  if [ -s $tmp-shisetsu_nashi ] ; then
##    cat - $tmp-shisetsu_nashi
##  else
##    cat -
##  fi |
# if [ -s $tmp-shisetsu_nashi ] ; then
#   cat $tmp-jigyousho_riyousha_kari |
#   self 6 |
#   LANG=C sort -u |
#   cjoin0 key=6 - $tmp-shisetsu_nashi |
#   cat - $tmp-shisetsu_riyousha_kari
# else
#   cat $tmp-shisetsu_riyousha_kari
# fi |
#
##    if [ -s $tmp-jigyousho_riyousha_kengen ] ; then
##      cat - $tmp-jigyousho_riyousha_kengen 
##    else
##      cat -
##    fi |
#   awk '{if($1~/^0/){print "2",$0}
#         else if($1~/^1/){print "1",$0}
#        }'                       |
#   LANG=C sort -k7,7 -k1,1 -k8,9 |
#   getlast 7 7                   |
#   delf 1                  > $tmp-taishousha
##    LANG=C sort -k6,6 > $tmp-taishousha
#
#  # 事業所選択なしで、施設全てだった場合は施設：全て(権限のある施設)
##  elif [ "${Shisetsu}" = "_" -a "${Jigyousho}" = "9999" -a "$(cat $tmp-kengen_shisetsu | head -1)" = "0000" ] ; then
#  elif [ "${Shisetsu}" = "_" -a "${Jigyousho}" = "9999" ] ; then
#    cat $tmp-shisetsu_riyousha_kari      > $tmp-taishousha
##    cjoin1 key=1 $tmp-kengen_shisetsu - > $tmp-taishousha
#  # 施設絞りこみ
#  elif [ "${Shisetsu}" != "00" ] ; then
#    cat $tmp-shisetsu_riyousha_kari     |
#    awk '$1=="'${Shisetsu}'"{print $0}' > $tmp-taishousha
#  # 施設外
#  else
##    cat $tmp-jigyousho_riyousha_status   |
##    awk '{print $0,"_","施設外"}'        |
##    self 1 NF-1 NF-1 NF-1 NF 2/NF-2      |
#    cat $tmp-shisetsu_riyousha_status |
#    self 6         |
#    LANG=C sort -u |
##    cjoin1 +ng key=6 - $tmp-jigyousho_riyousha_status > /dev/null 2> $tmp-taishousha
#    cjoin1 +ng key=6 - $tmp-jigyousho_riyousha_status > /dev/null 2> $tmp-shisetsu_gai
#
#   if [ -s $tmp-shisetsu_gai ] ; then
##     cat $tmp-jigyousho_riyousha_kari |
##     self 6 |
##     LANG=C sort -u |
##     cjoin0 key=6 - $tmp-shisetsu_gai >$tmp-taishousha
#      cat $tmp-shisetsu_gai > $tmp-taishousha
#   else
#     : >$tmp-taishousha
#   fi
#
#  fi
#fi
#

  # ケアマネの絞込みがあった場合データの絞込み
  if [ ! -z "${Caremaneger}" -a "${Caremaneger}" != "_" ] ; then
    cat ${pompa_dir}/RIYOUSHA/RIYOUSHA_KYOTAKU_JIGYOUSHO |
# 1:利用者(入居者)ID 2:利用者居宅支援事業所ID 3:事業所Id 4:担当ケアマネID(自事業所) 5:担当ケアマネNAME(他事業所)
# 6:期間From         7:期間To
    awk '$4=="'${Caremaneger}'"{print $1}' > $tmp-caremanager_shiborikomi
# 1:利用者(入居者)ID
    [ ! -s $tmp-caremanager_shiborikomi ] && echo "_" > $tmp-caremanager_shiborikomi
  fi

  if [ ! -z "${Caremaneger}" -a "${Caremaneger}" != "_" -a -s $tmp-caremanager_shiborikomi -a -s $tmp-taishousha ] ; then
    cat $tmp-caremanager_shiborikomi |
    LANG=C sort                      |
    cjoin1 key=6 - $tmp-taishousha
  else
   cat $tmp-taishousha

  fi  |
  self 1/6 |
  LANG=C sort -k6,6 |
  getlast 6 6 >  $tmp-taishousha_list


#--------------------------------------------------------------
# ファイルの取得
#RIYOUSHA_KIHON
# 1:利用者(入居者)ID 2:利用者(入居者)氏名 3:利用者(入居者)氏名カナ 4:性別           5:和暦：元号
# 6:和暦：誕生年     7:和暦：誕生月       8:和暦：誕生日           9:西暦：生年月日 10:感染症
# 11:入居前郵便番号  12:入居前住所        13:現郵便番号            14:現住所        15:携帯電話番号
# 16:E-MAILアドレス  17:趣味特技          18:備考                  19:削除フラグ    20:更新日時
# 21:UserID

HONJITSU=$(date +%m%d)

cp -p $tmp-taishousha_list $work_dir/taishousha_list_kihon_ichiran

cat ${pompa_dir}/RIYOUSHA/RIYOUSHA_KIHON  |

# 施設～居室の情報で絞込み
join2 +"_" key=6 - $tmp-taishousha_list   |
# 1:施設ID           2:建屋ID             3:フロア                 4:ユニットID      5:居室
# 6:利用者(入居者)ID 7:利用者(入居者)氏名 8:利用者(入居者)氏名カナ 9:性別            10:和暦：元号
# 11:和暦：誕生年    12:和暦：誕生月      13:和暦：誕生日          14:西暦：生年月日 15:感染症
# 16:入居前郵便番号  17:入居前住所        18:現郵便番号            19:現住所         20:携帯電話番号
# 21:E-MAILアドレス  22:趣味特技          23:備考                  24:削除フラグ     25:更新日時
# 26:UserID

# 不要な有効フラグ、削除フラグ～UseiIDを除外
self 5/NF-3 1/4 |
# 1:居室番号      2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:和暦：元号    7:和暦：誕生年     8:和暦：誕生月       9:和暦：誕生日           10:西暦：生年月日
# 11:感染症       12:入居前郵便番号  13:入居前住所        14:現郵便番号            15:現住所
# 16:携帯電話番号 17:E-MAILアドレス  18:趣味特技          19:備考                  20:施設ID
# 21:建屋ID       22:フロア          23:ユニットID

#--------------------------------------------------------------
# 年齢の計算
awk '{print $0,substr($10,5,4)}' |
#awk '{if($NF>="'${HONJITSU}'"){print $0,("'${today}'"-$10)/10000}
#      else{print $0,("'${today}'"-$10)/10000-1}}'  |
awk '{print $0,("'${today}'"-$10)/10000}' |
delf NF-1 |
marume -sage 24.0 |

#--------------------------------------------------------------
# 検索
# --------------------------
# --------------------------
# 性別
if [ ! -z "${Seibetsu}" -a "${Seibetsu}" != "_" ] ; then
  awk '$5=="'${Seibetsu}'"'
else
  cat -
fi |
# --------------------------
# --------------------------
# 生年月日(FROM)
if [ -z "${YearFrom}" -o "${YearFrom}" = "_" ] ; then
  cat - 
else
  awk '$10>="'${BIRTH_FROM}'"'
fi |
# --------------------------
# --------------------------
# 生年月日(TO)
if [ -z "${YearTo}" -o "${YearTo}" = "_" ] ; then
  cat -                                           
else
  awk '$10<="'${BIRTH_TO}'"'
fi  > $tmp-data

cp -p $tmp-data $work_dir/data_kihon_ichiran
# 1:居室番号      2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:和暦：元号    7:和暦：誕生年     8:和暦：誕生月       9:和暦：誕生日           10:西暦：生年月日
# 11:感染症       12:入居前郵便番号  13:入居前住所        14:現郵便番号            15:現住所
# 16:携帯電話番号 17:E-MAILアドレス  18:趣味特技          19:備考                  20:施設ID
# 21:建屋ID       22:フロア          23:ユニットID        24:年齢

# --------------------------
# --------------------------

cat ${tbl_dir}/ZEIRITSU_GENGOU_MASTER/GENGOU |
self 1 2   >  $tmp-gengou

awk '$(NF-2)!="9"' ${pompa_dir}/RIYOUSHA/RIYOUSHA_RENRAKUSAKI > $tmp-RIYOUSHA_RENRAKUSAKI

# 20150830add QR Suzuki  ↓
#QR印刷ボタン押下時は検索表示項目（契約情報、利用料などのラジオボタン）の選択値をクリアする。
if [ "${MODE}" = "qr_search" ] ; then
  HyoujiKoumoku=""
fi
# 20150830add QR Suzuki  ↑

# 表示項目による絞込み
if [ "${HyoujiKoumoku}" = "mimoto" -a -s "$tmp-data" ] ; then
  # 連絡先の準備
  cat $tmp-data |
  self 1 2 |
  LANG=C sort -k2,2 |
  tee $tmp-riyousha_kyoshitsu_data |
  self 2 |
  join2 +"_" key=1 - $tmp-RIYOUSHA_RENRAKUSAKI |
  LANG=C sort -k6,6 |
  # 続柄名称取得
  join2 key=6 ${tbl_dir}/CONFIG/ZOKUGARA_MASTER - |
  awk '{if($6=="999"){print $0,$8}else{print $0,$7}}' |
  self 1/5 NF 8/NF-1        |
  LANG=C sort -k1,1n -k8,8n |
# 1:利用者(入居者)ID 2:連絡先ＩＤ     3:連絡先氏名     4:連絡先氏名カナ 5:連絡先性別
# 6:連絡先続柄       7:連絡先続柄備考 8:連絡先優先順位 9:電話番号1      10:電話番号2
# 11:E-mail          12:郵便番号      13:住所          14:勤務先        15:請求書送先
# 16:身元引受人      17:返還金受取人  18:代理人        19:備考
  
  # 必要な情報のみにする
  self 1 3 6 10 9 13  |
  awk '{gsub("_","###SPACE###",$6);print}' > $tmp-renrakusaki_jyunbi
# 1:居室番号  2:利用者(入居者)ID 3:連絡先氏名 4:連絡先続柄 5:電話番号1
# 6:電話番号2 7:住所

  getfirst 1 1 $tmp-renrakusaki_jyunbi  > $tmp-renrakusaki1
  
  cat $tmp-renrakusaki_jyunbi |
  join1 +ng key=1/6 $tmp-renrakusaki1 - >$tmp-ok 2>$tmp-ng
  # 連絡先１を抜かしたデータに連絡先1をつける
  if  [ -s $tmp-ng ] ;then
    cat $tmp-ng |
# 1:居室番号  2:利用者(入居者)ID 3:連絡先氏名 4:連絡先続柄 5:電話番号1
# 6:電話番号2 7:住所
    loopj -d_ num=1 $tmp-renrakusaki1 - |
# 1:居室番号   2:利用者(入居者)ID 3:連絡先氏名       4:連絡先続柄 5:電話番号1
# 6:電話番号2  7:住所             8:利用者(入居者)ID 9:連絡先氏名 10:連絡先続柄
# 11:電話番号1 12:電話番号2       13:住所
    getfirst 1 1 |
   join2 +"_" key=2 - $tmp-riyousha_kyoshitsu_data > $tmp-renrakusaki1and2
  else
    cat $tmp-renrakusaki1 |
    awk '{print $0,"_","_","_","_","_"}' |
    join2 +"_" key=2 - $tmp-riyousha_kyoshitsu_data  > $tmp-renrakusaki1and2
  fi
[ ! -s $tmp-renrakusaki1and2 ] && echo "_ _ _ _ _ _ _ _ _ _ _ _ _" >  $tmp-renrakusaki1and2   


 # 介護度の用意
  cat $tmp-data |
  self 2 |
  LANG=C sort | 
  join2 key=1 - ${pompa_dir}/RIYOUSHA/RIYOUSHA_KAIGOHOKEN |
# 1:利用者(入居者)ID      2:介護保険ＩＤ          3:介護度              4:保険者番号                                        5:保険者名
# 6:被保険者番号          7:性別                  8:生年月日：和暦元号  9:生年月日：和暦誕生年                              10:生年月日：和暦誕生月
# 11:生年月日：和暦誕生日 12:郵便番号             13:住所               14:認定年月：和暦元号                               15:認定年月：和暦年
# 16:認定年月：和暦月     17:認定年月：和暦日     18:認定年月：西暦     19:有効期間FROM：和暦元号                           20:有効期間FROM：和暦年
# 21:有効期間FROM：和暦月 22:有効期間FROM：和暦日 23:有効期間FROM：西暦 24:有効期間TO：和暦元号                             25:有効期間TO：和暦年
# 26:有効期間TO：和暦月   27:有効期間TO：和暦日   28:有効期間TO：西暦   29:居宅介護支援者又は介護予防事業者及びその事業所名 30:認定審査会の意見及びサービスの種類指定
# 31:備考                 32:利用者負担率
  awk '$23<="'${today}'"&&$28>="'${today}'"&&$(NF-2)!="9"{print $1,$3}'  > $tmp-kaigodo_data1
# 1:利用者(入居者)ID  2:介護度NO

  if  [ -s $tmp-kaigodo_data1 ] ; then
   cat $tmp-kaigodo_data1 |
   cjoin2 key=2 ${tbl_dir}/CONFIG/KAIGODO_MASTER - |
# 1:利用者(入居者)ID 2:介護度No 3:介護度 4:点数 5:期間FROM
# 6:期間TO
   self 1 3 > $tmp-kaigodo_data2
  else
   echo "_ _" > $tmp-kaigodo_data2
  fi

  cat $tmp-kaigodo_data2 |
  join2 +"_" key=2 - $tmp-riyousha_kyoshitsu_data  |
  LANG=C sort -k2,2 >$tmp-kaigodo_data


# 1:利用者(入居者)ID  2:介護度
  cat $tmp-data     |
# 1:居室番号      2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:和暦：元号    7:和暦：誕生年     8:和暦：誕生月       9:和暦：誕生日           10:西暦：生年月日
# 11:感染症       12:入居前郵便番号  13:入居前住所        14:現郵便番号            15:現住所
# 16:携帯電話番号 17:E-MAILアドレス  18:趣味特技          19:備考                  20:施設ID
# 21:建屋ID       22:フロア          23:ユニットID        24:年齢
  LANG=C sort -k2,2 |
  loopj -d_ num=2 - $tmp-renrakusaki1and2 |
  loopj -d_ num=2 - $tmp-kaigodo_data |
# 1:居室番号      2:利用者(入居者)ID 3::利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:和暦：元号ID  7:和暦：誕生年     8:和暦：誕生月        9:和暦：誕生日           10:西暦：生年月日
# 11:感染症       12:入居前郵便番号  13:入居前住所         14:現郵便番号            15:現住所
# 16:携帯電話番号 17:E-MAILアドレス  18:趣味特技           19:備考                  20:施設ID
# 21:建屋ID       22:フロア          23:ユニット           24:年齢                  25:連絡先氏名
# 26:連絡先続柄   27:電話番号1       28:電話番号2          29:住所                  30:連絡先氏名
# 31:連絡先続柄   32:電話番号1       33:電話番号2          34:住所                  35:介護度
  LANG=C sort -k6,6 |
  join2 key=6 $tmp-gengou - |
# 1:居室番号        2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:和暦：元号ID    7:和暦：元号名称   8:和暦：誕生年       9:和暦：誕生月           10:和暦：誕生日
# 11:西暦：生年月日 12:感染症          13:入居前郵便番号    14:入居前住所            15:現郵便番号
# 16:現住所         17:携帯電話番号    18:E-MAILアドレス    19:趣味特技              20:備考
# 21:施設ID         22:建屋ID          23:フロア            24:ユニット              25:年齢
# 26:連絡先氏名     27:連絡先続柄      28:電話番号1         29:電話番号2             30:住所
# 31:連絡先氏名     32:連絡先続柄      33:電話番号1         34:電話番号2             35:住所
# 36:介護度


  #とりあえず項目揃え
#  awk '$1!="_"&&$2!="_"{print $1,$2,$3,$4,$5=="1"?"男":"女",$7$8"年"$9"月"$10"日",int($25),$NF,$17,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$21,$22,$23,$24,$13,$16}'
  # 入居者前住所をセット（8/24）
  awk '$1!="_"&&$2!="_"{print $1,$2,$3,$4,$5=="1"?"男":"女",$7$8"年"$9"月"$10"日",int($25),$NF,$17,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$21,$22,$23,$24,$13,$14}'
# 1:居室番号    2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:生年月日    7:年齢             8:介護度             9:携帯電話番号           10:連絡先氏名
# 11:連絡先続柄 12:電話番号1       13:電話番号2         14:住所                  15:連絡先氏名
# 16:連絡先続柄 17:電話番号1       18:電話番号2         19:住所                  20:施設ID
# 21:建屋ID     22:フロア          23:ユニット
elif [ "${HyoujiKoumoku}" = "kasankyuufu" -a -s "$tmp-data" ] ; then
  cat $tmp-data |
# 1:居室番号      2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:和暦：元号    7:和暦：誕生年     8:和暦：誕生月       9:和暦：誕生日           10:西暦：生年月日
# 11:感染症       12:入居前郵便番号  13:入居前住所        14:現郵便番号            15:現住所
# 16:携帯電話番号 17:E-MAILアドレス  18:趣味特技          19:備考                  20:施設ID
# 21:建屋ID       22:フロア          23:ユニットID        24:年齢
  LANG=C sort -k6,6 |
  join2 key=6 $tmp-gengou - |
  LANG=C sort -k2,2 |
  if [ -s ${pompa_dir}/RIYOUSHA/RIYOUSHA_KASANKYUUFU ] ; then
    join2 +"_" key=2 ${pompa_dir}/RIYOUSHA/RIYOUSHA_KASANKYUUFU - 
  else
    awk '{print $0,"_","_","_","_","_","_","_","_"}' |
    self 1 2 NF-7/NF 3/NF-8
  fi|    
# 1:居室番号            2:利用者(入居者)ID        3:個別機能訓練  4:夜間看護体制    5:医療機関連携
# 6:看取加算同意        7:その他備考              8:削除フラグ    9:更新日          10:更新者
# 11:利用者(入居者)氏名 12:利用者(入居者)氏名カナ 13:性別         14:和暦：元号     15:和暦：元号名称
# 16:和暦：誕生年       17:和暦：誕生月           18:和暦：誕生日 19:西暦：生年月日 20:感染症
# 21:入居前郵便番号     22:入居前住所             23:現郵便番号   24:現住所         25:携帯電話番号
# 26:E-MAILアドレス     27:趣味特技               28:備考         29:施設ID         30:建屋ID
# 31:フロア             32:ユニットID             33:年齢
  awk '{print $1,$2,$11,$12,$13=="1"?"男":"女",$15$16"年"$17"月"$18"日",int($33),$3=="1"?"o":"_",$4=="1"?"o":"_",$5=="1"?"o":"_",$6=="1"?"o":"_",$29,$30,$31,$32}'
# 1:居室番号      2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:生年月日      7:年齢             8:個別機能訓練       9:夜間看護体制           10:医療機関連携
# 11:看取加算同意 12:施設ID          13:建屋ID            14:フロア                15:ユニットID
elif [ "${HyoujiKoumoku}" = "kansenshou" ] ; then

# 感染症
cat << FIN > $tmp-kansenshou_jyunbi
1 @
2 ＨＣＶ
3 ＨＢＶ
4 梅毒
5 ＨＩＶ
FIN

  :> $tmp-tsuika_kansenshou
  if [ -s ${pompa_dir}/RIYOUSHA/RIYOUSHA_KINKYUUJI_KOJINJYOUHOU_TSUIKA ] ; then
     awk '$(NF-2)!="9"{hbs="";hcv="";rpr="";sonota="";if($2=="1"){hbs="HBs　"};if($4=="1"){hcv="HCV　"};if($6=="1"){rpr="RPR　"};if($11!="_"){sonota=$11};print $1,hbs hcv rpr sonota}' ${pompa_dir}/RIYOUSHA/RIYOUSHA_KINKYUUJI_KOJINJYOUHOU_TSUIKA |
     awk '{if(NF==1){$2="_"};print $0}' |
     sed 's/\\n//g' |
     LANG=C sort -k1,1 > $tmp-tsuika_kansenshou
  fi

  [ "$(gyo $tmp-tsuika_kansenshou)" = "0" ] && echo "_" "_" > $tmp-tsuika_kansenshou
  
  cat $tmp-data |
#  LANG=C sort -k11,11 |
#  join2 +"_" key=11 $tmp-kansenshou_jyunbi - |
  LANG=C sort -k2,2 |
  join2 +"_" key=2 $tmp-tsuika_kansenshou |
  self 1 2 4/12 3 13/NF |
  LANG=C sort -k6,6 |
  join2 key=6 $tmp-gengou - |
# 1:居室番号        2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:和暦：元号      7:和暦：元号名称   8:和暦：誕生年       9:和暦：誕生月           10:和暦：誕生日
# 11:西暦：生年月日 12:感染症          13:感染症名          14:入居前郵便番号        15:入居前住所
# 16:現郵便番号     17:現住所          18:携帯電話番号      19:E-MAILアドレス        20:趣味特技
# 21:備考           22:施設ID          23:建屋ID            24:フロア                25:ユニットID
# 26:年齢
  awk '{print  $1,$2,$3,$4,$5=="1"?"男":"女",$7$8"年"$9"月"$10"日",int($26),$13,$22,$23,$24,$25}'
# 1:居室番号 2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:生年月日 7:年齢             8:感染症             9:施設ID                 10:建屋ID
# 11:フロア  12:ユニットID

elif [ "${HyoujiKoumoku}" = "nintei" -a -s "$tmp-data" ] ; then

 # 介護度の用意
  cat $tmp-data |
  self 2 |
  LANG=C sort |
  join2 key=1 - ${pompa_dir}/RIYOUSHA/RIYOUSHA_KAIGOHOKEN |
# 1:利用者(入居者)ID      2:介護保険ＩＤ          3:介護度              4:保険者番号                     5:保険者名
# 6:被保険者番号          7:性別                  8:生年月日：和暦元号  9:生年月日：和暦誕生年           10:生年月日：和>暦誕生月
# 11:生年月日：和暦誕生日 12:郵便番号             13:住所               14:認定年月：和暦元号            15:認定年月：和>暦年
# 16:認定年月：和暦月     17:認定年月：和暦日     18:認定年月：西暦     19:有効期間FROM：和暦元号        20:有効期間FROM>：和暦年
# 21:有効期間FROM：和暦月 22:有効期間FROM：和暦日 23:有効期間FROM：西暦 24:有効期間TO：和暦元号          25:有効期間TO：>和暦年
# 26:有効期間TO：和暦月   27:有効期間TO：和暦日   28:有効期間TO：西暦   29:居宅介護支援者又は介護予防事業者及びその事業所名 30:認定審査会の>意見及びサービスの種類指定
# 31:備考                 32:利用者負担率
#  awk '$23<="'${today}'"&&$28>="'${today}'"&&$(NF-2)!="9"{print $1,$3,$14,$15,$16,$17,$19,$20,$21,$22,$24,$25,$26,$27}'  > $tmp-nintei_jyunbi

# 一番最新の介護情報(期間終わっているものでも最新ならおｋ)
  awk '$(NF-2)!="9"'  |
  LANG=C sort  -k1,1 -k23,24 |
  getlast 1 1         |
  awk '{print $1,$3,$14,$15,$16,$17,$19,$20,$21,$22,$24,$25,$26,$27}' > $tmp-nintei_jyunbi

# 1:利用者(入居者)ID      2:介護度                 3:認定年月：和暦元号    4:認定年月：和暦年     5:認定年月：和暦月
# 6:認定年月：和暦日      7:有効期間FROM：和暦元号 8:有効期間FROM>：和暦年 9:有効期間FROM：和暦月 10:有効期間FROM：和暦日
# 11:有効期間TO：和暦元号 12:有効期間TO：>和暦年   13:有効期間TO：和暦月   14:有効期間TO：和暦日

  if [ -s $tmp-nintei_jyunbi ] ; then
    cat $tmp-nintei_jyunbi  |   
    LANG=C sort -k11,11 |
    cjoin2 key=11 $tmp-gengou - |
    LANG=C sort -k7,7 |
    cjoin2 key=7 $tmp-gengou -  |
    LANG=C sort -k3,3 |
    cjoin2 key=3 $tmp-gengou -  |
    LANG=C sort -k2,2 |
    cjoin2 key=2 ${tbl_dir}/CONFIG/KAIGODO_MASTER - |
# 1:利用者(入居者)ID      2:介護度                  3:介護度名 4:点数                   5:期間FROM
# 6:期間TO                7:認定年月：和暦元号      8:元号名   9:認定年月：和暦年       10:認定年月：和暦月
# 11:認定年月：和暦日     12:有効期間FROM：和暦元号 13:元号名  14:有効期間FROM>：和暦年 15:有効期間FROM：和暦月
# 16:有効期間FROM：和暦日 17:有効期間TO：和暦元号   18:元号名  19:有効期間TO：>和暦年   20:有効期間TO：和暦月
# 21:有効期間TO：和暦日
    self 1 3 7/NF     |
    LANG=C sort       > $tmp-nintei_data
# 1:利用者(入居者)ID      2:介護度                3:認定年月：和暦元号     4:元号名  5:認定年月：和暦年
# 6:認定年月：和暦月      7:認定年月：和暦日      8:有効期間FROM：和暦元号 9:元号名  10:有効期間FROM>：和暦年
# 11:有効期間FROM：和暦月 12:有効期間FROM：和暦日 13:有効期間TO：和暦元号  14:元号名 15:有効期間TO：>和暦年
# 16:有効期間TO：和暦月   17:有効期間TO：和暦日
 fi
  cat $tmp-data |
# 1:居室番号      2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:和暦：元号    7:和暦：誕生年     8:和暦：誕生月       9:和暦：誕生日           10:西暦：生年月日
# 11:感染症       12:入居前郵便番号  13:入居前住所        14:現郵便番号            15:現住所
# 16:携帯電話番号 17:E-MAILアドレス  18:趣味特技          19:備考                  20:施設ID
# 21:建屋ID       22:フロア          23:ユニットID        24:年齢
  self 1/9 NF-4 NF-3 NF |
  LANG=C sort -k6,6 |
  cjoin2 key=6 $tmp-gengou - |
  awk '{print $1,$2,$3,$4,$5=="1"?"男":"女",$7$8"年"$9"月"$10"日",int($NF),$(NF-2),$(NF-1)}' |
# 1:居室番号  2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:生年月日  7:年齢             8:施設ID              9:建屋ID
  LANG=C sort -k2,2 |
  if [ -s $tmp-nintei_data ] ; then
    cjoin2 key=2 $tmp-nintei_data - |
# 1:居室番号               2:利用者(入居者)ID      3:介護度                4:認定年月：和暦元号     5:元号名
# 6:認定年月：和暦年       7:認定年月：和暦月      8:認定年月：和暦日      9:有効期間FROM：和暦元号 10:元号名
# 11:有効期間FROM>：和暦年 12:有効期間FROM：和暦月 13:有効期間FROM：和暦日 14:有効期間TO：和暦元号  15:元号名
# 16:有効期間TO：>和暦年   17:有効期間TO：和暦月   18:有効期間TO：和暦日   19:氏名                  20:氏名カナ
# 21:性別                  22:生年月日             23:施設ID               24:建屋ID                25:年齢
    awk '{print $1,$2,$(NF-6),$(NF-5),$(NF-4),$(NF-3),$(NF-2),$3,$5!="_"?$5$6"年"$7"月"$8"日":"_",$10!="_"?$10$11"年"$12"月"$13"日":"_",$15!="_"?$15$16"年"$17"月"$18"日":"_",$(NF-1),$NF,"@","@"}' 
# 1:居室番号    2:利用者(入居者)ID 3:氏名    4:氏名カナ 5:性別
# 6:生年月日    7:年齢             8:介護度  9:認定年月 10:有効期間FROM
# 11:有効期間TO 12:施設ID         13:建屋ID  14:フロア  15:ユニット
  else
   awk '{print $1,$2,$3,$4,$5,$6,$7,"@","@","@","@",$(NF-1),$(NF),"@","@"}'
  fi

elif [ "${HyoujiKoumoku}" = "keiyaku" -a -s "$tmp-data" ] ; then

  # 契約の準備
  self 1 2 ${tbl_dir}/KEIYAKU_MASTER/KEIYAKU_NAME > $tmp-keiyaku
  # 入居契約
  awk '$3=="'${Shisetsu}'"&&$9<="007"&&$(NF-2)!="9"{print $3,$4,$7,$0}' ${pompa_dir}/RIYOUSHA/RIYOUSHA_KEIYAKU |
# 1:施設ID      2:建屋ID      3:居室ID        4:利用者(入居者)ID 5:契約ID
# 6:施設ID      7:建屋ID      8:フロアID      9:ユニットID       10:居室ID
# 11:入居時年齢 12:契約種類ID 13:契約日       14:引渡し日        15:契約開始日
# 16:契約終了日 17:退去理由   18:退去理由詳細 19:備考            20:予備1
# 21:予備2      22:予備3      23:予備4        24:予備5           25:削除フラグ
# 26:更新日     27:更新者
  LANG=C sort -k1,4 -k16,16 -k15,15 |
  getlast 1 4                   |
  awk '{print $1,$2,$3,$4,$5,$12,$15!="_"?substr($15,1,4)"/"substr($15,5,2)"/"substr($15,7,2):"_",$16!="99999999"?substr($16,1,4)"/"substr($16,5,2)"/"substr($16,7,2):"_"}'  |
  cjoin1 key=6 $tmp-keiyaku -   |
  LANG=C sort -u > $tmp-riyousha_keiyaku
# 1:施設ID     2:建屋ID     3:居室ID     4:利用者(入居者)ID 5:契約ID
# 6:契約種類ID 7:契約種類名 8:契約開始日 9:契約終了日

  if [ -s $tmp-riyousha_keiyaku ] ; then
  #------
  # 契約金・利用料
  #-----
  self 4 1 5 $tmp-riyousha_keiyaku |
  LANG=C sort -u                   > $tmp-riyousha_keiyaku_key

  self 2 3 ${tbl_dir}/RIYOURYOU_MASTER/KEIYAKUKIN_MASTER |
  LANG=C sort -u > $tmp-keiyakukin
  self 2 3 ${tbl_dir}/RIYOURYOU_MASTER/RIYOURYOU_MASTER  |
  LANG=C sort -u > $tmp-riyouryou

  # 契約金の準備
  awk '$2=="'${Shisetsu}'"&&$(NF-2)!="9"{print $0}' ${pompa_dir}/RIYOUSHA/RIYOUSHA_KEIYAKUKIN |
  # 本日既に契約切れているものはその印をつけておく
  awk '{if($7>="'${today}'"){print $0,"_"}else{print $0,"(済)"}}'  |
# 1:利用者(入居者)ID 2:施設ID      3:契約ID    4:契約金種別ID  5:番号
# 6:償却開始日       7:償却終了日  8:金額      9:償却回数      10:非返却金額
# 11:算出方法        12:特販ID     13:値引額   14:値引き後金額 15:特販期間FROM
# 16:特販期間TO      17:予備1      18:予備2    19:予備3        20:予備4
# 21:予備5           22:削除フラグ 23:更新時間 24:更新者
#  self 1/4       |
  self 1 2 4 NF   |
  LANG=C sort -u  > $tmp-riyousha_keiyakukin_before
  if [ -s $tmp-riyousha_keiyakukin_before ] ; then
#    join0 key=1/3 $tmp-riyousha_keiyaku_key $tmp-riyousha_keiyakukin_before |
# 1:利用者(入居者)ID 2:施設ID      3:契約ID    4:契約金種別ID
    cat $tmp-riyousha_keiyakukin_before |
# 1:利用者(入居者)ID 2:施設ID      3:契約金種別ID  4:済or_
  # 契約金名を付ける
#    cjoin1 key=4 $tmp-keiyakukin - |
    cjoin1 key=3 $tmp-keiyakukin - |
    rank ref=1     |
    awk '{if($NF!="_"){print $0,$NF$(NF-1)}else{print $0,$(NF-1)}}' |
    self 2 1 NF    |
# 1:利用者(入居者)ID 2:番号 3:契約金種別名
    map -m@ num=1  |
    tail -n +2     |
    sed 's/ /<br>/g'  |
    sed 's/<br>/ /1'  |
#    sed 's/<br>@/_/1' |
    sed 's/<br>@//g'  |
    LANG=C sort 
  else
    :
  fi > $tmp-riyousha_keiyakukin

  # 利用料の準備
  awk '$2=="'${Shisetsu}'"&&$(NF-2)!="9"{print $0}' ${pompa_dir}/RIYOUSHA/RIYOUSHA_RIYOURYOU  |
  # 本日既に契約切れているものはその印をつけておく
  awk '{if($7>="'${today}'"){print $0,"_"}else{print $0,"(済)"}}'  |
# 1:利用者(入居者)ID 2:施設ID        3:契約ID      4:利用料種別ID 5:番号
# 6:起算開始日       7:起算終了日    8:金額        9:特販ID       10:値引額
# 11:値引き後金額    12:特販期間FROM 13:特販期間TO 14:予備1       15:予備2
# 16:予備3           17:予備4        18:予備5      19:削除フラグ  20:更新時間
# 21:更新者
  self 1 2 4 NF      |
  LANG=C sort -u     > $tmp-riyousha_riyouryou_before

  if [ -s $tmp-riyousha_riyouryou_before ] ; then
#    join0 key=1/2 $tmp-riyousha_keiyaku_key $tmp-riyousha_riyouryou_before |
# 1:利用者(入居者)ID 2:施設ID      3:契約ID    4:利用料種別ID
    cat $tmp-riyousha_riyouryou_before |
# 1:利用者(入居者)ID 2:施設ID  3:利用料種別ID  4:済or_
  # 利用料名を付ける
#    cjoin1 key=4 $tmp-riyouryou - |
    cjoin1 key=3 $tmp-riyouryou - |
    rank ref=1     |
    awk '{if($NF!="_"){print $0,$NF$(NF-1)}else{print $0,$(NF-1)}}' |
    self 2 1 NF    |
# 1:利用者(入居者)ID 2:番号 3:利用料種別名
    map -m@ num=1  |
    tail -n +2     |
    sed 's/ /<br>/g'  |
    sed 's/<br>/ /1'  |
#    sed 's/<br>@/_/1' |
    sed 's/<br>@//g'  |
    LANG=C sort 
  else
    :
  fi > $tmp-riyousha_riyouryou

#cp $tmp-* /home/hands/work/okuda

    cat $tmp-data |
# 1:居室番号      2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:和暦：元号    7:和暦：誕生年     8:和暦：誕生月       9:和暦：誕生日           10:西暦：生年月日
# 11:感染症       12:入居前郵便番号  13:入居前住所        14:現郵便番号            15:現住所
# 16:携帯電話番号 17:E-MAILアドレス  18:趣味特技          19:備考                  20:施設ID
# 21:建屋ID       22:フロア          23:ユニットID        24:年齢
    self NF-4 NF-3 1/NF |
    LANG=C sort         |
    cjoin2 key=1/4 $tmp-riyousha_keiyaku - |
    delf 1 2            |
# 1:居室番号      2:利用者(入居者)ID 3:契約ID             4:契約種類ID             5:契約種類名
# 6:契約開始日    7:契約終了日       8:利用者(入居者)氏名 9:利用者(入居者)氏名カナ 10:性別
# 11:和暦：元号   12:和暦：誕生年    13:和暦：誕生月      14:和暦：誕生日          15:西暦：生年月日
# 16:感染症       17:入居前郵便番号  18:入居前住所        19:現郵便番号            20:現住所
# 21:携帯電話番号 22:E-MAILアドレス  23:趣味特技          24:備考                  25:施設ID
# 26:建屋ID       27:フロア          28:ユニットID        29:年齢
    self 1 2 8/15 NF 3/7 NF-4/NF-1          
# 1:居室番号    2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:和暦：元号  7:和暦：誕生年     8:和暦：誕生月       9:和暦：誕生日           10:西暦：生年月日
# 11:年齢       12:契約ID          13:契約種類ID        14:契約種類名            15:契約開始日
# 16:契約終了日 17:施設ID          18:建屋ID            19:フロア                20:ユニットID
  else
    cat $tmp-data        |
    awk '{print $0,"_"}' |
    self 1/10 NF-1 NF NF NF NF NF NF-5/NF-2
# 1:居室番号    2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:和暦：元号  7:和暦：誕生年     8:和暦：誕生月       9:和暦：誕生日           10:西暦：生年月日
# 11:年齢       12:契約ID          13:契約種類ID        14:契約種類名            15:契約開始日
# 16:契約終了日 17:施設ID          18:建屋ID            19:フロア                20:ユニットID        
  fi |
    cjoin2 key=6 $tmp-gengou - |
    delf 6                     |
    awk '{print $1,$2,$3,$4,$5=="1"?"男":"女",$6$7"年"$8"月"$9"日",int($11),$12,$13,$14,$15,$16,$17,$18,$19,$20}' |
    awk '{if($9=="001"){print $0,"#E61796"}
          else if($9=="002"){print $0,"#FF6200"}
          else if($9>="003"&&$9<="007"){print $0,"blue"}
          else{print $0,"@"}
         }'                    |
   self 1/NF-5 NF NF-4/NF-1    > $tmp-keiyaku_result
#cp $tmp-* /home/hands/work/okuda
# 1:居室番号    2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:生年月日    7:年齢             8:契約ID             9:契約種類ID             10:契約種類名
# 11:契約開始日 12:契約終了日      13:色                14:施設ID                15:建屋ID
# 16:フロア     17:ユニットID

  cat $tmp-keiyaku_result |
  if [ -s "$tmp-riyousha_keiyakukin" ] ; then
    cjoin2 key=2 $tmp-riyousha_keiyakukin -
  else
    awk '{print $0,"_"}' |
    self 1 2 NF 3/NF-1
  fi |
  if [ -s "$tmp-riyousha_riyouryou" ] ; then
    cjoin2 key=2 $tmp-riyousha_riyouryou -
  else
    awk '{print $0,"_"}' |
    self 1 2 NF 3/NF-1
  fi |
# 1:居室番号               2:利用者(入居者)ID 3:利用料      4:契約金      5:利用者(入居者)氏名
# 6:利用者(入居者)氏名カナ 7:性別             8:生年月日    9:年齢        10:契約ID
# 11:契約種類ID            12:契約種類名      13:契約開始日 14:契約終了日 15:色
# 16:施設ID                17:建屋ID          18:フロア     19:ユニットID
  self 1 2 5/NF-4 4 3 NF-3/NF
# 1:居室番号    2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:生年月日    7:年齢             8:契約ID             9:契約種類ID             10:契約種類名
# 11:契約開始日 12:契約終了日      13:色                14:利用料                15:契約金
# 16:施設ID     17:建屋ID          18:フロア            19:ユニットID

# <<<<<Aoyama Add(20150904) 
elif [ "${HyoujiKoumoku}" = "kihon" -a  -s "$tmp-data" ] ; then
  cp -p $tmp-data $work_dir/data_kihon
  self 1 2 20 21 24 $tmp-data |
  LANG=C sort -k2,2  |
  join1 key=2 <(delf NF-2/NF ${pompa_dir}/RIYOUSHA/RIYOUSHA_KIHON) |
  join2 +"_" key=2 <(self 1 2 ${pompa_dir}/RIYOUSHA/RIYOUSHA_TEL) |
  self 1 2 4/NF 3    |
  cjoin2 key=6 $tmp-gengou - |
  delf 6                     |
  awk '{print $1,$2,$3,$4,$5=="1"?"男":"女",$6$7"年"$8"月"$9"日",$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23}'
#elif [ "${HyoujiKoumoku}" = "shousai" -a "${HyoujiShousai}" = "Keiyaku" -a -s "$tmp-data" ] ; then
elif [ "${HyoujiKoumoku}" = "fullkeiyaku" -a -s "$tmp-data" ] ; then
  # 契約の準備
  displayTaishouToday=$(date +'%Y%m%d')
  self 2 1 2 $tmp-data |
  LANG=C sort -k1,1  > $tmp-tateya_nyukyosha
  
  LANG=C sort -k1,1 ${pompa_dir}/RIYOUSHA/RIYOUSHA_KEIYAKU |
  join1 key=1 $tmp-tateya_nyukyosha |
  delf 1 |
  awk '$(NF-2)!="9"{print $0}' |
  if [ "${TaikyoshaHyouji}" = "0" ] ; then
     awk '$13<="'${displayTaishouToday}'"&&"'${displayTaishouToday}'"<=$14'
  else
     cat -
  fi |
  self 1 3 4 8 10 13 14 17 NF-1 NF 2 > $tmp-shousai_keiyaku_data

  if [ -s $tmp-shousai_keiyaku_data ] ; then
     cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON |
     self 1 2 > $tmp-shisetsu_name
     cat ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER |
     self 1 2 >> $tmp-shisetsu_name

     cat $tmp-shisetsu_name |
     LANG=C sort -u > $tmp-shisetsu_result

     self 1 2 ${tbl_dir}/KEIYAKU_MASTER/KEIYAKU_NAME > $tmp-keiyaku_shurui
     cat ${tbl_dir}/JYUUGYOUIN_MASTER/USER_MASTER |
     self 1 2 > $tmp-userid

     # 施設利用者の情報取得
     #awk '$(NF-2)!="9"&&$1=="'${Shisetsu}'"' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
     if [ "${TaikyoshaHyouji}" = "0" ] ; then
         awk '$(NF-2)!="9"&&$7<="'${displayTaishouToday}'"&&"'${displayTaishouToday}'"<=$8' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS
     else
         awk '$(NF-2)!="9"' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS
     fi |
     self 6 1 2 |
     LANG=C sort -k1,1 > $tmp-shisetsu_riyousha_status_info_work
     # 事業所利用者の情報取得
     awk '$(NF-2)!="9"{print $2,$1,"_"}' ${pompa_dir}/RIYOUSHA/JIGYOUSHO_RIYOUSHA_STATUS |
     LANG=C sort -k1,1 |
     join0 +ng key=1 $tmp-shisetsu_riyousha_status_info_work > /dev/null 2> $tmp-jigyousho_riyousha_status_info

     cat $tmp-shisetsu_riyousha_status_info_work $tmp-jigyousho_riyousha_status_info |
     LANG=C sort -k1,1 > $tmp-shisetsu_riyousha_status_info

     [ "$(gyo $tmp-shisetsu_riyousha_status_info)" = "0" ] && echo "_" "_" "_" > $tmp-shisetsu_riyousha_status_info

     cat $tmp-shousai_keiyaku_data |
     LANG=C sort -k10,10 |
     cjoin1 key=10 $tmp-userid - |
     delf NF-2 |
     LANG=C sort -k4,4 |
     cjoin2 key=4 $tmp-keiyaku_shurui - |
     LANG=C sort -k3,3 |
     cjoin2 key=3 $tmp-shisetsu_result - |
# 1:居室      2:?         3:施設        4:施設名     5:居室
# 6:?         7:契約種類  8:契約開始日  9:契約終了日 10:備考
# 11:更新日時 12:ユーザID 13:ご入居者ID
     LANG=C sort -k13,13 |
     join1 key=13 $tmp-shisetsu_riyousha_status_info |
     join1 key=13 <(self 1/3 ${pompa_dir}/RIYOUSHA/RIYOUSHA_MASTER) |
# 1:居室          2:?         3:施設      4:施設名      5:居室
# 6:?             7:契約種類  8:契約名    9:契約開始日  10:契約終了日
# 11:備考         12:更新日時 13:ユーザID 14:ご入居者ID 15:ご入居者名
# 16:入居者名カナ 17:入居施設 18:入居建屋
     LANG=C sort -k7,7 |
     join1 key=7 $tmp-keiyaku_shurui |
     awk '{print $0,"_","_"}' |
     LANG=C sort -k1,1nr |
# getlastでサマリされないように
     rank |
     self 2/5 1 6/NF
  else
     :
  fi
#elif [ "${HyoujiKoumoku}" = "shousai" -a "${HyoujiShousai}" = "Riyouryou" -a -s "$tmp-data" ] ; then
elif [ "${HyoujiKoumoku}" = "riyouryou" -a -s "$tmp-data" ] ; then
  displayTaishouToday=$(date +'%Y%m%d')
  self 2 1 2 $tmp-data |
  LANG=C sort -k1,1  > $tmp-tateya_nyukyosha  

# 1:ご入居者ID    2:契約施設ID  3:契約居室    4:利用料ID     5:連番
# 6:起算開始日    7:起算終了日  8:金額        9:特販マスタID 10:値引き額
# 11:値引き後金額 12:特販開始日 13:特販終了日 14:予備１      15:予備２
# 16:予備３       17:予備4      18:予備５     19:有効フラグ  20:更新時間
# 21:更新ユーザID
  LANG=C sort -k1,1 ${pompa_dir}/RIYOUSHA/RIYOUSHA_RIYOURYOU |
  join1 key=1 $tmp-tateya_nyukyosha |
  delf 1 |
# 1:居室      2:ご入居者ID    3:契約施設ID  4:契約居室    5:利用料ID
# 6:連番      7:起算開始日    8:起算終了日  9:金額        10:特販マスタID
# 11:値引き額 12:値引き後金額 13:特販開始日 14:特販終了日 15:予備１
# 16:予備２   17:予備３       18:予備4      19:予備５     20:有効フラグ
# 21:更新時間 22:更新ユーザID
  awk '$(NF-2)!="9"{print $0}' |
  if [ "${TaikyoshaHyouji}" = "0" ] ; then
    awk '$7<="'${displayTaishouToday}'"&&"'${displayTaishouToday}'"<=$8'
  else
    cat -
  fi |
# 1:居室        2:契約施設ID   3:利用料ID 4:起算開始日   5:起算終了日
# 6:金額        7:特販マスタID 8:値引き額 9:値引き後金額 10:特販開始日
# 11:特販終了日 12:ご入居者ID
  self 1 3 5 7 8 9 10 11 12 13 14 2 > $tmp-shousai_riyouryou_data  

  if [ -s $tmp-shousai_riyouryou_data ] ; then
# 利用料マスタ準備
     awk '{print $1,$2,$3}' ${tbl_dir}/RIYOURYOU_MASTER/RIYOURYOU_MASTER > $tmp-riyouryou_master
# 特販種別マスタ準備
     awk '{print $1,$2,$3}' ${tbl_dir}/RIYOURYOU_MASTER/TOKUHAN_SHUBETSU > $tmp-tokuhan_shubetsu_master
# 施設省略名取得
     self 1 3 ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_shouryaku_name

     # 施設利用者の情報取得
     #awk '$(NF-2)!="9"&&$1=="'${Shisetsu}'"' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
     if [ "${TaikyoshaHyouji}" = "0" ] ; then
         awk '$(NF-2)!="9"&&$7<="'${displayTaishouToday}'"&&"'${displayTaishouToday}'"<=$8' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS
     else
         awk '$(NF-2)!="9"' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS
     fi |
     self 6 1 2 |
     LANG=C sort -k1,1 > $tmp-shisetsu_riyousha_status_info_work
     # 事業所利用者の情報取得
     awk '$(NF-2)!="9"{print $2,$1,"_"}' ${pompa_dir}/RIYOUSHA/JIGYOUSHO_RIYOUSHA_STATUS |
     LANG=C sort -k1,1 |
     join0 +ng key=1 $tmp-shisetsu_riyousha_status_info_work > /dev/null 2> $tmp-jigyousho_riyousha_status_info

     cat $tmp-shisetsu_riyousha_status_info_work $tmp-jigyousho_riyousha_status_info |
     LANG=C sort -k1,1 > $tmp-shisetsu_riyousha_status_info

     [ "$(gyo $tmp-shisetsu_riyousha_status_info)" = "0" ] && echo "_" "_" "_" > $tmp-shisetsu_riyousha_status_info

     cat $tmp-shousai_riyouryou_data |
     LANG=C sort -k12,12 |
     join1 key=12 $tmp-shisetsu_riyousha_status_info |
     join1 key=12 <(self 1/3 ${pompa_dir}/RIYOUSHA/RIYOUSHA_MASTER) |
     tee $work_dir/shousai_riyouryou_data1 |
# 1:居室        2:契約施設ID   3:利用料ID    4:起算開始日      5:起算終了日
# 6:金額        7:特販マスタID 8:値引き額    9:値引き後金額    10:特販開始日
# 11:特販終了日 12:ご入居者ID  13:ご入居者名 14:ご入居者名カナ 15:入居施設
# 16:入居建屋
     self 1/6 2 7/NF   |
     LANG=C sort -k7,8 |
     join2 +"_" key=7/8 $tmp-tokuhan_shubetsu_master |
     delf 7 |
     tee $work_dir/shousai_riyouryou_data2 |
# 1:居室        2:契約施設ID   3:利用料ID     4:起算開始日  5:起算終了日
# 6:金額        7:特販マスタID 8:特販マスタ名 9:値引き額    10:値引き後金額
# 11:特販開始日 12:特販終了日  13:ご入居者ID  14:ご入居者名 15:ご入居者名カナ
# 16:入居施設   17:入居建屋
     LANG=C sort -k2,3 |
     join1 key=2/3 $tmp-riyouryou_master |
     tee $work_dir/shousai_riyouryou_data3 |
# 1:居室            2:契約施設ID  3:利用料ID     4:利用料名     5:起算開始日
# 6:起算終了日      7:金額        8:特販マスタID 9:特販マスタ名 10:値引き額
# 11:値引き後金額   12:特販開始日 13:特販終了日  14:ご入居者ID  15:ご入居者名
# 16:ご入居者名カナ 17:入居施設   18:入居建屋
     LANG=C sort -k2,2 |
     join1 key=2 $tmp-shisetsu_shouryaku_name |
     tee $work_dir/shousai_riyouryou_data4 |
# 1:居室        2:契約施設ID      3:施設省略名  4:利用料ID     5:利用料名
# 6:起算開始日  7:起算終了日      8:金額        9:特販マスタID 10:特販マスタ名
# 11:値引き額   12:値引き後金額   13:特販開始日 14:特販終了日  15:ご入居者ID
# 16:ご入居者名 17:ご入居者名カナ 18:入居施設   19:入居建屋
     awk '{print $0,"_","_"}' |
     LANG=C sort -k1,1nr |
     rank |
# 1:居室          2:契約施設ID  3:施設省略名      4:利用料ID    5:順番
# 6:利用料名      7:起算開始日  8:起算終了日      9:金額        10:特販マスタID
# 11:特販マスタ名 12:値引き額   13:値引き後金額   14:特販開始日 15:特販終了日
# 16:ご入居者ID   17:ご入居者名 18:ご入居者名カナ 19:入居施設   20:入居建屋
     self 2/5 1 6/NF
  else
     :
  fi
#elif [ "${HyoujiKoumoku}" = "shousai" -a "${HyoujiShousai}" = "Renrakusaki" -a -s "$tmp-data" ] ; then
elif [ "${HyoujiKoumoku}" = "renrakusaki" -a -s "$tmp-data" ] ; then
  displayTaishouToday=$(date +'%Y%m%d')
  self 2 1 2 $tmp-data |
  LANG=C sort -k1,1  > $tmp-tateya_nyukyosha  

# 1:ご入居者ID        2:連絡先ID            3:連絡先氏名    4:連絡先名カナ 5:性別
# 6:続柄ID            7:続柄備考            8:優先順位      9:固定電話番号 10:形態電話番号
# 11:E-mail           12:郵便番号           13:住所         14:勤務先      15:請求書送先フラグ
# 16:身元引受人フラグ 17:返還金受取人フラグ 18:代理人フラグ 19:備考        20:緊急時個人データ反映番号
# 21:予備1            22:予備2              23:予備3        24:有効フラグ  25:更新時間
# 26:更新ユーザID
  LANG=C sort -k1,1 ${pompa_dir}/RIYOUSHA/RIYOUSHA_RENRAKUSAKI |
  join1 key=1 $tmp-tateya_nyukyosha |
  delf 1 |
# 1:居室                      2:ご入居者ID        3:連絡先ID            4:連絡先氏名    5:連絡先名カナ
# 6:性別                      7:続柄ID            8:続柄備考            9:優先順位      10:固定電話番号
# 11:携帯電話番号             12:E-mail           13:郵便番号           14:住所         15:勤務先
# 16:請求書送先フラグ         17:身元引受人フラグ 18:返還金受取人フラグ 19:代理人フラグ 20:備考
# 21:緊急時個人データ反映番号 22:予備1            23:予備2              24:予備3        25:有効フラグ
# 26:更新時間                 27:更新ユーザID
  awk '$(NF-2)!="9"{print $0}' |
# 1:居室                2:優先順位      3:連絡先氏名 4:連絡先名カナ     5:性別
# 6:続柄ID              7:携帯電話番号  8:住所       9:請求書送先フラグ 10:身元引受人フラグ
# 11:返還金受取人フラグ 12:代理人フラグ 13:備考      14:ご入居者ID
  self 1 9 4 5 6 7 11 14 16 17 18 19 20 2 > $tmp-shousai_renrakusaki_data

  if [ -s $tmp-shousai_renrakusaki_data ] ; then
# 続柄マスタ準備
     cat ${tbl_dir}/CONFIG/ZOKUGARA_MASTER > $tmp-zokugara_master

     # 施設利用者の情報取得
     #awk '$(NF-2)!="9"&&$1=="'${Shisetsu}'"' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
     if [ "${TaikyoshaHyouji}" = "0" ] ; then
         awk '$(NF-2)!="9"&&$7<="'${displayTaishouToday}'"&&"'${displayTaishouToday}'"<=$8' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS
     else
         awk '$(NF-2)!="9"' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS
     fi |
     self 6 1 2 |
     LANG=C sort -k1,1 > $tmp-shisetsu_riyousha_status_info_work
     # 事業所利用者の情報取得
     awk '$(NF-2)!="9"{print $2,$1,"_"}' ${pompa_dir}/RIYOUSHA/JIGYOUSHO_RIYOUSHA_STATUS |
     LANG=C sort -k1,1 |
     join0 +ng key=1 $tmp-shisetsu_riyousha_status_info_work > /dev/null 2> $tmp-jigyousho_riyousha_status_info

     cat $tmp-shisetsu_riyousha_status_info_work $tmp-jigyousho_riyousha_status_info |
     LANG=C sort -k1,1 > $tmp-shisetsu_riyousha_status_info
     [ "$(gyo $tmp-shisetsu_riyousha_status_info)" = "0" ] && echo "_" "_" "_" > $tmp-shisetsu_riyousha_status_info

     cat $tmp-shousai_renrakusaki_data |
     LANG=C sort -k14,14 |
     join1 key=14 $tmp-shisetsu_riyousha_status_info |
     join1 key=14 <(self 1/3 ${pompa_dir}/RIYOUSHA/RIYOUSHA_MASTER) |
# 1:居室                2:優先順位      3:連絡先氏名 4:連絡先名カナ     5:性別
# 6:続柄ID              7:携帯電話番号  8:住所       9:請求書送先フラグ 10:身元引受人フラグ
# 11:返還金受取人フラグ 12:代理人フラグ 13:備考      14:ご入居者ID      15:利用者名
# 16:利用者名カナ       17:施設         18:建屋
     LANG=C sort -k6,6 |
     join1 key=6 $tmp-zokugara_master |
# 1:居室              2:優先順位            3:連絡先氏名    4:連絡先名カナ 5:性別
# 6:続柄ID            7:続柄内容            8:携帯電話番号  9:住所         10:請求書送先フラグ
# 11:身元引受人フラグ 12:返還金受取人フラグ 13:代理人フラグ 14:備考        15:ご入居者ID
# 16:利用者名         17:利用者名カナ       18:施設         19:建屋
     awk '{print $0,"_","_"}' |
     LANG=C sort -k1,1nr |
     rank |
     self 2/5 1 6/NF
  else
    :
  fi
#elif [ "${HyoujiKoumoku}" = "shousai" -a "${HyoujiShousai}" = "Kaigohoken" -a -s "$tmp-data" ] ; then
elif [ "${HyoujiKoumoku}" = "kaigohoken" -a -s "$tmp-data" ] ; then
  displayTaishouToday=$(date +'%Y%m%d')
  self 2 1 2 $tmp-data |
  LANG=C sort -k1,1  > $tmp-tateya_nyukyosha  

# 1:ご入居者ID      2:介護保険ID      3:介護度ID             4:保険者番号          5:保険者名
# 6:被保険者番号    7:性別名          8:生年月日元号         9:生年月日年          10:生年月日月
# 11:生年月日日     12:郵便番号       13:住所                14:認定年月日元号ＩＤ 15:認定年月日年
# 16:認定年月日月   17:認定年月日日   18:認定年月日西暦８桁  19:有効期限(自)元号ID 20:有効期限(自)年
# 21:有効期限(自)月 22:有効期限(自)日 23:有効期限(自)西暦8桁 24:有効期限(至)元号ID 25:有効期限(至)年
# 26:有効期限(至)月 27:有効期限(至)日 28:有効期限(至)西暦8桁 29:事業所名           30:種類指定
# 31:備考           32:負担割合       33:有効フラグ          34:更新時間           35:更新ユーザID
  LANG=C sort -k1,1 ${pompa_dir}/RIYOUSHA/RIYOUSHA_KAIGOHOKEN |
  join1 key=1 $tmp-tateya_nyukyosha |
  delf 1 |
# 1:居室            2:ご入居者ID      3:介護保険ID      4:介護度ID             5:保険者番号
# 6:保険者名        7:被保険者番号    8:性別名          9:生年月日元号         10:生年月日年
# 11:生年月日月     12:生年月日日     13:郵便番号       14:住所                15:認定年月日元号ＩＤ
# 16:認定年月日年   17:認定年月日月   18:認定年月日日   19:認定年月日西暦８桁  20:有効期限(自)元号ID
# 21:有効期限(自)年 22:有効期限(自)月 23:有効期限(自)日 24:有効期限(自)西暦8桁 25:有効期限(至)元号ID
# 26:有効期限(至)年 27:有効期限(至)月 28:有効期限(至)日 29:有効期限(至)西暦8桁 30:事業所名
# 31:種類指定       32:備考           33:負担割合       34:有効フラグ          35:更新時間
# 36:更新ユーザID
  awk '$(NF-2)!="9"{print $0}' |
  if [ "${TaikyoshaHyouji}" = "0" ] ; then
    awk '$24<="'${displayTaishouToday}'"&&"'${displayTaishouToday}'"<=$29'
  else
    cat -
  fi |
  self 1 3 4 5 6 7 14 20 21 22 23 25 26 27 28 31 2 > $tmp-shousai_kaigonintei_data
# 1:居室            2:介護保険ID          3:介護度ID           4:保険者番号      5:保険者名
# 6:被保険者番号    7:住所                8:有効期限(自)元号ID 9:有効期限(自)年  10:有効期限(自)月
# 11:有効期限(自)日 12:有効期限(至)元号ID 13:有効期限(至)年    14:有効期限(至)月 15:有効期限(至)日
# 16:備考           17:ご入居者ID
  if [ -s $tmp-shousai_kaigonintei_data ] ; then
# 介護度マスタの準備
     awk '$4<="'${displayTaishouToday}'"&&"'${displayTaishouToday}'"<=$5{print $1,$2}' ${tbl_dir}/CONFIG/KAIGODO_MASTER > $tmp-kaigodo_master
# 和暦マスタの準備
     awk '$(NF-2)!="9"{print $1,$2}'  ${tbl_dir}/ZEIRITSU_GENGOU_MASTER/GENGOU > $tmp-gengou_master
# 保険者マスタの準備
     awk '$(NF-2)!="9"{print $2,$4}'  ${tbl_dir}/HOKENJA/HOKENJA_TABLE |
     LANG=C sort -k1,1 > $tmp-hokenja_master

     # 施設利用者の情報取得
     #awk '$(NF-2)!="9"&&$1=="'${Shisetsu}'"' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
     if [ "${TaikyoshaHyouji}" = "0" ] ; then
         awk '$(NF-2)!="9"&&$7<="'${displayTaishouToday}'"&&"'${displayTaishouToday}'"<=$8' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS
     else
         awk '$(NF-2)!="9"' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS
     fi |
     self 6 1 2 |
     LANG=C sort -k1,1 > $tmp-shisetsu_riyousha_status_info_work
     # 事業所利用者の情報取得
     awk '$(NF-2)!="9"{print $2,$1,"_"}' ${pompa_dir}/RIYOUSHA/JIGYOUSHO_RIYOUSHA_STATUS |
     LANG=C sort -k1,1 |
     join0 +ng key=1 $tmp-shisetsu_riyousha_status_info_work > /dev/null 2> $tmp-jigyousho_riyousha_status_info

     cat $tmp-shisetsu_riyousha_status_info_work $tmp-jigyousho_riyousha_status_info |
     LANG=C sort -k1,1 > $tmp-shisetsu_riyousha_status_info
     [ "$(gyo $tmp-shisetsu_riyousha_status_info)" = "0" ] && echo "_" "_" "_" > $tmp-shisetsu_riyousha_status_info

     cat $tmp-shousai_kaigonintei_data |
     LANG=C sort -k17,17 |
     join1 key=17 $tmp-shisetsu_riyousha_status_info |
     join1 key=17 <(self 1/3 ${pompa_dir}/RIYOUSHA/RIYOUSHA_MASTER) |
# 1:居室            2:介護保険ID          3:介護度ID           4:保険者番号      5:保険者名
# 6:被保険者番号    7:住所                8:有効期限(自)元号ID 9:有効期限(自)年  10:有効期限(自)月
# 11:有効期限(自)日 12:有効期限(至)元号ID 13:有効期限(至)年    14:有効期限(至)月 15:有効期限(至)日
# 16:備考           17:ご入居者ID         18:ご入居者名        19:ご入居者名カナ 20:施設
# 21:建屋
     lang=c sort -k12,12 |
     join2 +"_" key=12 $tmp-gengou_master |
     delf 12 |
     lang=c sort -k8,8 |
     join2 +"_" key=8 $tmp-gengou_master |
     delf 8 |
     LANG=C sort -k4,4 |
     join1 key=4 $tmp-hokenja_master |
     delf 6 |
     lang=c sort -k3,3 |
     join1 key=3 $tmp-kaigodo_master |
# 1:居室            2:介護保険id      3:介護度id          4:介護度           5:保険者番号
# 6:保険者名        7:被保険者番号    8:住所              9:有効期限(自)元号 10:有効期限(自)年
# 11:有効期限(自)月 12:有効期限(自)日 13:有効期限(至)元号 14:有効期限(至)年  15:有効期限(至)月
# 16:有効期限(至)日 17:備考           18:ご入居者ID       19:ご入居者名      20:ご入居者名カナ
# 21:施設           22:建屋
     awk '{print $0,"_","_"}' |
     LANG=C sort -k1,1nr |
     rank |
     self 2/5 1 6/NF
  else
    :
  fi
elif [ "${HyoujiKoumoku}" = "koza" -a -s "$tmp-data" ] ; then
  displayTaishouToday=$(date +'%Y%m%d')
  self 2 1 2 $tmp-data |
  LANG=C sort -k1,1  > $tmp-tateya_nyukyosha  

# 1:利用者(入居者)ID 2:口座ID                3:金融機関コード    4:支店コード        5:請求内容コード
# 6:口座種類         7:口座番号              8:請求期間From      9:請求期間To        10:名義人
# 11:備考            12:他入居者との一括請求 13:一括請求入居者ID 14:一括請求書フラグ 15:口座名義(漢字)
# 16:顧客番号           17:予備2                18:予備3            19:予備4            20:予備5
# 21:削除フラグ      22:更新時間             23:更新者
  LANG=C sort -k1,1 ${pompa_dir}/RIYOUSHA/RIYOUSHA_KOUZA |
  join1 key=1 $tmp-tateya_nyukyosha |
  delf 1 |
# 1:居室番号        2:利用者(入居者)ID 3:口座ID                4:金融機関コード    5:支店コード
# 6:請求内容コード  7:口座種類         8:口座番号              9:請求期間From      10:請求期間To
# 11:名義人         12:備考            13:他入居者との一括請求 14:一括請求入居者ID 15:一括請求書フラグ
# 16:口座名義(漢字) 17:顧客番号           18:予備2                19:予備3            20:予備4
# 21:予備5          22:削除フラグ      23:更新時間             24:更新者
  awk '$(NF-2)!="9"{print $0}' |
  if [ "${TaikyoshaHyouji}" = "0" ] ; then
    awk '$9<="'${displayTaishouToday}'"&&"'${displayTaishouToday}'"<=$10'
  else
    cat -
  fi |
  self 1 6 4 5 7 8 11 9 10 12 17 2 > $tmp-shousai_kouza_data
  if [ -s $tmp-shousai_kouza_data ] ; then
# 1:居室番号  2:請求内容コード    3:金融機関コード 4:支店コード 5:口座種類
# 6:口座番号  7:名義人            8:請求期間From   9:請求期間To 10:備考
# 11:顧客番号 12:利用者(入居者)ID

# 請求内容マスタを作成
     echo "1" "全請求" > $tmp-seikyu_naiyou_master
     echo "2" "施設" >> $tmp-seikyu_naiyou_master
     echo "3" "居宅" >> $tmp-seikyu_naiyou_master
# 金融マスタの準備
     awk '$(NF-2)!="9"{print $1,$3}'  ${tbl_dir}/KINYUU_MASTER/KINYUUKIKAN_NAME > $tmp-kinyukikan_master
# 支店マスタの準備
     awk '$(NF-2)!="9"{print $1,$2,$4}'  ${tbl_dir}/KINYUU_MASTER/KINYUUKIKAN_SHITEN_NAME > $tmp-kinyukikan_shiten_master
# 口座種類
     echo "0" "_" > $tmp-kouza_shurui
     echo "1" "普通" >> $tmp-kouza_shurui
     echo "2" "当座" >> $tmp-kouza_shurui

     # 施設利用者の情報取得
     #awk '$(NF-2)!="9"&&$1=="'${Shisetsu}'"' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
     if [ "${TaikyoshaHyouji}" = "0" ] ; then
         awk '$(NF-2)!="9"&&$7<="'${displayTaishouToday}'"&&"'${displayTaishouToday}'"<=$8' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS
     else
         awk '$(NF-2)!="9"' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS
     fi |
     self 6 1 2 |
     LANG=C sort -k1,1 > $tmp-shisetsu_riyousha_status_info_work
     # 事業所利用者の情報取得
     awk '$(NF-2)!="9"{print $2,$1,"_"}' ${pompa_dir}/RIYOUSHA/JIGYOUSHO_RIYOUSHA_STATUS |
     LANG=C sort -k1,1 |
     join0 +ng key=1 $tmp-shisetsu_riyousha_status_info_work > /dev/null 2> $tmp-jigyousho_riyousha_status_info

     cat $tmp-shisetsu_riyousha_status_info_work $tmp-jigyousho_riyousha_status_info |
     LANG=C sort -k1,1 > $tmp-shisetsu_riyousha_status_info
     [ "$(gyo $tmp-shisetsu_riyousha_status_info)" = "0" ] && echo "_" "_" "_" > $tmp-shisetsu_riyousha_status_info

     cat $tmp-shousai_kouza_data |
     LANG=C sort -k12,12 |
     join1 key=12 $tmp-shisetsu_riyousha_status_info |
     join1 key=12 <(self 1/3 ${pompa_dir}/RIYOUSHA/RIYOUSHA_MASTER) |
# 1:居室番号  2:請求内容コード    3:金融機関コード 4:支店コード      5:口座種類
# 6:口座番号  7:名義人            8:請求期間From   9:請求期間To      10:備考
# 11:顧客番号 12:利用者(入居者)ID 13:ご入居者名    14:ご入居者名カナ 15:施設
# 16:建屋
     LANG=C sort -k5,5 |
     join1 key=5 $tmp-kouza_shurui |
     delf 5 |
     LANG=C sort -k3,4 |
     join1 key=3/4 $tmp-kinyukikan_shiten_master |
     delf 4 |
     LANG=C sort -k3,3 |
     join1 key=3 $tmp-kinyukikan_master |
     delf 3 |
     LANG=C sort -k2,2 |
     join1 key=2 $tmp-seikyu_naiyou_master |
     delf 2 |
# 1:居室番号  2:請求内容    3:金融機関名 4:支店名      5:口座種類名
# 6:口座番号  7:名義人            8:請求期間From   9:請求期間To      10:備考
# 11:顧客番号 12:利用者(入居者)ID 13:ご入居者名    14:ご入居者名カナ 15:施設
# 16:建屋
     awk '{print $0,"_","_"}' |
     LANG=C sort -k1,1nr |
     rank |
     self 2/5 1 6/NF
  else
    :
  fi
elif [ "${HyoujiKoumoku}" = "keiyakukin" -a -s "$tmp-data" ] ; then
  displayTaishouToday=$(date +'%Y%m%d')
  self 2 1 2 $tmp-data |
  LANG=C sort -k1,1  > $tmp-tateya_nyukyosha  

# 1:利用者(入居者)ID 2:施設ID      3:契約ID      4:契約金種別ID 5:番号
# 6:償却開始日       7:償却終了日  8:金額        9:償却回数     10:非返却金額
# 11:算出方法        12:特販ID     13:値引額     14:値引後金額  15:特販期間FROM
# 16:特販期間TO      17:削除フラグ 18:更新日時　 19:ID
  LANG=C sort -k1,1 ${pompa_dir}/RIYOUSHA/RIYOUSHA_KEIYAKUKIN |
  join1 key=1 $tmp-tateya_nyukyosha |
  delf 1 |
# 1:居室          2:利用者(入居者)ID 3:施設ID      4:契約ID      5:契約金種別ID
# 6:番号          7:償却開始日       8:償却終了日  9:金額        10:償却回数
# 11:非返却金額   12:算出方法        13:特販ID     14:値引額     15:値引後金額
# 16:特販期間FROM 17:特販期間TO      18:削除フラグ 19:更新日時　 20:ID
  awk '$(NF-2)!="9"{print $0}' |
  if [ "${TaikyoshaHyouji}" = "0" ] ; then
    awk '$7<="'${displayTaishouToday}'"&&"'${displayTaishouToday}'"<=$8'
  else
    cat -
  fi |
# 1:居室    2:施設ID        3:契約金種別ID 4:償却開始日        5:償却終了日
# 6:金額    7:償却回数      8:非返却金額   9:算出方法          10:特販ID
# 11:値引額 12:特販期間FROM 13:特販期間TO  14:利用者(入居者)ID
  self 1 3 5 7 8 9 10 11 12 13 14 16 17 2 > $tmp-shousai_keiyakukin_data  

  if [ -s $tmp-shousai_keiyakukin_data ] ; then
# 利用料マスタ準備
     awk '{print $1,$2,$3}' ${tbl_dir}/RIYOURYOU_MASTER/KEIYAKUKIN_MASTER > $tmp-keiyakukin_master
# 特販種別マスタ準備
     awk '{print $1,$2,$3}' ${tbl_dir}/RIYOURYOU_MASTER/TOKUHAN_SHUBETSU > $tmp-tokuhan_shubetsu_master
# 施設省略名取得
     self 1 3 ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_shouryaku_name

     # 施設利用者の情報取得
     #awk '$(NF-2)!="9"&&$1=="'${Shisetsu}'"' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
     if [ "${TaikyoshaHyouji}" = "0" ] ; then
         awk '$(NF-2)!="9"&&$7<="'${displayTaishouToday}'"&&"'${displayTaishouToday}'"<=$8' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS
     else
         awk '$(NF-2)!="9"' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS
     fi |
     self 6 1 2 |
     LANG=C sort -k1,1 > $tmp-shisetsu_riyousha_status_info_work
     # 事業所利用者の情報取得
     awk '$(NF-2)!="9"{print $2,$1,"_"}' ${pompa_dir}/RIYOUSHA/JIGYOUSHO_RIYOUSHA_STATUS |
     LANG=C sort -k1,1 |
     join0 +ng key=1 $tmp-shisetsu_riyousha_status_info_work > /dev/null 2> $tmp-jigyousho_riyousha_status_info

     cat $tmp-shisetsu_riyousha_status_info_work $tmp-jigyousho_riyousha_status_info |
     LANG=C sort -k1,1 > $tmp-shisetsu_riyousha_status_info
     [ "$(gyo $tmp-shisetsu_riyousha_status_info)" = "0" ] && echo "_" "_" "_" > $tmp-shisetsu_riyousha_status_info

     cat $tmp-shousai_keiyakukin_data |
     LANG=C sort -k14,14 |
     join1 key=14 $tmp-shisetsu_riyousha_status_info |
     join1 key=14 <(self 1/3 ${pompa_dir}/RIYOUSHA/RIYOUSHA_MASTER) |
# 1:居室          2:施設ID        3:契約金種別ID 4:償却開始日        5:償却終了日
# 6:金額          7:償却回数      8:非返却金額   9:算出方法          10:特販ID
# 11:値引額       12:特販期間FROM 13:特販期間TO  14:利用者(入居者)ID 15:利用者名
# 16:利用者名カナ 17:施設         18:建屋
     self 1/9 2 10/NF   |
     LANG=C sort -k10,11 |
     join2 +"_" key=10/11 $tmp-tokuhan_shubetsu_master |
     delf 10 |
# 1:居室      2:施設ID        3:契約金種別ID  4:償却開始日  5:償却終了日
# 6:金額      7:償却回数      8:非返却金額    9:算出方法    10:特販ID
# 11:特販名   12:値引額       13:特販期間FROM 14:特販期間TO 15:利用者(入居者)ID
# 16:利用者名 17:利用者名カナ 18:施設         19:建屋
     LANG=C sort -k2,3 |
     join1 key=2/3 $tmp-keiyakukin_master |
# 1:居室              2:施設ID    3:契約金種別ID  4:契約金名      5:償却開始日
# 6:償却終了日        7:金額      8:償却回数      9:非返却金額    10:算出方法
# 11:特販ID           12:特販名   13:値引額       14:特販期間FROM 15:特販期間TO
# 16:利用者(入居者)ID 17:利用者名 18:利用者名カナ 19:施設         20:建屋
     LANG=C sort -k2,2 |
     join1 key=2 $tmp-shisetsu_shouryaku_name |
# 1:居室        2:施設ID            3:施設名    4:契約金種別ID  5:契約金名
# 6:償却開始日  7:償却終了日        8:金額      9:償却回数      10:非返却金額
# 11:算出方法   12:特販ID           13:特販名   14:値引額       15:特販期間FROM
# 16:特販期間TO 17:利用者(入居者)ID 18:利用者名 19:利用者名カナ 20:施設
# 21:建屋
     awk '{print $0,"_","_"}' |
     LANG=C sort -k1,1nr |
     rank |
     self 2/5 1 6/NF
  else
     :
  fi
# >>>>>Aoyama Add(20150904)
# 20150830add QR Suzuki  ↓
#QR印刷ボタン押下時の場合
elif [ "${MODE}" = "qr_search" -a -s "$tmp-data" ] ; then



#入居開始日、終了日は表示しないため、コメントアウト
#以下は契約情報から取得する処理のため、表示要件が発生した際は施設利用者マスタからの取得も検討。
: <<'#__COMENTOUT1__'
  # 入居契約情報を取得（契約開始日、契約終了日の取得が目的。契約オプション選択時のロジックをベース）
  # 入居関連の契約(007)のみを抽出対象
  awk '$3=="'${Shisetsu}'"&&$9<="007"&&$(NF-2)!="9"{print $3,$4,$7,$0}' ${pompa_dir}/RIYOUSHA/RIYOUSHA_KEIYAKU |
# 1:施設ID      2:建屋ID      3:居室ID        4:利用者(入居者)ID 5:契約ID
# 6:施設ID      7:建屋ID      8:フロアID      9:ユニットID       10:居室ID
# 11:入居時年齢 12:契約種類ID 13:契約日       14:引渡し日        15:契約開始日
# 16:契約終了日 17:退去理由   18:退去理由詳細 19:備考            20:予備1
# 21:予備2      22:予備3      23:予備4        24:予備5           25:削除フラグ
# 26:更新日     27:更新者
  LANG=C sort -k1,4 -k16,16 -k15,15 |
  getlast 1 4                   |
  awk '{print $1,$2,$3,$4,$5,$12,$15!="_"?substr($15,1,4)"/"substr($15,5,2)"/"substr($15,7,2):"_",$16!="99999999"?substr($16,1,4)"/"substr($16,5,2)"/"substr($16,7,2):"_"}'  |
#  cjoin1 key=6 $tmp-keiyaku -   |
  LANG=C sort -u > $tmp-riyousha_keiyaku
# 1:施設ID     2:建屋ID     3:居室ID     4:利用者(入居者)ID 5:契約ID
# 6:契約種類ID 7:契約開始日 8:契約終了日

  if [ -s $tmp-riyousha_keiyaku ] ; then
  #契約データがある場合は検索結果データとjoin

    cat $tmp-data |
# 1:居室番号      2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:和暦：元号    7:和暦：誕生年     8:和暦：誕生月       9:和暦：誕生日           10:西暦：生年月日
# 11:感染症       12:入居前郵便番号  13:入居前住所        14:現郵便番号            15:現住所
# 16:携帯電話番号 17:E-MAILアドレス  18:趣味特技          19:備考                  20:施設ID
# 21:建屋ID       22:フロア          23:ユニットID        24:年齢
    self NF-4 NF-3 1/NF |
    LANG=C sort         |
    cjoin2 key=1/4 $tmp-riyousha_keiyaku - |
    delf 1 2            |
# 1:居室番号      2:利用者(入居者)ID 3:契約ID             4:契約種類ID            
# 5:契約開始日    6:契約終了日       7:利用者(入居者)氏名 8:利用者(入居者)氏名カナ 9:性別
# 10:和暦：元号   11:和暦：誕生年    12:和暦：誕生月      13:和暦：誕生日          14:西暦：生年月日
# 15:感染症       16:入居前郵便番号  17:入居前住所        18:現郵便番号            19:現住所
# 20:携帯電話番号 21:E-MAILアドレス  22:趣味特技          23:備考                  24:施設ID
# 25:建屋ID       26:フロア          27:ユニットID        28:年齢
    self 1 2 7/14 NF 3/6 NF-4/NF-1
# 1:居室番号    2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:和暦：元号  7:和暦：誕生年     8:和暦：誕生月       9:和暦：誕生日           10:西暦：生年月日
# 11:年齢       12:契約ID          13:契約種類ID        14:契約開始日
# 15:契約終了日 16:施設ID          17:建屋ID            18:フロア                19:ユニットID

  else
  #契約データがない場合は"_"で埋める
    cat $tmp-data        |
    awk '{print $0,"_"}' |
    self 1/10 NF-1 NF NF NF NF  NF-5/NF-2
# 1:居室番号    2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:和暦：元号  7:和暦：誕生年     8:和暦：誕生月       9:和暦：誕生日           10:西暦：生年月日
# 11:年齢       12:契約ID(空)          13:契約種類ID(空)        14:契約開始日(空)
# 15:契約終了日(空) 16:施設ID          17:建屋ID            18:フロア                19:ユニットID
  fi |
    cjoin2 key=6 $tmp-gengou - |
    delf 6                     |
    awk '{print $1,$2,$3,$4,$5=="1"?"男":"女",$6$7"年"$8"月"$9"日",int($11),$12,$13,$14,$15,$16,$17,$18,$19}' 
# 1:居室番号    2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:生年月日    7:年齢             8:契約ID             9:契約種類ID           
# 10:契約開始日 11:契約終了日      12:施設ID                13:建屋ID
# 14:フロア     15:ユニットID

#__COMENTOUT1__

    cat $tmp-data        |
    awk '{print $0,"_"}' |
    self 1/10 NF-1  NF-5/NF-2 |
# 1:居室番号    2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:和暦：元号  7:和暦：誕生年     8:和暦：誕生月       9:和暦：誕生日           10:西暦：生年月日
# 11:年齢       12:施設ID          13:建屋ID            14:フロア                15:ユニットID
    cjoin2 key=6 $tmp-gengou - |
    delf 6                     |
    awk '{print $1,$2,$3,$4,$5=="1"?"男":"女",$6$7"年"$8"月"$9"日",int($11),$12,$13,$14,$15}'
# 1:居室番号    2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別
# 6:生年月日    7:年齢             8:施設ID     9:建屋ID  10:フロア     11:ユニットID


# 20150830add QR Suzuki  ↑

else
  :
fi |
# --------------------------
#tee /home/hands/work/okuda/NANNIN |
# --------------------------
# キーワード
if [ -z "${Keyword}" -o "${Keyword}" = "_" ]; then
  cat
else
  grep -ie ${zen} -ie ${han}
fi |
LANG=C sort  |
getlast 1 5  > $tmp-result_data
#--------------------------------------------------------------
# 性別の表記
#awk '{if($5=="1"){print $1,$2,$3,$4,"男"}
#     else if($5=="2"){print $1,$2,$3,$4,"女"}
#     }' |
# 1:居室番号      2:利用者(入居者)ID 3:利用者(入居者)氏名 4:利用者(入居者)氏名カナ 5:性別

# 表示用ソートはDISPLAYにて！！
#--------------------------------------------------------------
#cp $tmp-* /home/hands/work/okuda

cat $tmp-result_data


## 終了
rm -f $tmp-*
exit 0
