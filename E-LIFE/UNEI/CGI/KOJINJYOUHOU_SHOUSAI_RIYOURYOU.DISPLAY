#!/bin/bash
#
# KOJINJYOUHOU_SHOUSAI_RIYOURYOU.DISPLAY
# 個人情報詳細　利用料タブ　表示用CGI
#
# Written by E.Okuda　2013/12/11

#--------------------------------------------------------------

# ログ
mkdir -p /home/hands/E-LIFE/UNEI/APLOG/$(date +%Y%m%d)
exec 2> /home/hands/E-LIFE/UNEI/APLOG/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv

source /home/hands/.bashrc &> /dev/null
source /home/hands/E-LIFE/UNEI/CGI/UNEI.INI &> /dev/null
#--------------------------------------------------------------
#--------------------------------------------------------------
# 変数の定義
tmp=/var/tmp/${$}

namedata=$1
data=$2
result_data=$3
today="$(date +%Y%m%d)"
#--------------------------------------------------------------
rm -f $tmp-*
#--------------------------------------------------------------

# ディレクトリ設定
app_dir="${home_dir}/UNEI"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
pompa_dir="${app_dir}/POMPA"
work=${app_dir}/WORK

# 必要な値の取得
eval $(name-source ${namedata})
#USERNAME=$(awk '$1=="'${USER_ID}'"{print $2}' ${tbl_dir}/JYUGYOIN_NAME)

# 渡ってきたデータを取得
#if [ ${CONTENT_LENGTH:-0} -gt 0 ]; then
#  dd bs=${CONTENT_LENGTH} |
#  cgi-name -d_ -i_
#else
#  :
#fi > $tmp-name

MODE=$(nameread "MODE" ${namedata})
[ -z "${MODE}" -o "${MODE}" = "_" ] && MODE="init"
#--------------------------------------------------------------
#--------------------------------------------------------------
  RIYOUSHAID=$(nameread              "RIYOUSHAID"      $namedata)
  NYUUKYOSHISETSUID=$(nameread "NYUUKYOSHISETSUID" $namedata)
  NYUUKYOTATEYAID=$(nameread         "NYUUKYOTATEYAID"      $namedata)
  NYUUKYOFLOOR=$(nameread         "NYUUKYOFLOOR"      $namedata)
  NYUUKYOUNITID=$(nameread         "NYUUKYOUNITID"      $namedata)
  NYUUKYOKYOSHITSU=$(nameread        "NYUUKYOKYOSHITSU"      $namedata)
  ROGINSHISETSU=$(nameread "shisetsu" $namedata)
  ROGINSHISETSUNAME="$(awk '$1=="'${ROGINSHISETSU}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON | head -1)"
  [ -z "${ROGINSHISETSUNAME}" -o "${ROGINSHISETSUNAME}" = "_" ] && ROGINSHISETSUNAME="$(awk '$1=="'${ROGINSHISETSU}'"{print $2}' ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER | head -1)"

  USERNAME="$(awk '$1=="'${USERID}'"{print $2}' ${tbl_dir}/JYUUGYOUIN_MASTER/USER_MASTER | head -1)"
RIYOUSHANAME="$(awk '$1=="'${RIYOUSHAID}'"{print $2}' ${pompa_dir}/RIYOUSHA/RIYOUSHA_MASTER | head -1)"
  SHISETSUID="$(awk '$1=="'${SHISETSUID}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON)"
NYUUKYOSHISETSUNAME="$(awk '$1=="'${NYUUKYOSHISETSUID}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON)"
# 入居者所属施設名
  NYUUKYOSHISETSUNAME="$(awk '$1=="'${NYUUKYOSHISETSUID}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON)"
  NYUUKYOTATEYANAME="$(awk '$1=="'${NYUUKYOTATEYAID}'"{print $3}' ${tbl_dir}/SHISETSU_MASTER/TATEYA_NAME)"
NYUUKYOUNITNAME="$(awk '$1=="'${NYUUKYOUNITID}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/UNIT_NAME)"

[ -z "${NYUUKYOSHISETSUNAME}" -o "${NYUUKYOSHISETSUNAME}" = "_" ] && NYUUKYOSHISETSUNAME=$(awk '$1=="'${NYUUKYOSHISETSUID}'"{print $2}' ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER | head -1)

# calsedファイル
cat << FIN > $tmp-calsed_data
###USERID###       ${USERID}      
###USERNAME###     ${USERNAME}
###SHISETSUID### ${SHISETSUID}
###SHISETSUNAME### ${SHISETSUNAME}
###ERROR_MESSAGE### ${error_message}
###NYUUKYOSHISETSUID### ${NYUUKYOSHISETSUID}
###NYUUKYOSHISETSUNAME### ${NYUUKYOSHISETSUNAME}
###NYUUKYOTATEYAID### ${NYUUKYOTATEYAID}
###NYUUKYOTATEYANAME### ${NYUUKYOTATEYANAME}
###NYUUKYOFLOOR### ${NYUUKYOFLOOR}
###NYUUKYOUNITID### ${NYUUKYOUNITID}
###NYUUKYOUNITNAME### ${NYUUKYOUNITNAME}
###NYUUKYOKYOSHITSU### ${NYUUKYOKYOSHITSU}
###RIYOUSHANAME### ${RIYOUSHANAME}
###RIYOUSHAID###   ${RIYOUSHAID}
###TOUROKUDISP### ${TOUROKUDISP}
###PRINTDISP###  ${PRINTDISP}
###ROGINSHISETSU### ${ROGINSHISETSU}
###ROGINSHISETSUNAME### ${ROGINSHISETSUNAME}
FIN

# formhame 前の実体参照変換
calsed "&" "&amp;" ${namedata} |
calsed "<" "&lt;"              |
calsed ">" "&gt;"              |
calsed "\"" "&quot;"           > $tmp-namedata

#------------------------------------------------------------------
### モードによる表示の分岐
case "${MODE}" in

  # 初期表示
  init | touroku)
  
  if [ $MODE = "touroku" ];then
    result=$(awk '$1=="'result'"{print $2}' ${result_data})
    message="$(awk '$1=="'message'"{print $2}' ${result_data})"
  fi
# ${data}
  cat $data |
  # 1:利用者ID    2:施設ID        3:契約ID      4:利用料種別id 5:番号
  # 6:起算開始日  7:起算終了日    8:金額        9:特販ID       10:値引額
  # 11:値引後金額 12:特販期間from 13:特販期間to
  awk '{print "riyouryou",$0}' |
  # 1:「利用料」 2:利用者ID    3:施設ID        4:契約ID      5:利用料種別id
  # 6:番号       7:起算開始日  8:起算終了日    9:金額        10:特販ID
  # 11:値引額    12:値引後金額 13:特販期間from 14:特販期間to
tee /home/hands/E-LIFE/UNEI/WORK/buta |
  awk '{print $0,$7!="_"?substr($7,1,4)"/"substr($7,5,2)"/"substr($7,7,2):"_",$8!="99999999"?substr($8,1,4)"/"substr($8,5,2)"/"substr($8,7,2):"_",$13!="_"?substr($13,1,4)"/"substr($13,5,2)"/"substr($13,7,2):"_",$14!="99999999"?substr($14,1,4)"/"substr($14,5,2)"/"substr($14,7,2):"_"}'  |
tee ${work}/butan |
  self 5 NF-3 NF-2 9 10 11 12 NF-1 NF 6 3 4 |
     # 種別が入っていないものはkらにする
     awk '{if($1=="_"){print "$1","_","_","_","_","_","_","_","_","_","_","_"}
          else{print $0}}'      |
     sed 's/_/@/g'                       |
     LANG=C sort -k10,10n                 > $tmp-search_riyouryou_data

# 利用料マスタ
self NF 1 $tmp-search_riyouryou_data |
LANG=C sort -u > $tmp-self_riyouryou

awk '$(NF-2)!=9' ${tbl_dir}/RIYOURYOU_MASTER/RIYOURYOU_MASTER |
self 1 2 3 |
join0 key=1/2 $tmp-self_riyouryou |
self 2 3 > $tmp-riyosha_hold

cat ${tbl_dir}/RIYOURYOU_MASTER/RIYOURYOU_MASTER         |
awk '$1=="'${shisetsu}'"&&$(NF-2)!="9"{print $2,$3}' |
cat - $tmp-riyosha_hold |
LANG=C sort -u -k1,1 |
awk 'BEGIN{print "@ @"}{print $1,$2}' > $tmp-riyouryou

cat ${tbl_dir}/RIYOURYOU_MASTER/TOKUHAN_SHUBETSU           |
if [ "${MODE}" != "init" ] ; then
  awk '$1=="'${shisetsu}'"&&$(NF-2)!="9"{print $0}'
else
  awk '$1=="'${shisetsu}'"&&$(NF-2)!="9"&&$(NF-2)!="2"{print $0}'
fi |
awk '$4=="2"||$4=="0"{print $2,$3}'         |
awk 'BEGIN{print "_ なし"}{print $0}' > $tmp-riyouryou_tokuhan_data

cat ${tbl_dir}/JYUUGYOUIN_MASTER/USER_MASTER |
self 1 2 > $tmp-user_master

awk '$(NF-2)!=9' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON |
self 1 3 > $tmp-riyouryou_shisetsu_data




  ;;


esac
#--------------------------------------------------------------
#--------------------------------------------------------------
# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
	cat <<- FIN > $tmp-html2
	  <script type="text/javascript" language="javascript">
	    alert('${message}');
	  </script>
	FIN
fi

if [ ! -z "${KANRYOU}" ] ; then
	cat <<- FINN > $tmp-html2
          <script type="text/javascript" language="javascript">
           kouza_pop = window.open("","kouza_pop");
           kouza_pop.close();
          </script>
FINN
 fi
#--------------------------------------------------------------
#--------------------------------------------------------------

cat $tmp-calsed_data  |
sed 's/_/@/g' -        > $tmp-calsed_data_result
#--------------------------------------------------------------
#--------------------------------------------------------------
# テキスト系は_を空白に直してやる
[ "${SAMPLE_TEXT1}" = "_" ] && SAMPLE_TEXT1=""
sample_area=$(echo "${SAMPLE_AREA}" | sed 's/\\n/###RETURN###/g')

#--------------------------------------------------------------
#cp $tmp-* /home/hands/work/okuda
#--------------------------------------------------------------
# データのはめ込み
cat ${html_dir}/KOJINJYOUHOU_SHOUSAI_RIYOURYOU.html         |
mojihame -lRIYOURYOUD - $tmp-search_riyouryou_data |
mojihame -lRIYOURYOUMASTER - $tmp-riyouryou |
mojihame -lRIYOURYOUTOKUHANMASTER - $tmp-riyouryou_tokuhan_data |
mojihame -lRIYOURYOUSHISETSUMASTER - $tmp-riyouryou_shisetsu_data |
calsed -f $tmp-calsed_data_result -                     |
sed 's/###SPACE###/ /g'                                 |
sed 's/\\n/\n/g'                                        |
#--------------------------------------------------------------

#--------------------------------------------------------------
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |
cat -
#--------------------------------------------------------------

## 終了
rm -f $tmp-*
exit 0
