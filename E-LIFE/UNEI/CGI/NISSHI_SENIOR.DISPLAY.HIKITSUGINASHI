#!/bin/bash
#
# NISSHI_SENIOR.DISPLAY : 日誌（シニア表示)
#
# Usage : NISSHI_SENIOR.DISPLAY
#
# Written by K.Aoyama(HANDS.LAB)

# ログ
source /home/hands/E-LIFE/UNEI/CGI/UNEI.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null

mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date +%Y%m%d) ; set -xv

# ディレクトリ設定
test_tbl_dir="${home_dir}/TEST/TBL"
test_pompa_dir="${home_dir}/SYSTEM_SETTEI/POMPA/KENGEN_KANRI"
kengen_dir="${home_dir}/TBL/KENGEN_KANRI"

#ゴミtmpの消去
rm -f $tmp-*

# 変数の定義
namedata=$1
checkfile=$2
today="$(date +%Y%m%d)"

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------

echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu

# ログインUSER名と施設の取得（仮）
cat ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
tee ${tmp}-jugyoin                                 |
# 1:USER_ID 2:ユーザー名
join1 key=1 ${tmp}-user                            |
# 1:USER_ID 2:ユーザー名
self 2                                             > ${tmp}-usermei

self 1 2 ${tmp}-jugyoin                            |
LANG=C sort -k1,1                                  > $tmp-jugyoin_name_mst

self 1 2 ${home_dir}/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst
cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst

cat $tmp-disp_shisetsu_mst |
# 1:施設コード 2:施設名
join1 key=1 ${tmp}-shisetsu                        |
self 2                                             > ${tmp}-user_shisetsu

[ -z "${displayShisetsu}" -o "${displayShisetsu}" = "_" ] && displayShisetsu=$shisetsu

echo ${displayShisetsu} > $tmp-displayShisetsu


##############################################################
# 利用者基本情報
##############################################################
: > $tmp-riyousha_master
if [ -s ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_MASTER ] ; then
# 1.利用者ID 2.利用者名
  self 1 2 ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_MASTER |
  tee $tmp-riyoushamei_mst                           |
# 居室番号をつける
  awk '{print $1,$2,"_"}'                           > $tmp-riyousha_master
else
  message="利用者基本情報がありません"
fi



##############################################################
# スケジュールより取得
##############################################################
# スケジュールタイプ
# 1:ID 2:色
self 1 3 ${home_dir}/TBL/SCHEDULE_MASTER/SCEDULE_TYPE_MASTER   > $tmp-schedule_type_master

# スケジュール詳細
: > $tmp-schedule_data
if [ -s ${apdata_dir}/SCHEDULE/SCHEDULE_SHOUSAI ] ; then
   cat ${apdata_dir}/SCHEDULE/SCHEDULE_SHOUSAI  |
   awk '$(NF-2)!="9"'                           |
   LANG=C sort -k1,1                            |
# 該当施設のみ
   join0 key=1 $tmp-displayShisetsu                    |
# 該当建屋のみ
   awk '$14=="1"'                               > $tmp-schedule_data
fi

cp $tmp-schedule_data $work_dir/schedule_data_senior

: > $tmp-schedule_guest
if [ -s ${apdata_dir}/SCHEDULE/SCHEDULE_GUEST ] ; then
   # スケジュールタイプマスタを取得
# 1:ID 2:色
   cat ${home_dir}/TBL/SCHEDULE_MASTER/SCEDULE_TYPE_MASTER   |
   awk '$5=="'$shisetsu'"{print $1,$3}'         |
   LANG=C sort -k1,3 -u                         > $tmp-schedule_type_master
   cp $tmp-schedule_type_master $work_dir/type_master

# 1:施設ID 2:スケジュールID 3:ゲスト名 4:関係入居者 5:備考
# 6:金額
   cat ${apdata_dir}/SCHEDULE/SCHEDULE_GUEST |
# 1:施設ID 2:スケジュールID 3:利用者ID
   self 1 2 3                                |
   LANG=C sort -k1,2                         > $tmp-guest_schedule

   cp $tmp-guest_schedule $work_dir/guest_schedule

   cat $tmp-schedule_data                    |
# 1:施設ID     2:スケジュールID 3:ゲスト名  4:スケジュールタイプ 5:スケジュール名
# 6:開催年月日 7:開始時刻       8:終了時刻  9:予約状況           10:開催場所
# 11:費用      12:担当者１      13:担当者２ 14:追記              15:建屋
   join1 key=1/2 $tmp-guest_schedule         |
   delf NF-2/NF                                |
   LANG=C sort -k4,4                           |
# 1:施設ID         2:スケジュールID 3:ゲスト名  4:スケジュールタイプ 5:色
# 6:スケジュール名 7:開催年月日     8:開始時刻  9:終了時刻           10:予約状況
# 11:開催場所      12:費用          13:担当者１ 14:担当者２          15:追記
# 16:建屋
   join1 key=4 $tmp-schedule_type_master      |
   LANG=C sort -k2,2            > $tmp-schedule_guest
fi


: > $tmp-schedule_sanka
if [ -s ${apdata_dir}/SCHEDULE/SCHEDULE_SANKASHA ] ; then
   cat ${home_dir}/TBL/SCHEDULE_MASTER/SCEDULE_TYPE_MASTER   |
   awk '$5=="'$shisetsu'"{print $1,$3}'         |
   LANG=C sort -k1,3 -u                         > $tmp-schedule_type_master
   cat ${apdata_dir}/SCHEDULE/SCHEDULE_SANKASHA |
   tee $tmp-sanka_work                          |
# 1:施設ID 2:スケジュールID 3:利用者ID 4:出席フラグ 5:備考
# 6:金額
   awk '$4=="1"'                               |
# 1:施設ID 2:スケジュールID 3:利用者ID
   self 1 2 3                                   |
   LANG=C sort -k1,2                           |
   uniq                  > $tmp-taishou_schedule

   cp $tmp-taishou_schedule $work_dir/taishou_schedule

   cat $tmp-schedule_data                      |
   LANG=C sort -k1,2                           |
# 1:施設ID     2:スケジュールID 3:利用者ID  4:スケジュールタイプ 5:スケジュール名
# 6:開催年月日 7:開始時刻       8:終了時刻  9:予約状況           10:開催場所
# 11:費用      12:担当者１      13:担当者２ 14:追記              15:建屋
   join1 key=1/2 $tmp-taishou_schedule         |
   delf NF-2/NF                                |
   LANG=C sort -k4,4                           |
# 1:施設ID         2:スケジュールID 3:利用者ID  4:スケジュールタイプ 5:色
# 6:スケジュール名 7:開催年月日     8:開始時刻  9:終了時刻           10:予約状況
# 11:開催場所      12:費用          13:担当者１ 14:担当者２          15:追記
# 16:建屋
   join1 key=4 $tmp-schedule_type_master      |
   LANG=C sort -k2,2            > $tmp-schedule_sanka
fi

cp $tmp-schedule_sanka $work_dir/schedule_sanka_senior

# 利用者契約情報より部屋番号を取得する必要あり
cat $tmp-schedule_sanka                       |
LANG=C sort -k3,3                             |
# 1:施設ID             2:スケジュールID 3:利用者ID       4:利用者名   5:部屋番号
# 6:スケジュールタイプ 7:色             8:スケジュール名 9:開催年月日 10:開始時刻
# 11:終了時刻          12:予約状況      13:開催場所      14:費用      15:担当者１
# 16:担当者２          17:追記          18:建屋
join1 key=3 $tmp-riyousha_master              |
# 1:施設ID    2:スケジュールID 3:利用者名   4:部屋番号  5:スケジュールタイプ
# 6:色        7:スケジュール名 8:開催年月日 9:開始時刻  10:終了時刻
# 11:予約状況 12:開催場所      13:費用      14:担当者１ 15:担当者２
# 16:追記     17:建屋
self 1 2 4/NF                                 > $tmp-schedule_info

cp $tmp-schedule_info $work_dir/schedule_info

[ -z "$hdKijunDate" -o "$hdKijunDate" = "_" ] && hdKijunDate=$(mdate today | self 1)

# 本日の日付を取得
taishoutoday=$(mdate $hdKijunDate | awk '{print substr($1,1,4)"/"substr($1,5,2)"/"substr($1,7,2)}')
echo "${taishoutoday}" > $tmp-today
taishoutoday2=$(mdate $hdKijunDate | self 1)

# スケジュールファイルの取得
cat $tmp-schedule_data |
awk '$(NF-2)!="9"'     |
# 日誌上の他の項目に表示されているものは省く
awk '$3!="00008"&&$3!="00015"&&$3!="00010"&&$3!="00009"&&$3!="00011"&&$3!="00012"&&$3!="00013"'  |
delf NF-2/NF                                |
# 1:施設      2:スケジュールID 3:スケジュールタイプ 4:スケジュール名 5:開催日
# 6:開始時刻  7:終了時刻       8:予約状況           9:開催場所       10:費用
# 11:担当者1  12:担当者2       13:追記              14:建屋
LANG=C sort -k1,2                         |
join1 key=1@2 - $tmp-sanka_work           |
delf NF-2/NF                              |
# 1:施設            2:スケジュールID 3:スケジュールタイプ 4:スケジュール名 5:開催日
# 6:開始時刻        7:終了時刻       8:予約状況           9:開催場所       10:費用
# 11:担当者1        12:担当者2       13:追記              14:建屋          15:利用者ID
# 16:利用者チェック 17:備考          18:費用
#--------------------------------------------------------------
# 検索
# --------------------------
# 開催開始日
# --------------------------
LANG=C sort -k5,5                         |
join0 key=5 $tmp-today                    |
LANG=C sort -k6,6 |
# 1:スケジュールID 2:スケジュール名 3:開催日 4:開始時刻 5:終了時刻
# 6:開催場所       7:備考 8:利用チェック
self 2 4 5 6 7 9 13 17       |
# 1:スケジュールID 2:スケジュール名 3:開催日       4:開始時刻 5:終了時刻
# 6:開催場所       7:備考        8:利用チェック 9:参加人数
count 1 8               |
# 利用チェックが入っていないのは
awk '{if($8=="_"){$9="0"};print $0}'  |
LANG=C sort -k1,4 -k9,9               |
getlast 1 4             |
# 1:スケジュールID 2:スケジュール名 3:開催日       4:開始時刻 5:終了時刻
# 6:開催場所       7:備考        8:参加人数
delf 8                  |
LANG=C sort -k3,3 -k4,4 |
# 1:スケジュールID 2:スケジュール名 3:開始時刻 4:参加人数 5:備考
self 1 2 4 8 7  > $tmp-schedule_list


# スケジュールよりスケジュールタイプ：業者関連(00008)を抽出
echo "00008" > $tmp-schedule_gyousha
# 1:施設ID    2:スケジュールID 3:スケジュールタイプ 4:スケジュール名 5:開催年月日
# 6:開始時刻  7:終了時刻       8:予約状況           9:開催場所       10:費用
# 11:担当者１ 12:担当者２      13:追記              14:建屋
cat $tmp-schedule_data                        |
LANG=C sort -k3,3                             |
join0 key=3 $tmp-schedule_gyousha             |
LANG=C sort -k11,11                           |
join1 key=11 $tmp-jugyoin_name_mst            |
delf 11                                       |
LANG=C sort -k5,5                             |
join0 key=5 $tmp-today                        |
# 1:施設ID   2:スケジュールID 3:スケジュール名 4:開始時刻 5:追記
# 6:担当者１
self 1 2 4 6 13 11                            > $tmp-gyousha

# スケジュールよりスケジュールタイプ：ゲスト宿泊(00015)を抽出
echo "00015" > $tmp-schedule_guestshukuhaku
: > $tmp-guest_shukuhakulist
if [ -s ${apdata_dir}/SCHEDULE/SCHEDULE_GUEST ] ; then
   cat ${apdata_dir}/SCHEDULE/SCHEDULE_GUEST  |
# 1:施設ID 2:スケジュールID 3:参加者名
   self 1 2 3                                 |
   LANG=C sort -k1,2                          > $tmp-guest_work
   cp $tmp-guest_work $work_dir/guest_work

   cp $tmp-schedule_data $work_dir/schedule_data_guest

# 1:施設ID    2:スケジュールID 3:スケジュールタイプ 4:スケジュール名 5:開催年月日
# 6:開始時刻  7:終了時刻       8:予約状況           9:開催場所       10:費用
# 11:担当者１ 12:担当者２      13:追記              14:建屋
   cat $tmp-schedule_data                        |
   LANG=C sort -k3,3                             |
   join0 key=3 $tmp-schedule_guestshukuhaku             |
   LANG=C sort -k5,5                             |
   join0 key=5 $tmp-today                        |
# 1:施設ID   2:スケジュールID 3:スケジュール名 4:開始時刻 5:追記
# 6:担当者１
   self 1 2 4 6 9 11                            |
   tee $work_dir/guest_shukuhaku                 |
   LANG=C sort -k1,2                             |
# 1:施設ID   2:スケジュールID 3:スケジュール名 4:開始時刻 5:場所
# 6:担当者１ 7:ゲスト参加者名 性別
   join1 key=1/2 - $tmp-guest_work          |
   self 5 7 8 > $tmp-guest_shukuhakulist
fi
guest_shukuhaku_male=$(awk '$3=="0"' $tmp-guest_shukuhakulist | gyo)
guest_shukuhaku_female=$(awk '$3=="1"' $tmp-guest_shukuhakulist | gyo)

# スケジュールよりスケジュールタイプ：内覧(00010)を抽出
echo "00010" > $tmp-schedule_nairan
# 1:施設ID         2:スケジュールID 3:ゲスト名  4:スケジュールタイプ 5:色
# 6:スケジュール名 7:開催年月日     8:開始時刻  9:終了時刻           10:予約状況
# 11:開催場所      12:費用          13:担当者１ 14:担当者２          15:追記
# 16:建屋
cat $tmp-schedule_guest                       |
LANG=C sort -k4,4                             |
join0 key=4 $tmp-schedule_nairan             |
LANG=C sort -k7,7                             |
join0 key=7 $tmp-today                        |
# 1:施設ID   2:スケジュールID 3:予約状況 4:ゲスト名 5:スケジュール名
# 6:開始時刻 7:追記           8:担当者１ 9:担当者２
self 1 2 10 3 6 8 15 13 14                    |
awk '{if($3=="0"){$3="無"}else{$3="有"};print $0}'> $tmp-nairan

# スケジュールよりスケジュールタイプ：引越し関連(00009)を抽出
echo "00009" > $tmp-schedule_hikkoshi
cat $tmp-schedule_info                       |
LANG=C sort -k5,5                            |
join0 key=5 $tmp-schedule_hikkoshi           |
awk '$8>="'${taishoutoday}'"'                |
# 1:施設ID     2:スケジュールID 3:部屋番号 4:利用者名 5:追記
# 6:開催年月日 7:開始時刻       8:担当者１ 9:担当者２
self 1 2 4 3 16 8 9 14 15                    > $tmp-hikkoshi

# スケジュールよりスケジュールタイプ：清掃関連(00011)を抽出
echo "00011" > $tmp-schedule_seisou
cat $tmp-schedule_info                       |
LANG=C sort -k5,5                            |
join0 key=5 $tmp-schedule_seisou           |
awk '$8>="'${taishoutoday}'"'                |
# 1:施設ID   2:スケジュールID 3:部屋番号 4:利用者名 5:開催年月日
# 6:開始時刻 7:追記
self 1 2 4 3 8 9 16                    > $tmp-seisou

# スケジュールよりスケジュールタイプ：特別食関連(00013)を抽出
echo "00013" > $tmp-schedule_tokubetsushoku
cat $tmp-schedule_info                       |
LANG=C sort -k5,5                            |
join0 key=5 $tmp-schedule_tokubetsushoku           |
awk '$8>="'${taishoutoday}'"'                |
# 1:施設ID   2:スケジュールID 3:部屋番号 4:利用者名 5:開催年月日
# 6:開始時刻 7:担当者１       8:追記
self 1 2 4 3 8 9 14 16                       |
LANG=C sort -k7,7                            |
join1 key=7 $tmp-jugyoin_name_mst            |
delf 7                                       |
LANG=C sort -k5,6                            > $tmp-tokubetsushoku

# スケジュールよりスケジュールタイプ：ケータリング(00012)を抽出
echo "00012" > $tmp-schedule_catering
cat $tmp-schedule_info                       |
LANG=C sort -k5,5                            |
join0 key=5 $tmp-schedule_catering           |
awk '$8>="'${taishoutoday}'"'                |
# 1:施設ID   2:スケジュールID 3:部屋番号 4:利用者名 5:開催年月日
# 6:開始時刻 7:担当者１       8:追記
self 1 2 4 3 8 9 14 16                       |
LANG=C sort -k7,7                            |
join1 key=7 $tmp-jugyoin_name_mst            |
delf 7                                       |
LANG=C sort -k5,6                            > $tmp-catering


# 日誌登録情報
nisshiday=$(mdate $hdKijunDate | self 1)
if [ -s ${pompa_dir}/NISSHI/$displayShisetsu/NISSHI_SENIOR ] ; then
   cat ${pompa_dir}/NISSHI/$displayShisetsu/NISSHI_SENIOR |
   LANG=C sort -k1,1                     |
   join0 key=1 $tmp-displayShisetsu      |
   awk '$2=="'${nisshiday}'"'          |
# 1:施設                      2:登録日付        3:日勤入居者ヒヤリ      4:日勤施設ヒヤリ          5:日勤入居者事故報告書
# 6:日勤施設事故報告書        7:日勤気付き      8:夜勤入居者ヒヤリ      9:夜勤施設ヒヤリ          10:夜勤入居者事故報告書
# 11:夜勤施設事故報告書       12:夜勤気付き     13:医者への健康相談人数 14:医者への健康相談>入居者 15:看護師への健康相談人数
# 16:看護師への健康相談入居者 17:日勤業務引継ぎ 18:夜勤業務引継ぎ       19:有効フラグ             20:処理時間
   delf NF-2/NF                          > $tmp-nisshi_senior_base
   NikkinNyukyoHiyari=$(self 3 $tmp-nisshi_senior_base | awk '{if($1=="1"){$1="有"}else{$1="無"};print $0}')
   NikkinShisetsuHiyari=$(self 4 $tmp-nisshi_senior_base | awk '{if($1=="1"){$1="有"}else{$1="無"};print $0}')
   NikkinNyukyoJikoho=$(self 5 $tmp-nisshi_senior_base | awk '{if($1=="1"){$1="有"}else{$1="無"};print $0}')
   NikkinShisetsuJikoho=$(self 6 $tmp-nisshi_senior_base | awk '{if($1=="1"){$1="有"}else{$1="無"};print $0}')
   NikkinKiduki=$(self 7 $tmp-nisshi_senior_base | awk '{if($1=="1"){$1="有"}else{$1="無"};print $0}')
   YakinNyukyoHiyari=$(self 8 $tmp-nisshi_senior_base | awk '{if($1=="1"){$1="有"}else{$1="無"};print $0}')
   YakinShisetsuHiyari=$(self 9 $tmp-nisshi_senior_base | awk '{if($1=="1"){$1="有"}else{$1="無"};print $0}')
   YakinNyukyoJikoho=$(self 10 $tmp-nisshi_senior_base | awk '{if($1=="1"){$1="有"}else{$1="無"};print $0}')
   YakinShisetsuJikoho=$(self 11 $tmp-nisshi_senior_base | awk '{if($1=="1"){$1="有"}else{$1="無"};print $0}')
   YakinKiduki=$(self 12 $tmp-nisshi_senior_base | awk '{if($1=="1"){$1="有"}else{$1="無"};print $0}')
   DrNinzu=$(self 13 $tmp-nisshi_senior_base)
   DrNyukyosha=$(self 14 $tmp-nisshi_senior_base)
   NsNinzu=$(self 15 $tmp-nisshi_senior_base)
   NsNyukyosha=$(self 16 $tmp-nisshi_senior_base)
   NikkinHikitsugi=$(self 17 $tmp-nisshi_senior_base | sed 's/\\n/<br>/g')
   YakinHikitsugi=$(self 18 $tmp-nisshi_senior_base | sed 's/\\n/<br>/g')
fi

# 事故報告書取得
cat ${pompa_dir}/JIKOHOU/JIKOHOU_HEADER |
# 1:事故ヒヤリヘッダーID 2:報告書フラグ  3:報告日      4:部署        5:報告者
# 6:施設                 7:建屋          8:フロア      9:居室        10:利用者ID
# 11:年齢                12:介護度       13:発生日     14:発生時間   15:発生場所
# 16:発生場所居室番号    17:発生場所備考 18:区分       19:区分備考   20:身体の状況
# 21:身体の状況備考      22:予備項目１   23:予備項目２ 24:予備項目３ 25:予備項目４
# 26:予備項目５
awk '$(NF-2)!="9"&&$6=="'$displayShisetsu'"&&($2=="1"||$2=="3"){print substr($13,1,8)}'  |
awk '$1=="'${hdKijunDate}'"{print $0}'    > $tmp-jikohoukokusho
numJikoho=$(gyo $tmp-jikohoukokusho)

# ヒヤリ
cat ${pompa_dir}/JIKOHOU/JIKOHOU_HEADER |
# 1:事故ヒヤリヘッダーID 2:報告書フラグ  3:報告日      4:部署        5:報告者
# 6:施設                 7:建屋          8:フロア      9:居室        10:利用者ID
# 11:年齢                12:介護度       13:発生日     14:発生時間   15:発生場所
# 16:発生場所居室番号    17:発生場所備考 18:区分       19:区分備考   20:身体の状況
# 21:身体の状況備考      22:予備項目１   23:予備項目２ 24:予備項目３ 25:予備項目４
# 26:予備項目５
#awk '$(NF-2)!="9"&&$6=="'$displayShisetsu'"&&($2=="2"||$2=="4"){print substr($(NF-1),1,8)}'  |
# 発生日ベースに変更
awk '$(NF-2)!="9"&&$6=="'$displayShisetsu'"&&($2=="2"||$2=="4"){print substr($13,1,8)}'  |
awk '$1=="'${hdKijunDate}'"{print $0}'    > $tmp-hiyari
numHiyari=$(gyo $tmp-hiyari)

# 気づき
cat ${pompa_dir}/KIZUKI/KIZUKI_DATA |
#awk '$(NF-2)!="9"&&$2=="'$displayShisetsu'"{print substr($(NF-1),1,8)}'  |
# 発生日ベースに変更
awk '$(NF-2)!="9"&&$2=="'$displayShisetsu'"{print substr($3,1,8)}'  |
awk '$1=="'${hdKijunDate}'"{print $0}'    > $tmp-kizukidata
numKiduki=$(gyo $tmp-kizukidata)


if [ -s ${pompa_dir}/NISSHI/$displayShisetsu/NIKKIN_SENIOR ] ; then
   cat ${pompa_dir}/NISSHI/$displayShisetsu/NIKKIN_SENIOR |
   LANG=C sort -k1,1                     |
   join0 key=1 $tmp-displayShisetsu            |
   awk '$2=="'${nisshiday}'"'          > $tmp-nikkinshaninzu
   self 3 $tmp-nikkinshaninzu            |
   LANG=C sort -k1,1                     |
#   join1 key=1 <(awk 'substr($6,1,1)!="3"&&$4<="'${nisshiday}'"&&"'${nisshiday}'"<=$5&&$(NF-2)!="9"' ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_KIHON)  |
   join1 key=1 ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
   LANG=C sort -k3,3                     |
   self 2                                |
   tateyoko                              |
   sed 's/ /、/g'         > $tmp-nikkinshainfo
   
   NikkinshaInfo=$(cat $tmp-nikkinshainfo)
   NikkinshaNinzu=$(gyo $tmp-nikkinshaninzu)
fi   

if [ -s ${pompa_dir}/NISSHI/$displayShisetsu/YAKIN_SENIOR ] ; then
   cat ${pompa_dir}/NISSHI/$displayShisetsu/YAKIN_SENIOR |
   LANG=C sort -k1,1                     |
   join0 key=1 $tmp-displayShisetsu            |
   awk '$2=="'${nisshiday}'"'          > $tmp-yakinshaninzu
   self 3 $tmp-yakinshaninzu            |
   LANG=C sort -k1,1                     |
   join1 key=1 ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
   LANG=C sort -k3,3                     |
   self 2                                |
   tateyoko                              |
   sed 's/ /、/g'         > $tmp-yakinshainfo
   
   YakinshaInfo=$(cat $tmp-yakinshainfo)
   YakinshaNinzu=$(gyo $tmp-yakinshaninzu)
fi   

############
# 連絡事項
###########
: > $tmp-renraku_list_tmp
if [ -s ${pompa_dir}/RENRAKU/$displayShisetsu/RENRAKU_JIKOU ] ; then
   cat ${pompa_dir}/RENRAKU/$displayShisetsu/RENRAKU_JIKOU    |
   awk '$(NF-2)!="9"'                                         |
   LANG=C sort -k1,1                                          |
   join0 key=1 $tmp-displayShisetsu                           |
   awk '$3=="'${nisshiday}'"'                                 |
# 1:施設         2:ID         3:登録日付 4:登録時間 5:連絡事項ヘッダ
# 6:連絡事項詳細 7:建屋 8:有効フラグ 9:処理時間 10:ユーザID
   LANG=C sort -k10,10                                          |
# 1:施設         2:ID         3:登録日付 4:登録時間 5:連絡事項ヘッダ
# 6:連絡事項詳細 7:建屋 8:有効フラグ 9:処理時間 10:ユーザID 11:ユーザ名
   join1 key=10 ${tmp}-jugyoin                                 |
   awk '{if($7=="2"){$7="green"}else{$7="chocolate"};print $0}'       |
# 1:ID 2:登録時間 3:連絡事項ヘッダ 4:ユーザ名 5:色
   self 2 4 5 11 7                                             > $tmp-renraku_list_tmp
fi

# 申し送り事項なども反映
echo "$hdKijunDate" | awk '{print substr($1,1,6)}' > $tmp-kijunmonth
kijunmonth=$(self 1 $tmp-kijunmonth)

: > $tmp-moushiokuri_care
if [ -s ${home_dir}/SHISETSU_KAIGOKIROKU/POMPA/KAIGOJISSEKI/$displayShisetsu/$kijunmonth/$kijunmonth.KAIGOJISSEKI_IKKATSU_MOUSHIOKURI ] ; then
  cat ${home_dir}/SHISETSU_KAIGOKIROKU/POMPA/KAIGOJISSEKI/$displayShisetsu/$kijunmonth/$kijunmonth.KAIGOJISSEKI_IKKATSU_MOUSHIOKURI > $tmp-moushiokuri_care
fi

: > $tmp-moushiokuri_senior
if [ -s ${home_dir}/SHISETSU_KAIGOKIROKU/POMPA/KAIGOJISSEKI/$displayShisetsu/$kijunmonth/$kijunmonth.KAIGOJISSEKI_IKKATSU_MOUSHIOKURI_SENIOR ] ; then
  cat ${home_dir}/SHISETSU_KAIGOKIROKU/POMPA/KAIGOJISSEKI/$displayShisetsu/$kijunmonth/$kijunmonth.KAIGOJISSEKI_IKKATSU_MOUSHIOKURI_SENIOR > $tmp-moushiokuri_senior
fi


# 利用者以外レコードを追加
echo "99999999" "職員連絡"     |
cat $tmp-riyoushamei_mst -       > $tmp-riyoushamei_mst_rev

cat $tmp-moushiokuri_care $tmp-moushiokuri_senior |
LANG=C sort -k1,1                |
join1 key=1 $tmp-riyoushamei_mst_rev |
delf 1                           |
awk '$2=="'$hdKijunDate'"&&$8=="on"{gsub(/[0-9]/,"",$7);gsub(/+*/,"",$7);print "_",$4,"("$1")"$10,$7,"black"}' >> $tmp-renraku_list_tmp

cat $tmp-renraku_list_tmp | LANG=C sort -k2r,2r > $tmp-renraku_list

curdate=$(mdate $hdKijunDate | self 1)

# 体験入居者のIDを出す。
shortcode="001"
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KEIYAKU |
awk '$(NF-2)!="9"'                             |
# 1:利用者ID   2:施設ID     3:建屋ID 4:フロアID 5:契約種類ID
# 6:契約開始日 7:契約終了日
self 1 3 4 5 9 12 13                                 |
#awk '$2=="'$shisetsu'"&&$3=="02"&&$5=="'$shortcode'"&&$6<="'$taishoutoday2'"&&"'$taishoutoday2'"<=$7'   |
awk '$2=="'$shisetsu'"&&$3=="01"&&$5=="'$shortcode'"&&$6<="'$curdate'"&&"'$curdate'"<=$7'   |
self 1  |
LANG=C sort -k1,1  > $tmp-taiken_riyoushaid

# 入居者統計情報
# 1:施設ID   2:シニアケア区分 3:フロア 4:ユニット 5:居室番号
# 6:利用者ID 7:有効From       8:有効To
cat ${data_dir}/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
awk '$7<="'$curdate'"&&"'$curdate'"<$8'                |
awk '$1=="'$shisetsu'"&&$2=="01"&&$(NF-2)!="9"{print $0}'            |
LANG=C sort -k6,6                                      |
tee $tmp-allnyukyosha_riyoushainfo                     |
join0 +ng key=6 $tmp-taiken_riyoushaid > /dev/null 2> $tmp-honnyukyosha_riyoushainfo
cat $tmp-honnyukyosha_riyoushainfo                     |
self 6                                                 |
LANG=C sort -k1,1          > $tmp-honnyukyosha-riyoushaid

cp $tmp-honnyukyosha-riyoushaid $work_dir/honnyukyosha-riyoushaid_senior

# 入居戸数
# 体験含む
#cat $tmp-honnyukyosha_riyoushainfo                     |
cat $tmp-allnyukyosha_riyoushainfo                     |
self 5                                                 |
LANG=C sort -k1,1                                      |
getlast 1 1                                            > $tmp-nyukyo_room
nyukyokosu=$(gyo $tmp-nyukyo_room)

# 施設部屋数
cat ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM   |
awk '$9!="9"'                                          |
awk '$1=="'$shisetsu'"&&$2=="01"{print $0}'            > $tmp-room_info
roomkosu=$(gyo $tmp-room_info)

# 入居率
echo "$nyukyokosu" "$roomkosu"    |
lcalc '$1/$2*100'                 |
marume 1.0                        > $tmp-nyukyoritsu

nyukyoritsu=$(self 1 $tmp-nyukyoritsu)

# 2人入居率
# 体験含む
#cat $tmp-honnyukyosha_riyoushainfo                     |
cat $tmp-allnyukyosha_riyoushainfo                     |
self 5                                                 |
LANG=C sort -k1,1                                      |
count 1 1                                              > $tmp-nyukyo_status
# 全体の入居戸数
all_nyukyo=$(gyo $tmp-nyukyo_status)
# 複数人の入居戸数
awk '$2>1{print $0}' $tmp-nyukyo_status                > $tmp-fukusu_nyukyo
fukusu_nyukyo=$(gyo $tmp-fukusu_nyukyo)
echo "$all_nyukyo" "$fukusu_nyukyo"                    |
lcalc '$2/$1*100'                                      |
marume 1.0                                             > $tmp-fukusu_nyukyoritsu

fukusu_nyukyoritsu=$(self 1 $tmp-fukusu_nyukyoritsu)


# 1:利用者ID   2:利用者名   3:利用者名カナ 4:性別         5:生年月日和暦区分
# 6:生年月日年 7:生年月日月 8:生年月日日   9:生年月日西暦
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KIHON           |
tee $tmp-riyousha_mst                                  |
LANG=C sort -k1,1                                      |
join0 key=1 $tmp-honnyukyosha-riyoushaid               |
self 1 2 4                                               |
tee $tmp-taishou_riyoushaid                            |
self 3                                                 |
LANG=C sort -k1,1                                      |
count 1 1                  > $tmp-honnyukyosha_shoukei_count

honnyukyosha_shoukei_male_count=$(awk '$1=="1"{print $2}' $tmp-honnyukyosha_shoukei_count)
honnyukyosha_shoukei_female_count=$(awk '$1=="2"{print $2}' $tmp-honnyukyosha_shoukei_count)
[ -z "$honnyukyosha_shoukei_male_count" -o "$honnyukyosha_shoukei_male_count" = "_" ] && honnyukyosha_shoukei_male_count=0
[ -z "$honnyukyosha_shoukei_female_count" -o "$honnyukyosha_shoukei_female_count" = "_" ] && honnyukyosha_shoukei_female_count=0

TATEYA="01"

birthdate=$(echo $curdate | awk '{print substr($1,5,4)}')
birthyear=$(echo $curdate | awk '{print substr($1,1,4)}')

# 誕生日
cat $tmp-riyousha_mst                          |
LANG=C sort -k1,1                              |
join0 key=1 $tmp-honnyukyosha-riyoushaid       |
awk 'substr($9,5,4)=="'$birthdate'"{print $2,substr($9,1,4),"'$birthyear'"}'     |
lcalc '$1,$3-$2'                               |
awk '{print $1"さん("$2"歳)"}'                 > $tmp-birthrecord

[ $(gyo $tmp-birthrecord) -gt 0 ] && echo "　おめでとうございます。" >> $tmp-birthrecord

:> $tmp-birthinfo
if [ $(gyo $tmp-birthrecord) -gt 0 ]; then
  cat $tmp-birthrecord    |
  tateyoko                |
  sed 's/ /,/g'           > $tmp-birthinfo
fi

birthinfo=$(cat $tmp-birthinfo)

# 入院外泊
# 1:利用者ID     2:？       3:施設ID 4:建屋ID 5:居室
# 6:入院外泊区分 7:外泊FROM 8:外泊TO
cat ${data_dir}/UNEI/NYUUINGAIHAKU/${shisetsu}/${TATEYA}/RIYOUSHA_NYUUINGAIHAKU |
awk '$3=="'${shisetsu}'"&&$4=="01"&&$7<="'$curdate'"&&"'$curdate'"<=$8{print $1,$5,$6,$8}'        |
# 1:利用者ID 2:居室 3:入院外泊
LANG=C sort -k1,2 |
getlast 1 2       > $tmp-nyuingaihaku_list

# 1:利用者ID 2:居室 3:入院外泊 4:外泊TO
cat $tmp-nyuingaihaku_list                    |
# 1:利用者ID 2:利用者名 3:性別 4:居室 5:入院外泊
# 6:外泊TO
join1 key=1 $tmp-taishou_riyoushaid           |
tee $tmp-nyuingaihaku_name_list               |
# 1:性別 2:入院外泊
self 3 5                                      |
LANG=C sort -k1,2                             |
count 1 2                                     > $tmp-nyuingaihaku_count

gaihaku_male_count=$(awk '$1=="1"&&$2=="2"{print $3}' $tmp-nyuingaihaku_count)
gaihaku_female_count=$(awk '$1=="2"&&$2=="2"{print $3}' $tmp-nyuingaihaku_count)
nyuin_male_count=$(awk '$1=="1"&&$2=="1"{print $3}' $tmp-nyuingaihaku_count)
nyuin_female_count=$(awk '$1=="2"&&$2=="1"{print $3}' $tmp-nyuingaihaku_count)

[ -z "$gaihaku_male_count" -o "$gaihaku_male_count" = "_" ] && gaihaku_male_count=0
[ -z "$gaihaku_female_count" -o "$gaihaku_female_count" = "_" ] && gaihaku_female_count=0
[ -z "$nyuin_male_count" -o "$nyuin_male_count" = "_" ] && nyuin_male_count=0
[ -z "$nyuin_female_count" -o "$nyuin_female_count" = "_" ] && nyuin_female_count=0

nyuingaihaku_male_kei_count=`expr $gaihaku_male_count + $nyuin_male_count`
nyuingaihaku_female_kei_count=`expr $gaihaku_female_count + $nyuin_female_count`

honnyukyosha_male_count=`expr $honnyukyosha_shoukei_male_count - $nyuingaihaku_male_kei_count`
honnyukyosha_female_count=`expr $honnyukyosha_shoukei_female_count - $nyuingaihaku_female_kei_count`

# その他在館者
# 男女不明なので、とりあえず男性にセット
gyosha_num=$(gyo $tmp-gyosha)
nairan_num=$(gyo $tmp-nairan)
seisou_num=$(gyo $tmp-seisou)
other_male_count=`expr $gyosha_num + $nairan_num + $seisou_num`
other_female_count=0



# 入院リスト
cat $tmp-nyuingaihaku_name_list |
awk '$5=="1"{print $4,$2,substr($6,1,4)"/"substr($6,5,2)"/"substr($6,7,2)}'      |
sed 's/9999\/99\/99/@/g'        |
LANG=C sort -k1,1               > $tmp-nyuin_name_list

# 外泊リスト
cat $tmp-nyuingaihaku_name_list |
awk '$5=="2"{print $4,$2,substr($6,1,4)"/"substr($6,5,2)"/"substr($6,7,2)}'      |
sed 's/9999\/99\/99/@/g'        |
LANG=C sort -k1,1               > $tmp-gaihaku_name_list


# 体験入居
taikencode="001"
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KEIYAKU |
# 1:施設ID 2:契約種類ID 3:契約開始日 4:契約終了日
awk '$(NF-2)!="9"'                             |
self 1 3 4 9 14 15                                 |
awk '$2=="'$shisetsu'"&&$3=="'01'"&&$4=="'$taikencode'"&&$5<="'$taishoutoday2'"&&"'$taishoutoday2'"<=$6'   |
self 1                                       |
LANG=C sort -k1,1                            |
join1 key=1 $tmp-riyousha_mst                |
tee $tmp-taiken_riyousha                     |
self 4                                       |
LANG=C sort -k1,1                            |
count 1 1                                    > $tmp-taiken_count
taiken_count_male=$(awk '$1=="1"{print $2}' $tmp-taiken_count)
taiken_count_female=$(awk '$1=="2"{print $2}' $tmp-taiken_count)

[ -z "$taiken_count_male" ] && taiken_count_male=0
[ -z "$taiken_count_female" ] && taiken_count_female=0


# 総計
floor_full_count=`expr $honnyukyosha_shoukei_male_count + $honnyukyosha_shoukei_female_count + $taiken_count_male + $taiken_count_female + $guest_shukuhaku_male + $guest_shukuhaku_female + $other_male_count + $other_female_count`


# 1:施設ID   2:シニアケア区分 3:フロア 4:ユニット 5:居室番号
# 6:利用者ID 7:有効From       8:有効To  9:氏名
cat ${data_dir}/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS     |
awk '$(NF-2)!="9"'                             |
awk '$7<="'$curdate'"&&"'$curdate'"<$8'                |
LANG=C sort -k6,6                            |
# 1:施設ID   2:シニアケア区分 3:フロア   4:ユニット 5:居室番号
# 6:利用者ID 7:氏名           8:有効From 9:有効To
join1 key=6 $tmp-taiken_riyousha             |
self 5 7                                     > $tmp-taiken_list

# 一括契約
ikkatsucode="003"
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KEIYAKU |
awk '$(NF-2)!="9"'                             |
# 1:利用者ID   2:施設ID 3:建屋ID 4:契約種類ID 5:契約開始日
# 6:契約終了日
self 1 3 4 9 12 13                                 |
awk '$2=="'$shisetsu'"&&$3=="'01'"&&$4=="'$ikkatsucode'"&&$5<="'$taishoutoday2'"&&"'$taishoutoday2'"<=$6'   |
self 1                                       |
LANG=C sort -k1,1                            |
count 1 1                                    |
self 2 > $tmp-ikkatsu_count
[ "$(gyo $tmp-ikkatsu_count)" = "0" ] && : > $tmp-ikkatsu_count

# 月払契約
tsukibaraicode="004"
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KEIYAKU |
awk '$(NF-2)!="9"'                             |
# 1:利用者ID   2:施設ID 3:建屋ID 4:契約種類ID 5:契約開始日
# 6:契約終了日
self 1 3 4 9 12 13                                 |
awk '$2=="'$shisetsu'"&&$3=="'01'"&&$4=="'$tsukibaraicode'"&&$5<="'$taishoutoday2'"&&"'$taishoutoday2'"<=$6'   |
self 1                                       |
LANG=C sort -k1,1                            |
count 1 1                                    |
self 2 > $tmp-tsukibarai_count
[ "$(gyo $tmp-tsukibarai_count)" = "0" ] && : > $tmp-tsukibarai_count

cp $tmp-ikkatsu_count $work_dir/ikkatu_count
cp $tmp-tsukibarai_count $work_dir/tsukibarai_count

ikkatsu_goukei=$(gyo $tmp-ikkatsu_count)
tsukibarai_goukei=$(gyo $tmp-tsukibarai_count)


#ycat $tmp-ikkatsu_count $tmp-tsukibarai_count |
echo $ikkatsu_goukei $tsukibarai_goukei       |
# 1:一括支払い数 2:月払い支払い数
lcalc '$1/($1+$2)*100,$2/($1+$2)*100'         |
marume 1.0 2.0                                > $tmp-shiharai_percent

ikkatsupercent=$(self 1 $tmp-shiharai_percent)
tsukipercent=$(self 2 $tmp-shiharai_percent)


# 建屋設定
self 1 2 ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR   |
awk '$1=="'$shisetsu'"{print $2}'                                |
LANG=C sort -k1,1                                                |
getlast 1 1                                                      |    
join1 key=1 <(self 1 3 ${home_dir}/TBL/SHISETSU_MASTER/TATEYA_NAME)  |
awk '{if($1=="01"){$3="selected"}else{$3=""};print int($1),$2,$3}'      > $tmp-select_tateya

# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou



echo "NISSHI.CGI" > $tmp-cgi
# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
awk '$2=="0000"||$2=="'$shisetsu'"'         |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -k7,7                                          |
join0 key=7 $tmp-cgi                                       > ${tmp}-kengenlist


self 1 2 ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON |
join0 key=1 $tmp-shisetsu > $tmp-shisetsu_list

# 所属建屋によって登録可否を判定
self 1 3 $home_dir/TBL/JYUUGYOUIN_MASTER/USER_SHISETSU |
awk '$1=="'$userid'"' > $tmp-user_tateya

user_tateya=$(self 2 $tmp-user_tateya)

disabled_touroku="0"
if [ "$user_tateya" = "02" ] ; then
   disabled_touroku="1"
fi

#--------------------------------------------------------------
# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
cat << FIN > $tmp-html2
    <script type="text/javascript" language="javascript">
      alert('${message}');
    </script>
FIN
##else
##cat << FIN > $tmp-html2
##    <script type="text/javascript" language="javascript">
##      window.close();
##    </script>
##FIN
fi
#--------------------------------------------------------------
cat << FIN | sed 's/ _$/ @/g' > $tmp-calsed
###USERID### $userid
###PASSWORD### $password
###SHISETSUID### $shisetsu
###DROPDOWN_ACTIVE1### active
###LI_UNEI1### active
###NIKKINSHANINZU### $NikkinshaNinzu
###NIKKINSHAINFO### $NikkinshaInfo
###YAKINSHANINZU### $YakinshaNinzu
###YAKINSHAINFO### $YakinshaInfo
###NIKKINNYUKYOHIYARI### $NikkinNyukyoHiyari
###NIKKINSHISETSUHIYARI### $NikkinShisetsuHiyari
###NIKKINNYUKYOJIKOHO### $NikkinNyukyoJikoho
###NIKKINSHISETSUJIKOHO### $NikkinShisetsuJikoho
###NIKKINKIDUKI### $NikkinKiduki
###YAKINNYUKYOHIYARI### $YakinNyukyoHiyari
###YAKINSHISETSUHIYARI### $YakinShisetsuHiyari
###YAKINNYUKYOJIKOHO### $YakinNyukyoJikoho
###YAKINSHISETSUJIKOHO### $YakinShisetsuJikoho
###YAKINKIDUKI### $YakinKiduki
###JIKOHOKAISU### $numJikoho
###HIYARIKAISU### $numHiyari
###KIDUKIKAISU### $numKiduki
###DRNINZU### $DrNinzu
###DRNYUKYOSHA### $DrNyukyosha
###NSNINZU### $NsNinzu
###NSNYUKYOSHA### $NsNyukyosha
###NIKKINHIKITSUGI### $NikkinHikitsugi
###YAKINHIKITSUGI### $YakinHikitsugi
###GUESTSYUKUHAKU_MALE### $guest_shukuhaku_male
###GUESTSYUKUHAKU_FEMALE### $guest_shukuhaku_female
###HMC### $honnyukyosha_male_count
###GMC### $gaihaku_male_count
###NMC### $nyuin_male_count
###NMKC### $nyuingaihaku_male_kei_count
###HSMC### $honnyukyosha_shoukei_male_count
###HFC### $honnyukyosha_female_count
###GFC### $gaihaku_female_count
###NFC### $nyuin_female_count
###NFKC### $nyuingaihaku_female_kei_count
###HSFC### $honnyukyosha_shoukei_female_count
###ROOMKOSU### $all_nyukyo
###NYUKYORITSU### $nyukyoritsu
###FUKUSUNYUKYORITSU### $fukusu_nyukyoritsu
###TAIKENMALE### $taiken_count_male
###TAIKENFEMALE### $taiken_count_female
###OTHERZAIKANSHA_MALE### $other_male_count
###OTHERZAIKANSHA_FEMALE### $other_female_count
###FULLCOUNT### $floor_full_count
###IKKATSUSHIHARAI### $ikkatsupercent
###TSUKIHARAI### $tsukipercent
###BIRTHDAYINFO### $birthinfo
###SELECT_SHISETSU### $select_shisetsu
###DISABLED_TOUROKU### $disabled_touroku
###KIJUNDATE### $taishoutoday
###HDKIJUNDATE### $hdKijunDate
FIN

#-----------------------------------------------------------
# 登録・印刷ボタンの表示
# 施設名はログインユーザーの権限のある施設を取得
self 9 $tmp-kengenlist |
LANG=C sort -k1,1      |
tail -1                > $tmp-dispkengen

# 建屋が所属施設で無い場合は登録などの権限はなし
if [ "$disabled_touroku" = "1" ] ; then
  echo "###SHINKITOUROKUDISP### none" >> $tmp-calsed
  echo "###TOUROKUDISP### none" >> $tmp-calsed
  echo "###PRINTDISP### none"   >> $tmp-calsed  
else
  # 権限がない人は新規登録や出力が出来ない
  if [ $(cat $tmp-dispkengen) = "3" ] ;then
    echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed
    echo "###TOUROKUDISP### @" >> $tmp-calsed
    echo "###PRINTDISP### @"   >> $tmp-calsed
  elif [ $(cat $tmp-dispkengen) = "2" ] ;then
    echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed
    echo "###TOUROKUDISP### @" >> $tmp-calsed
    echo "###PRINTDISP### none"   >> $tmp-calsed
  else
    echo "###SHINKITOUROKUDISP### none" >> $tmp-calsed
    echo "###TOUROKUDISP### none" >> $tmp-calsed
    echo "###PRINTDISP### none"   >> $tmp-calsed
  fi
fi

cat $checkfile >> $tmp-calsed

: > $tmp-list

cat $tmp-calsed      |
sed 's/\\n/###KAIGYO###/g'     >  $tmp-calsed_kaigyozumi

# HTMLの作成
cat ${html_dir}/NISSHI_SENIOR1.html ${home_dir}/KYOUTSU/HTML/MENUBAR.html ${html_dir}/NISSHI_SENIOR2.html |
calsed -f $tmp-calsed_kaigyozumi - |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -l###SHISETSU_NAME### - $tmp-shisetsu_list |
mojihame -l###SCHEDULELIST### - $tmp-schedule_list |
mojihame -l###GYOUSHA### - $tmp-gyousha |
mojihame -l###NAIRAN### - $tmp-nairan |
mojihame -l###HIKKOSHI### - $tmp-hikkoshi |
mojihame -l###SEISOU### - $tmp-seisou |
mojihame -l###TOKUBETSUSHOKU### - $tmp-tokubetsushoku |
mojihame -l###CATERING### - $tmp-catering |
mojihame -h###RENRAKULIST### - $tmp-renraku_list |
mojihame -l###GUESTSHUKUHAKULIST### - $tmp-guest_shukuhakulist |
mojihame -l###GAIHAKULIST### - $tmp-gaihaku_name_list |
mojihame -l###NYUINLIST### - $tmp-nyuin_name_list |
mojihame -l###TAIKENLIST### - $tmp-taiken_list |
mojihame -l###SELECTTATEYA### - $tmp-select_tateya |
sed 's/###KAIGYO###/\n/g'     |
sed 's/\\n//g'                |
sed 's/###SPACE###/ /g'       |
tee $tmp-html |
#--------------------------------------------------------------
#--------------------------------------------------------------
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |
#formhame -d"_" - ${namedata}  |
cat -
#--------------------------------------------------------------

rm -f ${tmp}-*
exit 0
