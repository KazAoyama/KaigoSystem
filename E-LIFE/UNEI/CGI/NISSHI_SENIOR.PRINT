#!/bin/bash
#
# NISSHI_SENIOR.DISPLAY : 日誌（シニア表示)
#
# Usage : NISSHI_SENIOR.DISPLAY
#
# Written by K.Aoyama(HANDS.LAB)

# ログ
source /home/hands/E-LIFE/UNEI/CGI/UNEI.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null

mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date +%Y%m%d) ; set -xv

rm -f $tmp-*

# ディレクトリ設定
test_tbl_dir="${home_dir}/TEST/TBL"
test_pompa_dir="${home_dir}/SYSTEM_SETTEI/POMPA/KENGEN_KANRI"
kengen_dir="${home_dir}/SYSTEM_SETTEI/POMPA/KENGEN_KANRI"

# 変数の定義
namedata=$1
checkfile=$2
today="$(date +%Y%m%d)"

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------

echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu

# ログインUSER名と施設の取得（仮）
cat ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
tee ${tmp}-jugyoin                                 |
# 1:USER_ID 2:ユーザー名
join1 key=1 ${tmp}-user                            |
# 1:USER_ID 2:ユーザー名
self 2                                             > ${tmp}-usermei

self 1 2 ${tmp}-jugyoin                            |
LANG=C sort -k1,1                                  > $tmp-jugyoin_name_mst

self 1 2 ${home_dir}/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst
cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst

cat $tmp-disp_shisetsu_mst |
# 1:施設コード 2:施設名
join1 key=1 ${tmp}-shisetsu                        |
self 2                                             > ${tmp}-user_shisetsu

[ -z "${displayShisetsu}" -o "${displayShisetsu}" = "_" ] && displayShisetsu=$shisetsu

echo ${displayShisetsu} > $tmp-displayShisetsu


##############################################################
# 利用者基本情報
##############################################################
: > $tmp-riyousha_master
if [ -s ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_MASTER ] ; then
# 1.利用者ID 2.利用者名
  self 1 2 ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_MASTER |
  tee $tmp-riyoushamei_mst                           |
# 居室番号をつける
  awk '{print $1,$2,"_"}'                           > $tmp-riyousha_master
else
  message="利用者基本情報がありません"
fi



##############################################################
# スケジュールより取得
##############################################################
# スケジュールタイプ
# 1:ID 2:色
self 1 3 ${home_dir}/TBL/SCHEDULE_MASTER/SCEDULE_TYPE_MASTER   > $tmp-schedule_type_master

# スケジュール詳細
: > $tmp-schedule_data
if [ -s ${apdata_dir}/SCHEDULE/SCHEDULE_SHOUSAI ] ; then
   cat ${apdata_dir}/SCHEDULE/SCHEDULE_SHOUSAI  |
   awk '$(NF-2)!="9"'                           |
   LANG=C sort -k1,1                            |
# 該当施設のみ
   join0 key=1 $tmp-displayShisetsu                    |
# 該当建屋のみ
   awk '$14=="1"'                               > $tmp-schedule_data
fi


: > $tmp-schedule_guest
if [ -s ${apdata_dir}/SCHEDULE/SCHEDULE_GUEST ] ; then
   # スケジュールタイプマスタを取得
# 1:ID 2:色
   cat ${home_dir}/TBL/SCHEDULE_MASTER/SCEDULE_TYPE_MASTER   |
   awk '$5=="'$shisetsu'"{print $1,$3}'         |
   LANG=C sort -k1,3 -u                         > $tmp-schedule_type_master
   cp $tmp-schedule_type_master $work_dir/type_master

# 1:施設ID 2:スケジュールID 3:ゲスト名 4:関係入居者 5:備考
# 6:金額
   cat ${apdata_dir}/SCHEDULE/SCHEDULE_GUEST |
   awk '$(NF-2)!="9"'                        |
# 1:施設ID 2:スケジュールID 3:利用者ID
   self 1 2 3                                |
   LANG=C sort -k1,2                         > $tmp-guest_schedule

   cp $tmp-guest_schedule $work_dir/guest_schedule

   cat $tmp-schedule_data                    |
   LANG=C sort -k11,11                           |
   join2 +"@" key=11 $tmp-jugyoin_name_mst            |
   delf 11                                       |
   LANG=C sort -k12,12                           |
   join2 +"@" key=12 $tmp-jugyoin_name_mst            |
   delf 12                                       |
   LANG=C sort -k1,2                         |
# 1:施設ID     2:スケジュールID 3:ゲスト名  4:スケジュールタイプ 5:スケジュール名
# 6:開催年月日 7:開始時刻       8:終了時刻  9:予約状況           10:開催場所
# 11:費用      12:担当者１      13:担当者２ 14:追記              15:建屋
   join2 +"@" key=1/2 $tmp-guest_schedule         |
   delf NF-2/NF                                |
   LANG=C sort -k4,4                           |
# 1:施設ID         2:スケジュールID 3:ゲスト名  4:スケジュールタイプ 5:色
# 6:スケジュール名 7:開催年月日     8:開始時刻  9:終了時刻           10:予約状況
# 11:開催場所      12:費用          13:担当者１ 14:担当者２          15:追記
# 16:建屋
   join1 key=4 $tmp-schedule_type_master      |
   LANG=C sort -k2,2            > $tmp-schedule_guest
fi


: > $tmp-schedule_sanka
if [ -s ${apdata_dir}/SCHEDULE/SCHEDULE_SANKASHA ] ; then
   cat ${home_dir}/TBL/SCHEDULE_MASTER/SCEDULE_TYPE_MASTER   |
   awk '$5=="'$shisetsu'"{print $1,$3}'         |
   LANG=C sort -k1,3 -u                         > $tmp-schedule_type_master
   cat ${apdata_dir}/SCHEDULE/SCHEDULE_SANKASHA |
   tee $tmp-sanka_work                          |
# 1:施設ID 2:スケジュールID 3:利用者ID 4:出席フラグ 5:備考
# 6:金額
   awk '$4=="1"'                               |
# 1:施設ID 2:スケジュールID 3:利用者ID
   self 1 2 3                                   |
   LANG=C sort -k1,2                           |
   uniq                  > $tmp-taishou_schedule

   cp $tmp-taishou_schedule $work_dir/taishou_schedule

   cat $tmp-schedule_data                      |
   LANG=C sort -k1,2                           |
# 1:施設ID     2:スケジュールID 3:利用者ID  4:スケジュールタイプ 5:スケジュール名
# 6:開催年月日 7:開始時刻       8:終了時刻  9:予約状況           10:開催場所
# 11:費用      12:担当者１      13:担当者２ 14:追記              15:建屋
   join1 key=1/2 $tmp-taishou_schedule         |
   delf NF-2/NF                                |
   LANG=C sort -k4,4                           |
# 1:施設ID         2:スケジュールID 3:利用者ID  4:スケジュールタイプ 5:色
# 6:スケジュール名 7:開催年月日     8:開始時刻  9:終了時刻           10:予約状況
# 11:開催場所      12:費用          13:担当者１ 14:担当者２          15:追記
# 16:建屋
   join1 key=4 $tmp-schedule_type_master      |
   LANG=C sort -k2,2            > $tmp-schedule_sanka
fi

cp $tmp-schedule_sanka $work_dir/schedule_sanka_senior_print


[ -z "$hdKijunDate" -o "$hdKijunDate" = "_" ] && hdKijunDate=$(mdate today | self 1)

# 利用者に居室をつける
cat ${data_dir}/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
awk '$(NF-2)!="9"'                                     |
awk '$7<="'$hdKijunDate'"&&"'$hdKijunDate'"<=$8'       |
self 6 5 NF-1 |
LANG=C sort -k1,1 |
join2 +"_" key=1 $tmp-riyousha_master         |
LANG=C sort -k1,1 -k5,5                       |
getlast 1 1                                   |
self 1 2 4                                    > $tmp-riyousha_master_kyoshitsu

# 利用者契約情報より部屋番号を取得する必要あり
cat $tmp-schedule_sanka                       |
LANG=C sort -k3,3                             |
# 1:施設ID             2:スケジュールID 3:利用者ID       4:利用者名   5:部屋番号
# 6:スケジュールタイプ 7:色             8:スケジュール名 9:開催年月日 10:開始時刻
# 11:終了時刻          12:予約状況      13:開催場所      14:費用      15:担当者１
# 16:担当者２          17:追記          18:建屋
join1 key=3 $tmp-riyousha_master_kyoshitsu              |
# 1:施設ID    2:スケジュールID 3:利用者名   4:部屋番号  5:スケジュールタイプ
# 6:色        7:スケジュール名 8:開催年月日 9:開始時刻  10:終了時刻
# 11:予約状況 12:開催場所      13:費用      14:担当者１ 15:担当者２
# 16:追記     17:建屋
self 1 2 4/NF                                 |
LANG=C sort -k14,14                           |
join2 +"@" key=14 $tmp-jugyoin_name_mst            |
delf 14                                       |
LANG=C sort -k15,15                           |
join2 +"@" key=15 $tmp-jugyoin_name_mst            |
delf 15                                       |
sed 's/ _ / @ /g'                             > $tmp-schedule_info

cp $tmp-schedule_info $work_dir/schedule_info


# 本日の日付を取得
taishoutoday=$(mdate $hdKijunDate | awk '{print substr($1,1,4)"/"substr($1,5,2)"/"substr($1,7,2)}')
echo "${taishoutoday}" > $tmp-today
taishoutoday2=$(mdate $hdKijunDate | self 1)


# クリニックのスケジュール
cat ${home_dir}/TBL/SCHEDULE_MASTER/SCEDULE_TYPE_MASTER   |
awk '$5=="'$shisetsu'"&&$4=="04"' |
self 1 2 |
LANG=C sort -k1,1 > $tmp-clinic_scedule_type

# 入居者スケジュール
cat ${home_dir}/TBL/SCHEDULE_MASTER/SCEDULE_TYPE_MASTER |
awk '$4=="'06'"&&$5=="'$shisetsu'"{print $1}' |
# ゲスト宿泊、ケータリングを除く
awk '$1!="00012"&&$1!="00015"'               |
LANG=C sort -k1,1  > $tmp-nyukyosha_schedule_taishou_flg

# スケジュールファイルの取得
cat $tmp-schedule_data |
awk '$(NF-2)!="9"'     |
# 日誌上の他の項目に表示されているものは省く
awk '$3!="00008"&&$3!="00015"&&$3!="00010"&&$3!="00009"&&$3!="00011"&&$3!="00012"&&$3!="00013"'  |
LANG=C sort -k3,3      |
join0 +ng key=3 $tmp-clinic_scedule_type > /dev/null 2> $tmp-sonota_schedule

# 入居者スケジュールを除く
cat $tmp-sonota_schedule                    |
join0 +ng key=3 $tmp-nyukyosha_schedule_taishou_flg > /dev/null 2> $tmp-sonota_schedule2

cat $tmp-sonota_schedule2                   |
delf NF-2/NF                                |
# 1:施設      2:スケジュールID 3:スケジュールタイプ 4:スケジュール名 5:開催日
# 6:開始時刻  7:終了時刻       8:予約状況           9:開催場所       10:費用
# 11:担当者1  12:担当者2       13:追記              14:建屋
LANG=C sort -k1,2                         > $tmp-schedule_all_list

# 入居者参加不参加無関係リスト
cat $tmp-schedule_all_list                |
LANG=C sort -k5,5                         |
join0 key=5 $tmp-today                    |
self 1 2 4 5 6 7 9 13                      > $tmp-schedule_sanka_check

cat $tmp-schedule_all_list                |
join1 key=1@2 - $tmp-sanka_work           |
delf NF-2/NF                              |
# 1:施設            2:スケジュールID 3:スケジュールタイプ 4:スケジュール名 5:開催日
# 6:開始時刻        7:終了時刻       8:予約状況           9:開催場所       10:費用
# 11:担当者1        12:担当者2       13:追記              14:建屋          15:利用者ID
# 16:利用者チェック 17:備考          18:費用
#--------------------------------------------------------------
# 検索
# --------------------------
# 開催開始日
# --------------------------
LANG=C sort -k5,5                         |
join0 key=5 $tmp-today                    |
LANG=C sort -k6,6 |
# 施設 1:スケジュールID 2:スケジュール名 3:開催日 4:開始時刻 5:終了時刻
# 6:開催場所       7:備考 8:利用チェック
self 1 2 4 5 6 7 9 13 17       |
# 施設 1:スケジュールID 2:スケジュール名 3:開催日       4:開始時刻 5:終了時刻
# 6:開催場所       7:備考        8:利用チェック 9:参加人数
count 1 9               |
# 利用チェックが入っていないのは
awk '{if($9=="_"){$10="0"};print $0}'  |
LANG=C sort -k1,5 -k10,10               |
getlast 1 5             |
# 施設 1:スケジュールID 2:スケジュール名 3:開催日       4:開始時刻 5:終了時刻
# 6:開催場所       7:備考        8:参加人数
delf 9                  > $tmp-sanka_schedule

# 入居者参加型スケジュールが一つもない場合
if [ "$(gyo $tmp-sanka_schedule)" = "0" ];then
# 入居者参加不参加無関係リストをそのまま取ってくる
   cat $tmp-schedule_sanka_check    |
# 1:スケジュールID 2:スケジュール名 3:開催日   4:開始時刻 5:終了時刻
# 6:開催場所       7:備考           8:参加人数
   awk '{print $2,$3,$4,$5,$6,$7,$8,"0"}'
else
# 1:施設     2:スケジュールID 3:スケジュール名 4:開催日    5:開始時刻
# 6:終了時刻 7:開催場所       8:備考           9:参加人数  10:スケジュール名
# 11:開催日  12:開始時刻      13:終了時刻      14:開催場所 15:備考
   cat  $tmp-sanka_schedule   |
   join2 +"@" key=1/2 - $tmp-schedule_sanka_check    |
# 1:スケジュールID 2:スケジュール名 3:開催日   4:開始時刻 5:終了時刻
# 6:開催場所       7:備考           8:参加人数
   awk '{if($3=="@"){$9="0"};print $2,$10,$11,$12,$13,$14,$15,$9}'
fi |
LANG=C sort -k3r,3r -k4r,4r |
# 1:スケジュールID 2:スケジュール名 3:開始時刻 4:参加人数 5:備考
self 1 2 4 8 7          |
sed 's/ _ / @ /g' |
sed 's/ _ / @ /g' |
sed 's/ _$/ @/g'  > $tmp-schedule_list


# スケジュールよりスケジュールタイプ：業者関連(00008)を抽出
echo "00008" > $tmp-schedule_gyousha
# 1:施設ID    2:スケジュールID 3:スケジュールタイプ 4:スケジュール名 5:開催年月日
# 6:開始時刻  7:終了時刻       8:予約状況           9:開催場所       10:費用
# 11:担当者１ 12:担当者２      13:追記              14:建屋
cat $tmp-schedule_data                        |
LANG=C sort -k3,3                             |
join0 key=3 $tmp-schedule_gyousha             |
LANG=C sort -k11,11                           |
join1 key=11 $tmp-jugyoin_name_mst            |
delf 11                                       |
LANG=C sort -k5,5                             |
join0 key=5 $tmp-today                        |
# 1:施設ID   2:スケジュールID 3:スケジュール名 4:開始時刻 5:追記
# 6:担当者１
self 1 2 4 6 13 11                            |
LANG=C sort -k4r,4r > $tmp-gyousha

# スケジュールよりスケジュールタイプ：ゲスト宿泊(00015)を抽出
echo "00015" > $tmp-schedule_guestshukuhaku
: > $tmp-guest_shukuhakulist
if [ -s ${apdata_dir}/SCHEDULE/SCHEDULE_GUEST ] ; then
   cat ${apdata_dir}/SCHEDULE/SCHEDULE_GUEST  |
   awk '$(NF-2)!="9"'                        |
# 1:施設ID 2:スケジュールID 3:参加者名 4:性別
   self 1 2 3 8                                |
   LANG=C sort -k1,2                          > $tmp-guest_work
#   cp $tmp-guest_work $work_dir/guest_work

#   cp $tmp-schedule_data $work_dir/schedule_data_guest

   : > $tmp-guest_enddate
   cat ${apdata_dir}/SCHEDULE/SCHEDULE_ENDDATE |
   awk '$1=="'${displayShisetsu}'"{print $2,$5}' > $tmp-guest_enddate
   [ "$(gyo $tmp-guest_enddate)" = "0" ] && echo "_" "_" > $tmp-guest_enddate

# 1:施設ID 2:スケジュールID 3:利用者ID 4:出席フラグ 5:備考
# 6:金額
   cat ${apdata_dir}/SCHEDULE/SCHEDULE_SANKASHA |
   awk '$1=="'${displayShisetsu}'"{print $2,$3}' |
   LANG=C sort -k2,2 |
   join1 key=2 <(awk '$1=="'${displayShisetsu}'"{print $6,$5,NF-1}' ${data_dir}/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS | LANG=C sort -k1,1 -k3,3 | getlast 1 1 | delf NF) |
   join1 key=2 <(self 1 2 ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_MASTER) |
   delf 2 |
   LANG=C sort -k1,1 > $tmp-guest_nyukyosha_info
# 1:スケジュールID 2:利用者名 3:居室番号

# 1:施設ID    2:スケジュールID 3:スケジュールタイプ 4:スケジュール名 5:開催年月日
# 6:開始時刻  7:終了時刻       8:予約状況           9:開催場所       10:費用
# 11:担当者１ 12:担当者２      13:追記              14:建屋
   cat $tmp-schedule_data                        |
   LANG=C sort -k3,3                             |
   join0 key=3 $tmp-schedule_guestshukuhaku             |
# fromとToの日付を見る
   LANG=C sort -k2,2                             |
   join2 +"_" key=2 $tmp-guest_enddate           |
   awk '{if($3=="_"){$3=$6;print $0}else{print $0}}'  |
   awk '{end=substr($3,1,4)substr($3,6,2)substr($3,9,2);start=substr($6,1,4)substr($6,6,2)substr($6,9,2);print $0,start,end}' |
#   tee $work_dir/before_guest_enddate2 |
   awk '$(NF-1)<="'${taishoutoday2}'"&&"'${taishoutoday2}'"<=$NF' |
   delf 3                                       |
#   LANG=C sort -k5,5                             |
#   join0 key=5 $tmp-today                        |
# 1:施設ID   2:スケジュールID 3:スケジュール名 4:開始時刻 5:追記
# 6:担当者１ 7:開始日付 8:終了日付 9:備考
   self 1 2 4 6 9 11 NF-1 NF 13                          |
#   tee $work_dir/guest_shukuhaku                 |
   LANG=C sort -k1,2                             |
# 1:施設ID   2:スケジュールID 3:スケジュール名 4:開始時刻 5:場所
# 6:担当者１ 7:開始日付       8:終了日付 7:ゲスト参加者名 性別
   join1 key=1/2 - $tmp-guest_work          |
   LANG=C sort -k2,2                        |
# 1:施設ID          2:スケジュールID 3:利用者名 4:居室番号 5:スケジュール名
# 6:開始時刻        7:場所           8:担当者１ 9:開始日付 10:終了日付
# 11:ゲスト参加者名 12:性別
   join1 key=2 $tmp-guest_nyukyosha_info    |
# 1:施設ID   2:スケジュールID 3:スケジュール名 4:開始時刻 5:場所
# 6:担当者１ 7:開始日付       8:終了日付       9:備考     10:ゲスト参加者名
# 11:性別    12:利用者名      13:居室番号
   self 1 2 5/NF 3 4                        |
# 1:開始時刻           2:ゲスト参加者名 3:性別 4:利用者名 5:居室番号
# 6:スケジュールID 7:終了日付 場所 9:開始日付 10:備考
   self 4 10 11 NF-1 NF 2 8 5 7 9 > $tmp-guest_shukuhakulist

   # ゲスト宿泊をスケジュールごとに１行に
   cat $tmp-guest_shukuhakulist |
# 1:スケジュールID 2:居室番号       3:利用者名 4:終了日付 5:開始時刻
# 6:場所           7:ゲスト参加者名
   self 6 5 4 7 1 8 9 10 2               |
   yarr num=8                   |
   LANG=C sort -k1,8            > $tmp-guest_shukuhakulist_mod1
   self 1 9/NF $tmp-guest_shukuhakulist_mod1 |
   # スケジュールIDとゲスト情報のみを抽出し、一旦"、"に変更
   sed 's/ /、/g' |
   # スケジュールIDとゲストをフィールド分けする
   sed 's/、/ /1' |
   LANG=C sort -k1,1 > $tmp-guestlist

# 予約部屋も追加
   cat ${apdata_dir}/SCHEDULE/SCHEDULE_RESERVATION   |
   awk '$1=="'${displayShisetsu}'"{print $2,$4}' |
   LANG=C sort -k1,1 > $tmp-schedule_yoyaku_room

# もしも予約が１件も無い場合
   [ $(gyo $tmp-schedule_yoyaku_room) -eq 0 ] && echo "_" "_" > $tmp-schedule_yoyaku_room

   self 1/8 $tmp-guest_shukuhakulist_mod1 |
   join1 key=1 $tmp-guestlist |
   self 3 4 2 5 1 6 7 8 9 |
   LANG=C sort -k5,5      |
   join2 +"_" key=5 $tmp-schedule_yoyaku_room |
# 1:居室番号 2:利用者名 3:ゲストリスト 4:終了日付 5:スケジュールID
# 6:予約部屋 7:時刻     8:場所         9:開始日付 10:備考
   self 1/5 7/NF 6                 |
# 1:居室番号 2:利用者名 3:ゲストリスト 4:終了日付 5:スケジュールID
# 6:時刻     7:場所     8:開始日付     9:備考     10:予約部屋
   LANG=C sort -k8r,8r -k6r,6r               |
   sed 's/###KAIGYO###//g'         |
   awk '{biko="@";if($9!="_"&&$9!="@"){biko=$9};print $1,$2,$3,substr($4,1,4)"/"substr($4,5,2)"/"substr($4,7,2),$5,$6,$7,substr($8,1,4)"/"substr($8,5,2)"/"substr($8,7,2),biko,$10}' > $tmp-guest_shukuhakulist_final

fi
guest_shukuhaku_male=$(awk '$3=="0"' $tmp-guest_shukuhakulist | gyo)
guest_shukuhaku_female=$(awk '$3=="1"' $tmp-guest_shukuhakulist | gyo)

# クリニックスケジュール抽出
# 1:施設ID    2:スケジュールID 3:スケジュールタイプ 4:スケジュール名 5:開催年月日
# 6:開始時刻  7:終了時刻       8:予約状況           9:開催場所       10:費用
# 11:担当者１ 12:担当者２      13:追記              14:建屋
   cat $tmp-schedule_data                        |
   awk '$5=="'${taishoutoday}'"'   |
   LANG=C sort -k3,3                             |
   join1 key=3 $tmp-clinic_scedule_type          |
   self 2 0                                      |
   LANG=C sort -k1,1                             > $tmp-clinic_schedule_data

   cat $tmp-guest_nyukyosha_info         |
# 1:スケジュールID 2:施設ID     3:スケジュールID 4:スケジュールタイプ 5:スケジュールタイプ名
# 6:スケジュール名 7:開催年月日 8:開始時刻       9:終了時刻           10:予約状況
# 11:開催場所      12:費用      13:担当者１      14:担当者２          15:追記
# 16:建屋          17:参加者名  18:居室
   join1 key=1 $tmp-clinic_schedule_data         |
   self 2 3 NF-1 NF 4/NF-2              |
# 1:施設ID               2:スケジュールID 3:利用者名   4:居室番号  5:スケジュールタイプ
# 6:スケジュールタイプ名 7:スケジュール名 8:開催年月日 9:開始時刻  10:終了時刻
# 11:予約状況            12:開催場所      13:費用      14:担当者１ 15:担当者２
# 16:追記                17:建屋
   self 4 3 6 9 2 16 |
   LANG=C sort -k4r,4r |
   sed 's/###KAIGYO###//g'         |
   awk '{biko="@";if($6!="_"&&$6!="@"){biko=$6};print $1,$2,$3,$4,$5,biko}' |
# 1:居室番号 2:利用者名 3:スケジュールタイプ名 4:開始時刻 5:スケジュールID
# 6:備考
   awk '{print $0,"_"}' > $tmp-nyukyosha_clinic_list


# スケジュールよりスケジュールタイプ：内覧(00010)を抽出
echo "00010" > $tmp-schedule_nairan
# 1:施設ID         2:スケジュールID 3:ゲスト名  4:スケジュールタイプ 5:色
# 6:スケジュール名 7:開催年月日     8:開始時刻  9:終了時刻           10:予約状況
# 11:開催場所      12:費用          13:担当者１ 14:担当者２          15:追記
# 16:建屋
cat $tmp-schedule_guest                       |
LANG=C sort -k4,4                             |
join0 key=4 $tmp-schedule_nairan             |
LANG=C sort -k7,7                             |
join0 key=7 $tmp-today                        |
# 1:施設ID   2:スケジュールID 3:予約状況 4:ゲスト名 5:スケジュール名
# 6:開始時刻 7:追記           8:担当者１ 9:担当者２
self 1 2 10 3 6 8 15 13 14                    |
LANG=C sort -k6r,6r                          |
awk '{if($3=="0"){$3="無"}else{$3="有"};print $0}'> $tmp-nairan

# スケジュールよりスケジュールタイプ：引越し関連(00009)を抽出
echo "00009" > $tmp-schedule_hikkoshi
cat $tmp-schedule_info                       |
LANG=C sort -k5,5                            |
join0 key=5 $tmp-schedule_hikkoshi           |
# 本日のみ
awk '$8=="'${taishoutoday}'"'                |
#awk '$8>="'${taishoutoday}'"'                |
# 1:施設ID     2:スケジュールID 3:部屋番号 4:利用者名 5:追記
# 6:開催年月日 7:開始時刻       8:担当者１ 9:担当者２
self 1 2 4 3 16 8 9 14 15                    > $tmp-hikkoshi_work

# 契約情報から引渡し日を参照して引越しデータにセット
#echo "001" > $tmp-hikkoshi-keiyaku
#echo "002" >> $tmp-hikkoshi-keiyaku
#echo "003" >> $tmp-hikkoshi-keiyaku
echo "003" > $tmp-hikkoshi-keiyaku
echo "004" >> $tmp-hikkoshi-keiyaku

if [ -s ${apdata_dir}/RIYOUSHA/RIYOUSHA_KEIYAKU ] ; then
   cat ${apdata_dir}/RIYOUSHA/RIYOUSHA_KEIYAKU  |
   awk '$(NF-2)!="9"'                           |
   LANG=C sort -k9,9                            |
   join1 key=9 $tmp-hikkoshi-keiyaku            |
   LANG=C sort -k1,1                            |
   join1 key=1 $tmp-riyousha_master             |
   delf 1 3                                     |
# 1:施設ID     2:スケジュールID 3:部屋番号 4:利用者名 5:追記
# 6:開催年月日 7:開始時刻       8:担当者１ 9:担当者２
   awk '$3=="'$shisetsu'"&&$12=="'${taishoutoday2}'"{print $3,"_",$7,$1,"引渡",$12,"@","@","@"}' >> $tmp-hikkoshi_work
fi

cat $tmp-hikkoshi_work |
LANG=C sort -k6r,7r    > $tmp-hikkoshi
   
# スケジュールよりスケジュールタイプ：清掃関連(00011)を抽出
echo "00011" > $tmp-schedule_seisou
cat $tmp-schedule_info                       |
LANG=C sort -k5,5                            |
join0 key=5 $tmp-schedule_seisou           |
# 本日のみ
awk '$8=="'${taishoutoday}'"'                |
#awk '$8>="'${taishoutoday}'"'                |
# 1:施設ID   2:スケジュールID 3:部屋番号 4:利用者名 5:開催年月日
# 6:開始時刻 7:追記
self 1 2 4 3 8 9 16                    |
tee $tmp-seisou_count                  |
###########test###############
# 1:施設ID   2:スケジュールID 3:部屋番号 4:利用者名 5:開催年月日
# 6:開始時刻 7:追記           8:利用者ID
LANG=C sort -k1,2                            |
join1 key=1/2 - $tmp-taishou_schedule        |
LANG=C sort -k8,8                            |
# 1:施設ID   2:スケジュールID 3:部屋番号 4:利用者名 5:開催年月日
# 6:開始時刻 7:追記           8:利用者ID 9:居室     10:利用者名
join1 key=8 $tmp-riyousha_master_kyoshitsu   |
self 1 2 10 9 5 6 7                    |
LANG=C sort -k5r,6r > $tmp-seisou

# スケジュールよりスケジュールタイプ：特別食関連(00013)を抽出
echo "00013" > $tmp-schedule_tokubetsushoku
cat $tmp-schedule_info                       |
LANG=C sort -k5,5                            |
join0 key=5 $tmp-schedule_tokubetsushoku           |
# 本日のみ
awk '$8=="'${taishoutoday}'"'                |
#awk '$8>="'${taishoutoday}'"'                |
# 1:施設ID   2:スケジュールID 3:部屋番号 4:利用者名         5:開催年月日
# 6:開始時刻 7:担当者１       8:追記     9:スケジュール内容 10:終了時刻
self 1 2 4 3 8 9 14 16 7 10                       |
#LANG=C sort -k7,7                            |
#join1 key=7 $tmp-jugyoin_name_mst            |
#delf 7                                       |
###########test###############
# 1:施設ID    2:スケジュールID 3:部屋番号 4:利用者名         5:開催年月日
# 6:開始時刻  7:担当者１       8:追記     9:スケジュール内容 10:終了時刻
# 11:利用者ID
LANG=C sort -k1,2                            |
join1 key=1/2 - $tmp-taishou_schedule        |
LANG=C sort -k11,11                            |
# 1:施設ID    2:スケジュールID 3:部屋番号  4:利用者名         5:開催年月日
# 6:開始時刻  7:担当者１       8:追記      9:スケジュール内容 10:終了時刻
# 11:利用者ID 12:居室          13:利用者名
join1 key=11 $tmp-riyousha_master_kyoshitsu   |
self 1 2 13 12 5 6 7 8 11 9 10                     |
LANG=C sort -k5r,6r                            > $tmp-tokubetsushoku


# レストラン注文(20150602現在センター南のみ)
:> $tmp-cancel_restaurant_order
# 1:施設ID 2:スケジュールID 3:キャンセル日 4:有効フラグ
if [ -s ${pompa_dir}/SCHEDULE/SCHEDULE_RESTAURANT_ORDER ]; then
  self 1 2 7 NF-2 ${pompa_dir}/SCHEDULE/SCHEDULE_RESTAURANT_ORDER |
# 1:施設ID 2:スケジュールID 3:キャンセル日
  awk '$1=="'${shisetsu}'"&&$3!="_"&&$4=="9"{print $1,$2,$3}' |
  LANG=C sort -k1,2 > $tmp-cancel_restaurant_order
fi
[ $(gyo $tmp-cancel_restaurant_order) -eq 0 ] && echo "_" "_" "_" > $tmp-cancel_restaurant_order


# レストラン予約を抽出
# スケジュールタイプの名称（レストラン予約注文）より抽出
awk '$(NF-2)!="9"&&$5=="'${shisetsu}'"&&$2=="レストラン予約注文"' ${home_dir}/TBL/SCHEDULE_MASTER/SCEDULE_TYPE_MASTER | tail -1 > $tmp-schedule_restaurant
restaurant_schedule_type_id=$(self 1 $tmp-schedule_restaurant)
cat $tmp-schedule_info                       |
LANG=C sort -k5,5                            |
join0 key=5 $tmp-schedule_restaurant           |
# 本日のみ
awk '$8=="'${taishoutoday}'"'                |
#awk '$8>="'${taishoutoday}'"'                |
# 1:施設ID   2:スケジュールID 3:部屋番号 4:利用者名         5:開催年月日
# 6:開始時刻 7:担当者１       8:追記     9:スケジュール内容 10:終了時刻
self 1 2 4 3 8 9 14 16 7 10                       |
#LANG=C sort -k7,7                            |
#join1 key=7 $tmp-jugyoin_name_mst            |
#delf 7                                       |
###########test###############
# 1:施設ID    2:スケジュールID 3:部屋番号 4:利用者名         5:開催年月日
# 6:開始時刻  7:担当者１       8:追記     9:スケジュール内容 10:終了時刻
# 11:利用者ID
LANG=C sort -k1,2                            |
join1 key=1/2 - $tmp-taishou_schedule        |
# キャンセルの場合は詳細に「予約キャンセル済み」を表示すること
join2 +"_" key=1/2 $tmp-cancel_restaurant_order |
awk '{rescan="";if($3!="_"){gsub(/@/,"",$9);$9=$9"(予約キャンセル済："$3")"};print $0}' |
delf 3 |
LANG=C sort -k11,11                            |
# 1:施設ID    2:スケジュールID 3:部屋番号  4:利用者名         5:開催年月日
# 6:開始時刻  7:担当者１       8:追記      9:スケジュール内容 10:終了時刻
# 11:利用者ID 12:居室          13:利用者名
join1 key=11 $tmp-riyousha_master_kyoshitsu   |
self 1 2 13 12 5 6 7 8 11 9 10                     |
LANG=C sort -k5r,6r                            > $tmp-restaurant


# スケジュールよりスケジュールタイプ：ケータリング(00012)を抽出
echo "00012" > $tmp-schedule_catering


   : > $tmp-catering_enddate
   cat ${apdata_dir}/SCHEDULE/SCHEDULE_ENDDATE |
   awk '$1=="'${displayShisetsu}'"{print $2,$5,$6,$7,$8}' |
   LANG=C sort -k1,1 > $tmp-catering_enddate
   [ "$(gyo $tmp-catering_enddate)" = "0" ] && echo "_" "_" "_" "_" "_" > $tmp-catering_enddate

cat $tmp-schedule_info                       |
LANG=C sort -k5,5                            |
join0 key=5 $tmp-schedule_catering           |
# 複数日付
# 期間の間、表示し続ける
LANG=C sort -k2,2 |
join2 +"_" key=2 $tmp-catering_enddate |
# ケータリングタイプを詳細に設定
awk '{shousai="";if($4=="1"){shousai=shousai "朝"};if($5=="2"){shousai=shousai "昼"};if($6=="3"){shousai=shousai "夜"};if($20=="@"&&shousai!=""){$20=shousai;}else if(shousai!=""){shousai=$20 "　" shousai;$20=shousai;}print $0}' |
delf 4/6 |
awk '{if($3=="_"){$3=$9;print $0}else{print $0}}'  |
awk '{end=substr($3,1,4)substr($3,6,2)substr($3,9,2);start=substr($9,1,4)substr($9,6,2)substr($9,9,2);print $0,start,end}' |
awk '$(NF-1)<="'${taishoutoday2}'"&&"'${taishoutoday2}'"<=$NF' |
delf 3 NF-1 NF |
# 本日のみ
#awk '$8=="'${taishoutoday}'"'                |
#awk '$8>="'${taishoutoday}'"'                |
# 1:施設ID   2:スケジュールID 3:部屋番号 4:利用者名 5:開催年月日
# 6:開始時刻 7:担当者１       8:追記 9:スケジュール内容 10:終了時刻
self 1 2 4 3 8 9 14 16 7 10                      |
# ケータリングは複数日にわたるため、本日の日付を出す
awk '{$5="'${taishoutoday}'";print $0}'       |
LANG=C sort -k1,2                            |
join1 key=1/2 - $tmp-taishou_schedule        |
LANG=C sort -k11,11                            |
join1 key=11 $tmp-riyousha_master_kyoshitsu   |
self 1 2 12 13 5 6 7 8 11 9 10                |
#LANG=C sort -k7,7                            |
#join1 key=7 $tmp-jugyoin_name_mst            |
#delf 7                                       |
LANG=C sort -k5r,6r                            > $tmp-catering

# 健康相談の人数算出
cat ${home_dir}/TBL/SCHEDULE_MASTER/SCEDULE_TYPE_MASTER |
# 入居者スケジュールからの健康相談に絞る
awk '$4=="06"'                               |
awk '$5=="'$shisetsu'"'                      |
awk '$2~/^健康相談$/{print $1}'                |
LANG=C sort -k1,1                            > $tmp-kenkousoudan

cat $tmp-schedule_info                  |
LANG=C sort -k5,5                       |
join0 key=5 $tmp-kenkousoudan           > $tmp-kenkousoudan_motodata

cat $tmp-kenkousoudan_motodata          |
# 当日のみ表示
awk '$8=="'${taishoutoday}'"'           |
#awk '$8>="'${taishoutoday}'"'                |
# 1:施設ID     2:スケジュールID 3:部屋番号 4:利用者名 5:追記
# 6:開催年月日 7:開始時刻       8:担当者１ 9:担当者２
self 1 2 4 3 16 8 9 14 15               |
LANG=C sort -k1,2                            |
join1 key=1/2 - $tmp-taishou_schedule        |
tee $tmp-kenkousoudan_rec |
gyo > $tmp-kenkousoudan_ninzu
kenkousoudan_ninzu=$(cat $tmp-kenkousoudan_ninzu)

self 4 $tmp-kenkousoudan_rec |
tateyoko |
sed 's/ /,/g' > $tmp-kenkousoudansha

kenkousoudanshaname=$(cat $tmp-kenkousoudansha)


# 健康相談人数１月分の集計用
echo ${taishoutoday} |
awk '{print substr($1,1,8)"01"}' > $tmp-kenkousoudan_first_day
kenkousoudan_first_day=$(cat $tmp-kenkousoudan_first_day)

cp $tmp-kenkousoudan_motodata $work_dir/kenkousoudan_motodata

cat $tmp-kenkousoudan_motodata          |
# 当月累計
awk '"'$kenkousoudan_first_day'"<=$8&&$8<="'${taishoutoday}'"'           |
# 1:施設ID     2:スケジュールID 3:部屋番号 4:利用者名 5:追記
# 6:開催年月日 7:開始時刻       8:担当者１ 9:担当者２
self 1 2 4 3 16 8 9 14 15               |
LANG=C sort -k1,2                            |
join1 key=1/2 - $tmp-taishou_schedule        |
gyo > $tmp-kenkousoudan_ruikei_ninzu
kenkousoudan_ruikei_ninzu=$(cat $tmp-kenkousoudan_ruikei_ninzu)

# 入居者登録から入力した内容の表示
flgNyukyoshaSchedule=$(echo "06")

cat ${home_dir}/TBL/SCHEDULE_MASTER/SCEDULE_TYPE_MASTER |
awk '$4=="'$flgNyukyoshaSchedule'"&&$5=="'$shisetsu'"{print $1}' |
# ゲスト宿泊、ケータリングを除く
awk '$1!="00012"&&$1!="00015"&&$1!="'${restaurant_schedule_type_id}'"' |
LANG=C sort -k1,1  > $tmp-nyukyosha_schedule_flg
cat $tmp-schedule_info                       |
LANG=C sort -k5,5                            |
join0 key=5 $tmp-nyukyosha_schedule_flg           |
# 当日のみ表示
awk '$8=="'${taishoutoday}'"'                |
#awk '$8>="'${taishoutoday}'"'                |
# 1:施設ID   2:スケジュールID 3:部屋番号 4:利用者名       5:開催年月日
# 6:開始時刻 7:担当者１       8:追記     9:スケジュール名
self 1 2 4 3 8 9 14 16 7                      |
###########test###############
# 1:施設ID   2:スケジュールID 3:部屋番号 4:利用者名       5:開催年月日
# 6:開始時刻 7:担当者１       8:追記     9:スケジュール名 10:利用者ID
LANG=C sort -k1,2                            |
join1 key=1/2 - $tmp-taishou_schedule        |
# レストランキャンセルオーダー紐付け
# 1:施設ID     2:スケジュールID 3:レストランオーダーキャンセル日付 4:部屋番号 5:利用者名
# 6:開催年月日 7:開始時刻       8:担当者１                         9:追記     10:スケジュール名
# 11:利用者ID
join2 +"_" key=1/2 $tmp-cancel_restaurant_order |
awk '{rescan="";if($3!="_"){$10=$10"(予約キャンセル済："$3")"};print $0}' |
delf 3 |
LANG=C sort -k10,10                            |
# 1:施設ID    2:スケジュールID 3:部屋番号 4:利用者名       5:開催年月日
# 6:開始時刻  7:担当者１       8:追記     9:スケジュール名 10:利用者ID
# 11:利用者名 12:居室
join1 key=10 $tmp-riyousha_master_kyoshitsu   |
self 1 2 12 11 5 6 7 8 10 9                     |
sed 's/###KAIGYO###//g'         |
awk '{biko="@";if($8!="_"&&$8!="@"){biko=$8};print $0,biko}' |
self 1/7 NF 9 10 |
# 1:施設ID   2:スケジュールID 3:居室 4:利用者名 5:開催年月日
# 6:開始時刻 7:担当者１       8:追記 9:利用者ID 10:スケジュール名

##########test###############
#LANG=C sort -k7,7                            |
#join1 key=7 $tmp-jugyoin_name_mst            |
#delf 7                                       |
LANG=C sort -k5r,6r                            > $tmp-nyukyosha_schedule_list

# 部屋予約の複数日付対応
: > $tmp-room_enddate
cat ${apdata_dir}/SCHEDULE/SCHEDULE_ENDDATE |
awk '$1=="'${displayShisetsu}'"{print $2,$5}' |
LANG=C sort -k1,1 > $tmp-room_enddate
[ "$(gyo $tmp-room_enddate)" = "0" ] && echo "_" "_" > $tmp-room_enddate

# 部屋予約
cat ${apdata_dir}/SCHEDULE/SCHEDULE_RESERVATION   |
awk '$(NF-2)!="9"'                                |
LANG=C sort -k2,2                                 |
join2 +"_" key=2 $tmp-room_enddate                |
awk '{if($3=="_"){$3=$6};print $0}'               |
awk '$1=="'$shisetsu'"&&$3>="'${taishoutoday}'"&&$6<="'${taishoutoday}'"{print $5,substr($6,6,5)"###SPACE###"$7,substr($3,6,5)"###SPACE###"$8,$12}'   |
#awk '$1=="'$shisetsu'"&&$5=="'${taishoutoday}'"{print $4,$6,$7,$11}'   |
# 1:部屋名 2:開始時刻 3:終了時刻 4:担当者ID
LANG=C sort -k4,4    |
join1 key=4 <(self 1 2 ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER)  |
delf 4               |
LANG=C sort -k2r,3r    |
awk '{print $1,$2"～"$3,$4}' > $tmp-reserve_list

# 日誌登録情報
nisshiday=$(mdate $hdKijunDate | self 1)
if [ -s ${pompa_dir}/NISSHI/$displayShisetsu/NISSHI_SENIOR ] ; then
   cat ${pompa_dir}/NISSHI/$displayShisetsu/NISSHI_SENIOR |
   LANG=C sort -k1,1                     |
   join0 key=1 $tmp-displayShisetsu      |
   awk '$2=="'${nisshiday}'"'          |
# 1:施設                      2:登録日付        3:日勤入居者ヒヤリ      4:日勤施設ヒヤリ          5:日勤入居者事故報告書
# 6:日勤施設事故報告書        7:日勤気付き      8:夜勤入居者ヒヤリ      9:夜勤施設ヒヤリ          10:夜勤入居者事故報告書
# 11:夜勤施設事故報告書       12:夜勤気付き     13:医者への健康相談人数 14:医者への健康相談>入居者 15:看護師への健康相談人数
# 16:看護師への健康相談入居者 17:日勤業務引継ぎ 18:夜勤業務引継ぎ       19:有効フラグ             20:処理時間
   delf NF-2/NF                          > $tmp-nisshi_senior_base
   NikkinNyukyoHiyari=$(self 3 $tmp-nisshi_senior_base | awk '{if($1=="1"){$1="有"}else{$1="無"};print $0}')
   NikkinShisetsuHiyari=$(self 4 $tmp-nisshi_senior_base | awk '{if($1=="1"){$1="有"}else{$1="無"};print $0}')
   NikkinNyukyoJikoho=$(self 5 $tmp-nisshi_senior_base | awk '{if($1=="1"){$1="有"}else{$1="無"};print $0}')
   NikkinShisetsuJikoho=$(self 6 $tmp-nisshi_senior_base | awk '{if($1=="1"){$1="有"}else{$1="無"};print $0}')
   NikkinKiduki=$(self 7 $tmp-nisshi_senior_base | awk '{if($1=="1"){$1="有"}else{$1="無"};print $0}')
   YakinNyukyoHiyari=$(self 8 $tmp-nisshi_senior_base | awk '{if($1=="1"){$1="有"}else{$1="無"};print $0}')
   YakinShisetsuHiyari=$(self 9 $tmp-nisshi_senior_base | awk '{if($1=="1"){$1="有"}else{$1="無"};print $0}')
   YakinNyukyoJikoho=$(self 10 $tmp-nisshi_senior_base | awk '{if($1=="1"){$1="有"}else{$1="無"};print $0}')
   YakinShisetsuJikoho=$(self 11 $tmp-nisshi_senior_base | awk '{if($1=="1"){$1="有"}else{$1="無"};print $0}')
   YakinKiduki=$(self 12 $tmp-nisshi_senior_base | awk '{if($1=="1"){$1="有"}else{$1="無"};print $0}')
   DrNinzu=$(self 13 $tmp-nisshi_senior_base)
   # スケジュールからの健康相談者を足す
   DrNyukyosha_tmp=$(self 14 $tmp-nisshi_senior_base)
   if [ -z "$DrNyukyosha_tmp" -o "$DrNyukyosha_tmp" = "_" ] ; then
     DrNyukyosha=$(echo "${kenkousoudanshaname}")
   else
     DrNyukyosha=$(echo "${DrNyukyosha_tmp}","${kenkousoudanshaname}")
   fi
   #DrNyukyosha=$(self 14 $tmp-nisshi_senior_base)
   NsNinzu=$(self 15 $tmp-nisshi_senior_base)
   NsNyukyosha=$(self 16 $tmp-nisshi_senior_base)
   NikkinHikitsugi=$(self 17 $tmp-nisshi_senior_base | sed 's/\\n/<br>/g')
   YakinHikitsugi=$(self 18 $tmp-nisshi_senior_base | sed 's/\\n/<br>/g')
else
   DrNyukyosha=$(echo "${kenkousoudanshaname}")
fi

# 事故報告書取得
cat ${pompa_dir}/JIKOHOU/JIKOHOU_HEADER |
# 1:事故ヒヤリヘッダーID 2:報告書フラグ  3:報告日      4:部署        5:報告者
# 6:施設                 7:建屋          8:フロア      9:居室        10:利用者ID
# 11:年齢                12:介護度       13:発生日     14:発生時間   15:発生場所
# 16:発生場所居室番号    17:発生場所備考 18:区分       19:区分備考   20:身体の状況
# 21:身体の状況備考      22:予備項目１   23:予備項目２ 24:予備項目３ 25:予備項目４
# 26:予備項目５
awk '$(NF-2)!="9"&&$6=="'$displayShisetsu'"&&($2=="1"||$2=="3"){print substr($13,1,8)}'  |
awk '$1=="'${hdKijunDate}'"{print $0}'    > $tmp-jikohoukokusho
numJikoho=$(gyo $tmp-jikohoukokusho)

# ヒヤリ
cat ${pompa_dir}/JIKOHOU/JIKOHOU_HEADER |
# 1:事故ヒヤリヘッダーID 2:報告書フラグ  3:報告日      4:部署        5:報告者
# 6:施設                 7:建屋          8:フロア      9:居室        10:利用者ID
# 11:年齢                12:介護度       13:発生日     14:発生時間   15:発生場所
# 16:発生場所居室番号    17:発生場所備考 18:区分       19:区分備考   20:身体の状況
# 21:身体の状況備考      22:予備項目１   23:予備項目２ 24:予備項目３ 25:予備項目４
# 26:予備項目５
awk '$(NF-2)!="9"&&$6=="'$displayShisetsu'"&&($2=="2"||$2=="4"){print substr($13,1,8)}'  |
awk '$1=="'${hdKijunDate}'"{print $0}'    > $tmp-hiyari
numHiyari=$(gyo $tmp-hiyari)

# 気づき
cat ${pompa_dir}/KIZUKI/KIZUKI_DATA |
awk '$(NF-2)!="9"&&$2=="'$displayShisetsu'"{print substr($3,1,8)}'  |
awk '$1=="'${hdKijunDate}'"{print $0}'    > $tmp-kizukidata
numKiduki=$(gyo $tmp-kizukidata)

#--------------------------------------------------------------
# 表示順
cat ${pompa_dir}/NISSHI/${displayShisetsu}/JUGYOIN_SORT  |
# 1:施設 2:従業員ID 3:表示順 4:有効フラグ 5:処理時間
# 6:ユーザID
awk '$1=="'${displayShisetsu}'"'     |
delf 1 NF-2/NF                        |
LANG=C sort -k1,1                     > $tmp-jugyoin_sort

if [ -s ${pompa_dir}/NISSHI/$displayShisetsu/NIKKIN_SENIOR ] ; then
   cat ${pompa_dir}/NISSHI/$displayShisetsu/NIKKIN_SENIOR |
   LANG=C sort -k1,1                     |
   join0 key=1 $tmp-displayShisetsu            |
   awk '$2=="'${nisshiday}'"'          > $tmp-nikkinshaninzu
   self 3 $tmp-nikkinshaninzu            |
   LANG=C sort -k1,1                     |
   join1 key=1 ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
   join2 +"_" key=1 $tmp-jugyoin_sort   |
   awk '{if($2=="_"){$2="99"};print $0}' |
   tee $tmp-nikkin_sort_zumi              |
   LANG=C sort -k2n,2n                   |
   delf 2                                |
   self 2                                |
   tateyoko                              |
   sed 's/ /、/g'         > $tmp-nikkinshainfo
   
   NikkinshaInfo=$(cat $tmp-nikkinshainfo)
   NikkinshaNinzu=$(gyo $tmp-nikkinshaninzu)
fi   

if [ -s ${pompa_dir}/NISSHI/$displayShisetsu/YAKIN_SENIOR ] ; then
   cat ${pompa_dir}/NISSHI/$displayShisetsu/YAKIN_SENIOR |
   LANG=C sort -k1,1                     |
   join0 key=1 $tmp-displayShisetsu            |
   awk '$2=="'${nisshiday}'"'          > $tmp-yakinshaninzu
   self 3 $tmp-yakinshaninzu            |
   LANG=C sort -k1,1                     |
   join1 key=1 ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
   join2 +"_" key=1 $tmp-jugyoin_sort   |
   awk '{if($2=="_"){$2="99"};print $0}' |
   tee $tmp-yakin_sort_zumi              |
   LANG=C sort -k2n,2n                   |
   delf 2                                |
   self 2                                |
   tateyoko                              |
   sed 's/ /、/g'         > $tmp-yakinshainfo
   
   YakinshaInfo=$(cat $tmp-yakinshainfo)
   YakinshaNinzu=$(gyo $tmp-yakinshaninzu)
fi   


# 出勤者情報の全体表示順
cat $tmp-nikkin_sort_zumi $tmp-yakin_sort_zumi |
LANG=C sort -k2n,2n                   |
delf 2 |
self 2 |
tateyoko |
sed 's/ /、/g'         > $tmp-fullinfo
FullInfo=$(cat $tmp-fullinfo)


: > $tmp-renraku_list_tmp
if [ -s ${pompa_dir}/RENRAKU/$displayShisetsu/RENRAKU_JIKOU ] ; then
   cat ${pompa_dir}/RENRAKU/$displayShisetsu/RENRAKU_JIKOU    |
   awk '$(NF-2)!="9"'                                         |
   LANG=C sort -k1,1                                          |
   join0 key=1 $tmp-displayShisetsu                           |
   awk '$3=="'${nisshiday}'"'                                 |
# 1:施設         2:ID   3:登録日付   4:登録時間 5:連絡事項ヘッダ
# 6:連絡事項詳細 7:建屋 8:有効フラグ 9:処理時間 10:ユーザID
   LANG=C sort -k10,10                                          |
# 1:施設         2:ID   3:登録日付   4:登録時間 5:連絡事項ヘッダ
# 6:連絡事項詳細 7:建屋 8:有効フラグ 9:処理時間 10:ユーザID
# 11:ユーザ名
   join1 key=10 ${tmp}-jugyoin                                 |
   # シニアの連絡のみ抽出するらしい（10/8）
   awk '$7=="1"{$7="chocolate";print $0}'                      |
   #awk '{if($7=="2"){$7="green"}else{$7="chocolate"};print $0}'       |
# 1:ID 2:登録時間 3:連絡事項ヘッダ 4:ユーザ名 5:色
   self 2 4 5 11 7                                             > $tmp-renraku_list_tmp
fi   
# 申し送り事項なども反映
echo "$hdKijunDate" | awk '{print substr($1,1,6)}' > $tmp-kijunmonth
kijunmonth=$(self 1 $tmp-kijunmonth)


#: > $tmp-moushiokuri_care
#if [ -s ${home_dir}/SHISETSU_KAIGOKIROKU/POMPA/KAIGOJISSEKI/$displayShisetsu/$kijunmonth/$kijunmonth.KAIGOJISSEKI_IKKATSU_MOUSHIOKURI ] ; then
#  cat ${home_dir}/SHISETSU_KAIGOKIROKU/POMPA/KAIGOJISSEKI/$displayShisetsu/$kijunmonth/$kijunmonth.KAIGOJISSEKI_IKKATSU_MOUSHIOKURI > $tmp-moushiokuri_care
#fi

: > $tmp-moushiokuri_senior
if [ -s ${home_dir}/SHISETSU_KAIGOKIROKU/POMPA/KAIGOJISSEKI/$displayShisetsu/$kijunmonth/$kijunmonth.KAIGOJISSEKI_IKKATSU_MOUSHIOKURI_SENIOR ] ; then
  cat ${home_dir}/SHISETSU_KAIGOKIROKU/POMPA/KAIGOJISSEKI/$displayShisetsu/$kijunmonth/$kijunmonth.KAIGOJISSEKI_IKKATSU_MOUSHIOKURI_SENIOR > $tmp-moushiokuri_senior
fi

# 利用者以外レコードを追加
echo "99999999" "職員連絡"     |
cat $tmp-riyoushamei_mst -       > $tmp-riyoushamei_mst_rev

# シニアだけでいいらしい(2014/10/08)
cat $tmp-moushiokuri_senior |
#cat $tmp-moushiokuri_care $tmp-moushiokuri_senior |
LANG=C sort -k1,1                |
join1 key=1 $tmp-riyoushamei_mst_rev |
delf 1                           |
awk '$2=="'$hdKijunDate'"&&$8=="on"{gsub(/[0-9]/,"",$7);gsub(/+*/,"",$7);print "_",$4,"("$1")"$10,$7,$11}' >> $tmp-renraku_list_tmp

cat $tmp-renraku_list_tmp | LANG=C sort -k2r,2r > $tmp-renraku_list


curdate=$(mdate $hdKijunDate | self 1)
todaydate=$(mdate today | self 1)

# 体験入居者のIDを出す。
shortcode="001"
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KEIYAKU |
awk '$(NF-2)!="9"'                             |
# 1:利用者ID   2:施設ID     3:建屋ID 4:フロアID 5:契約種類ID
# 6:契約開始日 7:契約終了日
self 1 3 4 5 9 12 13                                 |
#awk '$2=="'$shisetsu'"&&$3=="02"&&$5=="'$shortcode'"&&$6<="'$taishoutoday2'"&&"'$taishoutoday2'"<=$7'   |
awk '$2=="'$shisetsu'"&&$3=="01"&&$5=="'$shortcode'"&&$6<="'$curdate'"&&"'$curdate'"<=$7'   |
self 1  |
LANG=C sort -k1,1  > $tmp-taiken_riyoushaid

# 入居者統計情報
# 1:施設ID   2:シニアケア区分 3:フロア 4:ユニット 5:居室番号
# 6:利用者ID 7:有効From       8:有効To
cat ${data_dir}/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
awk '$7<="'$curdate'"&&"'$curdate'"<=$8'                |
awk '$1=="'$shisetsu'"&&$2=="01"&&$(NF-2)!="9"{print $0}'            |
LANG=C sort -k6,6                                      |
tee $tmp-allnyukyosha_riyoushainfo                     |
join0 +ng key=6 $tmp-taiken_riyoushaid > /dev/null 2> $tmp-honnyukyosha_riyoushainfo
cat $tmp-honnyukyosha_riyoushainfo                     |
self 6                                                 |
LANG=C sort -k1,1          > $tmp-honnyukyosha-riyoushaid


# 入居戸数
#cat $tmp-honnyukyosha_riyoushainfo                     |
cat $tmp-allnyukyosha_riyoushainfo                     |
self 5                                                 |
LANG=C sort -k1,1                                      |
getlast 1 1                                            > $tmp-nyukyo_room
nyukyokosu=$(gyo $tmp-nyukyo_room)

# 施設部屋数
cat ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM   |
awk '$9!="9"'                                          |
awk '$1=="'$shisetsu'"&&$2=="01"{print $0}'            > $tmp-room_info
roomkosu=$(gyo $tmp-room_info)

# 入居率
echo "$nyukyokosu" "$roomkosu"    |
lcalc '$1/$2*100'                 |
marume 1.0                        > $tmp-nyukyoritsu

nyukyoritsu=$(self 1 $tmp-nyukyoritsu)

# 2人入居率
#cat $tmp-honnyukyosha_riyoushainfo                     |
cat $tmp-allnyukyosha_riyoushainfo                     |
self 5                                                 |
LANG=C sort -k1,1                                      |
count 1 1                                              > $tmp-nyukyo_status
# 全体の入居戸数
all_nyukyo=$(gyo $tmp-nyukyo_status)
# 複数人の入居戸数
awk '$2>1{print $0}' $tmp-nyukyo_status                > $tmp-fukusu_nyukyo
fukusu_nyukyo=$(gyo $tmp-fukusu_nyukyo)
echo "$all_nyukyo" "$fukusu_nyukyo"                    |
lcalc '$2/$1*100'                                      |
marume 1.0                                             > $tmp-fukusu_nyukyoritsu

fukusu_nyukyoritsu=$(self 1 $tmp-fukusu_nyukyoritsu)


# 1:利用者ID   2:利用者名   3:利用者名カナ 4:性別         5:生年月日和暦区分
# 6:生年月日年 7:生年月日月 8:生年月日日   9:生年月日西暦
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KIHON           |
tee $tmp-riyousha_mst                                  |
LANG=C sort -k1,1                                      |
join0 key=1 $tmp-honnyukyosha-riyoushaid               |
self 1 2 4                                               |
tee $tmp-taishou_riyoushaid                            |
self 3                                                 |
LANG=C sort -k1,1                                      |
count 1 1                  > $tmp-honnyukyosha_shoukei_count

honnyukyosha_shoukei_male_count=$(awk '$1=="1"{print $2}' $tmp-honnyukyosha_shoukei_count)
honnyukyosha_shoukei_female_count=$(awk '$1=="2"{print $2}' $tmp-honnyukyosha_shoukei_count)
[ -z "$honnyukyosha_shoukei_male_count" -o "$honnyukyosha_shoukei_male_count" = "_" ] && honnyukyosha_shoukei_male_count=0
[ -z "$honnyukyosha_shoukei_female_count" -o "$honnyukyosha_shoukei_female_count" = "_" ] && honnyukyosha_shoukei_female_count=0

TATEYA="01"

birthdate=$(echo $curdate | awk '{print substr($1,5,4)}')
birthyear=$(echo $curdate | awk '{print substr($1,1,4)}')

# 誕生日
cat $tmp-riyousha_mst                          |
LANG=C sort -k1,1                              |
join0 key=1 $tmp-honnyukyosha-riyoushaid       |
awk 'substr($9,5,4)=="'$birthdate'"{print $2,substr($9,1,4),"'$birthyear'",$1}'     |
lcalc '$1,$3-$2,$4'                               |
# 1:ご入居者名 2:年齢 3:利用者ID
awk '{print $1,"("$2"歳)",$3}'                |
LANG=C sort -k3,3 |
join1 key=3 <(awk '$1=="'${displayShisetsu}'"&&$(NF-2)!="9"{print $6,$5,NF-1}' ${data_dir}/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS | LANG=C sort -k1,1 -k3,3 | getlast 1 1 | delf NF) |
# 1:ご入居者名 2:年齢 3:利用者ID 居室番号
delf 3 |
self 3 1 2 > $tmp-birthrecord

#[ $(gyo $tmp-birthrecord) -gt 0 ] && echo "　おめでとうございます。" >> $tmp-birthrecord

#:> $tmp-birthinfo
#if [ $(gyo $tmp-birthrecord) -gt 0 ]; then
#  cat $tmp-birthrecord    |
#  tateyoko                |
#  sed 's/ /,/g'           > $tmp-birthinfo
#fi

#birthinfo=$(cat $tmp-birthinfo)

# 現在の時間
todayymdhm=$(date +%Y%m%d%H:%M)
# 入院外泊
# 1:利用者ID     2:？       3:施設ID 4:建屋ID 5:居室
# 6:入院外泊区分 7:外泊FROM 8:外泊TO
cat ${data_dir}/UNEI/NYUUINGAIHAKU/${shisetsu}/${TATEYA}/RIYOUSHA_NYUUINGAIHAKU |
awk '$(NF-2)!="9"'             |
# 設定日付が今日かどうかを判断
if [ "$curdate" = "$todaydate" ] ; then
awk '{if($9=="_"){start=$7"00:00"}else{start=$7$9};if($10=="_"){end=$8"23:59"}else{end=$8$10};print $0,start,end}'   |
awk '$3=="'${shisetsu}'"&&$4=="01"&&$(NF-1)<="'$todayymdhm'"&&"'$todayymdhm'"<=$(NF){print $1,$5,$6,$8,$2,$9,$7,$12}'
else
awk '$3=="'${shisetsu}'"&&$4="01"&&$7<="'$curdate'"&&"'$curdate'"<=$8{print $1,$5,$6,$8,$2,$9,$7,$12}' 
fi |
# 1:利用者ID 2:居室 3:入院外泊
LANG=C sort -k1,2 |
getlast 1 2       > $tmp-nyuingaihaku_list

# 1:利用者ID 2:居室 3:入院外泊 4:外泊TO 6:時刻
cat $tmp-nyuingaihaku_list                    |
# 1:利用者ID 2:利用者名 3:性別 4:居室 5:入院外泊
join1 key=1 $tmp-taishou_riyoushaid           |
tee $tmp-nyuingaihaku_name_list               |
# 1:性別 2:入院外泊
self 3 5                                      |
LANG=C sort -k1,2                             |
count 1 2                                     > $tmp-nyuingaihaku_count

# 外泊にセカンド利用も含める
gaihaku_male_count_tmp=$(awk '$1=="1"&&$2=="2"{print $3}' $tmp-nyuingaihaku_count)
gaihaku_female_count_tmp=$(awk '$1=="2"&&$2=="2"{print $3}' $tmp-nyuingaihaku_count)
[ -z "$gaihaku_male_count_tmp" -o "$gaihaku_male_count_tmp" = "_" ] && gaihaku_male_count_tmp=0
[ -z "$gaihaku_female_count_tmp" -o "$gaihaku_female_count_tmp" = "_" ] && gaihaku_female_count_tmp=0
second_male_count=$(awk '$1=="1"&&$2=="3"{print $3}' $tmp-nyuingaihaku_count)
second_female_count=$(awk '$1=="2"&&$2=="3"{print $3}' $tmp-nyuingaihaku_count)
[ -z "$second_male_count" -o "$second_male_count" = "_" ] && second_male_count=0
[ -z "$second_female_count" -o "$second_female_count" = "_" ] && second_female_count=0
gaihaku_male_count=`expr $gaihaku_male_count_tmp + $second_male_count`
gaihaku_female_count=`expr $gaihaku_female_count_tmp + $second_female_count`
nyuin_male_count=$(awk '$1=="1"&&$2=="1"{print $3}' $tmp-nyuingaihaku_count)
nyuin_female_count=$(awk '$1=="2"&&$2=="1"{print $3}' $tmp-nyuingaihaku_count)

[ -z "$gaihaku_male_count" -o "$gaihaku_male_count" = "_" ] && gaihaku_male_count=0
[ -z "$gaihaku_female_count" -o "$gaihaku_female_count" = "_" ] && gaihaku_female_count=0
[ -z "$nyuin_male_count" -o "$nyuin_male_count" = "_" ] && nyuin_male_count=0
[ -z "$nyuin_female_count" -o "$nyuin_female_count" = "_" ] && nyuin_female_count=0

nyuingaihaku_male_kei_count=`expr $gaihaku_male_count + $nyuin_male_count`
nyuingaihaku_female_kei_count=`expr $gaihaku_female_count + $nyuin_female_count`

honnyukyosha_male_count=`expr $honnyukyosha_shoukei_male_count - $nyuingaihaku_male_kei_count`
honnyukyosha_female_count=`expr $honnyukyosha_shoukei_female_count - $nyuingaihaku_female_kei_count`


# その他在館者
# 男女不明なので、とりあえず男性にセット
gyosha_num=$(gyo $tmp-gyousha)
nairan_num=$(gyo $tmp-nairan)
seisou_num=$(gyo $tmp-seisou_count)
other_male_count=`expr $gyosha_num + $nairan_num + $seisou_num`
other_female_count=0

# 入院リスト
cat $tmp-nyuingaihaku_name_list |
sed 's/###KAIGYO###//g'         |
awk '$5=="1"{biko="@";if($10!="_"&&$10!="@"){biko=$10};print $4,$2,substr($6,1,4)"/"substr($6,5,2)"/"substr($6,7,2),$7,$1,$8,substr($9,1,4)"/"substr($9,5,2)"/"substr($9,7,2),biko}'      |
sed 's/9999\/99\/99/@/g'        |
LANG=C sort -k7r,7r -k6r,6r               > $tmp-nyuin_name_list

# 外泊リスト
cat $tmp-nyuingaihaku_name_list |
sed 's/###KAIGYO###//g'         |
awk '$5=="2"||$5=="3"||$5=="9"{biko="@";if($10!="_"&&$10!="@"){biko=$10};if($5=="2"){color="black";shubetsu="外泊"}else if($5=="9"){color="blue";shubetsu="その他"}else{color="black";shubetsu="セカンド利用"};print $4,$2,substr($6,1,4)"/"substr($6,5,2)"/"substr($6,7,2),$7,$1,color,shubetsu,$8,substr($9,1,4)"/"substr($9,5,2)"/"substr($9,7,2),biko}'      |
#awk '$5=="2"{print $4,$2,substr($6,1,4)"/"substr($6,5,2)"/"substr($6,7,2)}'      |
sed 's/9999\/99\/99/@/g'        |
LANG=C sort -k9r,9r -k8r,8r               > $tmp-gaihaku_name_list

cp $tmp-gaihaku_name_list $work_dir/gaihaku_name_list_work

# 体験入居
taikencode="001"
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KEIYAKU |
# 1:施設ID 2:契約種類ID 3:契約開始日 4:契約終了日
awk '$(NF-2)!="9"'                             |
self 1 3 4 9 12 13                                 |
awk '$2=="'$shisetsu'"&&$3=="01"&&$4=="'$taikencode'"&&$5<="'$taishoutoday2'"&&"'$taishoutoday2'"<=$6'   |
self 1                                       |
LANG=C sort -k1,1                            |
join1 key=1 $tmp-riyousha_mst                |
tee $tmp-taiken_riyousha                     |
self 4                                       |
LANG=C sort -k1,1                            |
count 1 1                                    > $tmp-taiken_count
taiken_count_male=$(awk '$1=="1"{print $2}' $tmp-taiken_count)
taiken_count_female=$(awk '$1=="2"{print $2}' $tmp-taiken_count)

[ -z "$taiken_count_male" ] && taiken_count_male=0
[ -z "$taiken_count_female" ] && taiken_count_female=0

# 総計
floor_full_count=`expr $honnyukyosha_shoukei_male_count + $honnyukyosha_shoukei_female_count + $taiken_count_male + $taiken_count_female + $guest_shukuhaku_male + $guest_shukuhaku_female + $other_male_count + $other_female_count`

# 1:施設ID   2:シニアケア区分 3:フロア 4:ユニット 5:居室番号
# 6:利用者ID 7:有効From       8:有効To  9:氏名
cat ${data_dir}/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS     |
awk '$(NF-2)!="9"'                             |
awk '$7<="'$curdate'"&&"'$curdate'"<=$8'                |
LANG=C sort -k6,6                            |
# 1:施設ID   2:シニアケア区分 3:フロア   4:ユニット 5:居室番号
# 6:利用者ID 7:氏名           8:有効From 9:有効To
join1 key=6 $tmp-taiken_riyousha             |
self 5 7                                     > $tmp-taiken_list

# 一括契約
ikkatsucode="003"
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KEIYAKU |
awk '$(NF-2)!="9"'                             |
# 1:施設ID 2:契約種類ID 3:契約開始日 4:契約終了日
self 1 3 4 9 12 13                                 |
awk '$2=="'$shisetsu'"&&$3=="01"&&$4=="'$ikkatsucode'"&&$5<="'$taishoutoday2'"&&"'$taishoutoday2'"<=$6'   |
self 1                                       |
LANG=C sort -k1,1                            |
count 1 1                                    |
self 2 > $tmp-ikkatsu_count
[ "$(gyo $tmp-ikkatsu_count)" = "0" ] && : > $tmp-ikkatsu_count

# 月払契約
tsukibaraicode="004"
cat ${data_dir}/UNEI/RIYOUSHA/RIYOUSHA_KEIYAKU |
awk '$(NF-2)!="9"'                             |
# 1:施設ID 2:契約種類ID 3:契約開始日 4:契約終了日
self 1 3 4 9 12 13                                 |
awk '$2=="'$shisetsu'"&&$3=="01"&&$4=="'$tsukibaraicode'"&&$5<="'$taishoutoday2'"&&"'$taishoutoday2'"<=$6'   |
self 1                                       |
LANG=C sort -k1,1                            |
count 1 1                                    |
self 2 > $tmp-tsukibarai_count
[ "$(gyo $tmp-tsukibarai_count)" = "0" ] && : > $tmp-tsukibarai_count

cp $tmp-ikkatsu_count $work_dir/ikkatu_count
cp $tmp-tsukibarai_count $work_dir/tsukibarai_count

ikkatsu_goukei=$(gyo $tmp-ikkatsu_count)
tsukibarai_goukei=$(gyo $tmp-tsukibarai_count)

#ycat $tmp-ikkatsu_count $tmp-tsukibarai_count |
echo $ikkatsu_goukei $tsukibarai_goukei       |
# 1:一括支払い数 2:月払い支払い数
lcalc '$1/($1+$2)*100,$2/($1+$2)*100'         |
marume 1.0 2.0                                > $tmp-shiharai_percent

ikkatsupercent=$(self 1 $tmp-shiharai_percent)
tsukipercent=$(self 2 $tmp-shiharai_percent)


# 日勤引継ぎ事項取得
: > $tmp-nikkin_list
if [ -s ${pompa_dir}/NIKKIN_HIKITSUGI/$displayShisetsu/NIKKIN_HIKITSUGI ] ; then
   cat ${pompa_dir}/NIKKIN_HIKITSUGI/$displayShisetsu/NIKKIN_HIKITSUGI    |
   awk '$(NF-2)!="9"'                                         |
   LANG=C sort -k1,1                                          |
   join0 key=1 $tmp-displayShisetsu                           |
   awk '$4=="'${nisshiday}'"'                                 |
# 1:施設   2:建屋   3:ID         4:登録日付 5:引継ぎ事項
# 6:備考１ 7:備考２ 8:有効フラグ 9:処理時間 10:ユーザID
   LANG=C sort -k10,10                                          |
# 1:施設      2:建屋   3:ID         4:登録日付 5:引継ぎ事項
# 6:備考１    7:備考２ 8:有効フラグ 9:処理時間 10:ユーザID
# 11:従業員名
   join2 +"@" key=10 ${tmp}-jugyoin                                 |
   awk '{split($11,array,"　");$11=array[1];print $0}'         |
   LANG=C sort -k9,9r                                           |
# 1:ID 2:内容 3:ユーザ名
   self 3 5 11                                                 |
   sed 's/\\n/<br>/g' > $tmp-nikkin_list
fi

# 夜勤引継ぎ事項取得
: > $tmp-yakin_list
if [ -s ${pompa_dir}/YAKIN_HIKITSUGI/$displayShisetsu/YAKIN_HIKITSUGI ] ; then
   cat ${pompa_dir}/YAKIN_HIKITSUGI/$displayShisetsu/YAKIN_HIKITSUGI    |
   awk '$(NF-2)!="9"'                                         |
   LANG=C sort -k1,1                                          |
   join0 key=1 $tmp-displayShisetsu                           |
   awk '$4=="'${nisshiday}'"'                                 |
# 1:施設   2:建屋   3:ID         4:登録日付 5:引継ぎ事項
# 6:備考１ 7:備考２ 8:有効フラグ 9:処理時間 10:ユーザID
   LANG=C sort -k10,10                                          |
# 1:施設      2:建屋   3:ID         4:登録日付 5:引継ぎ事項
# 6:備考１    7:備考２ 8:有効フラグ 9:処理時間 10:ユーザID
# 11:従業員名
   join2 +"@" key=10 ${tmp}-jugyoin                                 |
   awk '{split($11,array,"　");$11=array[1];print $0}'         |
   LANG=C sort -k9,9r                                           |
# 1:ID 2:内容 3:ユーザ名
   self 3 5 11                                                 |
   sed 's/\\n/<br>/g' > $tmp-yakin_list
fi

# 緊急呼出・生活センサー・警報盤（日中）
:> $tmp-nkeihou_kaisu
if [ -s ${pompa_dir}/NIKKIN_HIKITSUGI/$displayShisetsu/SETSUBI_KAISU ] ; then
   cat ${pompa_dir}/NIKKIN_HIKITSUGI/$displayShisetsu/SETSUBI_KAISU |
   awk '$1=="'${shisetsu}'"&&$3=="'${nisshiday}'"'     |
   tail -1  |
   self 4/6 > $tmp-nkeihou_kaisu
fi
nnursecallkaisu=$(self 1 $tmp-nkeihou_kaisu)
[ -z "$nnursecallkaisu" -o "$nnursecallkaisu" = "_" ] && nnursecallkaisu=0
nsensorkaisu=$(self 2 $tmp-nkeihou_kaisu)
[ -z "$nsensorkaisu" -o "$nsensorkaisu" = "_" ] && nsensorkaisu=0
nkeihoubankaisu=$(self 3 $tmp-nkeihou_kaisu)
[ -z "$nkeihoubankaisu" -o "$nkeihoubankaisu" = "_" ] && nkeihoubankaisu=0

# 緊急呼出
:> $tmp-nnursecall_list
if [ -s ${pompa_dir}/NIKKIN_HIKITSUGI/$displayShisetsu/KINKYU_YOBIDASHI ] ; then
   cat ${pompa_dir}/NIKKIN_HIKITSUGI/$displayShisetsu/KINKYU_YOBIDASHI |
   awk '$1=="'${shisetsu}'"&&$3=="'${nisshiday}'"'     |
   self 4 |
   sed 's/\\n/<br>/g' > $tmp-nnursecall_list
fi

# 生活センサー
:> $tmp-nsensor_list
if [ -s ${pompa_dir}/NIKKIN_HIKITSUGI/$displayShisetsu/SEIKATSU_SENSOR ] ; then
   cat ${pompa_dir}/NIKKIN_HIKITSUGI/$displayShisetsu/SEIKATSU_SENSOR |
   awk '$1=="'${shisetsu}'"&&$3=="'${nisshiday}'"'     |
   self 4 |
   sed 's/\\n/<br>/g' > $tmp-nsensor_list
fi

# 警報盤
:> $tmp-nkeihouban_list
if [ -s ${pompa_dir}/NIKKIN_HIKITSUGI/$displayShisetsu/KEIHOUBAN ] ; then
   cat ${pompa_dir}/NIKKIN_HIKITSUGI/$displayShisetsu/KEIHOUBAN |
   awk '$1=="'${shisetsu}'"&&$3=="'${nisshiday}'"'     |
   self 4 |
   sed 's/\\n/<br>/g' > $tmp-nkeihouban_list
fi

# 緊急呼出・生活センサー・警報盤（夜間）
:> $tmp-ykeihou_kaisu
if [ -s ${pompa_dir}/YAKIN_HIKITSUGI/$displayShisetsu/SETSUBI_KAISU ] ; then
   cat ${pompa_dir}/YAKIN_HIKITSUGI/$displayShisetsu/SETSUBI_KAISU |
   awk '$1=="'${shisetsu}'"&&$3=="'${nisshiday}'"'     |
   tail -1  |
   self 4/6 > $tmp-ykeihou_kaisu
fi
ynursecallkaisu=$(self 1 $tmp-ykeihou_kaisu)
[ -z "$ynursecallkaisu" -o "$ynursecallkaisu" = "_" ] && ynursecallkaisu=0
ysensorkaisu=$(self 2 $tmp-ykeihou_kaisu)
[ -z "$ysensorkaisu" -o "$ysensorkaisu" = "_" ] && ysensorkaisu=0
ykeihoubankaisu=$(self 3 $tmp-ykeihou_kaisu)
[ -z "$ykeihoubankaisu" -o "$ykeihoubankaisu" = "_" ] && ykeihoubankaisu=0

# 緊急呼出
:> $tmp-ynursecall_list
if [ -s ${pompa_dir}/YAKIN_HIKITSUGI/$displayShisetsu/KINKYU_YOBIDASHI ] ; then
   cat ${pompa_dir}/YAKIN_HIKITSUGI/$displayShisetsu/KINKYU_YOBIDASHI |
   awk '$1=="'${shisetsu}'"&&$3=="'${nisshiday}'"'     |
   self 4 |
   sed 's/\\n/<br>/g' > $tmp-ynursecall_list
fi

# 生活センサー
:> $tmp-ysensor_list
if [ -s ${pompa_dir}/YAKIN_HIKITSUGI/$displayShisetsu/SEIKATSU_SENSOR ] ; then
   cat ${pompa_dir}/YAKIN_HIKITSUGI/$displayShisetsu/SEIKATSU_SENSOR |
   awk '$1=="'${shisetsu}'"&&$3=="'${nisshiday}'"'     |
   self 4 |
   sed 's/\\n/<br>/g' > $tmp-ysensor_list
fi

# 警報盤
:> $tmp-ykeihouban_list
if [ -s ${pompa_dir}/YAKIN_HIKITSUGI/$displayShisetsu/KEIHOUBAN ] ; then
   cat ${pompa_dir}/YAKIN_HIKITSUGI/$displayShisetsu/KEIHOUBAN |
   awk '$1=="'${shisetsu}'"&&$3=="'${nisshiday}'"'     |
   self 4 |
   sed 's/\\n/<br>/g' > $tmp-ykeihouban_list
fi

###########################################
# ケータリング・ルームサービスデータ情報
###########################################
# スケジュール
:> $tmp-cateringroomservice_schedule
if [ -s ${pompa_dir}/SCHEDULE/SCHEDULE_SHOUSAI ] ; then
# 1:スケジュールID 2:ケータリング・ルームサービス区分 3:日付 4:開始時間 5:終了時間
# 6:詳細
   awk '$(NF-2)!="9"&&$1=="'${shisetsu}'"&&$3=="00012"{print $2,$4,substr($5,1,4)substr($5,6,2)substr($5,9,2),$6,$7,$13}' ${pompa_dir}/SCHEDULE/SCHEDULE_SHOUSAI |
   awk '$3=="'${taishoutoday2}'"' > $tmp-cateringroomservice_schedule
fi

# ケータリング・ルームサービス予約テーブル
:> $tmp-schedule_catering_order
if [ -s ${pompa_dir}/SCHEDULE/SCHEDULE_CATERING_ORDER ] ; then
# 1:施設       2:スケジュールID 3:日付 4:利用者ID 5:食事タイミング
# 6:メニューID
   awk '$(NF-2)!="9"&&$1=="'${shisetsu}'"&&$3=="'${taishoutoday2}'"{print $1,$2,$3,$11,$12,$5}' ${pompa_dir}/SCHEDULE/SCHEDULE_CATERING_ORDER |
   LANG=C sort -k6,6 |
   join1 key=6 <(self 1 2 ${home_dir}/SHOKUJI/POMPA/${shisetsu}/SHOKUJI_MENU) |
   delf 6 |
# 1:施設       2:スケジュールID 3:日付 4:利用者ID 5:食事タイミング
# 6:メニュー名
   LANG=C sort -k1,5 |
   yarr num=5 > $tmp-schedule_catering_order_work1

# ヘッダー部分とメニュー部分とで分ける
   self 1/5 $tmp-schedule_catering_order_work1 > $tmp-schedule_catering_order_header
   self 2 6/NF $tmp-schedule_catering_order_work1 |
   sed 's/ /,/g' |
   sed 's/,/ /1' |
# 1:スケジュールID 2:メニュー（複数）
   LANG=C sort -k1,1 > $tmp-schedule_catering_order_menu

   LANG=C sort -k2,2 $tmp-schedule_catering_order_header |
   self 0 2 |
# 1:施設           2:スケジュールID 3:日付 4:利用者ID 5:食事タイミング
# 6:スケジュールID
   join1 key=6 $tmp-schedule_catering_order_menu |
   delf 6                                        |
# 1:施設           2:スケジュールID 3:日付 4:利用者ID 5:食事タイミング
# 6:メニュー（複数）
   LANG=C sort -k4,4 |
   join1 key=4 $tmp-riyousha_master_kyoshitsu |
   delf 1 |
   LANG=C sort -k1,1 > $tmp-schedule_catering_order
# 1:スケジュールID 2:日付             3:利用者ID 4:利用者名 5:居室番号
# 6:食事タイミング 7:メニュー（複数）
fi

[ $(gyo $tmp-schedule_catering_order) -eq 0 ] && echo "_" "_" "_" "_" "_" "_" "_" > $tmp-schedule_catering_order

:> $tmp-catering_roomservice_record
if [ $(gyo $tmp-cateringroomservice_schedule) -gt 0 ] ; then
   cat $tmp-cateringroomservice_schedule |
   LANG=C sort -k1,1 |
# 1:スケジュールID  2:ケータリング・ルームサービス区分 3:日付     4:開始時間 5:終了時間
# 6:詳細            7:日付                             8:利用者ID 9:利用者名 10:居室番号
# 11:食事タイミング 12:メニュー（複数）
   join1 key=1 - $tmp-schedule_catering_order |
   self 10 9 2 4 5 12 6 11 3 8              |
# 1:居室番号         2:利用者名 3:ケータリング・ルームサービス区分 4:開始時間 5:終了時間
# 6:メニュー（複数） 7:詳細     8:食事タイミング                   9:日付     10:利用者ID
   awk '{print $1,$2,$3,$4,$5,$6,$7,$8,substr($9,1,4),substr($9,5,2),$10}' |
# 1:居室番号         2:利用者名 3:ケータリング・ルームサービス区分 4:開始時間 5:終了時間
# 6:メニュー（複数） 7:詳細     8:食事タイミング                   9:対象年   10:対象月
# 11:利用者ID
   awk '{if($8=="1"){shokujitiming="朝"}else if($8=="2"){shokujitiming="昼"} else if($8=="3"){shokujitiming="夕"}else{shokujitiming="不明"};print $1,$2,$3,$4,$5,$6,$7"　"shokujitiming,$9,$10,$11}' |
# 1:居室番号         2:利用者名         3:ケータリング・ルームサービス区分 4:開始時間 5:終了時間
# 6:メニュー（複数） 7:詳細(朝昼夜含む) 8:対象年                           9:対象月   10:利用者ID
   LANG=C sort -k4,5 > $tmp-catering_roomservice_record
fi



# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou




echo "NISSHI.CGI" > $tmp-cgi
# 施設名はログインユーザーの権限のある施設を取得
cat ${test_pompa_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
awk '$2=="0000"||$2=="'$shisetsu'"'         |
LANG=C sort -k7,7                                         |
join0 key=7 $tmp-cgi                                       |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
#if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = 0 ];then
#  awk '$1!=0' ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON       |
#  awk '{if($1=="'$displayShisetsu'"){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_list
# 1:SHISESTU_ID 2:施設名
#else
#  cat ${tmp}-kengen                        |
#  # 1:userid 2:SHISETSU_ID
#  join1 key=2 ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON |
# 1:userid 2:SHISETSU_ID 3:施設名
#  awk '$2!=0{print $2,$3}'                 |
#  awk '{if($1=="'$displayShisetsu'"){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_list
#fi

self 1 2 ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON |
join0 key=1 $tmp-shisetsu > $tmp-shisetsu_list

# 所属建屋によって登録可否を判定
self 1 3 $home_dir/TBL/JYUUGYOUIN_MASTER/USER_SHISETSU |
awk '$1=="'$userid'"' > $tmp-user_tateya

user_tateya=$(self 2 $tmp-user_tateya)

disabled_touroku=""
#if [ "$user_tateya" = "02" ] ; then
#   disabled_touroku="disabled"
#fi

# レストラン表示リスト参照
cat ${home_dir}/TBL/CONFIG/RESTAURANT_SHISETSU_LIST |
while read res_shisetsuid ;do
    if [ "${res_shisetsuid}" = "${shisetsu}" ] ; then
       echo "" > $tmp-disp_restaurant
       echo "none" > $tmp-disp_tokubetsushoku
       break
    else
       echo "none" > $tmp-disp_restaurant
       echo "" > $tmp-disp_tokubetsushoku
    fi
: ; done

displayRestaurant=$(cat $tmp-disp_restaurant)
displayTokubetsushoku=$(cat $tmp-disp_tokubetsushoku)

# ケータリング表示リスト参照
cat ${home_dir}/TBL/CONFIG/ROOMSERVICE_SHISETSU_LIST |
while read room_shisetsuid ;do
    if [ "${room_shisetsuid}" = "${shisetsu}" ] ; then
        echo "" > $tmp-disp_new_catering
        echo "none" > $tmp-disp_org_catering
        break
    else
        echo "none" > $tmp-disp_new_catering
        echo "" > $tmp-disp_org_catering
    fi
: ;done

displayNewCatering=$(cat $tmp-disp_new_catering)
displayOrgCatering=$(cat $tmp-disp_org_catering)


#--------------------------------------------------------------
# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
cat << FIN > $tmp-html2
    <script type="text/javascript" language="javascript">
      alert('${message}');
    </script>
FIN
##else
##cat << FIN > $tmp-html2
##    <script type="text/javascript" language="javascript">
##      window.close();
##    </script>
##FIN
fi
#--------------------------------------------------------------
cat $checkfile > $tmp-calsed
cat << FIN | sed 's/ _$/ @/g' >> $tmp-calsed
###TAISHOUDATE### $taishoutoday
###USERID### $userid
###PASSWORD### $password
###SHISETSUID### $shisetsu
###DROPDOWN_ACTIVE1### active
###LI_UNEI1### active
###NIKKINSHANINZU### $NikkinshaNinzu
###NIKKINSHAINFO### $NikkinshaInfo
###YAKINSHANINZU### $YakinshaNinzu
###YAKINSHAINFO### $YakinshaInfo
###FULLINFO### $FullInfo
###NIKKINNYUKYOHIYARI### $NikkinNyukyoHiyari
###NIKKINSHISETSUHIYARI### $NikkinShisetsuHiyari
###NIKKINNYUKYOJIKOHO### $NikkinNyukyoJikoho
###NIKKINSHISETSUJIKOHO### $NikkinShisetsuJikoho
###NIKKINKIDUKI### $NikkinKiduki
###YAKINNYUKYOHIYARI### $YakinNyukyoHiyari
###YAKINSHISETSUHIYARI### $YakinShisetsuHiyari
###YAKINNYUKYOJIKOHO### $YakinNyukyoJikoho
###YAKINSHISETSUJIKOHO### $YakinShisetsuJikoho
###YAKINKIDUKI### $YakinKiduki
###JIKOHOKAISU### $numJikoho
###HIYARIKAISU### $numHiyari
###KIDUKIKAISU### $numKiduki
###DRNINZU### $DrNinzu
###DRNYUKYOSHA### $DrNyukyosha
###NSNINZU### $NsNinzu
###NSNYUKYOSHA### $NsNyukyosha
###KENKOUSOUDANNINZU### $kenkousoudan_ninzu
###KENKOUSOUDANRUIKEININZU### $kenkousoudan_ruikei_ninzu
###NIKKINHIKITSUGI### $NikkinHikitsugi
###YAKINHIKITSUGI### $YakinHikitsugi
###GUESTSYUKUHAKU_MALE### $guest_shukuhaku_male
###GUESTSYUKUHAKU_FEMALE### $guest_shukuhaku_female
###HMC### $honnyukyosha_male_count
###GMC### $gaihaku_male_count
###NMC### $nyuin_male_count
###NMKC### $nyuingaihaku_male_kei_count
###HSMC### $honnyukyosha_shoukei_male_count
###HFC### $honnyukyosha_female_count
###GFC### $gaihaku_female_count
###NFC### $nyuin_female_count
###NFKC### $nyuingaihaku_female_kei_count
###HSFC### $honnyukyosha_shoukei_female_count
###ROOMKOSU### $all_nyukyo
###NYUKYORITSU### $nyukyoritsu
###FUKUSUNYUKYORITSU### $fukusu_nyukyoritsu
###TAIKENMALE### $taiken_count_male
###TAIKENFEMALE### $taiken_count_female
###OTHERZAIKANSHA_MALE### $other_male_count
###OTHERZAIKANSHA_FEMALE### $other_female_count
###FULLCOUNT### $floor_full_count
###IKKATSUSHIHARAI### $ikkatsupercent
###TSUKIHARAI### $tsukipercent
###TAIKENMALE### $taiken_count_male
###TAIKENFEMALE### $taiken_count_female
###IKKATSUSHIHARAI### $ikkatsupercent
###TSUKIHARAI### $tsukipercent
###NNURSECALLKAISU### $nnursecallkaisu
###NSENSORKAISU### $nsensorkaisu
###NKEIHOUBANKAISU### $nkeihoubankaisu
###YNURSECALLKAISU### $ynursecallkaisu
###YSENSORKAISU### $ysensorkaisu
###YKEIHOUBANKAISU### $ykeihoubankaisu
###SELECT_SHISETSU### $select_shisetsu
###DISABLED_TOUROKU### $disabled_touroku
###KIJUNDATE### $taishoutoday
###HDKIJUNDATE### $hdKijunDate
###RESTAURANTDISPLAY### $displayRestaurant
###TOKUBETSUSHOKUDISPLAY### $displayTokubetsushoku
###NEW_CATERING_DISPLAY### $displayNewCatering
###ORG_CATERING_DISPLAY### $displayOrgCatering
###DOMAIN### $domain
FIN

: > $tmp-list

cat $tmp-calsed      |
sed 's/\\n/###KAIGYO###/g'     >  $tmp-calsed_kaigyozumi

# HTMLの作成
cat ${html_dir}/PRINT_NISSHI_SENIOR.html |
calsed -f $tmp-calsed_kaigyozumi - |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -l###SHISETSU_NAME### - $tmp-shisetsu_list |
mojihame -l###SCHEDULELIST### - $tmp-schedule_list |
mojihame -l###BIRTHDAYINFO### - $tmp-birthrecord |
mojihame -l###GYOUSHA### - $tmp-gyousha |
mojihame -l###NAIRAN### - $tmp-nairan |
mojihame -l###HIKKOSHI### - $tmp-hikkoshi |
mojihame -l###SEISOU### - $tmp-seisou |
mojihame -l###TOKUBETSUSHOKU### - $tmp-tokubetsushoku |
mojihame -l###RESTAURANT### - $tmp-restaurant |
mojihame -l###CATERING### - $tmp-catering |
mojihame -l###CATERINGROOMSERVICE### - $tmp-catering_roomservice_record |
mojihame -h###RENRAKULIST### - $tmp-renraku_list |
mojihame -h###NIKKINLIST### - $tmp-nikkin_list |
mojihame -h###YAKINLIST### - $tmp-yakin_list |
mojihame -l###GUESTSHUKUHAKULIST### - $tmp-guest_shukuhakulist_final |
mojihame -l###GAIHAKULIST### - $tmp-gaihaku_name_list |
mojihame -l###NYUINLIST### - $tmp-nyuin_name_list |
mojihame -l###TAIKENLIST### - $tmp-taiken_list |
mojihame -l###NYUKYOSHASCHEDULELIST### - $tmp-nyukyosha_schedule_list |
mojihame -l###NYUKYOSHACLINICLIST### - $tmp-nyukyosha_clinic_list |
mojihame -l###RESERVELIST### - $tmp-reserve_list |
mojihame -h###NNURSECALLDATA### - $tmp-nnursecall_list |
mojihame -h###NSENSORDATA### - $tmp-nsensor_list |
mojihame -h###NKEIHOUBANDATA### - $tmp-nkeihouban_list |
mojihame -h###YNURSECALLDATA### - $tmp-ynursecall_list |
mojihame -h###YSENSORDATA### - $tmp-ysensor_list |
mojihame -h###YKEIHOUBANDATA### - $tmp-ykeihouban_list |
sed 's/###KAIGYO###/\n/g'     |
sed 's/\\n//g'                |
sed 's/###SPACE###/ /g'       |
tee $tmp-html |
#--------------------------------------------------------------
#--------------------------------------------------------------
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |
#formhame -d"_" - ${namedata}  |
cat - > $tmp-nisshi_senior_base_pdf.html
#--------------------------------------------------------------

cp $tmp-nisshi_senior_base_pdf.html $work_dir/nisshi_senior_base_pdf.html

mkdir -p ${home_dir}/UNEI/DOWNLOAD/${userid}

# 過去のPDFを一旦消す
rm ${home_dir}/UNEI/DOWNLOAD/${userid}/NISSHI_SENIOR.pdf

/home/hands/E-LIFE/TOOL/wkhtmltopdf-amd64 --margin-bottom 2 --margin-left 1 --margin-right 1 --margin-top 2 $tmp-nisshi_senior_base_pdf.html ${home_dir}/UNEI/DOWNLOAD/${userid}/NISSHI_SENIOR.pdf

stime="$(date +%Y%m%d%H%M%s)"

  # HTML の出力
cat << EOF > ${tmp}-html.html
<HTML>
  <HEAD>
    <SCRIPT type="text/javascript" language="Javascript">
      //<![CDATA[
      window.onload=init
      function init(){
           window.open("/E-LIFE/UNEI/DOWNLOAD/${userid}/NISSHI_SENIOR.pdf?sday=${stime}","pdfprint");
           window.self.close();
      }
      //]]>
    </SCRIPT>
  </HEAD>
</HTML>
EOF

cat ${tmp}-html.html

rm -f ${tmp}-*
exit 0
