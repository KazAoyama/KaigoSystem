#!/bin/bash
#
# NISSHI_SENIOR_TOUROKU.DISPLAY : スケジュールマスタ表示
#
# Usage : NISSHI_SENIOR_TOUROKU.DISPLAY
#
# Written by K.Aoyama(HANDS.LAB)

# ログ
source /home/hands/E-LIFE/UNEI/CGI/UNEI.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null

mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date +%Y%m%d) ; set -xv

rm -f $tmp-*

# ディレクトリ設定
test_tbl_dir="${home_dir}/TEST/TBL"
kengen_dir="${home_dir}/SYSTEM_SETTEI/POMPA/KENGEN_KANRI"

# 変数の定義
namedata=$1
checkfile=$2
result_data=$3
henshin_data=$4
today="$(date +%Y%m%d)"

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------


echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu

self 1 2 ${home_dir}/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst
cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst

# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou

# ユーザ退去制御
cat ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_KIHON     |
awk '(substr($6,1,1)!="3"&&substr($6,1,1)!="6")&&$(NF-2)!="9"' |
awk '$4<="'$hdKijunDate'"&&"'$hdKijunDate'"<=$5{print $1}'  |
LANG=C sort -k1,1                                    > $tmp-yuko-jyugyoin

# 施設のみの従業員
cat ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_SHISETSU ${home_dir}/TBL/JYUUGYOUIN_MASTER/EXTRA_USER_SHISETSU  |
LANG=C sort -k2,2                                    |
join0 key=2 $tmp-shisetsu                            |
awk '$3=="0'$Tateya'"||$3=="_"'                                |
self 1                                               > $tmp-shisetsu_user

# ログインUSER名と施設の取得（仮）
cat ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
tee $tmp-userlist_tmp                                  |
# 1:USER_ID 2:ユーザー名
join1 key=1 ${tmp}-user                            |
# 1:USER_ID 2:ユーザー名
self 2                                             > ${tmp}-usermei

cat ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON |
# 1:施設コード 2:施設名
join1 key=1 ${tmp}-shisetsu                        |
self 2                                             > ${tmp}-user_shisetsu

cat $tmp-userlist_tmp                              |
LANG=C sort -k1,1                                  |
join0 key=1 $tmp-shisetsu_user                     |
join0 key=1 $tmp-yuko-jyugyoin                     |
LANG=C sort -k3,3 > $tmp-userlist



[ -z "${MODE}" ] && MODE="init"
#--------------------------------------------------------------

#--------------------------------------------------------------
### モードによる表示の分岐
case "${MODE}" in

  # 初期表示
  init | to_reset) 
    if [ "$(gyo ${result_data})" != 0 ] ; then
      cat ${result_data}        > $tmp-listdata
    else
    : > $tmp-listdata
    fi
  ;;


  # 更新
  regist)
    # 結果判定
    result=$(awk '$1=="result"{print $2}' ${henshin_data})
#    result_all="$(gyo ${listdata})"
    if [ "${result}" = "ok" ] ; then
      message="更新完了"
    else
      message=$(awk '$1=="message"{print $2}' ${henshin_data})
      [ -z "${message}" ] && message="処理エラー"
    fi
    if [ "$(gyo ${result_data})" != 0 ] ; then
      cat ${result_data}        > $tmp-listdata
    else
    : > $tmp-listdata
    fi

  ;;

esac


#--------------------------------------------------------------
# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
cat << FIN > $tmp-html2
    <script type="text/javascript" language="javascript">
      alert('${message}');
    </script>
FIN
##else
##cat << FIN > $tmp-html2
##    <script type="text/javascript" language="javascript">
##      window.close();
##    </script>
##FIN
fi
#--------------------------------------------------------------

cp $tmp-listdata $work_dir/listdata

# データ取得
# 基本データ
cat $tmp-listdata |
awk '$1=="k"'     |
delf 1            > $tmp-listdata_kihon


: > $tmp-nikkinsha
cat $tmp-listdata |
awk '$1=="n"'     |
delf 1            > $tmp-nikkinsha

: > $tmp-yakinsha
cat $tmp-listdata |
awk '$1=="y"'     |
delf 1            > $tmp-yakinsha

:> $tmp-sort
cat $tmp-listdata |
awk '$1=="s"'     |
delf 1            > $tmp-sort

[ "$(gyo $tmp-sort)" = "0" ] && echo "_ _" > $tmp-sort

# 表示順設定
cat $tmp-userlist |
LANG=C sort -k1,1 |
join2 +"_" key=1 $tmp-sort > $tmp-userlist_work1

awk '$2=="_"'  $tmp-userlist_work1 > $tmp-userlist_nosort
awk '$2!="_"'  $tmp-userlist_work1 |
LANG=C sort -k2n,2n |
cat - $tmp-userlist_nosort |
self 1 3 2 4/NF   > $tmp-userlist_sortzumi



#--------------------------------------------------------
# 基本データのネーム変換
eval $(name-source ${tmp}-listdata_kihon)
#--------------------------------------------------------

cat $checkfile > $tmp-calsed
cat << FIN | sed 's/ _$/ @/g' >> $tmp-calsed
###USERID### $userid
###PASSWORD### $password
###SHISETSUID### $shisetsu
###DROPDOWN_ACTIVE1### active
###LI_UNEI1#### active
###KIJUNDATE### $KijunDate
###HDKIJUNDATE###   $hdKijunDate
###HIYARINYUKYOSHANIKKIN###   $HiyariNyukyoshaNikkin
###HIYARISHISETSUNIKKIN###   $HiyariShisetsuNikkin
###JIKOHONYUKYOSHANIKKIN###   $JikohoNyukyoshaNikkin
###JIKOHOSHISETSUNIKKIN###   $JikohoShisetsuNikkin
###KIDUKINIKKIN###   $KidukiNikkin
###HIYARINYUKYOSHAYAKIN###   $HiyariNyukyoshaYakin
###HIYARISHISETSUYAKIN###   $HiyariShisetsuYakin
###JIKOHONYUKYOSHAYAKIN###   $JikohoNyukyoshaYakin
###JIKOHOSHISETSUYAKIN###   $JikohoShisetsuYakin
###KIDUKIYAKIN###   $KidukiYakin
###KENKOSODANDRNINZU###   $KenkoSodanDrNinzu
###KENKOSODANDRNYUKYOSHA###   $KenkoSodanDrNyukyosha
###KENKOSODANNSNINZU###   $KenkoSodanNsNinzu
###KENKOSODANNSNYUKYOSHA###   $KenkoSodanNsNyukyosha
###NIKKINTOKKI###   $NikkinTokki
###YAKINTOKKI###   $YakinTokki
###SELECT_SHISETSU### $select_shisetsu
###TATEYA### $Tateya
FIN

if [ "${MODE}" = "regist" ] ; then

# 日勤出勤者データ
# 出勤者ID
echo ${dataCSVNikkinID}           |
sed 's/,/ /g'      > $tmp-nikkinshaid

# 夜勤出勤者データ
# 出勤者ID
echo ${dataCSVYakinID}           |
sed 's/,/ /g'      > $tmp-yakinshaid


cat $tmp-nikkinshaid |
tateyoko > ${tmp}-nikkinsha

cat $tmp-yakinshaid |
tateyoko > ${tmp}-yakinsha


fi


cat $tmp-calsed      |
sed 's/\\n/###KAIGYO###/g'     > $tmp-calsed_kaigyozumi

# HTMLの作成
cat ${html_dir}/NISSHI_SENIOR_TOUROKU1.html ${home_dir}/KYOUTSU/HTML/MENUBAR.html ${html_dir}/NISSHI_SENIOR_TOUROKU2.html |
calsed -f $tmp-calsed_kaigyozumi - |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -l###JUGYOIN### - ${tmp}-userlist_sortzumi |
mojihame -l###NIKKIN### - ${tmp}-nikkinsha |
mojihame -l###YAKIN### - ${tmp}-yakinsha |
sed 's/###KAIGYO###/\n/g'     |
sed 's/###SPACE###/ /g'       |
sed 's/"_"/""/g'              |
tee $tmp-html |
#--------------------------------------------------------------
#--------------------------------------------------------------
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |
#formhame -d"_" - ${namedata}  |
cat -
#--------------------------------------------------------------

rm -f ${tmp}-*
exit 0
