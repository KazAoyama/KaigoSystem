#!/bin/bash
#
# NISSHI_SENIOR_YAKIN.DISPLAY : 連絡事項登録表示
#
# Usage : NISSHI_SENIOR_YAKIN.DISPLAY
#
# Written by K.Aoyama(HANDS.LAB)

# ログ
source /home/hands/E-LIFE/UNEI/CGI/UNEI.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null

mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date +%Y%m%d) ; set -xv

rm -f $tmp-*

# ディレクトリ設定
test_tbl_dir="${home_dir}/TEST/TBL"
kengen_dir="${home_dir}/SYSTEM_SETTEI/POMPA/KENGEN_KANRI"

# 変数の定義
namedata=$1
checkfile=$2
result_data=$3
result_kekka=$4
today="$(date +%Y%m%d)"

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------


echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu

#--------------------------------------------------------------
# ログインUSER名と施設の取得
cat /home/hands/E-LIFE/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
tee ${tmp}-jugyoin        |
# 1:USER_ID 2:ユーザー名
awk '$1=="'${userid}'"'   |
# 1:USER_ID 2:ユーザー名
self 2                    > ${tmp}-usermei


self 1 2 /home/hands/E-LIFE/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 /home/hands/E-LIFE/TBL/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst

cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst


# 施設名はログインユーザーの権限のある施設を取得
cat /home/hands/E-LIFE//SYSTEM_SETTEI/POMPA/KENGEN_KANRI/USER_KENGEN/${userid}.USER_KENGEN |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou
#-----------------------------------------------------------




[ -z "${MODE}" ] && MODE="init"
#--------------------------------------------------------------

#--------------------------------------------------------------
### モードによる表示の分岐
case "${MODE}" in

  # 初期表示
  init | to_reset) 
    if [ "$(gyo ${result_data})" != 0 ] ; then
      cat ${result_data}        > $tmp-listdata
    else
    : > $tmp-listdata
    fi
  ;;

  # 検索
  search) 
    if [ "$(gyo ${result_data})" != 0 ] ; then
      cat ${result_data}        > $tmp-listdata
    else
    : > $tmp-listdata
    fi
  ;;


  # 更新
  regist)
    # 結果判定
    result=$(awk '$1=="result"{print $2}' ${result_kekka})
#    result_all="$(gyo ${listdata})"
    if [ "${result}" = "ok" ] ; then
      message="更新完了"
    else
      message=$(awk '$1=="message"{print $2}' ${result_data})
      [ -z "${message}" ] && message="処理エラー"
    fi

    if [ "$(gyo ${result_data})" != 0 ] ; then
      cat ${result_data}        > $tmp-listdata
    else
    : > $tmp-listdata
    fi

  ;;

esac


#--------------------------------------------------------------
# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
cat << FIN > $tmp-html2
    <script type="text/javascript" language="javascript">
      alert('${message}');
    </script>
FIN
##else
##cat << FIN > $tmp-html2
##    <script type="text/javascript" language="javascript">
##      window.close();
##    </script>
##FIN
fi
#--------------------------------------------------------------

TourokuDate=$(mdate ${hdKijunDate} | self 1 | awk '{print substr($1,1,4)"/"substr($1,5,2)"/"substr($1,7,2)}')

# 日勤引継ぎ事項
awk '$1=="h"' ${tmp}-listdata |
delf 1                        > ${tmp}-listdata_hikitsugijikou
# 設備の回数
awk '$1=="n"' ${tmp}-listdata |
delf 1                        > ${tmp}-listdata_setsubikaisu
# 緊急呼出データ
awk '$1=="k"&&$(NF-2)!="9"' ${tmp}-listdata |
delf 1                        |
rank                          |
awk '{bangou=$1-1;print bangou,$0}'         |
delf 2                        > ${tmp}-listdata_kinkyuyobidashi
[ "$(gyo ${tmp}-listdata_kinkyuyobidashi)" = "0" ] && : > ${tmp}-listdata_kinkyuyobidashi
# 生活センサー発報データ
awk '$1=="s"&&$(NF-2)!="9"' ${tmp}-listdata |
delf 1                        |
rank                          |
awk '{bangou=$1-1;print bangou,$0}'         |
delf 2                        > ${tmp}-listdata_seikatsu_sensor
[ "$(gyo ${tmp}-listdata_seikatsu_sensor)" = "0" ] &&  : > ${tmp}-listdata_seikatsu_sensor
# 警報盤発報データ
awk '$1=="b"&&$(NF-2)!="9"' ${tmp}-listdata |
delf 1                        |
rank                          |
awk '{bangou=$1-1;print bangou,$0}'         |
delf 2                        > ${tmp}-listdata_keihouban
[ "$(gyo ${tmp}-listdata_keihouban)" = "0" ] && : > ${tmp}-listdata_keihouban

kinkyuyobidashi_num=$(gyo ${tmp}-listdata_kinkyuyobidashi)
seikatsu_sensor_num=$(gyo ${tmp}-listdata_seikatsu_sensor)
keihouban_num=$(gyo ${tmp}-listdata_keihouban)

#--------------------------------------------------------
# 基本データのネーム変換
eval $(name-source ${tmp}-listdata_hikitsugijikou)
eval $(name-source ${tmp}-listdata_setsubikaisu)
#--------------------------------------------------------
cat << FIN | sed 's/ _$/ @/g' > $tmp-calsed
###USERID### $userid
###PASSWORD### $password
###SHISETSUID### $shisetsu
###DROPDOWN_ACTIVE1### active
###LI_UNEI1### active
###TOUROKUDATE###   $TourokuDate
###HDKIJUNDATE###   $hdKijunDate
###DISPLAYSHISETSU###   $displayShisetsu
###YAKINID###   $YakinID
###HIKITSUGIJIKOU###   $HikitsugiJikou
###KINKYUYOBIDASHIKAISU###   $KinkyuYobidashiKaisu
###SEIKATSUSENSORKAISU###   $SeikatsuSensorKaisu
###KEIHOUBANKAISU###   $KeihoubanKaisu
###KINKYUYOBIDASHINUM###   $kinkyuyobidashi_num
###SEIKATSUSENSORNUM###   $seikatsu_sensor_num
###KEIHOUBANNUM###   $keihouban_num
###TATEYA###   $Tateya
###FLOOR###   $Floor
###SELECT_SHISETSU### $select_shisetsu
FIN

cat $checkfile >> $tmp-calsed
cat $tmp-calsed      |
sed 's/\\n/###KAIGYO###/g'     >  $tmp-calsed_kaigyozumi

# HTMLの作成
cat ${html_dir}/NISSHI_SENIOR_YAKIN1.html ${home_dir}/KYOUTSU/HTML/MENUBAR.html ${html_dir}/NISSHI_SENIOR_YAKIN2.html |
calsed -f $tmp-calsed_kaigyozumi - |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -h###KINKYUYOBIDASHIDATA### - ${tmp}-listdata_kinkyuyobidashi |
mojihame -h###SEIKATSUSENSORDATA### - ${tmp}-listdata_seikatsu_sensor |
mojihame -h###KEIHOUBANDATA### - ${tmp}-listdata_keihouban |
sed 's/\\n/###KAIGYO###/g'     |
sed 's/###KAIGYO###/\n/g'     |
sed 's/###SPACE###/ /g'       |
sed 's/"_"/""/g'              |
tee $tmp-html |
#--------------------------------------------------------------
#--------------------------------------------------------------
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |
#formhame -d"_" - ${namedata}  |
cat -
#--------------------------------------------------------------

rm -f ${tmp}-*
exit 0
