#!/bin/bash
#
# NYUKYOSHA_SCHEDULE.DISPLAY : カレンダー選択表示
#
# Usage : NYUKYOSHA_SCHEDULE.DISPLAY
#
# Written by K.Aoyama(HANDS.LAB)

# ログ
source /home/hands/E-LIFE/UNEI/CGI/UNEI.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null

mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date +%Y%m%d) ; set -xv

rm -f $tmp-*

# ディレクトリ設定
test_tbl_dir="${home_dir}/TEST/TBL"
kengen_dir="${home_dir}/TBL/KENGEN_KANRI"

# 変数の定義
namedata=$1
checkfile=$2
result_data=$3
#koushin_data=$4
today="$(date +%Y%m%d)"

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------


echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu

# ユーザ退去制御
awk '$(NF-2)!=9' ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_KIHON     |
awk '$4<="'$today'"&&"'$today'"<=$5{print $1}'  |
LANG=C sort -k1,1                                    > $tmp-yuko-jyugyoin

# ログインUSER名と施設の取得（仮）
cat ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
tee $tmp-user_mst_tmp                                  |
# 1:USER_ID 2:ユーザー名
join1 key=1 ${tmp}-user                            |
# 1:USER_ID 2:ユーザー名
self 2                                             > ${tmp}-usermei

# 該当の施設、建屋のみのスタッフ
cat $home_dir/TBL/JYUUGYOUIN_MASTER/USER_SHISETSU $home_dir/TBL/JYUUGYOUIN_MASTER/EXTRA_USER_SHISETSU  |
LANG=C sort -k2,2                                  |
join0 key=2 ${tmp}-shisetsu                        |
tee $tmp-shisetsu_user_list                        |
if [ "$EventTateya" = "1" ] ; then
  awk '$3!="02"'
else
  awk '{print $0}'
fi |
self 1 |
LANG=C sort -k1,1                                  > $tmp-shisetsu_user

cat $tmp-user_mst_tmp                              |
LANG=C sort -k1,1                                  |
join0 key=1 $tmp-shisetsu_user                     |
join0 key=1 $tmp-yuko-jyugyoin                     > $tmp-user_mst

cat $tmp-shisetsu_user_list                        |
awk '$1=="'$userid'"'                              |
# 所属建屋
self 3                                             > $tmp-shozoku_tateya
ShozokuTateya=$(tail -1 $tmp-shozoku_tateya)
[ -z "$ShozokuTateya" ] && ShozokuTateya="_"

cat $home_dir/TBL/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM |
awk '$1=="'$shisetsu'"'                            |
self 2 |
# 施設建屋
LANG=C sort -k1,1 -u                               > $tmp-shisetsu_tateya

awk '$1=="01"' $tmp-shisetsu_tateya > $tmp-shisetsu_tateya_senior
awk '$1=="02"' $tmp-shisetsu_tateya > $tmp-shisetsu_tateya_care


TateyaCheck="3"
if [ "$ShozokuTateya" = "_" -a "$(gyo $tmp-shisetsu_tateya_senior)" = "1" -a "$(gyo $tmp-shisetsu_tateya_care)" = "0" ] ; then
  TateyaCheck="1"
elif [ "$ShozokuTateya" = "_" -a "$(gyo $tmp-shisetsu_tateya_senior)" = "0" -a "$(gyo $tmp-shisetsu_tateya_care)" = "1" ] ; then
  TateyaCheck="2"
elif [ "$ShozokuTateya" = "_" -a "$(gyo $tmp-shisetsu_tateya_senior)" = "1" -a "$(gyo $tmp-shisetsu_tateya_care)" = "1" ] ; then
  TateyaCheck="0"
elif  [ "$ShozokuTateya" = "01" -a "$(gyo $tmp-shisetsu_tateya_senior)" = "1" ] ; then
  TateyaCheck="1"
elif  [ "$ShozokuTateya" = "01" -a "$(gyo $tmp-shisetsu_tateya_senior)" = "0" ] ; then
  TateyaCheck="3"
elif  [ "$ShozokuTateya" = "02" -a "$(gyo $tmp-shisetsu_tateya_care)" = "1" ] ; then
  TateyaCheck="2"
elif  [ "$ShozokuTateya" = "02" -a "$(gyo $tmp-shisetsu_tateya_care)" = "0" ] ; then
  TateyaCheck="3"
else
  :
fi


self 1 2 ${home_dir}/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst

cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst

cat $tmp-disp_shisetsu_mst |
# 1:施設コード 2:施設名
join1 key=1 ${tmp}-shisetsu                        |
self 2                                             > ${tmp}-user_shisetsu

# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou

echo "NYUKYOSHA_SCHEDULE.CGI" > $tmp-cgi
# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
awk '$2=="0000"||$2=="'$shisetsu'"'         |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -k7,7                                          |
join0 key=7 $tmp-cgi                                       > ${tmp}-kengenlist

#--------------------------------------------------------------
# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
cat << FIN > $tmp-html2
    <script type="text/javascript" language="javascript">
      alert('${message}');
    </script>
FIN
##else
##cat << FIN > $tmp-html2
##    <script type="text/javascript" language="javascript">
##      window.close();
##    </script>
##FIN
fi
#--------------------------------------------------------------

# 日にちはデフォルト今日
[ -z "$EventDate" -o "$EventDate" = "_" ] && EventDate=$(mdate today | self 1 | awk '{print substr($1,1,4)"/"substr($1,5,2)"/"substr($1,7,2)}')

# 建屋表示
echo "1" "シニア" > $tmp-tateya_mst
echo "2" "ケア" >> $tmp-tateya_mst

awk '$1=="'$EventTateya'"{print $2}' $tmp-tateya_mst > $tmp-disp_tateya

tateya=$(self 1 $tmp-disp_tateya)



# 選択するカレンダー種類をテーブルから取得
# カレンダー種類ID カレンダー種類名 CGI基本名 予備1 予備2 予備3 有効フラグ 処理日付 処理ユーザ
cat ${home_dir}/TBL/CONFIG/SCHEDULE_SHURUI   |
awk '$(NF-2)!="9"'                           > $tmp-mst_schedule_shurui


cat $checkfile > $tmp-calsed
cat << FIN | sed 's/ _$/ @/g' >> $tmp-calsed
###EVENTTATEYA### $EventTateya
###TATEYA### $tateya
###USERID### $userid
###PASSWORD### $password
###TATEYACHECK### $TateyaCheck
###SHISETSUID### $shisetsu
###DROPDOWN_ACTIVE1### active
###LI_UNEI4#### active
###SELECT_SHISETSU### $select_shisetsu
FIN


#-----------------------------------------------------------
# 登録・印刷ボタンの表示
# 施設名はログインユーザーの権限のある施設を取得
self 9 $tmp-kengenlist |
LANG=C sort -k1,1      |
tail -1                > $tmp-dispkengen

# 権限がない人は新規登録や出力が出来ない
if [ $(cat $tmp-dispkengen) = "3" ] ;then
  echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed
  echo "###TOUROKUDISP### @" >> $tmp-calsed
  echo "###PRINTDISP### @"   >> $tmp-calsed
elif [ $(cat $tmp-dispkengen) = "2" ] ;then
  echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed
  echo "###TOUROKUDISP### @" >> $tmp-calsed
  echo "###PRINTDISP### none"   >> $tmp-calsed
else
  echo "###SHINKITOUROKUDISP### none" >> $tmp-calsed
  echo "###TOUROKUDISP### none" >> $tmp-calsed
  echo "###PRINTDISP### none"   >> $tmp-calsed
fi

cat $tmp-calsed      |
sed 's/\\n/###KAIGYO###/g'     >  $tmp-calsed_kaigyozumi

# HTMLの作成
cat ${html_dir}/NYUKYOSHA_SCHEDULE1.html ${home_dir}/KYOUTSU/HTML/MENUBAR.html ${html_dir}/NYUKYOSHA_SCHEDULE2.html |
calsed -f $tmp-calsed_kaigyozumi - |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -l###SCHEDULE_SHURUI### - $tmp-mst_schedule_shurui |
sed 's/###KAIGYO###/\n/g'     |
sed 's/###SPACE###/ /g'       |
sed 's/"_"/""/g'              |
tee $tmp-html |
#--------------------------------------------------------------
#--------------------------------------------------------------
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |
#formhame -d"_" - ${namedata}  |
cat -
#--------------------------------------------------------------

rm -f ${tmp}-*
exit 0
