#!/bin/bash
#
# NYUUINGAIHAKU_ICHIRAN.DISPLAY
# 入院外泊情報一覧ディスプレイCGI
#
# Written by E.Okuda :2013/11/20

exec 2> /home/hands/E-LIFE/UNEI/APLOG/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv

# 設定ファイル読込
source /home/hands/.bashrc &> /dev/null
source  /home/hands/E-LIFE/UNEI/CGI/UNEI.INI &> /dev/null
# 変数設定
tmp=/var/tmp/${$}

#ゴミtmpの消去
rm -f $tmp-*

# ディレクトリ設定

app_dir="${home_dir}/UNEI"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
pompa_dir="${app_dir}/POMPA"
kengen_dir="/home/hands/E-LIFE/TBL/KENGEN_KANRI"

cgi_name="NYUUINGAIHAKU_ICHIRAN.CGI"
#-------------------------------------------------------------
# 変数の定義
namedata="$1"
checkfile="$2"
data="$3"
downloadfile="$4"
#-------------------------------------------------------------
#-------------------------------------------------------------
# 必要な値の取得
name-source $namedata > $tmp-source
source $tmp-source

#-------------------------------------------------------------
#-------------------------------------------------------------
# ユーザー名取得
#[ ! -z "$USER_ID" ] && USER_NAME="$(grep "^$USER_ID " ${tbl_dir}/JYUGYOIN_NAME | awk '{print $2}')"
USERID=$(nameread  "userid"  $namedata)
USERNAME="$(awk '$1=="'${userid}'"{print $2}' ${tbl_dir}/JYUUGYOUIN_MASTER/USER_MASTER | head -1)"
SHISETSUID="$(nameread  "shisetsu"  $namedata)"
SHISETSUNAME="$(awk '$1=="'${SHISETSUID}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON | head -1)"
Shisetsu="$(nameread  "Shisetsu"  $namedata)"
Tateya="$(nameread  "Tateya"  $namedata)"
#[ -z "${MODE}" -o "${MODE}" = "_" ] && MODE="init"
#[ -z "${MODE}" -a ! -z "${NYUUINGAIHAKUID}" -o "${NYUUINGAIHAKUID}" != "_" ] &&  MODE="search"
#-------------------------------------------------------------
if [ -z ${downloadfile} ];then
  FILE_NAME="null"
else
  file=$(cat ${downloadfile})
  FILE_NAME="\"/E-LIFE/UNEI/DOWNLOAD/${file}\""
fi


[ "${MODE}" = "_" -a ! -z "${NYUUINGAIHAKUSHOUSAI}" -a "${NYUUINGAIHAKUSHOUSAI}" = "NYUUINGAIHAKUSHOUSAI" ] &&  MODE="search"
[ -z "${MODE}" -o "${MODE}" = "_" ] && MODE="init"

#-------------------------------------------------------------


if [ "$MODE" = "search" ]; then
# 選択している
  Shisetsu=$(nameread      "Shisetsu"      $namedata)
  Tateya=$(nameread        "Tateya"        $namedata)
  Floor=$(nameread         "Floor"         $namedata)
  Unit=$(nameread          "Unit"          $namedata)
  Kyoshitsu=$(nameread     "Kyoshitsu"     $namedata)
  Nyuukyosha=$(nameread    "Nyuukyosha"    $namedata)
  Shubetsu=$(nameread      "Shubetsu"      $namedata)
  NyuuingaihakuKikanFrom=$(nameread     "NyuuingaihakuKikanFrom"     $namedata)
  NyuuingaihakuKikanTo=$(nameread       "NyuuingaihakuKikanTo"       $namedata)
  Kesshoku=$(nameread      "Kesshoku"      $namedata)
  Hyouji=$(nameread        "Hyouji"        $namedata)
  Shoujyun=$(nameread      "Shoujyun"      $namedata)
  FukusuuHyouji=$(nameread "FukusuuHyouji" $namedata)
  NYUUINGAIHAKUID=$(nameread "NYUUINGAIHAKUID" $namedata)
else
  NyuuingaihakuKikanFrom=""
  NyuuingaihakuKikanTo=""
  Nyuukyosha=""
fi

[ -z "${Shisetsu}" ] && Shisetsu="_"
[ -z "${Tateya}" ] && Tateya="_"
[ -z "${Floor}" ] && Floor="_"
[ -z "${Unit}" ] && Unit="_"
[ -z "${Kyoshitsu}" ] && Kyoshitsu="_"
[ -z "${Nyuukyosha}" ] && Nyuukyosha="_"
#-------------------------------------------------------------
#-------------------------------------------------------------
# formhame 前の実体参照変換
calsed "&" "&amp;" ${namedata} |
calsed "<" "&lt;"              |
calsed ">" "&gt;"              |
calsed "\"" "&quot;"           > $tmp-namedata

#-------------------------------------------------------------
### モードによる表示の分岐
case "${MODE}" in

  # 初期表示
  init)
  Shisetsu="_" 
  Tateya="_" 
  Floor="_"  
  Unit="_"   
  Kyoshitsu="_"
  Nyuukyosha="_"
  Shubetsu=""
  NyuuingaihakuKikanFrom="$(date -d "$(date '+%Y-%m-01') 1 months ago" +%Y%m%d | awk '{print substr($1,1,4)"/"substr($1,5,2)"/"substr($1,7,2)}')"
  NyuuingaihakuKikanTo=""
  Kesshoku=""
  Hyouji=""
  Shoujyun=""
  OneHyouji=""
  NYUUINGAIHAKUID=""

   # 空のリストデータを作成する
   : > $tmp-listdata

  ;;

  # 検索結果表示
  search | excel_out)
   if [ "$(gyo ${data})" != "0" ] ; then
     cat ${data}   |
     sed 's/_/@/g' > $tmp-listdata
# 1:入院外泊ID  2:利用者(入居者)ID 3:利用者(入居者)氏名 4:施設        5:建屋
# 6:居室        7:種別             8:種別名             9:期間FROM    10:期間TO
# 11:入院外泊先 12:備考            13:欠食登録          14:欠食登録名


   else
     : > $tmp-listdata
   fi
   
   if [ ! -z "${NYUUINGAIHAKUSHOUSAI}" -a "${NYUUINGAIHAKUSHOUSAI}" != "_" ] ; then
     Shisetsu="_"
     Tateya="_"
     Floor="_"
     Unit="_"
     Kyoshitsu="_"
     Nyuukyosha="_"
     Shubetsu=""
     NyuuingaihakuKikanFrom="$(date -d "$(date '+%Y-%m-01') 1 months ago" +%Y%m%d | awk '{print substr($1,1,4)"/"substr($1,5,2)"/"substr($1,7,2)}')"
     NyuuingaihakuKikanTo=""
     Kesshoku=""
     Hyouji=""
     Shoujyun=""
     OneHyouji=""
     NYUUINGAIHAKUID=""
   else
     :
   fi
  ;;

esac

# 最大行
  cat $tmp-listdata |
  gyo                > $tmp-saidai_gyo

# 表示行と表示データの用意
  cat $tmp-listdata |
  head -500         > $tmp-list_result

  gyo $tmp-list_result >$tmp-hyouji_gyo

saidai_gyo="$(cat $tmp-saidai_gyo)"
hyouji_gyo="$(cat $tmp-hyouji_gyo)"

#----------------------
##検索期間によってプルダウンの表示候補制限する処理のため
#検索期間置き換える
from_day=$(echo ${NyuuingaihakuKikanFrom} | tr -d  "/" )
[ -z "${from_day}" -o "${from_day}" = "_" ] && from_day="00000000"
to_day=$(echo ${NyuuingaihakuKikanTo} | tr -d  "/" )
[ -z "${to_day}" -o "${to_day}" = "_" ] && to_day="99999999"

#
# 施設選択されていない(初期状態)はログイン施設をセット
#----------------------
[ -z "${Shisetsu}" -o "${Shisetsu}" = "_" ] && Shisetsu="${SHISETSUID}"

echo "${Shisetsu}" |
join1 key=1 - ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON |
self 1 2           > $tmp-shisetsu_name
# 施設名はログインユーザーの権限のある施設を取得
#cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
#awk '$7=="'${cgi_name}'"{print $0}' |
#LANG=C sort -u -k2,2n               |
#self 1 2                            |
#join2 +"@" key=2 ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON - |
#awk '{if($1=="'${Shisetsu}'"){print $2,3,"selected"}
#      else{print $2,$3,"@"}
#     }'                             > $tmp-shisetsu_name


#--
## 建屋取得
#--
  if [ "${Shisetsu}" != "_" ] ; then

  shozokushisetsu=$(awk '$1=="'${userid}'"{print $2}' ${tbl_dir}/JYUUGYOUIN_MASTER/USER_SHISETSU )
  shozokutateya=$(awk '$1=="'${userid}'"{print $3}' ${tbl_dir}/JYUUGYOUIN_MASTER/USER_SHISETSU )
  [ "${Tateya}" = "_" -a "${shozokushisetsu}" -eq "${Shisetsu}" -a "${shozokutateya}" != "_" ] && Tateya="${shozokutateya}"

    cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR    |
# 1:施設ID 2:建屋ID 3:フロア
    awk '$1=="'${Shisetsu}'"{print $2}'                     |
    LANG=C sort |
    uniq |
    join1 key=1 ${tbl_dir}/SHISETSU_MASTER/TATEYA_NAME -    |
    self 1 3                                                |
    awk '{if($1=="'${Tateya}'"){print $1,$2,"selected"}
          else{print $1,$2,"@"}
          }' > $tmp-tateya_name
# 1:建屋ID 2:建屋名
  else
    echo "@ 全て @" >  $tmp-tateya_name
  fi

# 建屋が選ばれていない、かつ建屋の選択肢が一つの場合はその建屋をセット
  [ "${Tateya}" = "_" -a "$(awk '$1!="@"' $tmp-tateya_name | gyo)" -ge "1" ] && Tateya="$(awk '{print $1}' $tmp-tateya_name | head -1)"

  if [ "${Tateya}" != "_" ] ; then
    cat ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
    #検索期間内に絞る
    awk '$7<="'${to_day}'" && $8>="'${from_day}'"'     |
    awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$(NF-2)!="9"{print $3,$3}'  |
    sort  |
    uniq  >$tmp-floor_kari
# 1:フロア 2:フロア

    # フロアが2つ以上の場合のみ全てという選択をつける
    if [ "$(gyo $tmp-floor_kari)" -gt "1"  ]; then
      cat $tmp-floor_kari |
      awk 'BEGIN{print "@ 全て"}{print $0}' |
      awk '{if($1=="'${Floor}'"){print $1,$2,"selected"}
          else{print $1,$2,"@"}
          }' > $tmp-floor
     else
      cat $tmp-floor_kari
     fi  > $tmp-floor
  # 建屋が複数から未選択の場合

  else
    echo "@" "全て" "@"
  fi     > $tmp-floor
# 1:フロア番号 2:フロア番号

  #--
  ## ユニット取得
  #--

 # フロア選択肢が全て以外で一個になる場合そのフロアを選択していると判断
  [ "${Floor}" = "_" -a "$(awk '$1!="@"' $tmp-floor | gyo)" = "1" ] && Floor="$(awk '{print $1}' $tmp-floor | head -1)"

    # 建屋がケアの場合
    if [ "${Tateya}" = "02" ] ; then
    # フロアの指定がある場合
      if [ "${Floor}" != "_" ] ; then
      cat ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS  |
      #検索期間内に絞る
      awk '$7<="'${to_day}'" && $8>="'${from_day}'"'     |
      awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$3=="'${Floor}'"&&$(NF-2)!="9"{print $4}'  |
      LANG=C sort  |
      uniq |
      join1 key=1 ${tbl_dir}/SHISETSU_MASTER/UNIT_NAME -  |
      self 1 2 > $tmp-unit_kari

        # 2つ以上ならば全てという選択肢
        if [ "$(gyo $tmp-unit_kari)" -gt "1"  ]; then
        cat $tmp-unit_kari |
        awk 'BEGIN{print "@ 全て"}{print $0}' |
        awk '{if($1=="'${Unit}'"){print $1,$2,"selected"}
          else{print $1,$2,"@"}
          }' > $tmp-unit_name
        else
        cat $tmp-unit_kari
        fi   > $tmp-unit_name
      # フロアが選ばれていない場合
      else
       echo "@" "全て" > $tmp-unit_name
      fi
    # 建屋が選ばれておらず2つ以上ある場合
    elif [ "${Tateya}" = "_" -a "$(gyo $tmp-tateya_name)" -gt "1" ] ; then
     echo "@" "全て" > $tmp-unit_name
    # 建屋がシニアの場合はユニットなし
    else
      echo "@" "@" > $tmp-unit_name
    fi
#--
## 居室取得・入居者氏名取得
#--
# 事業所
#if [ "${JIGYOUSHO}" != "_" -a "${JIGYOUSHO}" != "9999" ] ; then
#  cat ${pompa_dir}/RIYOUSHA/JIGYOUSHO_RIYOUSHA_STATUS |
# 1:事業所ID 2:入居者ID 3:契約開始日 4:契約終了日
#  awk '$3<"'${today}'"&&$4>"'${today}'"{print $2}'   |
#  LANG=C sort |
#  cjoin1 key=6 - ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS
# 1:施設ID   2:建屋ID 3:フロア 4:ユニットID 5:居室
# 6:入居者ID 7:入居日 8:退去日
#else
  cat ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
    #検索期間内に絞る
    awk '$7<="'${to_day}'" && $8>="'${from_day}'"'     |
# 1:施設ID   2:建屋ID 3:フロア 4:ユニットID 5:居室
# 6:入居者ID 7:入居日 8:退去日
#fi |
    awk '$(NF-2)!="9"' |

# 施設
if [ "${Shisetsu}" != "_" -a "${Shisetsu}" != "@" ] ; then
  awk '$1=="'${Shisetsu}'"{print $0}'
# 1:施設ＩＤ 2:建屋ＩＤ 3:フロア 4:ユニットＩＤ 5:居室Ｎｏ
else
  cat -
fi |

# 建屋の選択があった場合
if [ "${Tateya}" != "_" -a "${Tateya}" != "@" ] ; then
  awk '$2=="'${Tateya}'"{print $0}'
else
  cat -
fi |
# 1:施設ＩＤ 2:建屋ＩＤ 3:フロア 4:ユニットＩＤ 5:居室Ｎｏ
#-
# フロアの選択があった場合
if [ "${Floor}" != "_" -a "${Floor}" != "@" ] ; then
  awk '$3=="'${Floor}'"{print $0}'
else
  cat -
fi |
#-
# ユニットの選択があった場合
if [ "${Unit}" != "_" -a "${Unit}" != "@" ] ; then
  awk '$4=="'${Unit}'"{print $0}'
else
  cat -
fi |
self 5 6 |
LANG=C sort -k2,2 |
join1 key=2 ${pompa_dir}/RIYOUSHA/RIYOUSHA_MASTER -        |
LANG=C sort       |
uniq              > $tmp-kyoshitsu_kari
# 1:居室Ｎｏ 2:入居者Ｎｏ 3:入居者名

# 2人以上の場合のみ全てという選択をつける
if [ "$(gyo $tmp-kyoshitsu_kari)" -gt "1"  ]; then
  cat $tmp-kyoshitsu_kari  |
  LANG=C sort              |
  awk 'BEGIN{print "@ 全て"}{print $1,$1}' |
  uniq                     |
  awk '{if($1=="'${Kyoshitsu}'"){print $1,$2,"selected"}
       else{print $1,$2,"@"}
          }'               > $tmp-kyoshitsu
  cat $tmp-kyoshitsu_kari  |
  # 居室の選択があった場合
  if [ "${Kyoshitsu}" != "_" -a "${Kyoshitsu}" != "@" ] ; then
    awk '$1=="'${Kyoshitsu}'"{print $0}'
  else
    cat -
  fi > $tmp-nyuukyosha_kari

  if [ "$(gyo $tmp-nyuukyosha_kari)" -gt "1"  ]; then
    cat $tmp-nyuukyosha_kari  |
    awk 'BEGIN{print "@ 全て"}{print $2,$3}' |
    uniq                     |
    awk '{if($1=="'${Nyuukyosha}'"){print $1,$2,"selected"}
       else{print $1,$2,"@"}
          }'                > $tmp-nyuukyosha
  # 1:居室Ｎｏ 2:居室Ｎｏ
  else
    cat $tmp-nyuukyosha_kari  |
    self 2 3                 > $tmp-nyuukyosha
  fi
else
  cat $tmp-kyoshitsu_kari |
  awk '{print $1,$1}'     |
  uniq                    > $tmp-kyoshitsu
  cat $tmp-kyoshitsu_kari |
  awk '{print $2,$3}' > $tmp-nyuukyosha
fi

#------------------------------------------------------------
#----------------------------------------------------------
# プルダウンの用意

# 種別
#echo "_" "1" "2" "3" |
#tarr                 |
#awk '{if($1=="1"){print $1,"入院"}
#     else if($1=="2"){print $1,"外泊"}
#     else if($1=="3"){print $1,"セカンド"}
#     else if($1=="_"){print $1,"全て"}
#      }'             |
cat ${tbl_dir}/CONFIG/NYUUINGAIHAKU_SHUBETSU |
awk 'BEGIN{print "_","全て"}{print $0}'      |
awk '{if($1=="'${Shubetsu}'"){print $0,"selected"}
     else{print $0,"@"}
      }'             > $tmp-shubetsu

# 欠食登録
echo "_" "0" "1"     |
tarr                 |
awk '{if($1=="_"){print $1,"全て"}
     else if($1=="1"){print $1,"登録済"}
     else if($1=="0"){print $1,"未登録"}
      }'             |
awk '{if($1=="'${Kesshoku}'"){print $0,"selected"}
     else{print $0,"@"}
      }'             > $tmp-kesshoku

# 表示順
echo "1" "2" "3"     |
tarr                 |
awk '{if($1=="1"){print $1,"居室番号"}
     else if($1=="2"){print $1,"入居者名"}
     else if($1=="3"){print $1,"期間(自)"}
      }'             |
awk '{if($1=="'${Hyouji}'"){print $0,"selected"}
     else{print $0,"@"}
      }'             > $tmp-hyouji

echo "1" "2"         |
tarr                 |
awk '{if($1=="1"){print $1,"昇順"}
     else if($1=="2"){print $1,"降順"}
      }'             |
awk '{if($1=="'${Kesshoku}'"){print $0,"selected"}
     else{print $0,"@"}
      }'             > $tmp-shoujyun

if [ ! -z "${NYUUINGAIHAKUSHOUSAI}" -a "${NYUUINGAIHAKUSHOUSAI}" = "NYUUINGAIHAKUSHOUSAI" ] ; then
cat <<- FIN > $tmp-html2
          <script type="text/javascript" language="javascript">
           shousai_pop = window.open("","shousai_pop");
           shousai_pop.close();
          </script>
FIN

fi

#共通ヘッダー-------------------------------------------------------

# ログインUSER名と施設の取得
cat /home/hands/E-LIFE/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
tee ${tmp}-jugyoin        |
# 1:USER_ID 2:ユーザー名
awk '$1=="'${userid}'"'   |
# 1:USER_ID 2:ユーザー名
self 2                                             > ${tmp}-usermei
#-----------------------------------------------------------

self 1 2 /home/hands/E-LIFE/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 /home/hands/E-LIFE/TBL/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst

cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst


# 施設名はログインユーザーの権限のある施設を取得
cat /home/hands/E-LIFE//SYSTEM_SETTEI/POMPA/KENGEN_KANRI/USER_KENGEN/${userid}.USER_KENGEN |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
 # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou
#-----------------------------------------

#-------------------------------------------------------------
# 嵌め込みデータの作成
cat << FIN | sed 's/ _$/ @/g' > $tmp-calsed
###USERNAME### ${USERNAME}
###SHISETSUNAME### ${SHISETSUNAME}
###DROPDOWN_ACTIVE1### active
###LI_UNEI6### active
###HYOZI_GYO### ${hyouji_gyo}
###SKU_COUNT### ${saidai_gyo}
###NyuuingaihakuKikanFrom### ${NyuuingaihakuKikanFrom}
###NyuuingaihakuKikanTo### ${NyuuingaihakuKikanTo}
###USERID### ${userid}
###SHISETSUID### ${shisetsu}
###PASSWORD### ${password}
###FILE_NAME### ${FILE_NAME}
###SELECT_SHISETSU### $select_shisetsu
FIN

if [ "${OneHyouji}" = "1" ] ; then
  echo "###ONECHECKED###" "checked" >> $tmp-calsed
else
  echo "###ONECHECKED###" "@" >> $tmp-calsed
fi

#-----------------------------------------------------------
# 登録・印刷ボタンの表示
# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME
# 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
awk '$7=="NYUUINGAIHAKU_ICHIRAN.CGI"{print $2,$9}' |
LANG=C sort > $tmp-dispkengen_all
# 1:施設ID 2:STATUS

cat $tmp-dispkengen_all |
if [ -s $tmp-dispkengen_all -a $(self 1 $tmp-dispkengen_all |head -1) = "0000" ] ; then
  awk '{print $2}' |
  head -1
else
  awk '$1=="'${shisetsu}'"{print $0}' |
  LANG=C sort |
  getlast 1 1 |
  self 2
fi > $tmp-dispkengen


# 権限がない人は新規登録や出力が出来ない
if [ $(cat $tmp-dispkengen) = "3" ] ;then
  echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed
  echo "###TOUROKUDISP### @" >> $tmp-calsed
  echo "###PRINTDISP### @"   >> $tmp-calsed
elif [ $(cat $tmp-dispkengen) = "2" ] ;then
  echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed
  echo "###TOUROKUDISP### @" >> $tmp-calsed
  echo "###PRINTDISP### none"   >> $tmp-calsed
else
  echo "###SHINKITOUROKUDISP### none" >> $tmp-calsed
  echo "###TOUROKUDISP### none" >> $tmp-calsed
  echo "###PRINTDISP### none"   >> $tmp-calsed
fi

#----------------------------------


cat ${tmp}-calsed ${checkfile} > ${tmp}-calsed_result
#cp $tmp-* /home/hands/work/okuda

# htmlの作成
cat ${html_dir}/NYUUINGAIHAKU_ICHIRAN1.html |
cat -\
    ${home_dir}/KYOUTSU/HTML/MENUBAR.html\
    ${html_dir}/NYUUINGAIHAKU_ICHIRAN2.html |
#データの嵌め込み
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -lshisetsu_select - $tmp-shisetsu_name |
mojihame -ltateya_select - $tmp-tateya_name     |
mojihame -lfloor_select - $tmp-floor            |
mojihame -lunit_select - $tmp-unit_name         |
mojihame -lkyoshitsu_select - $tmp-kyoshitsu    |
mojihame -lnyuukyosha_select - $tmp-nyuukyosha  |
mojihame -lshubetsu_select - $tmp-shubetsu      |
mojihame -lkesshoku_select - $tmp-kesshoku      |
mojihame -lhyouji_select - $tmp-hyouji          |
mojihame -lshoujyun_select - $tmp-shoujyun      |
mojihame -llist_rusult - $tmp-listdata     |

calsed -f $tmp-calsed_result - |
#tee /home/hands/work/okuda/Result |
sed 's/###SPACE###/ /g' |
sed 's/###KAIGYO###//g' |
sed 's/\\n//g' |
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |
cat -

# 終了
rm -f $tmp-*
exit 0

