#!/bin/bash
#
# SCHEDULE_ICHIRAN.DISPLAY
# スケジュール一覧　表示用CGI
#
# Written by K.Aoyama :20131228

#--------------------------------------------------------------
# ログ
source /home/hands/E-LIFE/UNEI/CGI/UNEI.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null
mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).$HOSTNAME.$(date +%Y%m%d) ; set -xv
#--------------------------------------------------------------

#--------------------------------------------------------------
rm -f $tmp-*
#--------------------------------------------------------------

#--------------------------------------------------------------
function error_exit {
  rm -f $tmp-*
  exit 0
}
#--------------------------------------------------------------

#--------------------------------------------------------------

# 変数の定義
namedata=$1

# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------------

# テスト

#--------------------------------------------------------------
# 入力データのチェック
# 施設
[ -z "${shisetsu}" -o "${shisetsu}" = "_" ] && error_exit "施設が不明です"

[ -z "${displayShisetsu}" -o "${displayShisetsu}" = "_" ] && displayShisetsu=$shisetsu

echo ${displayShisetsu} > $tmp-displayShisetsu

#--------------------------------------------------------------
# ヘッダー部分生成
#--------------------------------------------------------------
cat <<- FIN > $tmp-header
FIN

# ユーザマスタ
self 1 2 ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER  > $tmp-user_mst

#--------------------------------------------------------------
# スケジュールファイルの取得
cat ${apdata_dir}/SCHEDULE/SCHEDULE_SHOUSAI |
awk '$16!="9"'                            |
delf NF-3/NF                              |
# 1:施設      2:スケジュールID 3:スケジュールタイプ 4:スケジュール名 5:開催日
# 6:開始時刻  7:終了時刻       8:予約状況           9:開催場所       10:費用
# 11:担当者1  12:担当者2       13:追記              14:建屋
#--------------------------------------------------------------
# 検索
# --------------------------
# 施設
# --------------------------
join0 key=1 $tmp-displayShisetsu     |
#
# 建屋
# --------------------------
if [ -z "${EventTateya}" -o "${EventTateya}" = "_" ] ; then
   cat -
else
   awk '$14=="'${EventTateya}'"'
fi  |
# --------------------------
# スケジュールタイプ
# --------------------------
if [ -z "${EventType}" -o "${EventType}" = "_" -o "${EventType}" = "0" ] ; then
   cat -
else
   awk '$3=="'${EventType}'"'
fi  |
# --------------------------
# スケジュール名
# --------------------------
if [ -z "${EventName}" -o "${EventName}" = "_" ] ; then
   cat -
else
   awk '$4~/'${EventName}'/'
fi  |
# --------------------------
# 開催開始日
# --------------------------
if [ -z "${EventStartDate}" -o "${EventStartDate}" = "_" ] ; then
   cat -
else
   awk '$5>="'${EventStartDate}'"'
fi  |
# --------------------------
# 開催終了日
# --------------------------
if [ -z "${EventEndDate}" -o "${EventEndDate}" = "_" ] ; then
   cat -
else
   awk '$5<="'${EventEndDate}'"'
fi  |
LANG=C sort -k1,2                         > $tmp-all_event

# 利用者マスタ
self 1 2 $data_dir/UNEI/RIYOUSHA/RIYOUSHA_MASTER |
LANG=C sort -k1,2                                > $tmp-riyousha_mst

# スケジュールタイプマスタ
self 1 2 $home_dir/TBL/SCHEDULE_MASTER/SCEDULE_TYPE_MASTER |
LANG=C sort -k1,2                                > $tmp-schedule_type_mst

# 建屋
echo "1" "シニア" > $tmp-tateya_mst
echo "2" "ケア" >> $tmp-tateya_mst

: > $tmp-sanka_riyoushamei
[ -z "${Riyoushaid}" -o "${Riyoushaid}" = "_" ] || {
  awk '$1=="'${Riyoushaid}'"{print $2}' $tmp-riyousha_mst |
  sed 's/###SPACE###/ /g' > $tmp-sanka_riyoushamei
}

: > $tmp-schedule_typemei
[ -z "${EventType}" -o "${EventType}" = "_" ] || {
  awk '$1=="'${EventType}'"{print $2}' $tmp-schedule_type_mst > $tmp-schedule_typemei
}

[ "${EventType}" = "0" ] && echo "全て" > $tmp-schedule_typemei

: > $tmp-tateyamei
[ -z "$EventTateya" -o "$EventTateya" = "_" ] || {
  awk '$1=="'$EventTateya'"{print $2}' $tmp-tateya_mst > $tmp-tateyamei
}

echo "${EventName}" | sed 's/###SPACE###/ /g' > $tmp-eventmei

echo "${EventStartDate}" > $tmp-eventstartdate

echo "${EventEndDate}" > $tmp-eventenddate

# 参加あり
cat $tmp-all_event                        |
join2 +_ key=1@2 - <(cat ${apdata_dir}/SCHEDULE/SCHEDULE_SANKASHA) |
delf NF-2/NF                              |
# 1:施設            2:スケジュールID 3:スケジュールタイプ 4:スケジュール名 5:開催日
# 6:開始時刻        7:終了時刻       8:予約状況           9:開催場所       10:費用
# 11:担当者1        12:担当者2       13:追記              14:建屋          15:利用者ID
# 16:利用者チェック 17:備考          18:費用
# --------------------------
# 参加者名
# --------------------------
if [ -z "${Riyoushaid}" -o "${Riyoushaid}" = "_" ] ; then
   cat -
else
   awk '$15=="'${Riyoushaid}'"'
fi  |
LANG=C sort -k5,5 -k6,6 |
# 1:スケジュールID 2:スケジュール名 3:開催日 4:開始時刻 5:終了時刻
# 6:開催場所       7:担当者1 8:利用チェック
self 2 4 5 6 7 9 11 16       |
# 担当者名を取得
LANG=C sort -k7,7       |
join2 +_ key=7 $tmp-user_mst  |
delf 7                  |
# 1:スケジュールID 2:スケジュール名 3:開催日       4:開始時刻 5:終了時刻
# 6:開催場所       7:担当者        8:利用チェック 9:参加人数
LANG=C sort -k1,8       |
count 1 8               |
# 利用チェックが入っていないのは
awk '{if($8=="_"){$9="0"};print $0}'  |
LANG=C sort -k1,7 -k9,9                     |
getlast 1 7             |
delf 8                  > $tmp-schedule_list_sanka
[ $(plus ${PIPESTATUS[@]}) -ne 0 ] && error_exit "スケジュール一覧取得エラー"

cp $tmp-schedule_list_sanka $work_dir/schedule_list_sanka

# 全イベント
cat $tmp-all_event      |
awk '{print $0,"_","_","_","_"}'    |
LANG=C sort -k5,5 -k6,6 |
# 1:スケジュールID 2:スケジュール名 3:開催日 4:開始時刻 5:終了時刻
# 6:開催場所       7:担当者1 8:利用チェック
self 2 4 5 6 7 9 11 16       |
# 担当者名を取得
LANG=C sort -k7,7       |
join2 +_ key=7 $tmp-user_mst  |
delf 7                  |
# 1:スケジュールID 2:スケジュール名 3:開催日       4:開始時刻 5:終了時刻
# 6:開催場所       7:担当者        8:利用チェック
awk '{print $0}'  |
LANG=C sort -k1,7                     |
getlast 1 7             |
delf 8                  > $tmp-schedule_list_all_event

cp $tmp-schedule_list_all_event $work_dir/schedule_list_all_event

# 参加利用者による制限
if [ -z "${Riyoushaid}" -o "${Riyoushaid}" = "_" ] ; then
  join2 +0 key=1@7 $tmp-schedule_list_sanka $tmp-schedule_list_all_event
else
  join1 key=1/7 $tmp-schedule_list_sanka $tmp-schedule_list_all_event
fi |
LANG=C sort -k3,3 -k4,4 |
awk '{print $2,$3,$4"～"$5,$6,$8,$7}'  > $tmp-schedule_list

# Excel出力
download_dir=$home_dir/UNEI/DOWNLOAD
# 以前に作成したExcelは削除
rm -f ${download_dir}/${userid}_schedule_*_download.xls

TEMPLA=${home_dir}/UNEI/TEMPLATE/SCHEDULE_ICHIRAN_KENSAKU_TEMPLATE.xls
Ehexcel < ${TEMPLA} 1 b4 ${tmp}-tateyamei               \
                    1 b5 $tmp-schedule_typemei          \
                    1 b6 $tmp-eventmei                  \
                    1 b7 $tmp-eventstartdate            \
                    1 d7 $tmp-eventenddate              \
                    1 b8 ${tmp}-sanka_riyoushamei       \
                    1 a12 ${tmp}-schedule_list               > ${download_dir}/${userid}_schedule_$$_download.xls
#echo -e 'Content-Type: text/html; charset=UTF-8;\n\n'
cat << EOF > ${tmp}-html.html
<HTML>
  <HEAD>
    <SCRIPT type="text/javascript" language="Javascript">
      //<![CDATA[
      window.onload=init
      function init(){
        $ON_LOAD
          window.open("/E-LIFE/UNEI/DOWNLOAD/${userid}_schedule_$$_download.xls","_self");
      }
      //]]>
    </SCRIPT>
  </HEAD>
</HTML>
EOF

# ファイル名をはく
cat ${tmp}-html.html

## 終了
rm -f $tmp-*
exit 0
