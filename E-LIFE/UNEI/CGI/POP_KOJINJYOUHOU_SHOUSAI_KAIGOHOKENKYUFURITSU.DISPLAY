#!/bin/bash
#
# POP_KOJINJYOUHOU_SHOUSAI_KAIGOHOKENKYUFURITSU.DISPLAY
# 介護保険給付率履歴POPUP
#
# Written by K.Aoyama (Tokyu-hands.co.jp) :2015/07/24

#--------------------------------------------------------------
# ログ
exec 2> /home/hands/E-LIFE/UNEI/APLOG/$(date "+%Y%m%d")/LOG.$(basename ${0}).${HOSTNAME}; set -xv

source /home/hands/.bashrc &> /dev/null
source /home/hands/E-LIFE/UNEI/CGI/UNEI.INI &> /dev/null
#--------------------------------------------------------------
#--------------------------------------------------------------
# 変数の定義
tmp=/var/tmp/${$}

namedata=$1
result_data=$2
today="$(date +%Y%m%d)"

#--------------------------------------------------------------
rm -f $tmp-*
#--------------------------------------------------------------

#--------------------------------------------------------------
function error_exit {
  message="$1"
  echo "message ${message}"
  echo "result ng"
  rm -f $tmp-*
  exit 1
}
function error_unlock {
  message="$1"
  cat $tmp-target-table |
  while read table base ;do
    rm -f $lock_dir/$base.lock
  : ;done
  error_exit ${message}
}
#--------------------------------------------------------------

# ディレクトリ設定
app_dir="${home_dir}/UNEI"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
pompa_dir="${app_dir}/POMPA"

# 渡ってきたデータを取得
#if [ ${CONTENT_LENGTH:-0} -gt 0 ]; then
#  dd bs=${CONTENT_LENGTH} |
#  cgi-name -d_ -i_
#else
#  :
#fi > $tmp-name

# 変数の定義
namedata="$1"
data="$2"


# 必要な値の取得
name-source $namedata > $tmp-source
source $tmp-source

MODE=$(nameread "MODE" ${namedata})
[ -z "${MODE}" ] && MODE="init"
#--------------------------------------------------------------
#--------------------------------------------------------------

USERID="$(nameread  "USERID" $namedata)"
SHISETSUID="$(nameread  "SHISETSUID" $namedata)"
RIYOUSHAID="$(nameread  "RIYOUSHAID" $namedata)"
RIYOUSHANAME="$(awk '$1=="'${RIYOUSHAID}'"{print $2}' ${pompa_dir}/RIYOUSHA/RIYOUSHA_MASTER)"
NYUUKYOSHISETSUID=$(nameread "NYUUKYOSHISETSUID" $namedata)
NYUUKYOTATEYAID=$(nameread         "NYUUKYOTATEYAID"      $namedata)
NYUUKYOFLOOR=$(nameread         "NYUUKYOFLOOR"      $namedata)
NYUUKYOUNITID=$(nameread         "NYUUKYOUNITID"      $namedata)
NYUUKYOKYOSHITSU=$(nameread        "NYUUKYOKYOSHITSU"      $namedata)
ROGINSHISETSU=$(nameread "shisetsu" $namedata)
ROGINSHISETSUNAME="$(awk '$1=="'${ROGINSHISETSU}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON | head -1)"
[ -z "${ROGINSHISETSUNAME}" -o "${ROGINSHISETSUNAME}" = "_" ] && ROGINSHISETSUNAME="$(awk '$1=="'${ROGINSHISETSU}'"{print $2}' ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER | head -1)"

# 介護保険情報より給付割合を取得
todate="$(date +%Y%m%d)"
awk '$1=="'$RIYOUSHAID'"&&$(NF-2)!="9"&&$23<="'$todate'"&&"'$todate'"<=$28{print $32}' ${pompa_dir}/RIYOUSHA/RIYOUSHA_KAIGOHOKEN |
tail -1 > $tmp-kyufuwariai

# 介護保険情報なども無い場合はとりあえず、１割負担
[ $(gyo $tmp-kyufuwariai) -eq 0 ] && echo "0.1" > $tmp-kyufuwariai



if [ "$MODE" = "init" ]; then
  KyufuritsuID=""
  KyufuWariaiStart=""
  KyufuWariaiEnd=""
  KyufuWariai=$(cat $tmp-kyufuwariai)
else
  KyufuritsuID="$(nameread  "KyufuritsuID" $namedata)"
  KyufuWariaiStart="$(nameread  "KyufuWariaiStart" $namedata)"
  KyufuWariaiEnd="$(nameread  "KyufuWariaiEnd" $namedata)"
  KyufuWariai="$(nameread  "KyufuWariai" $namedata)"
fi
# calsedファイル
cat << FIN > $tmp-calsed_data
###USERID###       ${USERID}
###SHISETSUID###   ${SHISETSUID}
###RIYOUSHAID###   ${RIYOUSHAID}
###RIYOUSHANAME###   ${RIYOUSHANAME}
###NYUUKYOSHISETSUID###  ${NYUUKYOSHISETSUID}
###NYUUKYOTATEYAID###  ${NYUUKYOTATEYAID}
###NYUUKYOFLOOR###  ${NYUUKYOFLOOR}
###NYUUKYOUNITID###  ${NYUUKYOUNITID}
###NYUUKYOKYOSHITSU###  ${NYUUKYOKYOSHITSU}
###RIYOUSHAKYOTAKUID### ${RIYOUSHAKYOTAKUID}
###TOUROKUDISP### ${TOUROKUDISP}
###PRINTDISP###  ${PRINTDISP}
###ROGINSHISETSU### ${ROGINSHISETSU}
###ROGINSHISETSUNAME### ${ROGINSHISETSUNAME}
FIN

# formhame 前の実体参照変換
calsed "&" "&amp;" ${namedata} |
calsed "<" "&lt;"              |
calsed ">" "&gt;"              |
calsed "\"" "&quot;"           > $tmp-namedata

# serchでも結果なしのものはinitへ
if [ "${MODE}" = "serach" ] ;then
  result="$(awk '$1=="result"{print $2}' ${data})"

  if [ "${result}" = "ng" ] ; then
    MODE="init"
  fi

fi


### モードによる表示の分岐
case "${MODE}" in

  # 初期表示
  init)

  ;;

 # 検索結果
 search )
    awk '$1=="kyufuritsu"{print $0}' ${data}   |
    delf 1              > $tmp-search_kyufuritsu_data
# 1:利用者(入居者)ID 2:利用者居宅支援事業所ID 3:事業所Id 4:担当ケアマネID(自事業所) 5:担当ケアマネNAME(他事業所)
# 6:期間From         7:期間To
#  JigyoushoShubetsu="$(awk '{print $3}' $tmp-search_kyotaku_data)"
  if [ $(gyo $tmp-search_kyufuritsu_data) -eq 0 ] ; then
    KyufuritsuID=""
    KyufuWariaiStart=""
    KyufuWariaiEnd=""
    KyufuWariai=$(cat $tmp-kyufuwariai)
  else
    KyufuritsuID="$(self 2 $tmp-search_kyufuritsu_data)"
    KyufuWariaiStart="$(self 3 $tmp-search_kyufuritsu_data | awk '{print substr($1,1,4)"-"substr($1,5,2)"-"substr($1,7,2)}')"
    KyufuWariaiEnd="$(self 4 $tmp-search_kyufuritsu_data | awk '{print substr($1,1,4)"-"substr($1,5,2)"-"substr($1,7,2)}')"
    KyufuWariai="$(self 5 $tmp-search_kyufuritsu_data)"
  fi

 ;;
  # 登録の場合
  touroku | sakujyo)

  result=$(awk '$1=="result"{print $2}' ${data})

    if [ "${result}" = "ng" ] ; then
      message=$(awk '$1=="message"{print $2}' ${data})
    else
      message="登録完了しました。"
    fi

  ;;
esac

#--------------------------------------------------------------
# 共通処理
#--------------------------------------------------------------
#--------------------------------------------------------------
# プルダウン系
#--------------------------------------------------------------
cat ${tbl_dir}/CONFIG/KAIGO_KYUFU_WARIAI |
self 1 2 > $tmp-kyufu_wariai_master

awk '{if($1=="'${KyufuWariai}'"){$3="selected"}else{$3="@"};print $0}' $tmp-kyufu_wariai_master > $tmp-kyufuwariai_data

#-------------------------------------------------------------
# ボタン表示系
#-------------------------------------------------------------

if [ "${MODE}" = "init" ] ; then
  echo "###SAKUJYODISP###" "none"   >> $tmp-calsed_data
else
  echo "###SAKUJYODISP###" "@"   >> $tmp-calsed_data
fi


#--------------------------------------------------------------
# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
	cat <<- FIN > $tmp-html2
	  <script type="text/javascript" language="javascript">
	    alert('${message}');
	  </script>
	FIN
fi

if [ "${MODE}" != "init" -a "${MODE}" != "search" -a "${result}" = "ok" ] ; then
cat <<- FIN > $tmp-html2
    <script type="text/javascript" language="javascript">
        var obj =document.forms["PopKanryou"];
        shousai_kihon = window.open("KOJINJYOUHOU_SHOUSAI_KAIGOHOKEN.CGI","shousai_kihon");
//      shousai_kihon.close();
        obj.target="shousai_kihon";
        obj.method="post";
        obj.action="KOJINJYOUHOU_SHOUSAI_KAIGOHOKEN.CGI";
        obj.submit();
        resizeTo(300,130);
//      window.close();
    </script>
	FIN
fi

#     window.opener.location.href = "KOJINJYOUHOU_SHOUSAI_KEIYAKU.CGI";
#     window.opener.document.tab.submit();
#--------------------------------------------------------------
#--------------------------------------------------------------
#--------------------------------------------------------------

# calsed用データ
echo "###KYUFURITSUID###" "${KyufuritsuID}"      >> $tmp-calsed_data
echo "###KYUFUWARIAISTART###" "${KyufuWariaiStart}"      >> $tmp-calsed_data
echo "###KYUFUWARIAIEND###" "${KyufuWariaiEnd}"  >> $tmp-calsed_data

cat $tmp-calsed_data  |
sed 's/_/@/g' -        > $tmp-calsed_data_result
#--------------------------------------------------------------
# データのはめ込み

# 登録時登録okだったら新規htmlではなく、通常の詳細htmlを表示
#if [ "${MODE}" = "touroku" -a "${result}" = "touroku_ok" ] ; then
#else
#fi |
if [ "${MODE}" != "init" -a "${MODE}" != "search" -a "${result}" = "ok" ] ; then
  cat ${html_dir}/POP_KOJINJYOUHOU_TOUROKU_KANRYOU.html
else
  cat ${html_dir}/POP_KOJINJYOUHOU_SHOUSAI_KAIGOHOKENKYUFURITSU.html      |
  mojihame -l###KYUFUWARIAI### - $tmp-kyufuwariai_data                
fi |

calsed -f $tmp-calsed_data_result -                    |
sed 's/###SPACE###/ /g'                                |
sed 's/\\n/\n/g'                                       |
sed 's/###KAIGYO###/\n/g'                             |
#--------------------------------------------------------------

#--------------------------------------------------------------
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |

cat -
#--------------------------------------------------------------

## 終了
rm -f $tmp-*
exit 0
