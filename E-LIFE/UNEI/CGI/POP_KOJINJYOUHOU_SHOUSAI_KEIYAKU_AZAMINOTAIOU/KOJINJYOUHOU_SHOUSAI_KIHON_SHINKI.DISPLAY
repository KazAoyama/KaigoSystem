#!/bin/bash
#
#
# Written by T.Osako (Tokyu-hands.co.jp) :20100615

#--------------------------------------------------------------
# ログ
exec 2> /home/hands/E-LIFE/UNEI/APLOG/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv

source /home/hands/.bashrc &> /dev/null
source /home/hands/E-LIFE/UNEI/CGI/UNEI.INI &> /dev/null
#--------------------------------------------------------------
#--------------------------------------------------------------
# 変数の定義
tmp=/var/tmp/${$}

namedata=$1
result_data=$2
today="$(date +%Y%m%d)"

#--------------------------------------------------------------
rm -f $tmp-*
#--------------------------------------------------------------
# 必要な値の取得
eval $(name-source ${namedata})
MODE=$(nameread "MODE" ${namedata})
[ -z "${MODE}" ] && MODE="init"
#--------------------------------------------------------------
#--------------------------------------------------------------
USERID="$(nameread  "USERID"   $namedata)"
[ -z "${USERID}" -o "${USERID}" = "_" ] && USERID="$(nameread  "userid"   $namedata)"
USERNAME=$(awk '$1=="'${USERID}'"{print $2}' ${tbl_dir}/JYUUGYOUIN_MASTER/USER_MASTER)
SHISESTUID="$(nameread  "SHISETSUID"   $namedata)"
[ -z "${SHISESTUID}" -o "${SHISESTUID}" = "_" ] && SHISESTUID="$(nameread  "shisetsu"   $namedata)"
SHISETSUNAME=$(awk '$1=="'${SHISETSUID}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON | head -1)
[ -z "${SHISETSUNAME}" -o "${SHISETSUNAME}" = "_" ] && SHISETSUNAME=$(awk '$1=="'${SHISETSUID}'"{print $2}' ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER | head -1)
  ROGINSHISETSU=$(nameread "shisetsu" $namedata)
  ROGINSHISETSUNAME="$(awk '$1=="'${ROGINSHISETSU}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON | head -1)"
  [ -z "${ROGINSHISETSUNAME}" -o "${ROGINSHISETSUNAME}" = "_" ] && ROGINSHISETSUNAME="$(awk '$1=="'${ROGINSHISETSU}'"{print $2}' ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER | head -1)"
if [ "$MODE" = "init" ]; then
  Shimei=""
  Shimeikana=""
  SeinengappiYear=""
  SeinengappiMonth=""
  SeinengappiDay=""
  Nenrei=""
  KeiyakuNenrei=""
  Keiyakubi=""
  KeiyakukikanFrom=""
  KeiyakukikanTo=""
  KeiyakuHikiwatashibi=""
  KeiyakuNyuukyobi=""
  KeiyakuSeikyuuKikanFrom=""
  NyuukyoMaeYuubinBangou=""
  NyuukyoMaeJyuusho=""
#  YuubinBangou=""
#  GenJyuusho=""
  Tel=""
  Shumi=""
  Bikou=""
  GaijiKyuuji=""
  Email=""
  CHINRYOU=""
  KANRIHI=""
  RIYOUSHAID=""
  ShimeiAlert=""
  ShimeikanaAlert=""
  SeinengappiAlert=""

cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON |
#head -1                                            >  $tmp-shozoku_shisetsu
awk '$1=="'${shisetsu}'"'                 >  $tmp-shozoku_shisetsu

YuubinBangou="$(cat $tmp-shozoku_shisetsu | self 6 |head -1)"
GenJyuusho="$(cat $tmp-shozoku_shisetsu | self 7 |head -1)"

else
  Shimei=$(nameread                "Shimei"   $namedata | sed 's/_/　/g' | sed 's/^　//g')
  Shimeikana=$(nameread            "Shimeikana"      $namedata | sed 's/_/　/g' | sed 's/^　//g')
  Seibetsu=$(nameread              "Seibetsu"      $namedata)
  SeinengappiGengou=$(nameread     "SeinengappiGengou"      $namedata)
  SeinengappiYear=$(nameread       "SeinengappiYear"      $namedata | sed 's/^0//g')
  SeinengappiMonth=$(nameread      "SeinengappiMonth"      $namedata| sed 's/^0//g')
  SeinengappiDay=$(nameread        "SeinengappiDay"      $namedata | sed 's/^0//g')
  Nenrei=$(nameread                "Nenrei"      $namedata)
  Kansenshou=$(nameread            "Kansenshou"      $namedata)
  Shisetsu=$(nameread              "Shisetsu"      $namedata)
  Tateya=$(nameread                "Tateya"      $namedata)
  Floor=$(nameread                "Floor"      $namedata)
  Unit=$(nameread                  "Unit"      $namedata)
  Kyoshitsu=$(nameread             "Kyoshitsu"      $namedata)
  KeiyakuNenrei=$(nameread         "KeiyakuNenrei"      $namedata)
  KeiyakuShurui=$(nameread         "KeiyakuShurui"      $namedata)
  Keiyakubi=$(nameread             "Keiyakubi"      $namedata)
  KeiyakukikanFrom=$(nameread      "KeiyakukikanFrom"      $namedata)
  KeiyakukikanTo=$(nameread      "KeiyakukikanTo"      $namedata)
  KeiyakuHikiwatashibi=$(nameread  "KeiyakuHikiwatashibi"      $namedata)
  NyuukyoMaeYuubinBangou=$(nameread      "NyuukyoMaeYuubinBangou"      $namedata)
  NyuukyoMaeJyuusho=$(nameread           "NyuukyoMaeJyuusho"      $namedata)
  YuubinBangou=$(nameread          "YuubinBangou"      $namedata)
  GenJyuusho=$(nameread            "GenJyuusho"      $namedata)
  Tel=$(nameread                   "Tel"      $namedata)
  Email=$(nameread                 "Email"      $namedata)
  Shumi=$(nameread                 "Shumi"      $namedata)
  Bikou=$(nameread                 "Bikou"      $namedata)
  GaijiKyuuji=$(nameread           "GaijiKyuuji"      $namedata)
  CHINRYOU=$(nameread              "CHINRYOU"      $namedata)
  KANRIHI=$(nameread               "KANRIHI"      $namedata)
  RIYOUSHAID=$(nameread  "RIYOUSHAID" $namedata)
  ShimeiAlert=$(nameread       "ShimeiAlert"      $namedata)
  ShimeikanaAlert=$(nameread       "ShimeikanaAlert"      $namedata)
  SeinengappiAlert=$(nameread       "SeinengappiAlert"      $namedata)
fi

# ユーザー名、施設名の取得
cat ${tbl_dir}/JYUUGYOUIN_MASTER/USER_MASTER  |
awk '$1=="'${userid}'"{print $2}'      > $tmp-username
cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON |
awk '$1=="'${shisetsu}'"{print $2}'  > $tmp-shisetsuname


# calsedファイル
cat << FIN > $tmp-calsed_data
###USERID###       ${USERID}
###USERNAME###     ${USERNAME}
###SHISETSUID###   ${SHISETSUID}
###SHISETSUNAME### ${SHISETSUNAME}
###userid###       ${userid}
###shisetsu###     ${shisetsu}
###ROGINSHISETSU### ${ROGINSHISETSU}
###ROGINSHISETSUNAME### ${ROGINSHISETSUNAME}
FIN

# formhame 前の実体参照変換
calsed "&" "&amp;" ${namedata} |
calsed "<" "&lt;"              |
calsed ">" "&gt;"              |
calsed "\"" "&quot;"           > $tmp-namedata


Shisetsu="${SHISETSUID}" 
JIGYOUSHOHANTEI=$(echo ${Shisetsu} | awk '{print substr($1,1,1)}')
#---------------------------------------------------------- 
# プルダウンの用意
#----------------------------------------------------------
#############################
# 性別・生年月日(元号)・感染症
##############################

# 性別
echo "1" "2" |
tarr                 |
awk '{if($1=="1"){print $1,"男"}
     else if($1=="2"){print $1,"女"}
      }'             |
awk '{if($1=="'${Seibetsu}'"){print $0,"selected"}
     else{print $0,"@"}
      }'             > $tmp-seibetsu

# 元号
cat ${tbl_dir}/ZEIRITSU_GENGOU_MASTER/GENGOU  |
# 1:ID 2:元号名 3:西暦年月From 4:西暦年月To
awk '$(NF-2)!="9"{print $1,$2}'                  |
awk '{if($1=="'${SeinengappiGengou}'"){print $0,"selected"}
     else{print $0,"@"}
      }'                      > $tmp-gengou

# 感染症
cat << FIN > $tmp-kansenshou_jyunbi
1 なし
2 ＨＣＶ
3 ＨＢＶ
4 梅毒
5 ＨＩＶ
FIN

cat $tmp-kansenshou_jyunbi |
awk '{if($1=="'${Kansenshou}'"){print $0,"selected"}
      else{print $0,"@"}
     }'                  > $tmp-kansenshou

################################
# 施設・事業所 
################################

# 居宅・訪問介護事業所の準備
#cat ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER |
# 1:グループ事業所ＩＤ 2:グループ事業所名 3:電話番号 4:住所   5:金融機関コード
# 6:金融機関支店コード 7:口座区分         8:口座番号 9:口座名
#awk '$(NF-2)!="9"{print $1,$2}'   > $tmp-jigyousho_name

# 施設が選択されていなかったら
#if [ "${MODE}" = "init" -o -z "${Shisetsu}" -o "${Shisetsu}" = "_" ] ; then
# cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON   |
# awk '$(NF-2)!="9"{print $1,$2}'                 |
# 事業所情報をくっつける
# cat - $tmp-jigyousho_name |
# awk 'BEGIN{print "@ 選択してください"}{print $0}'    > $tmp-shisetsu_name
# 1:施設ID 2:施設名
#
# # 建屋以下
# echo "@ @" > $tmp-tateya_name
# echo "@ @" > $tmp-floor
# echo "@ @" > $tmp-unit_name
# echo "@ @" > $tmp-kyoshitsu

# 施設が選択されていたら
#else
if [ "${JIGYOUSHOHANTEI}" = "1" ] ; then
  awk '$1=="'${Shisetsu}'"{print $1,$2}' ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER  |
  head -1   > $tmp-shisetsu_name

else
  echo "${Shisetsu}"  |
  join1 key=1 ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON - |
  self 1 2 > $tmp-shisetsu_name

  # 施設データと事業所データをくっつける
#  cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON $tmp-jigyousho_name  |  
#  awk '$(NF-2)!="9"{print $1,$2}'                 |
#  awk '{if($1=="'${Shisetsu}'"){print $0,"selected"}
#    else{print $0,"@"}}'   >$tmp-shisetsu_name

  cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR    |
# 1:施設ID 2:建屋ID 3:フロア
  awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"{print $2}'       |
  LANG=C sort  |
  uniq  |
  join1 key=1 ${tbl_dir}/SHISETSU_MASTER/TATEYA_NAME -    |
  self 1 3                                                | 
  awk '{if($1=="'${Tateya}'"){print $0,"selected"}   
       else {print $0,"@"}}'       > $tmp-tateya_name
# 1:建屋ID 2:建屋名 


  Tateya_selected="$(cat $tmp-tateya_name | awk '$3=="selected"{print $1}')"

  [ -z "${Tateya_selected}" -o "${Tateya_selected}" == "_" ] && Tateya="$(head -1 $tmp-tateya_name | self 1)"

#  # 建屋があったらそれは施設なのでフロア以下を探す
#  if [ -s $tmp-tateya_name ] ; then
#  # 建屋がなかったら建屋リストの一番上をセット
#  [ -z "${Tateya}" -o "${Tateya}" == "_" ] && Tateya="$(head -1 $tmp-tateya_name | self 1)"

#  # --------------------------
#  # 定員以下の居室情報の取得
#  # 退去日が入ってないあるいは退去日が入っていない施設内の居室情報を取得
#  awk '{if($1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$8=="_"&&$(NF-2)!="9"){print $0}
#      else if($1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$8!="_"&&$8>"'${today}'"&&$(NF-2)!="9"){print $0}
#     }' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS   |
## 1:施設ID   2:建屋ID 3:フロア 4:ユニットID 5:居室
## 6:入居者ID 7:入居日 8:退去日
#  count 1 5   |
#  LANG=C sort -k1,5 > $tmp-shisetsu_riyousha
## 1:施設ID   2:建屋ID 3:フロア 4:ユニットID 5:居室 6:人数
#
#  if [ -s $tmp-shisetsu_riyousha ] ; then
#    # 居室データ
#    cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM    |
## 1:施設ID       2:建屋ID 3:フロア 4:ユニットID 5:居室NO
## 6:居室定員人数
#    awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$(NF-1)!="9"{print $0}'   |
#    self 1/6          |
#    LANG=C sort -k1,5 |
#    # 現状の入居者数と定員を比較し、定員以下の部屋のみとす
#    join2 +"_" key=1/5 $tmp-shisetsu_riyousha - |
#    awk '{if($6<$7){print $0}
#      else if($6=="_"){print $0}
#     }'           > $tmp-taisyou_data
## 1:施設ID   2:建屋ID 3:フロア 4:ユニットID 5:居室 6:現人数
## 7:定員
#  else
## 居室データ
#    cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM    |
## 1:施設ID       2:建屋ID 3:フロア 4:ユニットID 5:居室NO
## 6:居室定員人数
#    awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$(NF-1)!="9"{print $0}'   |
#    self 1/6          |
#    LANG=C sort -k1,5 > $tmp-taisyou_data
#  fi
##---------------------
##--------------------
#
#  # 定員以下の居室 対象データあり
#  if [ -s $tmp-taisyou_data ] ; then
#    # フロア
#    cat $tmp-taisyou_data |
#    self 3                |
    cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM    |
## 1:施設ID       2:建屋ID 3:フロア 4:ユニットID 5:居室NO
## 6:居室定員人数
    awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$(NF-2)!="9"{print $3}'   |
    uniq |
    awk '{if($1=="'${Floor}'"){print $1,$1,"selected"}
       else {print $1,$1,"@"}}' > $tmp-floor

    Floor_selected="$(cat $tmp-floor | awk '$3=="selected"{print $1}')"

    [ -z "${Floor_selected}" -o "${Floor_selected}" == "_" ] && Floor="$(head -1 $tmp-floor | self 1)"

   # ユニット
   if [ "${Tateya}" = "02" ] ; then
      cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM    |
# 1:施設ID       2:建屋ID 3:フロア 4:ユニットID 5:居室NO
# 6:居室定員人数
      awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$3=="'${Floor}'"&&$(NF-2)!="9"{print $0}'   |
      tee $tmp-floor_shibori_zumi |
#      cat $tmp-taisyou_data |
#      awk '$3=="'${Floor}'"{print $4}' |
   self 4                |
      LANG=C sort |
      uniq |
      join1 key=1 ${tbl_dir}/SHISETSU_MASTER/UNIT_NAME -  |
      awk '{if($1=="'${Unit}'"){print $1,$2,"selected"}
       else {print $1,$2,"@"}}' > $tmp-unit_name
    else
      : > $tmp-unit_name
    fi

  Unit_selected="$(cat $tmp-unit_name | awk '$3=="selected"{print $1}')"

  # ユニット
    [ -z "${Unit_selected}" -o "${Unit_selected}" == "_" ] && Unit="$(head -1 $tmp-unit_name | self 1)"
    [ -z "${Unit}" ] && Unit="_"

  # 居室

  if [ "${Unit}" != "_" ] ; then
    cat $tmp-floor_shibori_zumi |
    awk '$4=="'${Unit}'"{print $5}'
  else
    cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM    |
# 1:施設ID       2:建屋ID 3:フロア 4:ユニットID 5:居室NO
# 6:居室定員人数
    awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$3=="'${Floor}'"&&$(NF-2)!="9"{print $0}'   |
    self 5
  fi |

  uniq |
  awk '{if($1=="'${Kyoshitsu}'"){print $1,$1,"selected"}
       else {print $1,$1,"@"}}' > $tmp-kyoshitsu

    Kyoshitsu_selected="$(cat $tmp-kyoshitsu | awk '$3=="selected"{print $1}')"

    [ -z "${Kyoshitsu_selected}" -o "${Kyoshitsu_selected}" == "_" ] && Kyoshitsu="$(head -1 $tmp-kyoshitsu | self 1)"

  # 対象データなし
#  else
#    echo "@ @ @" > $tmp-kyoshitsu
#    echo "@ @ @" > $tmp-unit_name
#    echo "@ @ @" > $tmp-floor
#  fi
fi
#fi
[ ! -s $tmp-tateya_name ] && echo "@ @ @" > $tmp-tateya_name
[ ! -s $tmp-kyoshitsu ] && echo "@ @ @" > $tmp-kyoshitsu
[ ! -s $tmp-unit_name ] && echo "@ @ @" > $tmp-unit_name
[ ! -s $tmp-floor ] && echo "@ @ @" > $tmp-floor


###########
# 契約種類
###########
cat ${tbl_dir}/KEIYAKU_MASTER/SHISETSU_KEIYAKU_MASTER |
# 1:施設/事業所名 2:契約ID 3:有効フラグ

# 施設番号が一致し、有効フラグが1:有効なもの
awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"&&$(NF-2)!="2"{print $2}'  |
LANG=C sort |
join1 key=1 ${tbl_dir}/KEIYAKU_MASTER/KEIYAKU_NAME - |
awk '{if($1=="'${KeiyakuShurui}'"){print $1,$2,"selected"}
      else{print $1,$2,"@"}}'        > $tmp-keiyaku


# 契d約金・利用料・特販
cat ${tbl_dir}/RIYOURYOU_MASTER/KEIYAKUKIN_MASTER        |
awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"&&$(NF-2)!="2"{print $0}' |
LANG=C sort -k4,4n  |
self 2 3            |
#awk '$1=="'${Shisetsu}'"{print $2,$3}' |
awk 'BEGIN{print "@ @"}{print $0}' > $tmp-keiyakukin
cat ${tbl_dir}/RIYOURYOU_MASTER/RIYOURYOU_MASTER         |
awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"{print $2,$3}' |
awk 'BEGIN{print "@ @"}{print $1,$2}' > $tmp-riyouryou

cat ${tbl_dir}/RIYOURYOU_MASTER/TOKUHAN_SHUBETSU           |
awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"&&$(NF-2)!="2"{print $2,$3,$4}' |
awk '$3=="4"||$3=="0"{print $1,$2}'         |
awk 'BEGIN{print "@ @"}{print $0}' > $tmp-tokuhan

cat ${tbl_dir}/RIYOURYOU_MASTER/TOKUHAN_SHUBETSU           |
awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"&&$(NF-2)!="2"{print $2,$3,$4}'       |
awk '$3=="1"||$3=="0"{print $1,$2}'         |
awk 'BEGIN{print "_ なし"}{print $0}' > $tmp-keiyakukin_tokuhan_data

cat ${tbl_dir}/RIYOURYOU_MASTER/TOKUHAN_SHUBETSU           |
awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"&&$(NF-2)!="2"{print $2,$3,$4}' |
awk '$3=="2"||$3=="0"{print $1,$2}'         |
awk 'BEGIN{print "_ なし"}{print $0}' > $tmp-riyouryou_tokuhan_data

cat ${tbl_dir}/RIYOURYOU_MASTER/RIYOURYOU_MASTER          |
awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"{print $2,$5}' |
awk 'BEGIN{print "@ @"}{print $0}'  |
awk '$1!="001"{print $0}'       > $tmp-riyouryou_master

# 賃料の取得
cat ${tbl_dir}/RIYOURYOU_MASTER/KYOSHITSU_CHINRYOU |
# 1:施設ID 2:建屋ID 3:居室ID 4:期間From 5:期間To 6:賃料

# 施設建屋居室で絞込み、期間Fromの日付が今日以前のもののみとする
awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$3=="'${Kyoshitsu}'"&&$4<="'${today}'"{print $5,$6}' |
# 期限TOが入っていないあるいは未来の日付であるものにする
awk '$1>="'${today}'"||$1=="_"{print $2}' > $tmp-chinryou

# 賃料
if [ ! -s $tmp-chinryou -o $(gyo $tmp-chinryou) != "1" ] ; then
 CHINRYOU="$(echo "@")"
else
 CHINRYOU="$(cat $tmp-chinryou)"
fi


# 管理費
cat ${tbl_dir}/RIYOURYOU_MASTER/KANRIHI_MASTER |
# 1:施設ID 2:建屋ID 3:居室ID 4:期間From 5:期間To 6:管理費
awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$3=="'${Kyoshitsu}'"&&$4<="'${today}'"{print $5,$6}' |
awk '$1>="'${today}'"||$1=="_"{print $2}' > $tmp-kanrihi

if [ ! -s $tmp-kanrihi -o $(gyo $tmp-kanrihi) != "1" ] ; then
# KANRIHI="$(echo "@")"
  KANRIHI="$(cat $tmp-riyouryou_master | awk '$1=="003"{print $2}')"
else
 KANRIHI="$(cat $tmp-kanrihi)"
fi

[ -z "${KANRIHI}" ] && KANRIHI="0"

# 事業所選択の表示

if [ "${JIGYOUSHOHANTEI}" = "1" ] ; then
  echo "###KEIYAKUDISP### none" >> $tmp-calsed_data
else
  echo "###KEIYAKUDISP### @" >> $tmp-calsed_data
fi
#-----------------------------------------------------------

### モードによる表示の分岐
case "${MODE}" in

  # 初期表示
#  init)

#  ;;

# # 検索結果
# to_search)
#   if [ "$(gyo ${result_data})" != 0 ] ; then
#     cat ${result_data}        |
#     # 1:ID         2:入力内容 3:入力者 4:入力者名 5:最終更新日時
#     # 6:最終更新者
#     LANG=C sort -k6,6nr       |
#     self 1 2 3 4 5            |
#     rank                      |
#     head -10                  > $tmp-listdata
#   else
#     : > $tmp-listdata  
#   fi
# ;;
  # 重複チェック、あるいは登録の場合
  check | touroku)

  result=$(awk '$1=="result"{print $2}' ${result_data})


    if [ "${result}" = "check_ng" ] ; then
     message=$(awk '$1=="message"{print $2}' ${result_data})

   # 一行目のみ排除してデータを整形
     awk '$1=="choufuku"{print $0}' ${result_data}   |
     delf 1 > $tmp-choufuku_data
# 1:利用者(入居者)ID 2:利用者(入居者)氏名 3:利用者(入居者)氏名カナ 4:性別           5:和暦：元号
# 6:和暦：誕生年     7:和暦：誕生月       8:和暦：誕生日           9:西暦：生年月日 10:感染症
# 11:入居前郵便番号  12:入居前住所        13:現郵便番号            14:現住所        15:携帯電話番号
# 16:E-MAILアドレス  17:趣味特技          18:備考

#     Shimei="$(awk '{print $2}' $tmp-choufuku_data)"
#     Shimeikana="$(awk '{print $3}' $tmp-choufuku_data)"
     nyuukyomae_yuubinbangou="$(awk '{print $11}' $tmp-choufuku_data)"
     nyuukyomae_jyuusho="$(awk '{print $12}' $tmp-choufuku_data)"
     yuubinbangou="$(awk '{print $13}' $tmp-choufuku_data)"
     gen_jyuusho="$(awk '{print $14}' $tmp-choufuku_data)"
     tel="$(awk '{print $15}' $tmp-choufuku_data)"
     shumi="$(awk '{print $17}' $tmp-choufuku_data)"
     bikou="$(awk '{print $18}' $tmp-choufuku_data)"
     email="$(awk '{print $16}' $tmp-choufuku_data)"
     riyoushaid="$(awk '{print $1}' $tmp-choufuku_data)"
     koushinbi="$(awk '{print $NF}' $tmp-choufuku_data | awk '{print substr($1,1,4)"/"substr($1,5,2)"/substr($1,7,2)}')"
      
     # 外字の取得
     cat ${tbl_dir}/RIYOUSHA/RIYOUSHA_MASTER  |
     awk '$1=="'${RIYOUSHAID}'"{print $4}'    > $tmp-gaiji_data
     gaiji_kyuuji="$(awk '{print $1}' $tmp-gaiji_data)"

    # calsed用データ
    echo "###RIYOUSHANAME###"            "${Shimei}"   >> $tmp-calsed_data
    echo "###Shimei###"                  "${Shimei}"   >> $tmp-calsed_data
    echo "###Shimeikana###"              "${Shimeikana}"   >> $tmp-calsed_data
    echo "###SeinengappiYear###"         "${SeinengappiYear}"   >> $tmp-calsed_data
    echo "###SeinengappiMonth###"        "${SeinengappiMonth}"   >> $tmp-calsed_data
    echo "###SeinengappiDay###"          "${SeinengappiDay}"   >> $tmp-calsed_data
    echo "###Nenrei###"                  "${Nenrei}"   >> $tmp-calsed_data
    echo "###KeiyakuNenrei###"           "${KeiyakuNenrei}"   >> $tmp-calsed_data
    echo "###Keiyakubi###"               "${Keiyakubi}"   >> $tmp-calsed_data
    echo "###KeiyakukikanFrom###"        "${KeiyakukikanFrom}"   >> $tmp-calsed_data
    echo "###KeiyakukikanTo###"          "${KeiyakukikanTo}"   >> $tmp-calsed_data
    echo "###KeiyakuHikiwatashibi###"    "${KeiyakuHikiwatashibi}"   >> $tmp-calsed_data
    echo "###KeiyakuNyuukyobi###"        "${KeiyakuNyuukyobi}"   >> $tmp-calsed_data
    echo "###KeiyakuSeikyuuKikanFrom###" "${KeiyakuSeikyuuKikanFrom}"   >> $tmp-calsed_data
    echo "###NyuukyoMaeYuubinBangou###"  "${nyuukyomae_yuubinbangou}"   >> $tmp-calsed_data
    echo "###NyuukyoMaeJyuusho###"       "${nyuukyomae_jyuusho}"   >> $tmp-calsed_data
    echo "###YuubinBangou###"            "${yuubinbangou}"   >> $tmp-calsed_data
    echo "###GenJyuusho###"              "${gen_jyuusho}"   >> $tmp-calsed_data
    echo "###Tel###"                     "${tel}"   >> $tmp-calsed_data
    echo "###Shumi###"                   "${shumi}"   >> $tmp-calsed_data
    echo "###Bikou###"                   "${bikou}"   >> $tmp-calsed_data
    echo "###GaijiKyuuji###"             "${gaiji_kyuuji}"   >> $tmp-calsed_data
    echo "###Email###"                   "${email}"       >> $tmp-calsed_data
    echo "###CHINRYOU###"                "${CHINRYOU}"    >> $tmp-calsed_data
    echo "###KANRIHI###"                 "${KANRIHI}"    >> $tmp-calsed_data
    echo "###RIYOUSHAID###"              "${riyoushaid}"  >> $tmp-calsed_data
    echo "###KOUSHINBI###"               "${koushinbi}"   >> $tmp-calsed_data

    # 施設データの取得
    awk '$6=="'${riyoushaid}'"&&$(NF-2)!="9"{print $0}' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
    LANG=C sort -k7,8 |
    getlast 6 6       > $tmp-nyuukyo_shisetsu_data

    if [ -s $tmp-nyuukyo_shisetsu_data ] ; then
# 1:施設ID   2:建屋ID 3:フロア 4:ユニットID 5:居室
# 6:入居者ID 7:入居日 8:退去日 9:削除フラグ 10:更新時間
# 11:更新者
      Shisetsu="$(awk '{print $1}' $tmp-nyuukyo_shisetsu_data)"
      Tateya="$(awk '{print $2}' $tmp-nyuukyo_shisetsu_data)"
      Floor="$(awk '{print $3}' $tmp-nyuukyo_shisetsu_data)"
      Unit="$(awk '{print $4}' $tmp-nyuukyo_shisetsu_data)"
      Kyoshitsu="$(awk '{print $5}' $tmp-nyuukyo_shisetsu_data)"
      Shisetsuname="$(awk '$1=="'${Shisetsu}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON)"
      Tateyaname="$(awk '$1=="'${Tateya}'"{print $3}' ${tbl_dir}/SHISETSU_MASTER/TATEYA_NAME)"
      UnitName="$(awk '$1=="'${Unit}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/UNIT_NAME)"   

    # 入居施設データなかったら、事業所データを検索
    elif [ ! -s $tmp-nyuukyo_shisetsu_data ] ; then
      awk '$2=="'${riyoushaid}'"&&(NF-2)!="9"{print $0}' ${pompa_dir}/RIYOUSHA/JIGYOUSHO_RIYOUSHA_STATUS |
      LANG=C sort -k3,4 |
      getlast 2 2       > $tmp-nyuukyo_shisetsu_data 

      Shisetsu="$(awk '{print $1}' $tmp-nyuukyo_shisetsu_data)"
      Tateya="_"
      Floor="_"
      Unit="_"
      Kyoshitsu="_"
      Shisetsuname="$(awk '$1=="'${Shisetsu}'"{print $2}' ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER)"
      Tateyaname="_"
      Unitname="_"      
    fi
      echo "###NYUUKYOSHISETSUID###"   "${Shisetsu}"   >> $tmp-calsed_data
      echo "###NYUUKYOTATEYAID###"     "${Tateya}"   >> $tmp-calsed_data
      echo "###NYUUKYOUNITID###"       "${Unit}"   >> $tmp-calsed_data
      echo "###NYUUKYOSHISETSUNAME###" "${Shisetsuname}"   >> $tmp-calsed_data
      echo "###NYUUKYOTATEYANAME###"   "${Tateyaname}"   >> $tmp-calsed_data
      echo "###NYUUKYOUNITNAME###"     "${UnitName}"   >> $tmp-calsed_data
      echo "###NYUUKYOFLOOR###"        "${Floor}"   >> $tmp-calsed_data
      echo "###NYUUKYOKYOSHITSU###"    "${Kyoshitsu}"   >> $tmp-calsed_data

  # 基本情報の不足
  elif [ "${result}" = "nodata" ] ; then

    if [ -z "${Shimei}" -o "${Shimei}" = "###SPACE###" ] ; then
      message="氏名を入力してください"
    elif [ -z "${Shimeikana}" -o "${Shimeikana}" = "###SPACE###" ] ; then
      message="氏名カナを入力してください"
    elif [ -z "${Seibetsu}" -o "${Seibetsu}" = "_" ] ; then
      message="性別を入力してください"
    else
      message="生年月日を入力してください"
    fi

  # 重複チェック：重複データなし
    elif [ "${result}" = "check_ok" ] ; then
      message="重複データはありません"

  # 登録：重複データなし、登録完了の場合
    elif [ "${result}" = "touroku_ok" ] ; then
      message="登録を完了しました"

      # 基本htmlへのcalsed用データ

  # 選択したのが事業所でなく施設だったらファイルを作成
  echo "${Shisetsu}" | awk '$1!~/^1/' > $tmp-shisetsu

  if [ -s $tmp-shisetsu ] ; then
      Shisetsuname="$(awk '$1=="'${Shisetsu}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON)"
      Tateyaname="$(awk '$1=="'${Tateya}'"{print $3}' ${tbl_dir}/SHISETSU_MASTER/TATEYA_NAME)"
      UnitName="$(awk '$1=="'${Unit}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/UNIT_NAME)"
  else
      Shisetsuname="$(awk '$1=="'${Shisetsu}'"{print $2}' ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER)"
      Tateyaname="_"
      UnitName="_"
  fi
      Koushinbi="$(date +"%Y/%m/%d")"
      riyoushaid="$(awk '$1=="result"{print $3}' ${result_data})"


      echo "###NYUUKYOSHISETSUID###"   "${Shisetsu}"   >> $tmp-calsed_data
      echo "###NYUUKYOTATEYAID###"     "${Tateya}"   >> $tmp-calsed_data
      echo "###NYUUKYOUNITID###"       "${Unit}"   >> $tmp-calsed_data
      echo "###NYUUKYOSHISETSUNAME###" "${Shisetsuname}"   >> $tmp-calsed_data
      echo "###NYUUKYOTATEYANAME###"   "${Tateyaname}"   >> $tmp-calsed_data
      echo "###NYUUKYOUNITNAME###"     "${UnitName}"   >> $tmp-calsed_data
      echo "###NYUUKYOFLOOR###"        "${Floor}"   >> $tmp-calsed_data
      echo "###NYUUKYOKYOSHITSU###"    "${Kyoshitsu}"   >> $tmp-calsed_data
      echo "###RIYOUSHAID###"          "${riyoushaid}"   >> $tmp-calsed_data
      echo "###RIYOUSHANAME###"        "${Shimei}"   >> $tmp-calsed_data
      echo "###KOUSHINBI###"           "${Koushinbi}"   >> $tmp-calsed_data

  # その他
    else
      message=$(awk '$1=="message"{print $2}' ${result_data})
      [ -z "${message}" ] && echo "${message}"
    fi  

  #########################
  # 4:利用者契約金テーブル
  #########################

cat ${namedata} |
awk '$1~/KeiyakukinShubetsu*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_shubetsu

cat ${namedata} |
awk '$1~/KeiyakukinShoukyakubiFrom*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_from

cat ${namedata} |
awk '$1~/KeiyakukinShoukyakubiTo*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_to

cat ${namedata} |
awk '$1~/KeiyakukinKingaku*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_kingaku

cat ${namedata} |
awk '$1~/KeiyakukinShoukyakuKaisuu*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_shoukya_kukaisuu

cat ${namedata} |
awk '$1~/KeiyakukinHihenkyakuKingaku*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_hihenkyaku_kingaku

cat ${namedata} |
awk '$1~/KeiyakukinSanshutsuHouhou*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_sanshutsu

cat ${namedata} |
awk '$1~/KeiyakukinTokuhanShubetsu*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_tokuhan

cat ${namedata} |
awk '$1~/KeiyakukinNebikiKingaku*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_nebiki_kingaku

cat ${namedata} |
awk '$1~/KeiyakukinNebikiGoKingaku*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_nebikigo_kingaku

cat ${namedata} |
awk '$1~/KeiyakukinTokuhanFrom*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_tokuhan_from

cat ${namedata} |
awk '$1~/KeiyakukinTokuhanTo*/{print $0}' |
LANG=C sort     |
self 2           > $tmp-keiyakukin_tokuhan_to

ycat $tmp-keiyakukin_shubetsu $tmp-keiyakukin_from $tmp-keiyakukin_to $tmp-keiyakukin_kingaku $tmp-keiyakukin_shoukya_kukaisuu $tmp-keiyakukin_hihenkyaku_kingaku $tmp-keiyakukin_sanshutsu $tmp-keiyakukin_tokuhan $tmp-keiyakukin_nebiki_kingaku $tmp-keiyakukin_nebikigo_kingaku $tmp-keiyakukin_tokuhan_from $tmp-keiyakukin_tokuhan_to     |
sed 's/_/@/g'   |
sed 's/  */ /g' > $tmp-search_keiyakukin_data
# 1:契約金種別ID  2:償却開始日  3:償却終了日 4:金額   5:償却回数
# 6:非返却金額    7:算出方法    8:特販ID     9:値引額 10:値引き後金額
# 11:特販期間FROM 12:特販期間TO

  #########################
  # 4:利用者利用料テーブル
  #########################

cat ${namedata} |
awk '$1~/RiyouryouShubetsu*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-riyouryou_shubetsu

cat ${namedata} |
awk '$1~/RiyouryouKisanbiFrom*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-riyouryou_kisanbi_from

cat ${namedata} |
awk '$1~/RiyouryouKisanbiTo*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-riyouryou_kisanbi_to

cat ${namedata} |
awk '$1~/RiyouryouKingaku*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-riyouryou_kingaku

cat ${namedata} |
awk '$1~/RiyouryouTokuhanShubetsu*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-riyouryou_tokuhan

cat ${namedata} |
awk '$1~/RiyouryouNebikiKingaku*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-riyouryou_nebiki_kingaku

cat ${namedata} |
awk '$1~/RiyouryouNebikiGoKingaku*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-riyouryou_nebikigo_kingaku
cat ${namedata} |
awk '$1~/RiyouryouTokuhanFrom*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-riyouryou_tokuhanbi_from

cat ${namedata} |
awk '$1~/RiyouryouTokuhanTo*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-riyouryou_tokuhanbi_to

ycat $tmp-riyouryou_shubetsu $tmp-riyouryou_kisanbi_from $tmp-riyouryou_kisanbi_to $tmp-riyouryou_kingaku $tmp-riyouryou_tokuhan $tmp-riyouryou_nebiki_kingaku $tmp-riyouryou_nebikigo_kingaku $tmp-riyouryou_tokuhanbi_from $tmp-riyouryou_tokuhanbi_to  |
sed 's/_/@/g'     |
sed 's/  */ /g'   > $tmp-search_riyouryou_data
# 1:利用料種別ID 2:起算開始日   3:起算終了日   4:金額       5:特販ID
# 6:値引額       7:値引き後金額 8:特販期間FROM 9:特販期間TO

  #########################
  # 4:利用者特販テーブル
  #########################

cat ${namedata} |
awk '$1~/^TokuhanShubetsu*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-tokuhan_shubetsu

cat ${namedata} |
awk '$1~/TokuhanNebikiKingaku*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-tokuhan_nebiki_kingaku

cat ${namedata} |
awk '$1~/TokuhanbiFrom*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-tokuhanbi_from

cat ${namedata} |
awk '$1~/TokuhanbiTo*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-tokuhanbi_to

cat ${namedata} |
awk '$1~/TokuhanNaiyou*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-tokuhan_naiyou

ycat $tmp-tokuhan_shubetsu $tmp-tokuhan_nebiki_kingaku $tmp-tokuhanbi_from $tmp-tokuhanbi_to $tmp-tokuhan_naiyou |
sed 's/_/@/g'          |
sed 's/  */ /g'   > $tmp-search_tokuhan_data


  ;;
esac
#--------------------------------------------------------------
#------------------------------------------------------------------------
# 包括

  cat ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_MASTER  |
# 1:事業所ＩＤ         2:サービス供給事業者番号 3:サービス供給事業者名 4:サービスコード種類 5:>事業所区分
# 6:指定基準事業所区分 7:地域区分               8:生活保護指定         9:割引率  ...
#...
# 43:事業所評価加算（申出）の有無 44:生活機能向上グループ活動加算 45:24時間通報体制加算
  awk '$(NF-2)!="9"{print $0}'         |
  LANG=C sort |
  uniq        |
  awk '$4=="46"{print $1,$3}' |
  # 1:事業所番号 2:事業所名
  awk '{if($1=="'${Houkatsu}'"){print $0,"selected"}
        else{print $0,"@"}
       }'     > $tmp-houkatsu

#--------------------------------------------------------------
#--------------------------------------------------------------
# 共通処理

[ ! -s "$tmp-search_keiyakukin_data" ] && echo "@ @ @ @ @ @ @ @ @ @ @ @" >$tmp-search_keiyakukin_data
[ ! -s "$tmp-search_riyouryou_data" ] && echo "@ @ @ @ @ @ @ @ @" >$tmp-search_riyouryou_data
[ ! -s "$tmp-search_tokuhan_data" ] && echo "@ @ @ @ @" >$tmp-search_tokuhan_data

#--------------------------------------------------------------
#--------------------------------------------------------------
# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
	cat <<- FIN > $tmp-html2
	  <script type="text/javascript" language="javascript">
	    alert('${message}');
	  </script>
	FIN
fi
#--------------------------------------------------------------
#--------------------------------------------------------------
# 包括表示

if [ "${KeiyakuShurui}" -eq "020" -o "${KeiyakuShurui}" -eq "021" -o "${KeiyakuShurui}" -eq "027" ] ; then
  HOUKATSUDISP="@"
else
  HOUKATSUDISP="none"
fi

#--------------------------------------------------------------
# 画像部分の変数を作成
image1_work="$(ls $image_dir/$riyoushaid/$riyoushaid-1.[a-zA-Z][a-zA-Z][a-zA-Z] | head -1)"
[ ! -z "$image1_work" ] && image1_1="UNEI/IMAGE/$riyoushaid/$(basename $image1_work)" \
                        || image1_1="UNEI/IMAGE/item1.gif"
#--------------------------------------------------------------
#--------------------------------------------------------------
# calsedデータ
if [ "${MODE}" = "init" -o "${result}" != "check_ng" ] ; then
  # calsed用データ
  echo "###Shimei###"                  "${Shimei}"   >> $tmp-calsed_data
  echo "###Shimeikana###"              "${Shimeikana}"   >> $tmp-calsed_data
  echo "###SeinengappiYear###"         "${SeinengappiYear}"   >> $tmp-calsed_data
  echo "###SeinengappiMonth###"        "${SeinengappiMonth}"   >> $tmp-calsed_data
  echo "###SeinengappiDay###"          "${SeinengappiDay}"   >> $tmp-calsed_data
  echo "###Nenrei###"                  "${Nenrei}"   >> $tmp-calsed_data
  echo "###KeiyakuNenrei###"           "${KeiyakuNenrei}"   >> $tmp-calsed_data
  echo "###Keiyakubi###"               "${Keiyakubi}"   >> $tmp-calsed_data
  echo "###KeiyakukikanFrom###"        "${KeiyakukikanFrom}"   >> $tmp-calsed_data
  echo "###KeiyakukikanTo###"          "${KeiyakukikanTo}"   >> $tmp-calsed_data
  echo "###KeiyakuHikiwatashibi###"    "${KeiyakuHikiwatashibi}"   >> $tmp-calsed_data
  echo "###KeiyakuNyuukyobi###"        "${KeiyakuNyuukyobi}"   >> $tmp-calsed_data
  echo "###KeiyakuSeikyuuKikanFrom###" "${KeiyakuSeikyuuKikanFrom}"   >> $tmp-calsed_data
  echo "###NyuukyoMaeYuubinBangou###"  "${NyuukyoMaeYuubinBangou}"   >> $tmp-calsed_data
  echo "###NyuukyoMaeJyuusho###"       "${NyuukyoMaeJyuusho}"   >> $tmp-calsed_data
  echo "###YuubinBangou###"            "${YuubinBangou}"   >> $tmp-calsed_data
  echo "###GenJyuusho###"              "${GenJyuusho}"   >> $tmp-calsed_data
  echo "###Tel###"                     "${Tel}"   >> $tmp-calsed_data
  echo "###Shumi###"                   "${Shumi}"   >> $tmp-calsed_data
  echo "###Bikou###"                   "${Bikou}"   >> $tmp-calsed_data
  echo "###GaijiKyuuji###"             "${GaijiKyuuji}"   >> $tmp-calsed_data
  echo "###Email###"                   "${Email}"   >> $tmp-calsed_data
  echo "###CHINRYOU###"                "${CHINRYOU}" >> $tmp-calsed_data
  echo "###KANRIHI###"                 "${KANRIHI}" >> $tmp-calsed_data
  echo "###RIYOUSHAID###"              "${RIYOUSHAID}" >> $tmp-calsed_data
fi
  echo "###IMAGE1###"                  "$image1_1"     >> $tmp-calsed_data
  echo "###HOUKATSUDISP###"            "${HOUKATSUDISP}"  >> $tmp-calsed_data
  echo "###ShimeiAlert###"             "${ShimeiAlert}" >> $tmp-calsed_data
  echo "###ShimeikanaAlert###"         "${ShimeikanaAlert}"  >> $tmp-calsed_data
  echo "###SeinengappiAlert###"        "${SeinengappiAlert}" >> $tmp-calsed_data
cat $tmp-calsed_data  |
sed 's/_/@/g' -        > $tmp-calsed_data_result
#--------------------------------------------------------------
# データのはめ込み
#cp $tmp-* /home/hands/work/okuda
# 登録時登録okだったら新規htmlではなく、通常の詳細htmlを表示
if [ "${MODE}" = "touroku" -a "${result}" = "touroku_ok" ] ; then
  cat ${html_dir}/KOJINJYOUHOU_SHOUSAI_KIHON.html
elif [ "${result}" = "check_ng" -a -s $tmp-choufuku_data ] ; then
  cat ${html_dir}/KOJINJYOUHOU_SHOUSAI_KIHON.html
else
  cat ${html_dir}/KOJINJYOUHOU_SHOUSAI_SHINKI.html        
fi |

mojihame -lKEIYAKUSHURUI - $tmp-keiyaku                 |
mojihame -lKEIYAKUKINMASTER - $tmp-keiyakukin           |
mojihame -lRIYOURYOUMASTER - $tmp-riyouryou             |
mojihame -lTOKUHANMASTER - $tmp-tokuhan                 |
mojihame -lRIYOURYOUKINGAKU - $tmp-riyouryou_master     |
mojihame -lKEIYAKUKINTOKUHANMASTER - $tmp-keiyakukin_tokuhan_data            |
mojihame -lRIYOURYOUTOKUHANMASTER - $tmp-riyouryou_tokuhan_data              |
mojihame -lseibetsu - $tmp-seibetsu                     |
mojihame -lseinengappi_gengou - $tmp-gengou             |
mojihame -lkansenshou - $tmp-kansenshou                 |
mojihame -lhoukatsu_select - $tmp-houkatsu              |
mojihame -lshisetsu_select - $tmp-shisetsu_name         |
mojihame -ltateya_select - $tmp-tateya_name             |
mojihame -lfloor_select - $tmp-floor                    |
mojihame -lunit_select - $tmp-unit_name                 |
mojihame -lkyoshitsu_select - $tmp-kyoshitsu            |
  if [ -s "$tmp-search_keiyakukin_data" ] ;then
    mojihame -lKEIKAKUKIND - $tmp-search_keiyakukin_data
  else
    cat -
  fi   |
  if [ -s "$tmp-search_riyouryou_data" ] ;then
    mojihame -lRIYOURYOUD - $tmp-search_riyouryou_data
  else
    cat -
  fi   |
  if [ -s "$tmp-search_tokuhan_data" ] ;then
    mojihame -lTOKUHAND - $tmp-search_tokuhan_data
  else
    cat -
  fi   |
calsed -f $tmp-calsed_data_result -                     |
sed 's/###SPACE###/ /g'                                 |
sed 's/\\n/\n/g'                                        |
#--------------------------------------------------------------

#--------------------------------------------------------------
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |
cat -
#--------------------------------------------------------------

## 終了
rm -f $tmp-*
exit 0
