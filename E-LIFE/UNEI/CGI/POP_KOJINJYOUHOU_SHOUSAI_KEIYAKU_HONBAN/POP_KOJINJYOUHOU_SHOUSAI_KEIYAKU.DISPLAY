#!/bin/bash
#
# POP_KOJINJYOUHOU_SHOUSAI_KEIYAKU.DISPLAY
# 個人情報詳細(契約)POPUP
#
# Written by E.Okuda (Tokyu-hands.co.jp) :2013/12/10

#--------------------------------------------------------------
# ログ
# ログ
exec 2> /home/hands/E-LIFE/UNEI/APLOG/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv

source /home/hands/.bashrc &> /dev/null
source /home/hands/E-LIFE/UNEI/CGI/UNEI.INI &> /dev/null
#--------------------------------------------------------------
#--------------------------------------------------------------
# 変数の定義
tmp=/var/tmp/${$}

namedata=$1
data=$2
result_data=$3
today="$(date +%Y%m%d)"

#--------------------------------------------------------------
rm -f $tmp-*
#--------------------------------------------------------------

# 渡ってきたデータを取得
#if [ ${CONTENT_LENGTH:-0} -gt 0 ]; then
#  dd bs=${CONTENT_LENGTH} |
#  cgi-name -d_ -i_
#else
#  :
#fi > $tmp-name


# 必要な値の取得
name-source $namedata > $tmp-source
source $tmp-source

MODE=$(nameread "MODE" ${namedata})
[ -z "${MODE}" ] && MODE="init"
#--------------------------------------------------------------
#--------------------------------------------------------------

if [ "$MODE" = "init" ]; then
  KeiyakuNenrei=""
  Keiyakubi=""
  KeiyakuHikiwatashibi=""
  KeiyakukikanFrom=""
  KeiyakukikanTo=""
  KeiyakuNyuukyobi=""
  KeiyakuTaikyobi=""
  KeiyakuSeikyuuKikanFrom=""
  KeiyakuSeikyuuKikanTo=""
  TaikyoRiyuuShousai=""
  KeiyakuBikou=""
  CHINRYOU=""
  KEIYAKUID=""
#  SHISETSUDISP=""
#  TATEYADISP=""
#  FLOORDISP=""
#  UNITDISP=""
#  KYOSHITSUDISP=""
else
  Shisetsu=$(nameread "Shisetsu" $namedata)
  Tateya=$(nameread   "Tateya" $namedata)
  Floor=$(nameread "Floor" ${namedata})
  Unit=$(nameread "Unit" $namedata)
  Kyoshitsu=$(nameread "Kyoshitsu" $namedata)
  KeiyakuNenrei=$(nameread "KeiyakuNenrei" $namedata)
  KeiyakuShurui=$(nameread "KeiyakuShurui" $namedata)
  Keiyakubi=$(nameread "Keiyakubi" $namedata)
  KeiyakuHikiwatashibi=$(nameread "KeiyakuHikiwatashibi" $namedata)
  KeiyakukikanFrom=$(nameread "KeiyakukikanFrom" $namedata)
  KeiyakukikanTo=$(nameread "KeiyakukikanTo" $namedata | sed 's/99999999/_/g')
  KeiyakuNyuukyobi=$(nameread "KeiyakuNyuukyobi" $namedata)
  KeiyakuTaikyobi=$(nameread "KeiyakuTaikyobi" $namedata | sed 's/99999999/_/g')
  KeiyakuSeikyuuKikanFrom=$(nameread "KeiyakuSeikyuuKikanFrom" $namedata)
  KeiyakuSeikyuuKikanTo=$(nameread "KeiyakuSeikyuuKikanTo" $namedata | sed 's/99999999/_/g')
  TaikyoRiyuu=$(nameread "TaikyoRiyuu" $namedata)
  TaikyoRiyuuShousai=$(nameread "TaikyoRiyuuShousai" $namedata)
  KeiyakuBikou=$(nameread "KeiyakuBikou" $namedata)
#  SHISETSUDISP="disabled"
#  TATEYADISP="disabled"
#  FLOORDISP="disabled"
#  UNITDISP="disabled"
#  KYOSHITSUDISP="disabled"
fi

  SHISETSUDISP="disabled"
  TATEYADISP="disabled"
  FLOORDISP="disabled"
  UNITDISP="disabled"
  KYOSHITSUDISP="disabled"

USERID="$(nameread  "USERID" $namedata)"
SHISETSUID="$(nameread  "NYUUKYOSHISETSUID" $namedata)"
RIYOUSHAID="$(nameread  "RIYOUSHAID" $namedata)"
RIYOUSHANAME="$(awk '$1=="'${RIYOUSHAID}'"{print $2}' ${pompa_dir}/RIYOUSHA/RIYOUSHA_MASTER)"
NENREIREAD="readonly"
  ROGINSHISETSU=$(nameread "shisetsu" $namedata)
  ROGINSHISETSUNAME="$(awk '$1=="'${ROGINSHISETSU}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON | head -1)"
  [ -z "${ROGINSHISETSUNAME}" -o "${ROGINSHISETSUNAME}" = "_" ] && ROGINSHISETSUNAME="$(awk '$1=="'${ROGINSHISETSU}'"{print $2}' ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER | head -1)"

[ -z "${Shisetsu}" -o "${Shisetsu}" = "_" ] && Shisetsu="$(nameread  "NYUUKYOSHISETSUID" $namedata)"
[ -z "${Tateya}" -o "${Tateya}" = "_" ] && Tateya="$(nameread  "NYUUKYOTATEYAID" $namedata)"
[ -z "${Floor}" -o "${Floor}" = "_" ] && Floor="$(nameread  "NYUUKYOFLOOR" $namedata)"
[ -z "${Unit}" -o "${Unit}" = "_" ] && Unit="$(nameread  "NYUUKYOUNITID" $namedata)"
[ -z "${Kyoshitsu}" -o "${Kyoshitsu}" = "_" ] && Kyoshitsu="$(nameread  "NYUUKYOKYOSHITSU" $namedata)"
if [ "$MODE" = "touroku" -a "KEIYAKUID" = "_" ] ; then
 KEIYAKUID="$(cat ${result_data} | self 3)"
fi


# formhame 前の実体参照変換
calsed "&" "&amp;" ${namedata} |
calsed "<" "&lt;"              |
calsed ">" "&gt;"              |
calsed "\"" "&quot;"           > $tmp-namedata

# serchでも結果なしのものはinitへ
if [ "${MODE}" = "serach" ] ;then
  result="$(cat ${data} | head -1 | self 2)"

  if [ "${result}" = "result_ng" ] ; then
    MODE="init"
  fi

fi


### モードによる表示の分岐
case "${MODE}" in

  # 初期表示
  init)

  Shisetsu="$(nameread  "shisetsu" $namedata)"

  if [ "${Shisetsu}" = "${SHISETSUID}" ] ; then
    Tateya="$(nameread  "NYUUKYOTATEYAID" $namedata)"
    Floor="$(nameread  "NYUUKYOFLOOR" $namedata)"
    Unit="$(nameread  "NYUUKYOUNITID" $namedata)"
    Kyoshitsu="$(nameread  "NYUUKYOKYOSHITSU" $namedata)"
  else
    Tateya=""
    Floor=""
    Unit=""
    Kyoshitsu=""

# 建屋がなければUser所属建屋
[ -z "${Tateya}" -o "${Tateya}" = "_" ] && Tateya="$(awk '$1=="'${USERID}'"&&$2=="'${Shisetsu}'"{print $3}' ${tbl_dir}/JYUUGYOUIN_MASTER/USER_SHISETSU)"
# 建屋がなければデフォルトシニア
[ -z "${Tateya}" -o "${Tateya}" = "_" ] && Tateya=$(awk '$1=="'${Shisetsu}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR | LANG=C sort |uniq |head -1)

  fi

  KeiyakuNenrei=$(awk '$1=="'${RIYOUSHAID}'"&&$3=="'${Shisetsu}'"&&$4=="'${Tateya}'"&&$7=="'${Kyoshitsu}'"{print $8}' ${pompa_dir}/RIYOUSHA/RIYOUSHA_KEIYAKU | LANG=C sort | getlast 1 1)
  KeiyakuNyuukyobi=$(awk '$1=="'${RIYOUSHAID}'"&&$3=="'${Shisetsu}'"&&$4=="'${Tateya}'"&&$7=="'${Kyoshitsu}'"{print substr($12,1,4)"/"substr($12,5,2)"/"substr($12,7,2)}' ${pompa_dir}/RIYOUSHA/RIYOUSHA_KEIYAKU | LANG=C sort | getlast 1 1)
  NENREIREAD="@"

  ;;

 # 検索結果
  search )
#    tail -n +2 ${data}   |
#    head -1              > $tmp-search_keiyaku_data
    awk '$1=="KEIYAKU"{print $0}' ${data}  |
    delf 1                 > $tmp-search_keiyaku_data
# 1:利用者(入居者)ID 2:契約ID      3:施設ID      4:建屋ID     5:フロアID
# 6:ユニットID       7:居室ID      8:入居時年齢  9:契約種類ID 10:契約日
# 11:引渡し日        12:契約開始日 13:契約終了日 14:退去理由  15:退去理由詳細
# 16:備考

# 1:利用者(入居者)ID 2:契約ID          3:施設ID     4:建屋ID        5:フロアID
# 6:ユニットID       7:居室ID          8:入居時年齢 9:契約種類ID    10:契約日
# 11:引渡し日        12:入居日         13:退去日    14:契約開始日   15:契約終了日
# 16:請求対象開始日  17:請求対象終了日 18:退去理由  19:退去理由詳細 20:備考

Shisetsu="$(awk '{print $3}' $tmp-search_keiyaku_data)"
Tateya="$(awk '{print $4}' $tmp-search_keiyaku_data)"
Floor="$(awk '{print $5}' $tmp-search_keiyaku_data)"
Unit="$(awk '{print $6}' $tmp-search_keiyaku_data)"
Kyoshitsu="$(awk '{print $7}' $tmp-search_keiyaku_data)"    
KeiyakuNenrei="$(awk '{print $8}' $tmp-search_keiyaku_data)"
KeiyakuShurui="$(awk '{print $9}' $tmp-search_keiyaku_data)"
Keiyakubi="$(awk '{print $10}' $tmp-search_keiyaku_data)"
KeiyakuHikiwatashibi="$(awk '{print $11}' $tmp-search_keiyaku_data)"
KeiyakukikanFrom="$(awk '{print $12}' $tmp-search_keiyaku_data)"
KeiyakukikanTo="$(awk '{print $13}' $tmp-search_keiyaku_data)"
TaikyoRiyuu="$(awk '{print $14}' $tmp-search_keiyaku_data)"
TaikyoRiyuuShousai="$(awk '{print $15}' $tmp-search_keiyaku_data)"
KeiyakuBikou="$(awk '{print $16}' $tmp-search_keiyaku_data)"

# 契約金以下のデータがある場合はセット

    tail -n +2 ${data} > $tmp-search_keiyakukin_riyouryou_tokuhan
if [ -s "$tmp-search_keiyakukin_riyouryou_tokuhan" -a "$(gyo $tmp-search_keiyakukin_riyouryou_tokuhan)" != "0" ] ;then
     cat $tmp-search_keiyakukin_riyouryou_tokuhan               |
     awk '$1=="keiyakukin"{print $0}'    |
# 1:「契約金」    2:利用者(入居者)ID 3:施設ID     4:契約ID  5:契約金種別ID
# 6:番号          7:償却開始日       8:償却終了日 9:金額    10:償却回数
# 11:非返却金額   12:算出方法        13:特販ID    14:値引額 15:値引き後金額
# 16:特販期間FROM 17:特販期間TO
     self 5 7/NF 6                       |
     # 種別が入っていないものは空にする
     awk '{if($1=="_"){print $1,"_","_","_","_","_","_","_","_","_","_","_","_"}
          else{print $0}}'      |
     sed 's/_/@/g'                      |
     LANG=C sort -k13,13n  > $tmp-search_keiyakukin_data
# 1:契約金種別ID  2:償却開始日  3:償却終了日 4:金額   5:償却回数
# 6:非返却金額    7:算出方法    8:特販ID     9:値引額 10:値引き後金額
# 11:特販期間FROM 12:特販期間TO 13:番号


     cat $tmp-search_keiyakukin_riyouryou_tokuhan              |
     awk '$1=="riyouryou"{print $0}'     |
# 1:「利用料」 2:利用者(入居者)ID 3:施設ID        4:契約ID      5:利用料種別ID
# 6:番号       7:起算開始日       8:起算終了日    9:金額        10:特販ID
# 11:値引額    12:値引き後金額    13:特販期間FROM 14:特販期間TO
     self 5 7/NF 6                       |
     # 種別が入っていないものはkらにする
     awk '{if($1=="_"){print "$1","_","_","_","_","_","_","_","_","_"}
          else{print $0}}'      |
     sed 's/_/@/g'                       |
     LANG=C sort -k10,10n                 > $tmp-search_riyouryou_data
# 1:利用料種別ID 2:起算開始日   3:起算終了日   4:金額       5:特販ID
# 6:値引額       7:値引き後金額 8:特販期間FROM 9:特販期間TO 10:番号


     cat $tmp-search_keiyakukin_riyouryou_tokuhan              |
     awk '$1=="tokuhan"{print $0}'       |
# 1:「特販」 2:利用者(入居者)ID 3:施設ID 4:契約ID 5:特販種別ID
# 6:番号     7:値引金額         8:開始日 9:終了日 10:内容
     self 5 7/NF 6                       |
     # 種別が入っていないものはkらにする
     awk '{if($1=="_"){print $1,"_","_","_","_","_","_","_"}
          else{print $0}}'      |
     sed 's/_/@/g'                       |
     LANG=C sort -k6,6n                   > $tmp-search_tokuhan_data
# 1:特販種別ID 2:値引金額 3:開始日 4:終了日 5:内容 6:番号

     Houkatsu=$(cat $tmp-search_keiyakukin_riyouryou_tokuhan | awk '$1=="houkatsu"{print $2}' |head -1)

fi

# 施設のチェック
# 表示した契約がログインしている施設の契約と違う場合は登録ボタンを出さない
  [ "${Shisetsu}" != "${shisetsu}" ] && TOUROKUDISP="none"

# 居宅訪問介護だったら年齢は変更可能にしておく
  [ "$(echo "${Shisetsu}" | awk '{print substr($1,1,1)}')" = "1" ] && NENREIREAD="@"

 ;;
  # 登録の場合
  touroku)

  result=$(awk '$1=="'result'"{print $2}' ${result_data})

    if [ "${result}" = "ng" ] ; then
     message="$(awk '$1=="'message'"{print $2}' ${result_data})"
#     SHISETSUDISP="$(nameread  "SHISETSUDISP" $namedata)"
#     TATEYADISP="$(nameread  "TATEYADISP" $namedata)"
#     FLOORDISP="$(nameread  "FLOORDISP" $namedata)"
#     UNITDISP="$(nameread  "UNITDISP" $namedata)"
#     KYOSHITSUDISP="$(nameread  "KYOSHITSUDISP" $namedata)"
    else

  Shisetsu="$(nameread  "SHISETSU" $namedata)"
  Tateya="$(nameread  "TATEYA" $namedata)"
  Floor="$(nameread  "FLOOR" $namedata)"
  Unit="$(nameread  "UNIT" $namedata)"
  Kyoshitsu="$(nameread  "KYOSHITSU" $namedata)"

[ -z "${Shisetsu}" -o "${Shisetsu}" = "_" ] && Shisetsu=$(awk '$1=="KEIYAKU"{print $3}' ${data})
[ -z "${Tateya}" -o "${Tateya}" = "_" ] && Tateya=$(awk '$1=="KEIYAKU"{print $4}' ${data})
[ -z "${Floor}" -o "${Floor}" = "_" ] && Floor=$(awk '$1=="KEIYAKU"{print $5}' ${data})
[ -z "${Unit}" -o "${Unit}" = "_" ] && Unit=$(awk '$1=="KEIYAKU"{print $6}' ${data})
[ -z "${Kyoshitsu}" -o "${Kyoshitsu}" = "_" ] && Kyoshitsu=$(awk '$1=="KEIYAKU"{print $7}' ${data})
     fi

  #########################
  # 4:利用者契約金テーブル
  #########################

cat ${namedata} |
awk '$1~/KeiyakukinShubetsu*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_shubetsu

cat ${namedata} |
awk '$1~/KeiyakukinShoukyakubiFrom*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_from

cat ${namedata} |
awk '$1~/KeiyakukinShoukyakubiTo*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_to

cat ${namedata} |
awk '$1~/KeiyakukinKingaku*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_kingaku

cat ${namedata} |
awk '$1~/KeiyakukinShoukyakuKaisuu*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_shoukya_kukaisuu

cat ${namedata} |
awk '$1~/KeiyakukinHihenkyakuKingaku*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_hihenkyaku_kingaku

cat ${namedata} |
awk '$1~/KeiyakukinSanshutsuHouhou*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_sanshutsu

cat ${namedata} |
awk '$1~/KeiyakukinTokuhanShubetsu*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_tokuhan

cat ${namedata} |
awk '$1~/KeiyakukinNebikiKingaku*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_nebiki_kingaku

cat ${namedata} |
awk '$1~/KeiyakukinNebikiGoKingaku*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_nebikigo_kingaku

cat ${namedata} |
awk '$1~/KeiyakukinTokuhanFrom*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_tokuhan_from

cat ${namedata} |
awk '$1~/KeiyakukinTokuhanTo*/{print $0}' |
LANG=C sort     |
self 2           > $tmp-keiyakukin_tokuhan_to

cat ${namedata} |
awk '$1~/KeiyakukinJyunban*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-keiyakukin_jyunban

ycat $tmp-keiyakukin_shubetsu $tmp-keiyakukin_from $tmp-keiyakukin_to $tmp-keiyakukin_kingaku $tmp-keiyakukin_shoukya_kukaisuu $tmp-keiyakukin_hihenkyaku_kingaku $tmp-keiyakukin_sanshutsu $tmp-keiyakukin_tokuhan $tmp-keiyakukin_nebiki_kingaku $tmp-keiyakukin_nebikigo_kingaku $tmp-keiyakukin_tokuhan_from $tmp-keiyakukin_tokuhan_to $tmp-keiyakukin_jyunban    |
sed 's/_/@/g'   |
sed 's/  */ /g'  > $tmp-search_keiyakukin_data
# 1:契約金種別ID  2:償却開始日  3:償却終了日 4:金額   5:償却回数
# 6:非返却金額    7:算出方法    8:特販ID     9:値引額 10:値引き後金額
# 11:特販期間FROM 12:特販期間TO 13:番号

  #########################
  # 4:利用者利用料テーブル
  #########################

cat ${namedata} |
awk '$1~/RiyouryouShubetsu*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-riyouryou_shubetsu

cat ${namedata} |
awk '$1~/RiyouryouKisanbiFrom*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-riyouryou_kisanbi_from

cat ${namedata} |
awk '$1~/RiyouryouKisanbiTo*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-riyouryou_kisanbi_to

cat ${namedata} |
awk '$1~/RiyouryouKingaku*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-riyouryou_kingaku

cat ${namedata} |
awk '$1~/RiyouryouTokuhanShubetsu*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-riyouryou_tokuhan

cat ${namedata} |
awk '$1~/RiyouryouNebikiKingaku*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-riyouryou_nebiki_kingaku

cat ${namedata} |
awk '$1~/RiyouryouNebikiGoKingaku*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-riyouryou_nebikigo_kingaku

cat ${namedata} |
awk '$1~/RiyouryouTokuhanFrom*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-riyouryou_tokuhanbi_from

cat ${namedata} |
awk '$1~/RiyouryouTokuhanTo*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-riyouryou_tokuhanbi_to

cat ${namedata} |
awk '$1~/RiyouryouJyunban*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-riyouryou_jyunban

ycat $tmp-riyouryou_shubetsu $tmp-riyouryou_kisanbi_from $tmp-riyouryou_kisanbi_to $tmp-riyouryou_kingaku $tmp-riyouryou_tokuhan $tmp-riyouryou_nebiki_kingaku $tmp-riyouryou_nebikigo_kingaku $tmp-riyouryou_tokuhanbi_from $tmp-riyouryou_tokuhanbi_to $tmp-riyouryou_jyunban |
sed 's/_/@/g'   |
sed 's/  */ /g'  >$tmp-search_riyouryou_data
# 1:利用料種別ID 2:起算開始日   3:起算終了日   4:金額       5:特販ID
# 6:値引額       7:値引き後金額 8:特販期間FROM 9:特販期間TO 10:番号

  #########################
  # 4:利用者特販テーブル
  #########################

cat ${namedata} |
awk '$1~/^TokuhanShubetsu*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-tokuhan_shubetsu

cat ${namedata} |
awk '$1~/TokuhanNebikiKingaku*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-tokuhan_nebiki_kingaku

cat ${namedata} |
awk '$1~/TokuhanbiFrom*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-tokuhanbi_from

cat ${namedata} |
awk '$1~/TokuhanbiTo*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-tokuhanbi_to

cat ${namedata} |
awk '$1~/TokuhanNaiyou*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-tokuhan_naiyou

cat ${namedata} |
awk '$1~/TokuhanJyunban*/{print $0}' |
LANG=C sort     |
self 2          > $tmp-tokuhan_jyunban

ycat $tmp-tokuhan_shubetsu $tmp-tokuhan_nebiki_kingaku $tmp-tokuhanbi_from $tmp-tokuhanbi_to $tmp-tokuhan_naiyou $tmp-tokuhan_jyunban |
sed 's/_/@/g'  |
sed 's/  */ /g' > $tmp-search_tokuhan_data



  ;;
esac

if [ "${KeiyakuShurui}" -eq "021" -o "${KeiyakuShurui}" -eq "027" ] ; then
  HOUKATSUDISP="@"
else
  HOUKATSUDISP="none"
fi

#------------------------------------------------------------
# calsedファイル
cat << FIN > $tmp-calsed_data
###USERID###       ${USERID}
###SHISETSUID###   ${SHISETSUID}
###RIYOUSHAID###   ${RIYOUSHAID}
###RIYOUSHANAME###   ${RIYOUSHANAME}
###KEIYAKUID###    ${KEIYAKUID}
###TOUROKUDISP### ${TOUROKUDISP}
###PRINTDISP###  ${PRINTDISP}
###HOUKATSUDISP### ${HOUKATSUDISP}
###ROGINSHISETSU### ${ROGINSHISETSU}
###ROGINSHISETSUNAME### ${ROGINSHISETSUNAME}
FIN

#--------------------------------------------------------------
# 共通処理

[ ! -s "$tmp-search_keiyakukin_data" ] && echo "@ @ @ @ @ @ @ @ @" >$tmp-search_keiyakukin_data
[ ! -s "$tmp-search_riyouryou_data" ] && echo "@ @ @ @ @" >$tmp-search_riyouryou_data
[ ! -s "$tmp-search_tokuhan_data" ] && echo "@ @ @ @ @ @ @" >$tmp-search_tokuhan_data

#----------------------------------------------------------
# プルダウンの用意
#----------------------------------------------------------
###########
# 契約種類
###########
cat ${tbl_dir}/KEIYAKU_MASTER/SHISETSU_KEIYAKU_MASTER |
# 1:施設/事業所名 2:契約ID 3:有効フラグ
# 施設番号が一致し、有効フラグが1:有効なもの
awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"&&$(NF-2)!="2"{print $2}'  |
LANG=C sort |
join1 key=1 ${tbl_dir}/KEIYAKU_MASTER/KEIYAKU_NAME - |
awk '{if($1=="'${KeiyakuShurui}'"){print $1,$2,"selected"}
      else{print $1,$2,"@"}}'        > $tmp-keiyaku


# 契約金・利用料・特販
cat ${tbl_dir}/RIYOURYOU_MASTER/KEIYAKUKIN_MASTER        |
if [ "${MODE}" != "init" ] ; then
  awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"{print $0}'
else
  awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"&&$(NF-2)!="2"{print $0}' 
fi |
LANG=C sort -k4,4n  |
self 2 3            |
#awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"{print $2,$3}' |
awk 'BEGIN{print "@ @"}{print $0}' > $tmp-keiyakukin

cat ${tbl_dir}/RIYOURYOU_MASTER/RIYOURYOU_MASTER         |
awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"{print $2,$3}' |
awk 'BEGIN{print "@ @"}{print $1,$2}' > $tmp-riyouryou

cat ${tbl_dir}/RIYOURYOU_MASTER/TOKUHAN_SHUBETSU           |
if [ "${MODE}" != "init" ] ; then
  awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"{print $0}'
else
  awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"&&$(NF-2)!="2"{print $0}'
fi |
awk '$4=="4"||$4=="0"{print $2,$3}'         |
awk 'BEGIN{print "@ @"}{print $0}' > $tmp-tokuhan

cat ${tbl_dir}/RIYOURYOU_MASTER/TOKUHAN_SHUBETSU           |
if [ "${MODE}" != "init" ] ; then
  awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"{print $0}'
else
  awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"&&$(NF-2)!="2"{print $0}'
fi |
awk '$4=="1"||$4=="0"{print $2,$3}'         |
awk 'BEGIN{print "_ なし"}{print $0}' > $tmp-keiyakukin_tokuhan_data


cat ${tbl_dir}/RIYOURYOU_MASTER/TOKUHAN_SHUBETSU           |
if [ "${MODE}" != "init" ] ; then
  awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"{print $0}'
else
  awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"&&$(NF-2)!="2"{print $0}'
fi |
awk '$4=="2"||$4=="0"{print $2,$3}'         |
awk 'BEGIN{print "_ なし"}{print $0}' > $tmp-riyouryou_tokuhan_data

cat ${tbl_dir}/RIYOURYOU_MASTER/RIYOURYOU_MASTER          |
awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"{print $2,$5}' |
awk 'BEGIN{print "@ @"}{print $0}'  |
awk '$2!="001"{print $0}'       > $tmp-riyouryou_master

# 退去理由
cat ${tbl_dir}/CONFIG/TAIKYO_RIYUU    |
awk 'BEGIN{print "@ @"}{print $1,$2}'  |
awk '{if($1=="'${TaikyoRiyuu}'"){print $0,"selected"}
      else{print $0,"@"}}'> $tmp-taikyoriyuu

# 事業所選択の表示
JIGYOUSHOHANTEI=$(echo ${Shisetsu} | awk '{print substr($1,1,1)}')

# 事業所だったら契約金～特販の入力は不要、また居室編集ぼたんも不要
if [ "${JIGYOUSHOHANTEI}" = "1" ] ; then
  echo "###KEIYAKUDISP### none" >> $tmp-calsed_data
  echo "###KYOSHITSUHENSHUU### none" >> $tmp-calsed_data
else
  echo "###KEIYAKUDISP### @" >> $tmp-calsed_data
  echo "###KYOSHITSUHENSHUU### @" >> $tmp-calsed_data
fi

################################
# 施設・事業所 
################################

# 事業所選択の表示
JIGYOUSHOHANTEI=$(echo ${Shisetsu} | awk '{print substr($1,1,1)}')

# 居宅・訪問介護事業所の準備
if [ "${JIGYOUSHOHANTEI}" = "1" -a "${MODE}" != "search" ] ; then

  cat ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER |
  awk '$1=="'${Shisetsu}'"{print $1,$2}'               > $tmp-shisetsu_name

elif [ "${JIGYOUSHOHANTEI}" = "0" -a "${MODE}" != "search" ] ; then

  cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON |
  awk '$1=="'${Shisetsu}'"{print $1,$2}'      > $tmp-shisetsu_name

else

  cat ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER |
# 1:グループ事業所ＩＤ 2:グループ事業所名 3:電話番号 4:住所   5:金融機関コード
# 6:金融機関支店コード 7:口座区分         8:口座番号 9:口座名
  awk '$(NF-2)!="9"{print $1,$2}'   > $tmp-jigyousho_name

  # 施設データと事業所データをくっつける
  cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON $tmp-jigyousho_name  |
  awk '$(NF-2)!="9"{print $1,$2}'                 |
  awk '{if($1=="'${Shisetsu}'"){print $0,"selected"}
    else{print $0,"@"}}'   >$tmp-shisetsu_name
fi


#if [ "${KeiyakukikanFrom}" = "_" ] ; then
#  KeiyakukikanFromSearch="$(date +%Y%m%d)"
#else
#  KeiyakukikanFromSearch="$(echo "${KeiyakukikanFrom}" | sed 's/\///g')"
#fi
#
#  if [ "${KeiyakuShurui}" -lt "008" ]; then
#    NENREIREAD="@"
#  else
#    NENREIREAD="readonly"
#  fi
#
## 契約種類が入居系契約以外だったら
#if [ "${KeiyakuShurui}" != "001" -a "${KeiyakuShurui}" != "002" -a "${KeiyakuShurui}" != "003" -a "${KeiyakuShurui}" != "004" -a "${KeiyakuShurui}" != "005" -a "${KeiyakuShurui}" != "006" -a "${KeiyakuShurui}" != "007" ] ; then
#
#  awk '$1=="'${Shisetsu}'"&&$6=="'${RIYOUSHAID}'"&&$(NF-2)!="9"{print $0}' /DATA/E-LIFE/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS  > $tmp-nyuukyo_shisetsu
##  awk '$7<="'${KeiyakukikanFromSearch}'"&&$8>="'${KeiyakukikanFromSearch}'"{print $0}'  > $tmp-nyuukyo_shisetsu
## 1:施設ID   2:建屋ID 3:フロア 4:ユニットID 5:居室
## 6:入居者ID 7:入居日 8:退去日 9:削除フラグ 10:更新時間
## 11:更新者
#fi
#
## 入居施設情報があったら
#if [ -s $tmp-nyuukyo_shisetsu ] ; then
#  # 施設
#  cat $tmp-nyuukyo_shisetsu |
#  awk '{print $1}' |
#  cjoin1 key=1 - ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON  |
#  self 1 2 > $tmp-shisetsu_name
#
#  # 建屋
#  cat $tmp-nyuukyo_shisetsu |
#  awk '{print $2}' |
#  LANG=C sort -u   |
#  cjoin1 key=1 - ${tbl_dir}/SHISETSU_MASTER/TATEYA_NAME  |
#  awk '{if($1=="'${Tateya}'"){print $1,$3,"selected"}
#       else {print $1,$3,"@"}}'       > $tmp-tateya_name
#
#  [ -z "$(cat $tmp-tateya_name | awk '$3=="selected"{print $1}')" ] && Tateya="$(awk '{print $1}' $tmp-tateya_name |head -1)"
#
#  # Floor
#  cat $tmp-nyuukyo_shisetsu |
#  awk '$2=="'${Tateya}'"{print $3}' |
#  LANG=C sort -u   |
#  awk '{if($1=="'${Floor}'"){print $1,$1,"selected"}
#       else {print $1,$1,"@"}}' > $tmp-floor
#
#  [ -z "$(cat $tmp-floor | awk '$3=="selected"{print $1}')" ] && Floor="$(awk '{print $1}' $tmp-floor |head -1)"
#
#  # Unit
#  cat $tmp-nyuukyo_shisetsu |
#  awk '$2=="'${Tateya}'"&&$3=="'${Floor}'"{print $4}' |
#  LANG=C sort -u   |
#  cjoin1 key=1 ${tbl_dir}/SHISETSU_MASTER/UNIT_NAME -  |
#  awk '{if($1=="'${Unit}'"){print $1,$2,"selected"}
#       else {print $1,$2,"@"}}' > $tmp-unit_name
#
#   [ -z "$(cat $tmp-unit_name | awk '$3=="selected"{print $1}')" ] && Unit="$(awk '{print $1}' $tmp-unit_name |head -1)"
#
#  # Kyoshitsu
#  cat $tmp-nyuukyo_shisetsu |
#  awk '$2=="'${Tateya}'"&&$3=="'${Floor}'"&&$4=="'${Unit}'"{print $5}' |
#  LANG=C sort -u   |
#  awk '{if($1=="'${Kyoshitsu}'"){print $1,$1,"selected"}
#       else {print $1,$1,"@"}}' > $tmp-kyoshitsu
#
#else

#
   [ -z "${Shisetsu}" -o "${Shisetsu}" == "_" ] && Shisetsu="$(head -1 $tmp-shisetsu_name | self 1)"
   # 建屋一覧
   # 施設が選択されていたら絞込み
  if [ -n "${Shisetsu}" -a "${Shisetsu}" != "_" ] ; then
    cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR    |
# 1:施設ID 2:建屋ID 3:フロア
    awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"{print $2}'       |
    LANG=C sort  |
    uniq  |
    join1 key=1 ${tbl_dir}/SHISETSU_MASTER/TATEYA_NAME -    |
    self 1 3                                                |
    awk '{if($1=="'${Tateya}'"){print $0,"selected"}
       else {print $0,"@"}}'       > $tmp-tateya_name
# 1:建屋ID 2:建屋名

  # 施設が選ばれていない場合
  else
     echo "@ ←選択してください" > $tmp-tateya_name
  fi

  Tateya_selected="$(cat $tmp-tateya_name | awk '$3=="selected"{print $1}')"

  [ -z "${Tateya_selected}" -o "${Tateya_selected}" == "_" ] && Tateya="$(head -1 $tmp-tateya_name | self 1)"

# --------------------------
#  # 定員以下の居室情報の取得
#  # 退去日が入ってないあるいは退去日がきていない施設内の居室情報を取得
#  awk '{if($1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$8=="99999999"&&$(NF-2)!="9"){print $0}
#      else if($1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$8>"'${KeiyakukikanFromSearch}'"&&$(NF-2)!="9"){print $0}
#     }' ${pompa_dir}/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS   |
## 1:施設ID   2:建屋ID 3:フロア 4:ユニットID 5:居室
## 6:入居者ID 7:入居日 8:退去日
#  count 1 5   |
#  LANG=C sort -k1,5 > $tmp-shisetsu_riyousha
## 1:施設ID   2:建屋ID 3:フロア 4:ユニットID 5:居室 6:人数
#
#  if [ -s $tmp-shisetsu_riyousha ] ; then
## 居室データ
#    cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM    |
## 1:施設ID       2:建屋ID 3:フロア 4:ユニットID 5:居室NO
## 6:居室定員人数
#    awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$(NF-2)!="9"{print $0}'   |
#    self 1/6          |
#    LANG=C sort -k1,5 |
#    # 現状の入居者数と定員を比較し、定員以下の部屋のみとす
#    join2 +"_" key=1/5 $tmp-shisetsu_riyousha - |
#    awk '{if($6<$7){print $0}
#      else if($6=="_"){print $0}
#     }'           > $tmp-taisyou_data
## 1:施設ID   2:建屋ID 3:フロア 4:ユニットID 5:居室 6:現人数
## 7:定員
#  else
#    # 居室データ
#    cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM    |
## 1:施設ID       2:建屋ID 3:フロア 4:ユニットID 5:居室NO
## 6:居室定員人数
#    awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$(NF-2)!="9"{print $0}'   |
#    self 1/6          |
#    LANG=C sort -k1,5 > $tmp-taisyou_data
#  fi
##---------------------
#--------------------
#  # 定員以下の居室 対象データあり
#  if [ -s $tmp-taisyou_data ] ; then
    # フロア
#    cat $tmp-taisyou_data |
#    self 3                |

    cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM    |
## 1:施設ID       2:建屋ID 3:フロア 4:ユニットID 5:居室NO
## 6:居室定員人数
    awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$(NF-2)!="9"{print $3}'   |
    uniq |
    awk '{if($1=="'${Floor}'"){print $1,$1,"selected"}
       else {print $1,$1,"@"}}' > $tmp-floor

    Floor_selected="$(cat $tmp-floor | awk '$3=="selected"{print $1}')"

    [ -z "${Floor_selected}" -o "${Floor_selected}" == "_" ] && Floor="$(head -1 $tmp-floor | self 1)"

    # ユニット
    if [ "${Tateya}" = "02" ] ; then
      cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM    |
# 1:施設ID       2:建屋ID 3:フロア 4:ユニットID 5:居室NO
# 6:居室定員人数
      awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$3=="'${Floor}'"&&$(NF-2)!="9"{print $0}'   |
      tee $tmp-floor_shibori_zumi |
#      cat $tmp-taisyou_data |
#      awk '$3=="'${Floor}'"{print $4}' |
   self 4                |
      LANG=C sort |
      uniq |
      join1 key=1 ${tbl_dir}/SHISETSU_MASTER/UNIT_NAME -  |
      awk '{if($1=="'${Unit}'"){print $1,$2,"selected"}
       else {print $1,$2,"@"}}' > $tmp-unit_name
    else
      : > $tmp-unit_name
    fi

  Unit_selected="$(cat $tmp-unit_name | awk '$3=="selected"{print $1}')"

  # ユニット
    [ -z "${Unit_selected}" -o "${Unit_selected}" == "_" ] && Unit="$(head -1 $tmp-unit_name | self 1)"

  # 居室

    if [ ! -z "${Unit}" -a "${Unit}" != "_" ] ; then
      cat $tmp-floor_shibori_zumi |
      awk '$4=="'${Unit}'"{print $5}'
    else
      cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM    |
      awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$3=="'${Floor}'"&&$(NF-2)!="9"{print $0}'   |
      self 5
    fi |

    uniq |
    awk 'BEGIN{print "@","@"}{print $0}' |
    awk '{if($1=="'${Kyoshitsu}'"){print $1,$1,"selected"}
       else {print $1,$1,"@"}}' > $tmp-kyoshitsu

   Kyoshitsu_selected="$(cat $tmp-kyoshitsu | awk '$3=="selected"{print $1}')"

    [ -z "${Kyoshitsu_selected}" -o "${Kyoshitsu_selected}" == "_" ] && Kyoshitsu="$(head -1 $tmp-kyoshitsu | self 1)"

#  # 対象データなし
#  else
#   echo "@ @ @" > $tmp-kyoshitsu
#   echo "@ @ @" > $tmp-unit_name
#   echo "@ @ @" > $tmp-floor
#  fi

#fi
# 賃料の取得
cat ${tbl_dir}/RIYOURYOU_MASTER/KYOSHITSU_CHINRYOU |
# 1:施設ID 2:建屋ID 3:居室ID 4:期間From 5:期間To 6:賃料

# 施設建屋居室で絞込み、期間Fromの日付が今日以前のもののみとする
awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$3=="'${Kyoshitsu}'"&&$4<="'${today}'"{print $5,$6}' |
# 期限TOが入っていないあるいは未来の日付であるものにする
awk '$1>="'${today}'"{print $2}' > $tmp-chinryou

# 賃料
if [ ! -s $tmp-chinryou -o $(gyo $tmp-chinryou) != "1" ] ; then
 CHINRYOU="$(echo "@")"
else
 CHINRYOU="$(cat $tmp-chinryou)"
fi
#------------------------------------------------------------------------
# 包括

  cat ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_MASTER  |
# 1:事業所ＩＤ         2:サービス供給事業者番号 3:サービス供給事業者名 4:サービスコード種類 5:>事業所区分
# 6:指定基準事業所区分 7:地域区分               8:生活保護指定         9:割引率  ...
#...
# 43:事業所評価加算（申出）の有無 44:生活機能向上グループ活動加算 45:24時間通報体制加算
  awk '$(NF-2)!="9"{print $0}'         |
  LANG=C sort |
  uniq        |
  awk '$4=="46"{print $1,$3}' |
  # 1:事業所番号 2:事業所名
  awk '{if($1=="'${Houkatsu}'"){print $0,"selected"}
        else{print $0,"@"}
       }'     > $tmp-houkatsu

#-------------------------------------------------------------------------
# 入居年齢

if [ -z "${KeiyakuNenrei}" -o "${KeiyakuNenrei}" = "_" ] ; then
  awk '$1=="'${RIYOUSHAID}'"{print $0}' ${pompa_dir}/RIYOUSHA/RIYOUSHA_KIHON  > $tmp-kihon
  Birthday="$(awk '{print substr($9,5,4)}' $tmp-kihon)"
#  if [ "${Birthday}" -ge "${today}" ] ;then
    KeiyakuNenrei="$(awk 'N="'${today}'"-$9{print N/10000}' $tmp-kihon | marume -sage 1.0)"
  # 誕生日が来ていなければ
#  else
#    KeiyakuNenrei="$(awk 'N="'${today}'"-$9{print N/10000-1}' $tmp-kihon | marume -sage 1.0)"
#  fi
else
  :
fi


#--------------------------------------------------------------
# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
	cat <<- FIN > $tmp-html1
	  <script type="text/javascript" language="javascript">
	    alert('${message}');
	  </script>
	FIN
fi

if [ "${MODE}" = "touroku" -a "${result}" = "ok" ] ; then
cat <<- FIN > $tmp-html2
    <script type="text/javascript" language="javascript">
         var obj =document.forms["PopKanryou"];
         shousai_kihon = window.open("KOJINJYOUHOU_SHOUSAI_KEIYAKU.CGI","shousai_kihon");
//         shousai_kihon.close();
        obj.target="shousai_kihon";
        obj.method="post";
        obj.action="KOJINJYOUHOU_SHOUSAI_KEIYAKU.CGI";
        obj.submit();
        resizeTo(300,130);
//      window.close();
    </script>
	FIN
fi

#     window.opener.location.href = "KOJINJYOUHOU_SHOUSAI_KEIYAKU.CGI";
#     window.opener.document.tab.submit();
#--------------------------------------------------------------
#--------------------------------------------------------------
# テキスト系は_を空白に直してやる
[ "${Bikou}" = "_" ] && Bikou=""
bikou=$(echo "${Bikou}" | sed 's/\\n/###RETURN###/g')
#--------------------------------------------------------------

    # calsed用データ
  echo "###KeiyakuNenrei###"           "${KeiyakuNenrei}"   >> $tmp-calsed_data
  echo "###Keiyakubi###"               "${Keiyakubi}"   >> $tmp-calsed_data
  echo "###KeiyakuHikiwatashibi###"    "${KeiyakuHikiwatashibi}"   >> $tmp-calsed_data
  echo "###KeiyakukikanFrom###"        "${KeiyakukikanFrom}"   >> $tmp-calsed_data
  echo "###KeiyakukikanTo###"          "${KeiyakukikanTo}"   >> $tmp-calsed_data
  echo "###KeiyakuNyuukyobi###"        "${KeiyakuNyuukyobi}"   >> $tmp-calsed_data
  echo "###KeiyakuTaikyobi###"         "${KeiyakuTaikyobi}"   >> $tmp-calsed_data
  echo "###KeiyakuSeikyuuKikanFrom###" "${KeiyakuSeikyuuKikanFrom}"   >> $tmp-calsed_data
  echo "###KeiyakuSeikyuuKikanTo###"   "${KeiyakuSeikyuuKikanTo}"   >> $tmp-calsed_data
  echo "###TaikyoRiyuuShousai###"      "${TaikyoRiyuuShousai}"   >> $tmp-calsed_data
  echo "###KeiyakuBikou###"            "${KeiyakuBikou}"   >> $tmp-calsed_data
  echo "###CHINRYOU###"                "${CHINRYOU}" >>$tmp-calsed_data
  echo "###NYUUKYOSHISETSUID###"   "${Shisetsu}"   >> $tmp-calsed_data
  echo "###NYUUKYOTATEYAID###"     "${Tateya}"   >> $tmp-calsed_data
  echo "###NYUUKYOUNITID###"       "${Unit}"   >> $tmp-calsed_data
  echo "###NYUUKYOSHISETSUNAME###" "${Shisetsuname}"   >> $tmp-calsed_data
  echo "###NYUUKYOTATEYANAME###"   "${Tateyaname}"   >> $tmp-calsed_data
  echo "###NYUUKYOUNITNAME###"     "${UnitName}"   >> $tmp-calsed_data
  echo "###NYUUKYOFLOOR###"        "${Floor}"   >> $tmp-calsed_data
  echo "###NYUUKYOKYOSHITSU###"    "${Kyoshitsu}"   >> $tmp-calsed_data
  echo "###NENREIREAD###" "${NENREIREAD}"  >> $tmp-calsed_data
  echo "###SHISETSU###" "${Shisetsu}" >> $tmp-calsed_data
  echo "###TATEYA###" "${Tateya}" >> $tmp-calsed_data
  echo "###FLOOR###" "${Floor}"  >> $tmp-calsed_data
  echo "###UNIT###" "${Unit}"  >> $tmp-calsed_data
  echo "###KYOSHITSU###" "${Kyoshitsu}" >> $tmp-calsed_data
  echo "###SHISETSUDISP###" "${SHISETSUDISP}" >> $tmp-calsed_data
  echo "###TATEYADISP###" "${TATEYADISP}" >> $tmp-calsed_data
  echo "###FLOORDISP###" "${FLOORDISP}"  >> $tmp-calsed_data
  echo "###UNITDISP###" "${UNITDISP}"  >> $tmp-calsed_data
  echo "###KYOSHITSUDISP###" "${KYOSHITSUDISP}" >> $tmp-calsed_data

cat $tmp-calsed_data  |
sed 's/_/@/g' -        > $tmp-calsed_data_result
#--------------------------------------------------------------
# データのはめ込み
#cp $tmp-* /home/hands/work/okuda

# 登録時登録okだったら新規htmlではなく、通常の詳細htmlを表示
#if [ "${MODE}" = "touroku" -a "${result}" = "touroku_ok" ] ; then
#else
#fi |
if [ "${MODE}" = "touroku" -a "${result}" = "ok" ] ; then
  cat ${html_dir}/POP_KOJINJYOUHOU_TOUROKU_KANRYOU.html
else
  cat ${html_dir}/POP_KOJINJYOUHOU_SHOUSAI_KEIYAKU.html |
  mojihame -lKEIYAKUSHURUI - $tmp-keiyaku                 |
  mojihame -lKEIYAKUKINMASTER - $tmp-keiyakukin           |
  mojihame -lRIYOURYOUMASTER - $tmp-riyouryou             |
  mojihame -lTOKUHANMASTER - $tmp-tokuhan                 |
  mojihame -lKEIYAKUKINTOKUHANMASTER - $tmp-keiyakukin_tokuhan_data            |
  mojihame -lRIYOURYOUTOKUHANMASTER - $tmp-riyouryou_tokuhan_data              |
  mojihame -lRIYOURYOUKINGAKU - $tmp-riyouryou_master     |
  if [ -s "$tmp-search_keiyakukin_data" ] ;then
    mojihame -lKEIKAKUKIND - $tmp-search_keiyakukin_data
  else
    cat -
  fi   |
  if [ -s "$tmp-search_riyouryou_data" ] ;then
    mojihame -lRIYOURYOUD - $tmp-search_riyouryou_data
  else
    cat -
  fi   |
  if [ -s "$tmp-search_tokuhan_data" ] ;then
    mojihame -lTOKUHAND - $tmp-search_tokuhan_data
  else
    cat -
  fi   |
  mojihame -ltaikyo_riyuu - $tmp-taikyoriyuu              |
  mojihame -lhoukatsu_select - $tmp-houkatsu              |
  mojihame -lshisetsu_select - $tmp-shisetsu_name         |
  mojihame -ltateya_select - $tmp-tateya_name             |
  mojihame -lfloor_select - $tmp-floor                    |
  mojihame -lunit_select - $tmp-unit_name                 |
  mojihame -lkyoshitsu_select - $tmp-kyoshitsu            
fi |
calsed -f $tmp-calsed_data_result -                     |
sed 's/###SPACE###/ /g'                                 |
sed 's/\\n/\n/g'                                        |
#--------------------------------------------------------------
#--------------------------------------------------------------
if [ -e $tmp-html1 ] ; then
  cat - $tmp-html1
else
  cat -
fi |



if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |

cat -
#--------------------------------------------------------------

## 終了
rm -f $tmp-*
exit 0
