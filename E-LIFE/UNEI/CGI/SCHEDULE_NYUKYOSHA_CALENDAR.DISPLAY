#!/bin/bash
#
# SCHEDULE_NYUKYOSHA_CALENDAR.DISPLAY : ご入居者スケジュール表示
#
# Usage : SCHEDULE_NYUKYOSHA_CALENDAR.DISPLAY
#
# Written by K.Aoyama(HANDS.LAB)

# ログ
source /home/hands/E-LIFE/UNEI/CGI/UNEI.INI &> /dev/null
source /home/hands/.bashrc &> /dev/null

mkdir -p ${log_dir}/$(date +%Y%m%d)
exec 2> ${log_dir}/$(date +%Y%m%d)/LOG.$(basename ${0}).${HOSTNAME}.$(date +%Y%m%d) ; set -xv

rm -f $tmp-*

# ディレクトリ設定
test_tbl_dir="${home_dir}/TEST/TBL"
kengen_dir="${home_dir}/TBL/KENGEN_KANRI"

# 変数の定義
namedata=$1
checkfile=$2
result_data=$3
today="$(date +%Y%m%d)"

#--------------------------------------------------------
# 必要な値の取得
eval $(name-source ${namedata})
#--------------------------------------------------------

echo ${userid}  > ${tmp}-user
echo ${password} > ${tmp}-pass
echo ${shisetsu} > ${tmp}-shisetsu

# ログインUSER名と施設の取得（仮）
cat ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
# 1:USER_ID 2:ユーザー名
join1 key=1 ${tmp}-user                            |
# 1:USER_ID 2:ユーザー名
self 2                                             > ${tmp}-usermei

self 1 2 ${home_dir}/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON > $tmp-shisetsu_mst

cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst

cat $tmp-disp_shisetsu_mst |
# 1:施設コード 2:施設名
join1 key=1 ${tmp}-shisetsu                        |
self 2                                             > ${tmp}-user_shisetsu

# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou

echo "SCHEDULE_KANRI" > $tmp-cgi
# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
awk '$2=="0000"||$2=="'$shisetsu'"'         |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -k7,7                                          |
join0 key=7 $tmp-cgi                                       > ${tmp}-kengenlist


[ -z "${MODE}" ] && MODE="init"
#--------------------------------------------------------------

#--------------------------------------------------------------
### モードによる表示の分岐
case "${MODE}" in

  # 初期表示
  init | to_reset)
    : > $tmp-listdata
  ;;

  # 検索結果
  search)
    if [ "$(gyo ${result_data})" != 0 ] ; then
      cat ${result_data}         > $tmp-listdata
      # 1:ID         2:入力内容 3:入力者 4:入力者名 5:最終>更新日時
      # 6:最終更新者
#      LANG=C sort -k6,6nr       |
#      self 1 2 3 4 5            |
#      rank                      |
#      head -100                  > $tmp-listdata
    else
      : > $tmp-listdata
    fi
  ;;

esac

# 建屋設定
if [ -z "$EventTateya" -o "$EventTateya" = "_" ] ; then
self 1/8 ${home_dir}/TBL/JYUUGYOUIN_MASTER/USER_SHISETSU   |
join1 key=1 $tmp-user                                      |
self 3                                                     |
awk '{if($1!="02"){$1="01"};print int($1)}' > $tmp-taishou_tateya
EventTateya=$(self 1 $tmp-taishou_tateya)
fi


#--------------------------------------------------------------
# メッセージがあればalertで表示させる
if [ ! -z "${message}" ] ; then
cat << FIN > $tmp-html2
    <script type="text/javascript" language="javascript">
      alert('${message}');
    </script>
FIN
##else
##cat << FIN > $tmp-html2
##    <script type="text/javascript" language="javascript">
##      window.close();
##    </script>
##FIN
fi
#--------------------------------------------------------------

cp $tmp-listdata $work_dir/listdata_schedule
# 一日型
cat $tmp-listdata                 |
awk '$1=="l"'                     |
delf 1                            > $tmp-schedule_list

# 複数日型
cat $tmp-listdata                 |
awk '$1=="a"'                     |
delf 1                            > $tmp-multiple_schedule_list

###################################
# スケジュール種類
###################################
CGI_NAME="SCHEDULE_NYUKYOSHA"
schedule_code=$(awk '$(NF-2)!="9"&&$3=="'$CGI_NAME'"{print $1}' ${home_dir}/TBL/CONFIG/SCHEDULE_SHURUI | tail -1)


###################################
# スケジュールタイプマスタ
###################################

cat ${home_dir}/TBL/SCHEDULE_MASTER/SCEDULE_TYPE_MASTER |
awk '$(NF-2)!="9"&&$4=="'$schedule_code'"&&$5=="'$shisetsu'"'       |
# 1:集計グループID 2:集計グループ
#--------------------------------------------------------------
delf NF-2/NF  > ${tmp}-scheduletype_master

###################################
# スケジュールマスタ
###################################
# 1:施設       2:スケジュールID 3:スケジュール 4:スケジュールタイプ 5:費用
# 6:有効フラグ 7:処理時間       8:ユーザID
cat ${home_dir}/TBL/SCHEDULE_MASTER/SCHEDULE_MASTER |
awk '$(NF-2)!="9"&&$1=="'$shisetsu'"' |
LANG=C sort -k4,4                            |
join0 key=4 ${tmp}-scheduletype_master       |
#--------------------------------------------------------------
# 1:スケジュールID 2:スケジュール 3:費用 4:スケジュールタイプ 5:課税区分
self 2 3 5 4 > ${tmp}-schedule_master



[ -z "${calendarDisplay}" -o "${calendarDisplay}" = "_" ] && calendarDisplay="agendaDay"

[ -z "$calendarYMD" -o "$calendarYMD" = "_"  ] && calendarYMD=$(mdate today | self 1)

cat << FIN | sed 's/ _$/ @/g' > $tmp-calsed
###RIYOUSHAMEI### $Riyoushamei
###RIYOUSHAID### $Riyoushaid
###CALENDARDISPLAY### $calendarDisplay
###CALENDARYMD### $calendarYMD
###USERID### $userid
###PASSWORD### $password
###SHISETSUID### $shisetsu
###DISPLAYSHISETSU### $displayshisetsu
###EVENTTATEYA### $EventTateya
###DROPDOWN_ACTIVE1### active
###LI_UNEI2### active
###SELECT_SHISETSU### $select_shisetsu
FIN

#-----------------------------------------------------------
# 登録・印刷ボタンの表示
# 施設名はログインユーザーの権限のある施設を取得
self 9 $tmp-kengenlist |
LANG=C sort -k1,1      |
tail -1                > $tmp-dispkengen

# 権限がない人は新規登録や出力が出来ない
if [ $(cat $tmp-dispkengen) = "3" ] ;then
  echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed
  echo "###TOUROKUDISP### @" >> $tmp-calsed
  echo "###PRINTDISP### @"   >> $tmp-calsed
elif [ $(cat $tmp-dispkengen) = "2" ] ;then
  echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed
  echo "###TOUROKUDISP### @" >> $tmp-calsed
  echo "###PRINTDISP### none"   >> $tmp-calsed
else
  echo "###SHINKITOUROKUDISP### none" >> $tmp-calsed
  echo "###TOUROKUDISP### none" >> $tmp-calsed
  echo "###PRINTDISP### none"   >> $tmp-calsed
fi

cat $checkfile >> $tmp-calsed
cat $tmp-calsed      |
sed 's/\\n/###KAIGYO###/g'     >  $tmp-calsed_kaigyozumi

# HTMLの作成
cat ${html_dir}/SCHEDULE_NYUKYOSHA_CALENDAR1.html ${home_dir}/KYOUTSU/HTML/MENUBAR.html ${html_dir}/SCHEDULE_NYUKYOSHA_CALENDAR2.html |
calsed -f $tmp-calsed_kaigyozumi - |
mojihame -l###USER__NAME### - ${tmp}-usermei |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -l###MULTIPLESCHEDULELIST### - $tmp-multiple_schedule_list |
mojihame -l###SCHEDULE### - $tmp-schedule_master |
mojihame -l###SCHEDULETYPE### - $tmp-scheduletype_master |
mojihame -h###SCHEDULELIST### - $tmp-schedule_list |
sed 's/###KAIGYO###/\n/g'     |
sed 's/###SPACE###/ /g'       |
sed 's/"_"/""/g'              |
tee $tmp-html |
#--------------------------------------------------------------
#--------------------------------------------------------------
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |
#formhame -d"_" - ${namedata}  |
cat -
#--------------------------------------------------------------

rm -f ${tmp}-*
exit 0
