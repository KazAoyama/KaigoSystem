#!/bin/bash
#
# UNEIJYOUKYOU_HOUKOKUSHO.DISPLAY
# 個人情報詳細　アセスメント　表示用CGI
#
# Written by E.Okuda　2013/12/11

#--------------------------------------------------------------

# ログ
exec 2> /home/hands/E-LIFE/UNEI/APLOG/LOG.$(basename ${0}).${HOSTNAME}.$(date "+%Y%m%d"); set -xv

source /home/hands/.bashrc &> /dev/null
source /home/hands/E-LIFE/UNEI/CGI/UNEI.INI &> /dev/null
#--------------------------------------------------------------
#--------------------------------------------------------------
# 変数の定義
tmp=/var/tmp/${$}

namedata=$1
checkfile="$2"
data=$3
downloadfile=$4
today="$(date +%Y%m%d)"
kengen_dir="/home/hands/E-LIFE/TBL/KENGEN_KANRI"
#--------------------------------------------------------------
rm -f $tmp-*
#--------------------------------------------------------------

# ディレクトリ設定
app_dir="${home_dir}/UNEI"
cgi_dir="${app_dir}/CGI"
html_dir="${app_dir}/HTML"
pompa_dir="${app_dir}/POMPA"

# 必要な値の取得
eval $(name-source ${namedata})
#USERNAME=$(awk '$1=="'${USER_ID}'"{print $2}' ${tbl_dir}/JYUGYOIN_NAME)

# 渡ってきたデータを取得
#if [ ${CONTENT_LENGTH:-0} -gt 0 ]; then
#  dd bs=${CONTENT_LENGTH} |
#  cgi-name -d_ -i_
#else
#  :
#fi > $tmp-name

MODE=$(nameread "MODE" ${namedata})
[ -z "${MODE}" -o "${MODE}" = "_" ] && MODE="init"
#--------------------------------------------------------------

  Shisetsu=$(nameread "Shisetsu" $namedata)
  USERID=$(nameread "userid" $namedata)
  [ -z "${Shisetsu}" -o "${Shisetsu}" = "_" ] && Shisetsu=$(nameread "shisetsu" $namedata)


#  ROGINSHISETSU=$(nameread "shisetsu" $namedata)
  ROGINSHISETSU=$shisetsu
  ROGINSHISETSUNAME="$(awk '$1=="'${ROGINSHISETSU}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON | head -1)"
  [ -z "${ROGINSHISETSUNAME}" -o "${ROGINSHISETSUNAME}" = "_" ] && ROGINSHISETSUNAME="$(awk '$1=="'${ROGINSHISETSU}'"{print $2}' ${tbl_dir}/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER | head -1)"

  [ -z "${Shisetsu}" -o "${Shisetsu}" = "_" -o "${shisetsu}" = "###ROGINSHISETSU###" ] && Shisetsu="0001"
  [ -z "${shisetsu}" -o "${shisetsu}" = "_" -o "${shisetsu}" = "###ROGINSHISETSU###"  ] && shisetsu="0001"

  # 施設がないときは所属施設
  [ -z "${shisetsu}" ] && shisetsu=$(cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON |self 1 | head -1)
  [ -z "${Shisetsu}" ] && Shisetsu=$(echo "${shisetsu}")

  USERNAME="$(awk '$1=="'${USERID}'"{print $2}' ${tbl_dir}/JYUUGYOUIN_MASTER/USER_MASTER | head -1)"

  # 建屋の取得
  if [ -n "${Tateya}" -a "${Tateya}" != "_" ];then
    echo "${Tateya}"                                             |
    join1 key=1 - ${tbl_dir}/SHISETSU_MASTER/TATEYA_NAME  |
    self 3                                                       > ${tmp}-tateya_name
  else
    :                                                            > ${tmp}-tateya_name
  fi

TateyaName=$(cat ${tmp}-tateya_name | head -1)

# 建屋を表示するかどうか
cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM |
self 1 2 |
LANG=C sort -k1,2 -u |
awk '$1=="'${Shisetsu}'"' > $tmp-tateya_check

dispTateya=""
if [ $(gyo $tmp-tateya_check) -gt 1 ] ; then
  dispTateya="("${TateyaName}")"
fi

# ユーザー所属施設名所属部署名)
  SHISETSUNAME="$(awk '$1=="'${Shisetsu}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_KIHON | head -1)"
  TATEYANAME="${dispTateya}"

if [ "${MODE}" = "init" ] ; then
  Tateya="$(awk '$1=="'${Shisetsu}'"{print $2}' ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR | LANG=C sort -u | head -1)"
  TaishouYear=$(date +%Y)
  TaishouMonth=$(date +%m)
else
  :
fi

# データから
if [ -s "${data}" ] ; then
   awk '$1=="kisshoku_taishou_ninzuu"{print $2}' ${data}        > $tmp-taishou_ninsu
   awk '$1=="zennen_kisshoku_taishou_ninzuu"{print $2}' ${data} > $tmp-zennen_taishou_ninsu
   awk '$1=="shokuji_jisseki"{print $2,$3}' ${data}             > $tmp-riyousha_shokuji
   awk '$1=="zennen_shokuji_jisseki"{print $2,$3}' ${data}      > $tmp-zennen_riyousha_shokuji
   awk '$1=="guest"&&$2!="0"{print $2}' ${data}                 > $tmp-guest_shokuji
   awk '$1=="zennen_guest"&&$2!="0"{print $2}' ${data}          > $tmp-zennen_guest_shokuji
else
  :
fi


#--------------------------------------------------------------
# ログインUSER名と施設の取得
cat /home/hands/E-LIFE/TBL/JYUUGYOUIN_MASTER/USER_MASTER  |
tee ${tmp}-jugyoin        |
# 1:USER_ID 2:ユーザー名
awk '$1=="'${userid}'"'   |
# 1:USER_ID 2:ユーザー名
self 2                    > ${tmp}-usermei

self 1 2 /home/hands/E-LIFE/TBL/JIGYOUSHO_MASTER/JIGYOUSHO_GROUP_MASTER > $tmp-jigyousho_group_mst
self 1 2 /home/hands/E-LIFE/TBL/SHISETSU_MASTER/SHISETSU_KIHON          > $tmp-shisetsu_mst

cat $tmp-shisetsu_mst $tmp-jigyousho_group_mst > $tmp-disp_shisetsu_mst

# 施設名はログインユーザーの権限のある施設を取得
cat /home/hands/E-LIFE/SYSTEM_SETTEI/POMPA/KENGEN_KANRI/USER_KENGEN/${userid}.USER_KENGEN |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
# 1:userid 2:SHISETSU_ID
if [ "$(cat ${tmp}-kengen | getfirst 1 1 | self 2)" = "0000" ];then
  awk '$1!="0000"{print $1,$2}' $tmp-disp_shisetsu_mst      |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
# 1:SHISESTU_ID 2:施設名
else
  cat ${tmp}-kengen                        |
  # 1:userid 2:SHISETSU_ID
  join1 key=2 $tmp-disp_shisetsu_mst |
# 1:userid 2:SHISETSU_ID 3:施設名
  awk '$2!=0{print $2,$3}'                 |
  awk '{print $0,"'${shisetsu}'"}'              |
  awk '{if($1==$3){print $1,$2,"selected"}else{print $1,$2,""}}'  > ${tmp}-shisetsu_kengen
fi

select_shisetsu=$(awk '$3=="selected"{print $2}' ${tmp}-shisetsu_kengen)
awk '$3!="selected"{print $1,$2}' ${tmp}-shisetsu_kengen > $tmp-shisetsu_taishou

#--------------------------------------------------------------
#-------------------------------------------------------------

# 準備１：検索対象日=対象年対象月
#------------------------------------
thismonth=$(echo "${TaishouYear}""${TaishouMonth}")
#thismonth="$(date +%Y%m)"
lastmonth="$(mdate ${thismonth}m/-1)"
lastmonthday="$(mdate ${lastmonth}m | tarr | tail -1)"
lastday="$(echo "${lastmonthday}" | awk '{print substr($1,5,4)}')"
lastmonthfirstday="$(mdate ${lastmonth}m | tarr | head -1)"

lastlastmonth="$(mdate ${thismonth}m/-2)"
lastlastmonthday="$(mdate ${lastlastmonth}m | tarr | tail -1)"

# 準備２：体験入居者のID、本入居者IDを出す。
#-----------------------
shortcode="001" # 体験入居 
shortcode2="002" # ショートステイ
cat /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_KEIYAKU |
awk '$(NF-2)!="9"'                              |
# 1:利用者ID   2:施設ID     3:建屋ID 4:居室 5:契約種類ID
# 6:契約開始日 7:契約終了日
self 1 3 4 7 9 12 13                            |
#awk '$2=="'$shisetsu'"&&$3=="02"&&$5=="'$shortcode'"&&$6<="'$taishoutoday2'"&&"'$taishoutoday2'"<=$7'   |
awk '$2=="'$Shisetsu'"&&$3=="'${Tateya}'"&&$5=="'$shortcode'"&&$6<="'$lastmonthday'"&&"'$lastmonthday'"<=$7'   |
tee $tmp-taikennyuukyo_riyoushainfo |
self 1  |
LANG=C sort -k1,1  >$tmp-taikennyuukyo_riyoushaid

cat /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_KEIYAKU |
awk '$(NF-2)!="9"'                              |
# 1:利用者ID   2:施設ID     3:建屋ID 4:居室 5:契約種類ID
# 6:契約開始日 7:契約終了日
self 1 3 4 7 9 12 13                            |
#awk '$2=="'$shisetsu'"&&$3=="02"&&$5=="'$shortcode'"&&$6<="'$taishoutoday2'"&&"'$taishoutoday2'"<=$7'   |
awk '$2=="'$Shisetsu'"&&$3=="'${Tateya}'"&&$5=="'$shortcode2'"&&$6<="'$lastmonthday'"&&"'$lastmonthday'"<=$7'   |
tee $tmp-shortstay_riyoushainfo |
self 1  |
LANG=C sort -k1,1  >$tmp-shortstay_riyoushaid

if [ -s $tmp-taikennyuukyo_riyoushaid ] ; then
  cat $tmp-taikennyuukyo_riyoushaid |
  if [ -s $tmp-shortstay_riyoushaid ] ; then
    cat - $tmp-shortstay_riyoushaid
  else
    cat -
  fi
elif [ $tmp-shortstay_riyoushaid ] ; then
  cat $tmp-shortstay_riyoushaid
else
  :
fi  > $tmp-taiken_riyoushaid


# 入居者統計情報
#--------------------
# 1:施設ID   2:シニアケア区分 3:フロア 4:ユニット 5:居室番号
# 6:利用者ID 7:有効From       8:有効To
cat /DATA/E-LIFE/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$(NF-2)!="9"{print $0}'       |
awk '$7<="'${lastmonthday}'"&&"'${lastmonthday}'"<=$8'                     |
#awk '$8>"'${lastmonthday}'"' |
LANG=C sort -k6,6                                       > $tmp-honnyukyosha_riyoushainfo

#--体験入居者をカウント対象からはずさない！
## 体験入居者をカウント対象からはずす
##join0 +ng key=6 $tmp-taiken_riyoushaid > /dev/null 2> $tmp-honnyukyosha_riyoushainfo

#
cat $tmp-honnyukyosha_riyoushainfo                      |
self 6                                                  |
LANG=C sort -k1,1          > $tmp-honnyukyosha-riyoushaid
# 1:利用者ID

# 準備3：対前月用、前々月の体験入居者のID、本入居者IDを出す。
zentsuki=$(mdate ${lastmonth}m/-1)
zentsukiday="$(mdate ${zentsuki}m | tarr | tail -1)"
zentsukifirstday="$(mdate ${zentsuki}m | tarr | head -1)"

# 体験入居者のID
cat /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_KEIYAKU |
awk '$(NF-2)!="9"'                              |
# 1:利用者ID   2:施設ID     3:建屋ID 4:フロアID 5:契約種類ID
# 6:契約開始日 7:契約終了日
self 1 3 4 5 9 12 13                            |
#awk '$2=="'$shisetsu'"&&$3=="02"&&$5=="'$shortcode'"&&$6<="'$taishoutoday2'"&&"'$taishoutoday2'"<=$7'   |
awk '$2=="'$Shisetsu'"&&$3=="'${Tateya}'"&&$5=="'$shortcode'"&&$6<="'$zentsukiday'"&&"'$zentsukiday'"<=$7'   |
self 1  |
LANG=C sort -k1,1  > $tmp-zentsuki_taiken_riyoushaid

# 本入居者のID
cat /DATA/E-LIFE/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$(NF-2)!="9"{print $0}'  |
awk '$7<="'${zentsukiday}'"&&"'${zentsukiday}'"<=$8'                  |
#awk '$8>"'${lastmonthday}'"' |
LANG=C sort -k6,6                                                     > $tmp-zentsuki-honnyukyosha_riyoushainfo

cat $tmp-zentsuki-honnyukyosha_riyoushainfo             |
self 6                                                  |
LANG=C sort -k1,1          > $tmp-zentsuki-honnyukyosha-riyoushaid
# 1:利用者ID

#----------------------------------------------------------------------
#----------------------------------------------------------------------
#-----------
# 入居戸数
#-----------
cat $tmp-honnyukyosha_riyoushainfo                     |
self 5                                                 |
LANG=C sort -k1,1                                      |
getlast 1 1                                            > $tmp-nyukyo_room
nyukyokosu=$(gyo $tmp-nyukyo_room)

#----------
# 入居率
#----------
# 施設部屋数
cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR_UNIT_ROOM   |
awk '$(NF-2)!="9"'                                               |
awk '$1=="'$Shisetsu'"&&$2=="'${Tateya}'"{print $0}'            > $tmp-room_info
roomkosu=$(gyo $tmp-room_info)

# 入居率
echo "$nyukyokosu" "$roomkosu"    |
lcalc '$1/$2*100'                 |
marume 1.0                        > $tmp-nyukyoritsu
nyukyoritsu=$(self 1 $tmp-nyukyoritsu)

#--------------
# 本入居者数
#--------------
cat /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_KIHON    |
# 1:利用者ID   2:利用者名   3:利用者名カナ 4:性別         5:生年月日和暦区分
# 6:生年月日年 7:生年月日月 8:生年月日日   9:生年月日西暦
LANG=C sort -k1,1                                |
join0 key=1 $tmp-honnyukyosha-riyoushaid         |
self 1 2 4 9                                     |
# 1:利用者ID   2:利用者名  3:性別 4:生年月日西暦
tee $tmp-taishou_riyoushaid                      |
self 3                                           |
LANG=C sort -k1,1                                |
count 1 1                  > $tmp-honnyukyosha_shoukei_count

HonnyuukyoMale=$(awk '$1=="1"{print $2}' $tmp-honnyukyosha_shoukei_count)
HonnyuukyoFemale=$(awk '$1=="2"{print $2}' $tmp-honnyukyosha_shoukei_count)
HonnyuukyoAll="$(cat $tmp-honnyukyosha_shoukei_count | sm2 0 0 2 2)"
[ -z "${HonnyuukyoMale}" -o "${HonnyuukyoMale}" = "_" ] && HonnyuukyoMale="0"
[ -z "${HonnyuukyoFemale}" -o "${HonnyuukyoFemale}" = "_" ] && HonnyuukyoFemale="0"
[ -z "${HonnyuukyoAll}" -o "${HonnyuukyoAll}" = "_" ] && HonnyuukyoAll="0"

#---------------
# 本入居者入居率
#---------------

if [ "${HonnyuukyoAll}" != "0" -a "${HonnyuukyoMale}" != "0" ] ; then
  HonnyuukyoMalePercent=$(echo "${HonnyuukyoAll}" "${HonnyuukyoMale}" | lcalc '$2/$1*100' | marume 1.0)
else
  HonnyuukyoMalePercent="0"
fi

if [ "${HonnyuukyoAll}" != "0" -a "${HonnyuukyoFemale}" != "0" ] ; then
  HonnyuukyoFemalePercent=$(echo "${HonnyuukyoAll}" "${HonnyuukyoFemale}" | lcalc '$2/$1*100' | marume 1.0)
else
  HonnyuukyoFemalePercent="0"
fi

#-----------------
# 平均年齢
#-----------------
cat $tmp-taishou_riyoushaid      |
# 1:利用者ID   2:利用者名  3:性別 4:生年月日西暦
awk '{print $0,substr($4,5,4)}'  |
awk '{print $0,("'${lastmonthday}'"-$4)/10000}' |
marume -sage 6.0                 > $tmp-nenrei_all
# 1:利用者ID   2:利用者名  3:性別 4:生年月日西暦 5:年齢

# 全入居者の平均年齢
nenrei_all_ninsuu="$(gyo $tmp-nenrei_all)"
HonnyuukyoAllNenrei="$(cat $tmp-nenrei_all | self 3 6 | LANG=C sort | sm2 0 0 2 2 | awk '{print $1,"'${nenrei_all_ninsuu}'"}' | lcalc '$1/$2' | marume 1.1)"
# 男女別の平均年齢
nenrei_male_ninsuu="$(awk '$3=="1"' $tmp-nenrei_all | gyo)"
nanrei_female_ninsuu="$(awk '$3=="2"' $tmp-nenrei_all | gyo)"
HonnyuukyoMaleNenrei="$(cat $tmp-nenrei_all | self 3 6 | LANG=C sort | sm2 1 1 2 2 | awk '$1=="1"{print $2,"'${nenrei_male_ninsuu}'"}' | lcalc '$1/$2' | marume 1.1)"
HonnyuukyoFemaleNenrei="$(cat $tmp-nenrei_all | self 3 6 | LANG=C sort | sm2 1 1 2 2 | awk '$1=="2"{print $2,"'${nanrei_female_ninsuu}'"}' | lcalc '$1/$2' | marume 1.1)"

#------------------
# 対前月変動
#------------------
cat /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_KIHON      |
# 1:利用者ID   2:利用者名   3:利用者名カナ 4:性別         5:生年月日和暦区分
# 6:生年月日年 7:生年月日月 8:生年月日日   9:生年月日西暦
LANG=C sort -k1,1                                  |
self 1 2 4 9                                       > $tmp-riyoushakihon
# 1:利用者ID   2:利用者名  3:性別 4:生年月日西暦



#-----------
# 入居者数
#-----------
# 準備
awk '$3=="'${Shisetsu}'"&&$4=="'${Tateya}'"&&$9<008&&$9>002&&$(NF-2)!="9"' /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_KEIYAKU > $tmp-riyoushakeiyaku_data
# 入居契約
#awk '$3=="'${Shisetsu}'"&&$4=="'${Tateya}'"&&$9<008&&$(NF-2)!="9"' /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_KEIYAKU |
cat $tmp-riyoushakeiyaku_data |
# 1:利用者(入居者)ID 2:契約ID      3:施設ID      4:建屋ID     5:フロアID
# 6:ユニットID       7:居室ID      8:入居時年齢  9:契約種類ID 10:契約日
# 11:引渡し日        12:契約開始日 13:契約終了日 14:退去理由  15:退去理由詳細
# 16:備考            17:予備1      18:予備2      19:予備3     20:予備4
# 21:予備5           22:削除フラグ 23:更新日     24:更新者
# 対象月最初の日より後の入居日、かつ対象月最終日より前の入居日
awk '$12>="'${lastmonthfirstday}'"&&$12<="'${lastmonthday}'"' |
LANG=C sort -k1,1 -k12,13     |
getfirst 1 1 |
tee $tmp-nyuukyo_data_tochu   |
self 1       > $tmp-nyuukyo_data

if [ -s $tmp-nyuukyo_data ] ; then
  cat $tmp-riyoushakihon |
  join0 key=1 $tmp-nyuukyo_data -    > $tmp-nyuukyo_data_result
# 1:利用者ID   2:利用者名  3:性別 4:生年月日西暦

  # 入居者人数
  HonnyuukyoAllNyuukyoNinsuu="$(gyo $tmp-nyuukyo_data_result)"
  HonnyuukyoMaleNyuukyoNinsuu="$(awk '$3=="1"' $tmp-nyuukyo_data_result | gyo)"  
  HonnyuukyoFemaleNyuukyoNinsuu="$(awk '$3=="2"' $tmp-nyuukyo_data_result | gyo)"

  # 入居戸数
  cat $tmp-nyuukyo_data_tochu |
  self 7                      |
  # 1:居室 
  LANG=C sort -u              |
  cjoin1 key=5 - $tmp-honnyukyosha_riyoushainfo  |
  # 対象月より前に入居している部屋
  awk '$8<"'${lastmonthfirstday}'"{print $5}'    > $tmp-doukyoari
# 1:施設ID   2:シニアケア区分 3:フロア   4:ユニット 5:居室番号
# 6:利用者ID 7:利用者ID       8:有効From 9:有効To

  # 対象月より前から入居している方がいたらその部屋はカウント対象から外す
  if [ -s $tmp-doukyoari ] ; then
    cat $tmp-doukyoari |
    LANG=C sort        |
    cjoin1 +ng key=5 - $tmp-honnyukyosha_riyoushainfo > /dev/null 2>$tmp-doukyonashi
# 1:施設ID   2:シニアケア区分 3:フロア 4:ユニット 5:居室番号
# 6:利用者ID 7:有効From       8:有効To
    KosuuNyuukyoNinsuu="$(self 5 $tmp-doukyonashi |LANG=C sort -u |gyo)"
  else
    KosuuNyuukyoNinsuu="$(self 7 $tmp-nyuukyo_data_tochu | LANG=C sort -u |gyo)"
  fi

else
  :
fi

 [ -z "${KosuuNyuukyoNinsuu}" -o "${KosuuNyuukyoNinsuu}" = "_" ] && KosuuNyuukyoNinsuu="0"
 [ -z "${HonnyuukyoAllNyuukyoNinsuu}" -o "${HonnyuukyoAllNyuukyoNinsuu}" = "_" ] && HonnyuukyoAllNyuukyoNinsuu="0"
 [ -z "${HonnyuukyoMaleNyuukyoNinsuu}" -o "${HonnyuukyoMaleNyuukyoNinsuu}" = "_" ] && HonnyuukyoMaleNyuukyoNinsuu="0"
 [ -z "${HonnyuukyoFemaleNyuukyoNinsuu}" -o "${HonnyuukyoFemaleNyuukyoNinsuu}" = "_" ] && HonnyuukyoFemaleNyuukyoNinsuu="0"

#----------
# 退去日
#----------
# 入居契約
#awk '$3=="'${Shisetsu}'"&&$4=="'${Tateya}'"&&$9<008&&$(NF-2)!="9"' /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_KEIYAKU |
cat $tmp-riyoushakeiyaku_data |
# 1:利用者(入居者)ID 2:契約ID      3:施設ID      4:建屋ID     5:フロアID
# 6:ユニットID       7:居室ID      8:入居時年齢  9:契約種類ID 10:契約日
# 11:引渡し日        12:契約開始日 13:契約終了日 14:退去理由  15:退去理由詳細
# 16:備考            17:予備1      18:予備2      19:予備3     20:予備4
# 21:予備5           22:削除フラグ 23:更新日     24:更新者
# 対象月最初の日より後の退去日、かつ対象月最終日より前の退去日
awk '$13>="'${lastmonthfirstday}'"&&$13<="'${lastmonthday}'"' |
LANG=C sort -k1,1 -k12,13     |
getlast 1 1  |
tee $tmp-taikyo_data_tochu |
self 1       > $tmp-taikyo_data

# 対象月の一月前の入居者データ
# 1:施設ID   2:シニアケア区分 3:フロア 4:ユニット 5:居室番号
# 6:利用者ID 7:有効From       8:有効To
cat /DATA/E-LIFE/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS |
awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$(NF-2)!="9"{print $0}'       |
#awk '"'${lastmonthday}'"<=$8'             |
LANG=C sort -k6,6                         |
tee $tmp-last_honnyukyosha_riyoushainfo   |
self 6                                    |
LANG=C sort -k1,1                         > $tmp-last_honnyukyosha-riyoushaid
# 1:利用者ID


if [ -s $tmp-taikyo_data ] ; then
  cat $tmp-riyoushakihon |
  join0 key=1 $tmp-taikyo_data -    > $tmp-taikyo_data_result
# 1:利用者ID   2:利用者名  3:性別 4:生年月日西暦

  # 退去者人数
  HonnyuukyoAllTaikyoNinsuu="$(gyo $tmp-taikyo_data_result)"
  HonnyuukyoMaleTaikyoNinsuu="$(awk '$3=="1"' $tmp-taikyo_data_result | gyo)"
  HonnyuukyoFemaleTaikyoNinsuu="$(awk '$3=="2"' $tmp-taikyo_data_result | gyo)"

  # 入居戸数
  cat $tmp-taikyo_data_tochu |
  self 7                     |
  # 1:居室
  LANG=C sort                |
  cjoin1 key=5 - $tmp-last_honnyukyosha_riyoushainfo  |
  # 対象月以降も入居している部屋
  awk '$9>"'${lastmonthday}'"{print $5}'    > $tmp-doukyoari_taikyo
# 1:施設ID   2:シニアケア区分 3:フロア   4:ユニット 5:居室番号
# 6:利用者ID 7:利用者ID       8:有効From 9:有効To

  # 対象月より前から入居している方がいたらその部屋はカウント対象から外す
  if [ -s $tmp-doukyoari_taikyo ] ; then
    cat $tmp-doukyoari_taikyo |
    LANG=C sort        |
    cjoin1 +ng key=5 - $tmp-last_honnyukyosha_riyoushainfo > /dev/null 2>$tmp-doukyonashi_taikyo
# 1:施設ID   2:シニアケア区分 3:フロア 4:ユニット 5:居室番号
# 6:利用者ID 7:有効From       8:有効To
    KosuuTaikyoNinsuu="$(self 5 $tmp-doukyonashi_taikyo |LANG=C sort -u | gyo)"
  else
    KosuuTaikyoNinsuu="$(self 7 $tmp-taikyo_data_tochu | LANG=C sort -u | gyo)"
  fi

else
  :
fi

 [ -z "${KosuuTaikyoNinsuu}" -o "${KosuuTaikyoNinsuu}" = "_" ] && KosuuTaikyoNinsuu="0"
 [ -z "${HonnyuukyoAllTaikyoNinsuu}" -o "${HonnyuukyoAllTaikyoNinsuu}" = "_" ] && HonnyuukyoAllTaikyoNinsuu="0"
 [ -z "${HonnyuukyoMaleTaikyoNinsuu}" -o "${HonnyuukyoMaleTaikyoNinsuu}" = "_" ] && HonnyuukyoMaleTaikyoNinsuu="0"
 [ -z "${HonnyuukyoFemaleTaikyoNinsuu}" -o "${HonnyuukyoFemaleTaikyoNinsuu}" = "_" ] && HonnyuukyoFemaleTaikyoNinsuu="0"

###########
# 介護度
###########
#$tmp-honnyukyosha-riyoushaid
# 1:利用者ID

# 介護度の準備
#cat /home/hands/E-LIFE/TBL/CONFIG/KAIGODO_MASTER |
# 1:介護度ID 2:介護度名 3:単位 4:有効期間FROM 5:有効期間To
#awk '$3<="'${lastmonthfirstday}'"&&$4>="'${lastmonthfirstday}'"' |
#getlast 1 1                                      |
#self 1 2                                         > $tmp-kaigodo_master

cat /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_KAIGOHOKEN                    |
# 1:利用者(入居者)ID      2:介護保険ＩＤ          3:介護度              4:保険者番号                                        5:保険者名
# 6:被保険者番号          7:性別                  8:生年月日：和暦元号  9:生年月日：和暦誕生年                              10:生年月日：和暦誕生月
# 11:生年月日：和暦誕生日 12:郵便番号             13:住所               14:認定年月：和暦元号                               15:認定年月：和暦年
# 16:認定年月：和暦月     17:認定年月：和暦日     18:認定年月：西暦     19:有効期間FROM：和暦元号                           20:有効期間FROM：和暦年
# 21:有効期間FROM：和暦月 22:有効期間FROM：和暦日 23:有効期間FROM：西暦 24:有効期間TO：和暦元号                             25:有効期間TO：和暦年
# 26:有効期間TO：和暦月   27:有効期間TO：和暦日   28:有効期間TO：西暦   29:居宅介護支援者又は介護予防事業者及びその事業所名 30:認定審査会の意見及びサービスの種類指定
# 31:備考                 32:利用者負担率

# 介護保険有効期間の開始日がlastmonthfirstdayより前で、終了日がlastmonthfirstdayより後のものだけにする
awk '$3!="_"&&$23<="'${lastmonthfirstday}'"&&$28>="'${lastmonthfirstday}'"&&$(NF-2)!="9"'  |
self 1 3 23 28          |
# 1:利用者(入居者)ID 2:介護度 3:有効期間FROM：西暦 4:有効期間TO：西暦
# 同じ月に2つ以上介護度があったら(介護認定切替があった場合)後のものをとる
LANG=C sort -k1,1 -k3,4 |
getlast 1 1             |
self 1 2                > $tmp-riyousha_kaigodo_before
# 1:利用者(入居者)ID 2:介護度

if [ -s $tmp-riyousha_kaigodo_before ] ; then
  cat $tmp-riyousha_kaigodo_before |
  cjoin1 key=1 $tmp-honnyukyosha-riyoushaid - > $tmp-riyousha_kaigodo
else
  : > $tmp-riyousha_kaigodo
fi

# 介護度を取得する
#cjoin1 key=2 $tmp-kaigodo_master - |
#self 1 3                > $tmp-riyousha_kaigodo
# 1:利用者(入居者)ID 2:介護度名
#----------------
# 介護度人数
#----------------
KAIGODOALL="$(gyo $tmp-riyousha_kaigodo)"
ShienGoukeiNinsuu="$(awk '$2=="1"||$2=="2"' $tmp-riyousha_kaigodo | gyo)"
Kaigo1Ninsuu="$(awk '$2=="3"' $tmp-riyousha_kaigodo | gyo)"
Kaigo2Ninsuu="$(awk '$2=="4"' $tmp-riyousha_kaigodo | gyo)"
Kaigo3Ninsuu="$(awk '$2=="5"' $tmp-riyousha_kaigodo | gyo)"
Kaigo4Ninsuu="$(awk '$2=="6"' $tmp-riyousha_kaigodo | gyo)"
Kaigo5Ninsuu="$(awk '$2=="7"' $tmp-riyousha_kaigodo | gyo)"
[ -z "${ShienGoukeiNinsuu}" ] && ShienGoukeiNinsuu="0"
[ -z "${Kaigo1Ninsuu}" ] && Kaigo1Ninsuu="0"
[ -z "${Kaigo2Ninsuu}" ] && Kaigo2Ninsuu="0"
[ -z "${Kaigo3Ninsuu}" ] && Kaigo3Ninsuu="0"
[ -z "${Kaigo4Ninsuu}" ] && Kaigo4Ninsuu="0"
[ -z "${Kaigo5Ninsuu}" ] && Kaigo5Ninsuu="0"

#----------------
# 介護度％
#----------------
if [ "${ShienGoukeiNinsuu}" != "0" ] ; then
  ShienGoukeiPersent="$(echo "${KAIGODOALL}" | lcalc ''${ShienGoukeiNinsuu}' / $1 * 100' | marume 1.0 | awk '{print $1"%"}')"
else
  ShienGoukeiPersent="0%"
fi

if [ "${Kaigo1Ninsuu}" != "0" ] ; then
  Kaigo1Persent="$(echo "${KAIGODOALL}" | lcalc ''${Kaigo1Ninsuu}' / $1 * 100' | marume 1.0 | awk '{print $1"%"}')"
else
  Kaigo1Persent="0%"
fi
if [ "${Kaigo2Ninsuu}" != "0" ] ; then
  Kaigo2Persent="$(echo "${KAIGODOALL}" | lcalc ''${Kaigo2Ninsuu}' / $1 * 100' | marume 1.0 | awk '{print $1"%"}')"
else
  Kaigo2Persent="0%"
fi
if [ "${Kaigo3Ninsuu}" != "0" ] ; then
  Kaigo3Persent="$(echo "${KAIGODOALL}" | lcalc ''${Kaigo3Ninsuu}' / $1 * 100' | marume 1.0 | awk '{print $1"%"}')"
else
  Kaigo3Persent="0%"
fi
if [ "${Kaigo4Ninsuu}" != "0" ] ; then
  Kaigo4Persent="$(echo "${KAIGODOALL}" | lcalc ''${Kaigo4Ninsuu}' / $1 * 100' | marume 1.0 | awk '{print $1"%"}')"
else
  Kaigo4Persent="0%"
fi
if [ "${Kaigo5Ninsuu}" != "0" ] ; then
  Kaigo5Persent="$(echo "${KAIGODOALL}" | lcalc ''${Kaigo5Ninsuu}' / $1 * 100' | marume 1.0 | awk '{print $1"%"}')"
else
  Kaigo5Persent="0%"
fi

#-----------------
# 介護度対前年月
#-----------------
zentsuki=$(mdate ${lastmonth}m/-1)
zentsukifirstday="$(mdate ${zentsuki}m | tarr | head -1)"

cat /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_KAIGOHOKEN                    |
# 介護保険有効期間の開始日がlastmonthfirstdayより前で、終了日がlastmonthfirstdayより後のものだけにする
awk '$3!="_"&&$23<="'${zentsukifirstday}'"&&$28>="'${zentsukifirstday}'"&&$(NF-2)!="9"'  |
self 1 3 23 28          |
# 1:利用者(入居者)ID 2:介護度 3:有効期間FROM：西暦 4:有効期間TO：西暦
# 同じ月に2つ以上介護度があったら(介護認定切替があった場合)後のものをとる
LANG=C sort -k1,1 -k3,4 |
getlast 1 1             |
self 1 2                > $tmp-zentsuki_riyousha_kaigodo_before
# 1:利用者(入居者)ID 2:介護度

if [ -s $tmp-zentsuki_riyousha_kaigodo_before ] ; then
  cat $tmp-zentsuki_riyousha_kaigodo_before |
  cjoin1 key=1 $tmp-zentsuki-honnyukyosha-riyoushaid - > $tmp-zentsuki_riyousha_kaigodo
else
  : > $tmp-zentsuki_riyousha_kaigodo
fi

ZentsukiKAIGODOALL="$(gyo $tmp-zentsuki_riyousha_kaigodo)"
ZentsukiShienGoukeiNinsuu="$(awk '$2=="1"||$2=="2"' $tmp-zentsuki_riyousha_kaigodo | gyo)"
ZentsukiKaigo1Ninsuu="$(awk '$2=="3"' $tmp-zentsuki_riyousha_kaigodo | gyo)"
ZentsukiKaigo2Ninsuu="$(awk '$2=="4"' $tmp-zentsuki_riyousha_kaigodo | gyo)"
ZentsukiKaigo3Ninsuu="$(awk '$2=="5"' $tmp-zentsuki_riyousha_kaigodo | gyo)"
ZentsukiKaigo4Ninsuu="$(awk '$2=="6"' $tmp-zentsuki_riyousha_kaigodo | gyo)"
ZentsukiKaigo5Ninsuu="$(awk '$2=="7"' $tmp-zentsuki_riyousha_kaigodo | gyo)"
[ -z "${ZentsukiShienGoukeiNinsuu}" ] && ZentsukiShienGoukeiNinsuu="0"
[ -z "${ZentsukiKaigo1Ninsuu}" ] && ZentsukiKaigo1Ninsuu="0"
[ -z "${ZentsukiKaigo2Ninsuu}" ] && ZentsukiKaigo2Ninsuu="0"
[ -z "${ZentsukiKaigo3Ninsuu}" ] && ZentsukiKaigo3Ninsuu="0"
[ -z "${ZentsukiKaigo4Ninsuu}" ] && ZentsukiKaigo4Ninsuu="0"
[ -z "${ZentsukiKaigo5Ninsuu}" ] && ZentsukiKaigo5Ninsuu="0"

ShienGoukeiTaizen=$(echo "${ZentsukiShienGoukeiNinsuu}" | lcalc ''${ShienGoukeiNinsuu}' - $1')
Kaigo1Taizen=$(echo "${ZentsukiKaigo1Ninsuu}" | lcalc ''${Kaigo1Ninsuu}' - $1 ')
Kaigo2Taizen=$(echo "${ZentsukiKaigo2Ninsuu}" | lcalc ''${Kaigo2Ninsuu}' - $1 ')
Kaigo3Taizen=$(echo "${ZentsukiKaigo3Ninsuu}" | lcalc ''${Kaigo3Ninsuu}' - $1 ')
Kaigo4Taizen=$(echo "${ZentsukiKaigo4Ninsuu}" | lcalc ''${Kaigo4Ninsuu}' - $1 ')
Kaigo5Taizen=$(echo "${ZentsukiKaigo5Ninsuu}" | lcalc ''${Kaigo5Ninsuu}' - $1 ')

#--------------
# 平均介護度
#--------------
# 要支援1=0.375として計算、要支援2=1としてけいさん
youshien1_keisanyou="0.375"
youshien2_keisanyou="1"
if [ -s $tmp-riyousha_kaigodo ] ; then
  #HonnyuukyoAll # 本入居者人数
  HeikinKaigodo="$(cat $tmp-riyousha_kaigodo | LANG=C sort -k2,2 | count 2 2 | awk '{if($1=="1"){print "'${youshien1_keisanyou}'",$2}else if($1=="2"){print "'${youshien2_keisanyou}'",$2}else{print $1-1,$2}}' | lcalc '$1*$2' | sm2 0 0 1 1 | lcalc '$1 / '${HonnyuukyoAll}'' | marume 1.2)"
else
  HeikinKaigodo=0
fi

#---------------
# 販売可能戸数
#---------------
HANBAIKANOUKOSUU="$(echo "${roomkosu}" | lcalc '$1 - '${nyukyokosu}'')"

#---------------
# 入退去動向
#---------------
  cat /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_MASTER |
  awk '$(NF-2)!="9"{print $1,$2}'                > $tmp-riyousha_name  

  : > $tmp-nyuukyodoukou_bikou

  # 体験入居/ショートステイ
   if [ -s $tmp-taikennyuukyo_riyoushainfo ] ; then
     cat $tmp-taikennyuukyo_riyoushainfo |
     # $tmp-taikennyuukyo_riyoushainfoは体験入居開始日が全月より前も含んでしまうのでさらに絞込み
     awk '$6>="'${lastmonthfirstday}'"&&$7<="'${lastmonthday}'"' |
     LANG=C sort                         |
# 1:利用者ID   2:施設ID     3:建屋ID 4:居室 5:契約種類ID
# 6:契約開始日 7:契約終了日
  # 利用者名取得
     join1 key=1 $tmp-riyousha_name -    |
# 1:利用者ID   2:利用者名   3:施設ID     4:建屋ID 5:居室
# 6:契約種類ID 7:契約開始日 8:契約終了日
     awk '{print "1",$7,$5,$8!="99999999"?$5"号室様　"substr($7,1,4)"年"substr($7,5,2)"月"substr($7,7,2)"日～"substr($8,1,4)"年"substr($8,5,2)"月"substr($8,7,2)"日　体験入居":$5"号室様　"substr($7,1,4)"年"substr($7,5,2)"月"substr($7,7,2)"日～　体験入居"}' >> $tmp-nyuukyodoukou_bikou
    else
     : 
    fi

   if [ -s $tmp-shortstay_riyoushainfo ] ; then
     cat $tmp-shortstay_riyoushainfo     |
     awk '$6>="'${lastmonthfirstday}'"&&$7<="'${lastmonthday}'"' |
     LANG=C sort                         |
# 1:利用者ID   2:施設ID     3:建屋ID 4:居室 5:契約種類ID
# 6:契約開始日 7:契約終了日
     join1 key=1 $tmp-riyousha_name -    |
# 1:利用者ID   2:利用者名   3:施設ID     4:建屋ID 5:居室
# 6:契約種類ID 7:契約開始日 8:契約終了日
     awk '{print "1",$7,$5,$8!="99999999"?$5"号室様　"substr($7,1,4)"年"substr($7,5,2)"月"substr($7,7,2)"日～"substr($8,1,4)"年"substr($8,5,2)"月"substr($8,7,2)"日　ショートステイ":$5"号室様　"substr($7,1,4)"年"substr($7,5,2)"月"substr($7,7,2)"日～　ショートステイ"}' >> $tmp-nyuukyodoukou_bikou
    else
     :
    fi

  # 入居
  cat $tmp-riyoushakeiyaku_data |
# 1:利用者(入居者)ID 2:契約ID      3:施設ID      4:建屋ID     5:フロアID
# 6:ユニットID       7:居室ID      8:入居時年齢  9:契約種類ID 10:契約日
# 11:引渡し日        12:契約開始日 13:契約終了日 14:退去理由  15:退去理由詳細
# 16:備考            17:予備1      18:予備2      19:予備3     20:予備4
# 21:予備5           22:削除フラグ 23:更新日     24:更新者
  # 対象月最初の日より後の入居日、かつ対象月最終日より前の入居日
  awk '$12>="'${lastmonthfirstday}'"&&$12<="'${lastmonthday}'"' | 
  self 1 7 12 13 |
# 1:利用者(入居者)ID 2:居室ID 3:契約開始日 4:契約終了日
  LANG=C sort    |
  join1 key=1 $tmp-riyousha_name -    |
# 1:利用者(入居者)ID 2:利用者名 3:居室ID 4:契約開始日 5:契約終了日
#  awk '{print "2",$4,$3,$5!="99999999"?$3"号室様　"substr($4,1,4)"年"substr($4,5,2)"月"substr($4,7,2)"日～"substr($5,1,4)"年"substr($5,5,2)"月"substr($5,7,2)"日　入居":$3"号室様　"substr($4,1,4)"年"substr($4,5,2)"月"substr($4,7,2)"日～　入居"}' >> $tmp-nyuukyodoukou_bikou
  awk '{print "2",$4,$3,$3"号室様　"substr($4,1,4)"年"substr($4,5,2)"月"substr($4,7,2)"日　入居"}' >> $tmp-nyuukyodoukou_bikou

  # 退去
  cat $tmp-riyoushakeiyaku_data |
# 対象月最初の日より後の退去日、かつ対象月最終日より前の退去日
  awk '$13>="'${lastmonthfirstday}'"&&$13<="'${lastmonthday}'"' |
  self 1 7 13 12 |
# 1:利用者(入居者)ID 2:居室ID 3:契約開始日 4:契約終了日
  LANG=C sort    |
  join1 key=1 $tmp-riyousha_name -    |
# 1:利用者(入居者)ID 2:利用者名 3:居室ID 4:契約開始日 5:契約終了日
#  awk '{print "3",$4,$3,$5!="99999999"?$3"号室様　"substr($4,1,4)"年"substr($4,5,2)"月"substr($4,7,2)"日～"substr($5,1,4)"年"substr($5,5,2)"月"substr($5,7,2)"日　退去":$3"号室様　"substr($4,1,4)"年"substr($4,5,2)"月"substr($4,7,2)"日～　退去"}' >> $tmp-nyuukyodoukou_bikou
  awk '{print "3",$4,$3,$3"号室様　"substr($4,1,4)"年"substr($4,5,2)"月"substr($4,7,2)"日　退去"}' >> $tmp-nyuukyodoukou_bikou


  if [ -s $tmp-nyuukyodoukou_bikou ] ; then
    # NYUKTODOUKOUBIKOU1 と NYUKTODOUKOUCOL

    cat $tmp-nyuukyodoukou_bikou |
# 1:並び替え用番号 2:契約開始日 3:居室ID 4:内容
    LANG=C sort                  |
    rank ref=1/3                 |
    awk '{print $2,$3,$4,$5"("$1"名)"}' |
    getlast 1 3                  |
    tee $tmp-nyuukyodoukou_bikou_result_mae |
    tail -n +2                   > $tmp-nyuukyodoukou_bikou_result

    NYUKTODOUKOUBIKOU1=$(LANG=C sort $tmp-nyuukyodoukou_bikou_result_mae | head -1 | self 4)
    NYUKTODOUKOUCOL=$(gyo $tmp-nyuukyodoukou_bikou_result)
  else
    :> $tmp-nyuukyodoukou_bikou_result
    NYUKTODOUKOUBIKOU1=""
    NYUKTODOUKOUCOL=""
  fi

#-------------
# 入退院動向
#-------------

  cat /DATA/E-LIFE/UNEI/NYUUINGAIHAKU/${Shisetsu}/${Tateya}/RIYOUSHA_NYUUINGAIHAKU |
# 1:利用者(入居者)ID 2:入院外泊ID 3:施設      4:建屋        5:居室
# 6:種別             7:期間FROM   8:期間TO    9:出発時間    10:帰宅時間
# 11:入院外泊先      12:備考      13:欠食登録 14:出発日在籍 15:帰宅日在籍
# 16:予備1
  awk '$6=="1"'                                                             |
  tee $tmp-riyousha_nyuuindata                                              |
  awk '$7>="'${lastmonthfirstday}'"&&$7<="'${lastmonthday}'"&&$(NF-2)!="9"' |
  self 1 5/8 > $tmp-nyuuin_data
# 1:利用者(入居者)ID 2:居室 3:種別 4:期間FROM 5:期間TO
 
  if [ -s $tmp-nyuuin_data ] ; then
    cat $tmp-nyuuin_data |
    awk '{print "1",$4,$2,$2"号室様　"substr($4,1,4)"年"substr($4,5,2)"月"substr($4,7,2)"日　入院"}'            
  else
    :
  fi > $tmp-nyuuin_result

  cat $tmp-riyousha_nyuuindata  |
  awk '$8>="'${lastmonthfirstday}'"&&$8<="'${lastmonthday}'"&&$(NF-2)!="9"' |
  self 1 5/8 > $tmp-taiin_data
# 1:利用者(入居者)ID 2:居室 3:種別 4:期間FROM 5:期間TO

  if [ -s $tmp-taiin_data ] ; then
    cat $tmp-taiin_data |
    awk '{print "9",$5,$2,$2"号室様　"substr($5,1,4)"年"substr($5,5,2)"月"substr($5,7,2)"日　退院"}'
  else
    :
  fi >> $tmp-nyuuin_result
# 1:(並べ替え用番号) 2:期間TO 3:居室 4:内容

  if [ -s $tmp-nyuuin_result ] ; then
    cat $tmp-nyuuin_result |
    LANG=C sort            
  else
    :
  fi > $tmp-nyuutaiinjyoukyou_result
  
#---------------------------------
#------------
# 職員状況
#------------
cat /home/hands/E-LIFE/TBL/JYUUGYOUIN_MASTER/USER_KIHON |
# 1:従業員ID 2:従業員名 3:従業員名カナ 4:勤務期間FROM 5:勤務期間TO
# 6:ID       7:PASS     8:削除フラグ   9:更新日時     10:ユーザーID
# 勤務期間範囲指定と3からはじまる人は除く
awk '$4<="'${lastmonthday}'"&&$5>="'${lastmonthday}'"&&$6!~/^3/&&$(NF-2)!="9"' |
self 1         |
LANG=C sort -u > $tmp-jyugyouinid

cat /home/hands/E-LIFE/TBL/JYUUGYOUIN_MASTER/USER_SHISETSU /home/hands/E-LIFE/TBL/JYUUGYOUIN_MASTER/EXTRA_USER_SHISETSU         |
awk '$2=="'${Shisetsu}'"&&$(NF-2)!="9"' |
if [ ! -z "${Tateya}" -a "${Tateya}" = "02" ] ; then
  awk '$3=="'${Tateya}'"{print $1,"1"}'
else
  awk '$3!="02"{print $1,"1"}'
fi               |
LANG=C sort -u   > $tmp-jyuugyouyin_data
if [ -s $tmp-jyugyouinid -a -s $tmp-jyuugyouyin_data ] ; then
  cat $tmp-jyuugyouyin_data        |
  join1 key=1 $tmp-jyugyouinid -   |
  gyo                              > $tmp-jyuugyouin_ninzuu

  SHOKUINNINZUU="$(cat $tmp-jyuugyouin_ninzuu)"
else
  SHOKUINNINZUU=""
fi

#--------------------------------------------------
#----------
# 食事実績
#----------
# 喫食対象メニュー
cat /home/hands/E-LIFE/SHOKUJI/POMPA/${Shisetsu}/SHOKUJI_MENU  |
LANG=C sort -k1,1                           |
awk '$18=="1"{print $1}'                     > $tmp-shokuji_menu
# 1:食事ID

#cat /DATA/E-LIFE/SEIKYU/SHISETSU/SHOKUJI/${Shisetsu}/${Tateya}/${lastmonth}/RIYOUSHA_SHOKUJI_JISSEKI_SEIKYUDATA |
## 1:利用者ID    2:施設ID                 3:建屋            4:居室                  5:入居者ゲストフラグ
## 6:日付        7:食事（朝昼夜おやつ他） 8:食事ID          9:食事メニューID        10:食事メニュー名称
## 11:食事種類ID 12:税区分                13:税率           14:単価(税抜き)         15:税額
## 16:税込価格   17:数量                  18:合計金額(税抜) 19:合計税金額(税額のみ) 20:合計金額(税込)
## 21:予備項目1  22:予備項目2             23:予備項目3      24:予備項目4            25:予備項目5
## 26:削除フラグ 27:更新時間              28:更新者
#cjoin1 key=9 $tmp-shokuji_menu -                     |
## 先月時点の本入居者データのみにする
#cjoin1 key=1 $tmp-honnyukyosha-riyoushaid -          |
#tee $tmp-riyousha_shokuji_selfmae                    |
##awk '$5=="1"&&$11=="01"&&$(NF-2)!="9"{print $0}'     |
#awk '$5=="1"&&$(NF-2)!="9"{print $0}'                |
#self 7 17                                            |
#LANG=C sort                                          |
## 1:食事（朝昼夜おやつ他）2:数量
#sm2 1 1 2 2                                          > $tmp-riyousha_shokuji
## 1:食事（朝昼夜おやつ他）2:数量合計

if [ -s $tmp-riyousha_shokuji ] ; then
  ASASHOKUSUU="$(awk '$1=="1"{print $2}' $tmp-riyousha_shokuji)"
  HIRUSHOKUSUU="$(awk '$1=="2"{print $2}' $tmp-riyousha_shokuji)"
  YORUSHOKUSUU="$(awk '$1=="3"{print $2}' $tmp-riyousha_shokuji)"

  [ -z "${ASASHOKUSUU}" ] && ASASHOKUSUU="0"
  [ -z "${HIRUSHOKUSUU}" ] && HIRUSHOKUSUU="0"
  [ -z "${YORUSHOKUSUU}" ] && YORUSHOKUSUU="0"

else
  ASASHOKUSUU="0"
  HIRUSHOKUSUU="0"
  YORUSHOKUSUU="0"
fi

#-------------
# 食事対前年
#-------------
zennenlastmonth=$(mdate ${lastmonth}m/-12)

## 前年の実績データがあったら
#if [ -s "/DATA/E-LIFE/SEIKYU/SHISETSU/SHOKUJI/${Shisetsu}/${Tateya}/${zennenlastmonth}/RIYOUSHA_SHOKUJI_JISSEKI_SEIKYUDATA" ] ; then
#  cat /DATA/E-LIFE/SEIKYU/SHISETSU/SHOKUJI/${Shisetsu}/${Tateya}/${zennenlastmonth}/RIYOUSHA_SHOKUJI_JISSEKI_SEIKYUDATA |
#  cjoin1 key=9 $tmp-shokuji_menu -                     |
#  # 前年本入居者データのみにする
#  cjoin1 key=1 $tmp-zentsuki-honnyukyosha-riyoushaid - |
#
#  tee $tmp-zennen_riyousha_shokuji_selfmae             |
#  #awk '$5=="1"&&$11=="01"&&$(NF-2)!="9"{print $0}'     |
#  awk '$5=="1"&&$(NF-2)!="9"{print $0}'                |
#  self 7 17                                            |
#  LANG=C sort                                          |
#  # 1:食事（朝昼夜おやつ他）2:数量
#  sm2 1 1 2 2                                          > $tmp-zennen_riyousha_shokuji
#  # 1:食事（朝昼夜おやつ他）2:数量合計
  
  if [ -s $tmp-riyousha_shokuji -a -s $tmp-zennen_riyousha_shokuji ] ; then
    cat $tmp-riyousha_shokuji |
    loopj -d_ num=1 - $tmp-zennen_riyousha_shokuji |
  # 1:食事（朝昼夜おやつ他）2:先月数量合計 3:前年先月数量合計 
    lcalc '$1 * 1 , $2 / $3 * 100'                 |
    marume 2.1                                     > $tmp-taizen_shokuji
  else
    :
  fi
  if [ -s $tmp-taizen_shokuji ] ; then
    ASASHOKUSUUTAIZEN="$(awk '$1=="1"{print $NF"%"}' $tmp-taizen_shokuji)"
    HIRUSHOKUSUUTAIZEN="$(awk '$1=="2"{print $NF"%"}' $tmp-taizen_shokuji)"
    YORUSHOKUSUUTAIZEN="$(awk '$1=="3"{print $NF"%"}' $tmp-taizen_shokuji)"

    [ -z "${ASASHOKUSUUTAIZEN}" ] && ASASHOKUSUUTAIZEN="前年実績データなし"
    [ -z "${HIRUSHOKUSUUTAIZEN}" ] && HIRUSHOKUSUUTAIZEN="前年実績データなし"
    [ -z "${YORUSHOKUSUUTAIZEN}" ] && YORUSHOKUSUUTAIZEN="前年実績データなし"

  else
   if [ -s $tmp-riyousha_shokuji ] ; then
     ASASHOKUSUUTAIZEN="前年実績データなし"
     HIRUSHOKUSUUTAIZEN="前年実績データなし"
     YORUSHOKUSUUTAIZEN="前年実績データなし"
   else
     ASASHOKUSUUTAIZEN="-"
     HIRUSHOKUSUUTAIZEN="-"
     YORUSHOKUSUUTAIZEN="-"
   fi
  fi

## 前年実績がなかったら
#else
   [ -z "${ASASHOKUSUUTAIZEN}" ] && ASASHOKUSUUTAIZEN="前年実績データなし"
   [ -z "${HIRUSHOKUSUUTAIZEN}" ] && HIRUSHOKUSUUTAIZEN="前年実績データなし"
   [ -z "${YORUSHOKUSUUTAIZEN}" ] && YORUSHOKUSUUTAIZEN="前年実績データなし"
#fi
#------------------
# 喫食実績
#------------------
 ##mdate  -a "${lastmonth}"m |
 ##self 1                    |
 ##awk '{print $1,$1-10000}' > $tmp-days
 ##
 ##: > $tmp-taishou_ninsu
 ##: > $tmp-zennen_taishou_ninsu
 ### 喫食対象人数だけは一日ずつ計算
 ##cat $tmp-days  |
 ##while read NOWDAY ZENNENDAY ; do
 ##  # 入居者人数
 ##    if [ -z "${Tateya}" -o "${Tateya}" = "_" ] ; then
 ##      awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"' /DATA/E-LIFE/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS
 ##    else
 ##      awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$(NF-2)!="9"' /DATA/E-LIFE/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS
 ##    fi |
 ##    awk '$7<="'$NOWDAY'"&&"'$NOWDAY'"<=$8'          |
 ##    tee $tmp-nyuukyosha_all_${NOWDAY}               |
 ##    self 1 6                                        |
 ##    LANG=C sort -u                                  |
 ##    awk '{print "'${NOWDAY}'",$1,"1"}'                 |
 ##    sm2 1 2 3 3                                     > $tmp-nyuukyosha_${NOWDAY}
 ##    # 1:年月日  2:施設ID  3:人数
 ##    # 0人の施設があった場合対応
 ##    cat /home/hands/E-LIFE/TBL/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR   |
 ##    awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$(NF-2)!="9"{print "'$NOWDAY'",$1}' |
 ##    LANG=C sort -u                                  |
 ##    cjoin1 +ng key=1/2 $tmp-nyuukyosha_${NOWDAY} -     > $tmp-nyuukyosha_ok 2>$tmp-nyuukyosha_nashi
 ##
 ##   if [ -s $tmp-nyuukyosha_nashi ] ; then
 ##    cat $tmp-nyuukyosha_nashi          |
 ##    awk '{print $0,"0"}'               |
 ##    cat - $tmp-nyuukyosha_${NOWDAY}       |
 ##    LANG=C sort -u
 ##   else
 ##    cat $tmp-nyuukyosha_${NOWDAY}
 ##   fi > $tmp-nyuukyosha_suu_${NOWDAY}
 ##
 ##   # 対象者
 ##    if [ -z "${Tateya}" -o "${Tateya}" = "_" ] ; then
 ##      awk '$3=="'${Shisetsu}'"&&$(NF-2)!="9"' /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_KEIYAKU
 ##    else
 ##      awk '$3=="'${Shisetsu}'"&&$4=="'${Tateya}'"&&$(NF-2)!="9"' /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_KEIYAKU
 ##    fi |
 ##    tee $tmp-keiyaku_tee |
 ##    self 3 1 2  |
 ##    # 1:施設ID 2:利用者(入居者)ID 3:契約ID
 ##    LANG=C sort -u                                      > $tmp-keiyaku_data_${NOWDAY}
 ##
 ##  # 体験入居
 ##    cat $tmp-keiyaku_tee |
 ##    awk '$9=="001"&&$12<="'$NOWDAY'"&&"'$NOWDAY'"<=$13'      |
 ##    self 3 1             |
 ##    LANG=C sort -u       > $tmp-taikennyuukyo_before_${NOWDAY}
 ##    # 1:施設ID 2:利用者(入居者)ID
 ##
 ##    if [ -s $tmp-taikennyuukyo_before_${NOWDAY} ] ; then
 ##      cat $tmp-nyuukyosha_all_${NOWDAY} |
 ##      self 1 6                       |
 ##      LANG=C sort -u                 |
 ##      cjoin1 key=1/2 $tmp-taikennyuukyo_before_${NOWDAY} - > $tmp-taikennyuukyo_${NOWDAY}
 ##    else
 ##      :
 ##    fi
 ##  # セカンド特販データを作成
 ##    : >  $tmp-riyouryou_data_${NOWDAY}
 ##    # 月額利用料
 ##    # 1:利用者(入居者)ID 2:施設ID        3:契約ID      4:利用料種別ID 5:番号
 ##    # 6:起算開始日       7:起算終了日    8:金額        9:特販ID       10:値引額
 ##    # 11:値引き後金額    12:特販期間FROM 13:特販期間TO 14:予備1       15:予備2
 ##    # 16:予備3           17:予備4        18:予備5      19:削除フラグ  20:更新時間
 ##    # 21:更新者
 ##    awk '$2=="'${Shisetsu}'"&&$(NF-2)!="9"' /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_RIYOURYOU |
 ##    awk '$6<="'$NOWDAY'"&&"'$NOWDAY'"<=$7&&$9=="015"&&$12<="'$NOWDAY'"&&"'$NOWDAY'"<=$13{print $2,$1,$3}' |
 ##    LANG=C sort -u   >> $tmp-riyouryou_data_${NOWDAY}
 ##    # 1:施設ID 2:利用者(入居者)ID 3:契約ID
 ##
 ##    # 契約金
 ##    # 1:利用者(入居者)ID 2:施設ID      3:契約ID    4:契約金種別ID  5:番号
 ##    # 6:償却開始日       7:償却終了日  8:金額      9:償却回数      10:非返却金額
 ##    # 11:算出方法        12:特販ID     13:値引額   14:値引き後金額 15:特販期間FROM
 ##    # 16:特販期間TO      17:予備1      18:予備2    19:予備3        20:予備4
 ##    # 21:予備5           22:削除フラグ 23:更新時間 24:更新者
 ##    awk '$2=="'${Shisetsu}'"&&$(NF-2)!="9"' /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_KEIYAKUKIN |
 ##    awk '$6<="'$NOWDAY'"&&"'$NOWDAY'"<=$7&&$12=="015"&&$15<="'$NOWDAY'"&&"'$NOWDAY'"<=$16{print $2,$1,$3}' |
 ##    LANG=C sort -u   >> $tmp-riyouryou_data_${NOWDAY}
 ##    # 通常特販
 ##    # 1:利用者(入居者)ID 2:施設ID  3:契約ID 4:特販種別ID 5:番号
 ##    # 6:値引金額         7:開始日  8:終了日 9:内容       10:予備1
 ##    # 11:予備2           12:予備3  13:予備4 14:予備5     15:削除フラグ
 ##    # 16:更新日          17:更新者
 ##    awk '$2=="'${Shisetsu}'"&&$(NF-2)!="9"' /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_TOKUHAN  |
 ##    awk '$7<="'$NOWDAY'"&&"'$NOWDAY'"<=$8&&$4=="015"{print $2,$1,$3}'     |
 ##    LANG=C sort -u  >> $tmp-riyouryou_data_${NOWDAY}
 ##
 ##    if [ -s $tmp-riyouryou_data_${NOWDAY} -a -s $tmp-keiyaku_data_${NOWDAY} ] ; then
 ##      # 契約情報(該当建屋か判定済み)とjoinして残ったものだけ後で利用
 ##      cat $tmp-riyouryou_data_${NOWDAY} |
 ##      LANG=C sort -u |
 ##      cjoin1 key=1/3 $tmp-keiyaku_data_${NOWDAY} -  > $tmp-second_riyousha_${NOWDAY}
 ##      # 1:施設ID 2:利用者(入居者)ID 3:契約ID
 ##    else
 ##      :
 ##    fi
 ##
 ##    # 入院外泊
 ##    cat /DATA/E-LIFE/UNEI/NYUUINGAIHAKU/${Shisetsu}/${Tateya}/RIYOUSHA_NYUUINGAIHAKU > $tmp-riyousha_nyuuingaihaku_all
 ##
 ##    if [ -s $tmp-riyousha_nyuuingaihaku_all ] ; then
 ##      cat $tmp-riyousha_nyuuingaihaku_all       |
 ##      awk '$(NF-2)!="9"&&$7<="'$NOWDAY'"&&"'$NOWDAY'"<=$8{print $3,$1}'            |
 ##      LANG=C sort -u  > $tmp-nyuuingaihaku_riyousha_before_${NOWDAY}
 ##      # 1:施設 2:利用者(入居者)ID
 ##    else
 ##      :
 ##    fi
 ##
 ##    if [ -s $tmp-nyuuingaihaku_riyousha_before_${NOWDAY} ] ; then
 ##      cat $tmp-nyuukyosha_all_${NOWDAY} |
 ##      self 1 6                       |
 ##      LANG=C sort -u                 |
 ##      cjoin1 key=1/2 $tmp-nyuuingaihaku_riyousha_before_${NOWDAY} - > $tmp-nyuuingaihaku_riyousha_${NOWDAY}
 ##    else
 ##      :
 ##    fi
 ##
 ##    if [ -s $tmp-second_riyousha_${NOWDAY} ] ; then
 ##      cat $tmp-second_riyousha_${NOWDAY}          |
 ##      self 1 2                                 |
 ##      if [ -s $tmp-nyuuingaihaku_riyousha_${NOWDAY} ] ; then
 ##        cat - $tmp-nyuuingaihaku_riyousha_${NOWDAY}
 ##      else
 ##        cat -
 ##      fi |
 ##      if [ -s $tmp-taikennyuukyo_${NOWDAY} ] ; then
 ##        cat - $tmp-taikennyuukyo_${NOWDAY}
 ##      else
 ##        cat -
 ##      fi |
 ##      LANG=C sort -u                           |
 ##      tee $tmp-jyogai_riyousha                 |
 ##      awk '{print "'${NOWDAY}'",$1,"-1"}'         |
 ##       sm2 1 2 3 3                             |
 ##       # 1:年月日  2:施設ID  3:カウントしない人数(マイナスで人数)
 ##       cat $tmp-nyuukyosha_suu_${NOWDAY} -
 ##    elif [ -s $tmp-nyuuingaihaku_riyousha_${NOWDAY} ] ; then
 ##      cat $tmp-nyuuingaihaku_riyousha_${NOWDAY}   |
 ##      if [ -s $tmp-taikennyuukyo_${NOWDAY} ] ; then
 ##        cat - $tmp-taikennyuukyo_${NOWDAY}
 ##      else
 ##        cat -
 ##      fi |
 ##      LANG=C sort -u                           |
 ##      tee $tmp-jyogai_riyousha                 |
 ##      awk '{print "'${NOWDAY}'",$1,"-1"}'         |
 ##      sm2 1 2 3 3                              |
 ##    # 1:年月日  2:施設ID  3:カウントしない人数(マイナスで人数)
 ##      cat $tmp-nyuukyosha_suu_${NOWDAY} -
 ##    elif [ -s $tmp-taikennyuukyo_${NOWDAY} ] ; then
 ##      cat $tmp-taikennyuukyo_${NOWDAY}            |
 ##      LANG=C sort -u                           |
 ##      tee $tmp-jyogai_riyousha                 |
 ##      awk '{print "'${NOWDAY}'",$1,"-1"}'         |
 ##      sm2 1 2 3 3                              |
 ##    # 1:年月日  2:施設ID  3:カウントしない人数(マイナスで人数)
 ##      cat $tmp-nyuukyosha_suu_${NOWDAY} -
 ##    else
 ##      cat $tmp-nyuukyosha_suu_${NOWDAY}
 ##    fi  |
 ##    LANG=C sort                                |
 ##    sm2 1 2 3 3                                >> $tmp-taishou_ninsu
 ##    # 1:年月日  2:施設ID 3:人数
 ##
 ##
 ########3前年対象者計算-------------
 ##
 ##  # 前年実績があった場合のみ対象者の計算やる
 ##  if [ -s $tmp-taizen_shokuji ] ; then
 ##
 ##  # 入居者人数
 ##    if [ -z "${Tateya}" -o "${Tateya}" = "_" ] ; then
 ##      awk '$1=="'${Shisetsu}'"&&$(NF-2)!="9"' /DATA/E-LIFE/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS
 ##    else
 ##      awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$(NF-2)!="9"' /DATA/E-LIFE/UNEI/RIYOUSHA/SHISETSU_RIYOUSHA_STATUS
 ##    fi |
 ##    awk '$7<="'$ZENNENDAY'"&&"'$ZENNENDAY'"<=$8'          |
 ##    tee $tmp-nyuukyosha_all_${ZENNENDAY}               |
 ##    self 1 6                                        |
 ##    LANG=C sort -u                                  |
 ##    awk '{print "'${ZENNENDAY}'",$1,"1"}'                 |
 ##    sm2 1 2 3 3                                     > $tmp-nyuukyosha_${ZENNENDAY}
 ##    # 1:年月日  2:施設ID  3:人数
 ##    # 0人の施設があった場合対応
 ##    cat /home/hands/E-LIFE/TBL/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR   |
 ##    awk '$1=="'${Shisetsu}'"&&$2=="'${Tateya}'"&&$(NF-2)!="9"{print "'$ZENNENDAY'",$1}' |
 ##    LANG=C sort -u                                  |
 ##    cjoin1 +ng key=1/2 $tmp-nyuukyosha_${ZENNENDAY} -     > $tmp-nyuukyosha_ok 2>$tmp-nyuukyosha_nashi
 ##
 ##   if [ -s $tmp-nyuukyosha_nashi ] ; then
 ##    cat $tmp-nyuukyosha_nashi          |
 ##    awk '{print $0,"0"}'               |
 ##    cat - $tmp-nyuukyosha_${ZENNENDAY}       |
 ##    LANG=C sort -u
 ##   else
 ##    cat $tmp-nyuukyosha_${ZENNENDAY}
 ##   fi > $tmp-nyuukyosha_suu_${ZENNENDAY}
 ##
 ##  # 対象者
 ##    if [ -z "${Tateya}" -o "${Tateya}" = "_" ] ; then
 ##      awk '$3=="'${Shisetsu}'"&&$(NF-2)!="9"' /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_KEIYAKU
 ##    else
 ##      awk '$3=="'${Shisetsu}'"&&$4=="'${Tateya}'"&&$(NF-2)!="9"' /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_KEIYAKU
 ##    fi |
 ##    tee $tmp-keiyaku_tee |
 ##    self 3 1 2  |
 ##    # 1:施設ID 2:利用者(入居者)ID 3:契約ID
 ##    LANG=C sort -u                                      > $tmp-keiyaku_data_${ZENNENDAY}
 ##
 ##  # 体験入居
 ##    cat $tmp-keiyaku_tee |
 ##    awk '$9=="001"&&$12<="'$ZENNENDAY'"&&"'$ZENNENDAY'"<=$13'      |
 ##    self 3 1             |
 ##    LANG=C sort -u       > $tmp-taikennyuukyo_before_${ZENNENDAY}
 ##    # 1:施設ID 2:利用者(入居者)ID
 ##
 ##    if [ -s $tmp-taikennyuukyo_before_${ZENNENDAY} ] ; then
 ##      cat $tmp-nyuukyosha_all_${ZENNENDAY} |
 ##      self 1 6                       |
 ##      LANG=C sort -u                 |
 ##      cjoin1 key=1/2 $tmp-taikennyuukyo_before_${ZENNENDAY} - > $tmp-taikennyuukyo_${ZENNENDAY}
 ##    else
 ##      :
 ##    fi
 ##  # セカンド特販データを作成
 ##    : >  $tmp-riyouryou_data_${ZENNENDAY}
 ##    # 月額利用料
 ##    # 1:利用者(入居者)ID 2:施設ID        3:契約ID      4:利用料種別ID 5:番号
 ##    # 6:起算開始日       7:起算終了日    8:金額        9:特販ID       10:値引額
 ##    # 11:値引き後金額    12:特販期間FROM 13:特販期間TO 14:予備1       15:予備2
 ##    # 16:予備3           17:予備4        18:予備5      19:削除フラグ  20:更新時間
 ##    # 21:更新者
 ##    awk '$2=="'${Shisetsu}'"&&$(NF-2)!="9"' /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_RIYOURYOU |
 ##    awk '$6<="'$ZENNENDAY'"&&"'$ZENNENDAY'"<=$7&&$9=="015"&&$12<="'$ZENNENDAY'"&&"'$ZENNENDAY'"<=$13{print $2,$1,$3}' |
 ##    LANG=C sort -u   >> $tmp-riyouryou_data_${ZENNENDAY}
 ##    # 1:施設ID 2:利用者(入居者)ID 3:契約ID
 ##
 ##    # 契約金
 ##    # 1:利用者(入居者)ID 2:施設ID      3:契約ID    4:契約金種別ID  5:番号
 ##    # 6:償却開始日       7:償却終了日  8:金額      9:償却回数      10:非返却金額
 ##    # 11:算出方法        12:特販ID     13:値引額   14:値引き後金額 15:特販期間FROM
 ##    # 16:特販期間TO      17:予備1      18:予備2    19:予備3        20:予備4
 ##    # 21:予備5           22:削除フラグ 23:更新時間 24:更新者
 ##    awk '$2=="'${Shisetsu}'"&&$(NF-2)!="9"' /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_KEIYAKUKIN |
 ##    awk '$6<="'$ZENNENDAY'"&&"'$ZENNENDAY'"<=$7&&$12=="015"&&$15<="'$ZENNENDAY'"&&"'$ZENNENDAY'"<=$16{print $2,$1,$3}' |
 ##    LANG=C sort -u   >> $tmp-riyouryou_data_${ZENNENDAY}
 ##    # 通常特販
 ##    # 1:利用者(入居者)ID 2:施設ID  3:契約ID 4:特販種別ID 5:番号
 ##    # 6:値引金額         7:開始日  8:終了日 9:内容       10:予備1
 ##    # 11:予備2           12:予備3  13:予備4 14:予備5     15:削除フラグ
 ##    # 16:更新日          17:更新者
 ##    awk '$2=="'${Shisetsu}'"&&$(NF-2)!="9"' /DATA/E-LIFE/UNEI/RIYOUSHA/RIYOUSHA_TOKUHAN  |
 ##    awk '$7<="'$ZENNENDAY'"&&"'$ZENNENDAY'"<=$8&&$4=="015"{print $2,$1,$3}'     |
 ##    LANG=C sort -u  >> $tmp-riyouryou_data_${ZENNENDAY}
 ##
 ##    if [ -s $tmp-riyouryou_data_${ZENNENDAY} -a -s $tmp-keiyaku_data_${ZENNENDAY} ] ; then
 ##      # 契約情報(該当建屋か判定済み)とjoinして残ったものだけ後で利用
 ##      cat $tmp-riyouryou_data_${ZENNENDAY} |
 ##      LANG=C sort -u |
 ##      cjoin1 key=1/3 $tmp-keiyaku_data_${ZENNENDAY} -  > $tmp-second_riyousha_${ZENNENDAY}
 ##      # 1:施設ID 2:利用者(入居者)ID 3:契約ID
 ##    else
 ##      :
 ##    fi
 ##
 ##    # 入院外泊
 ##    cat /DATA/E-LIFE/UNEI/NYUUINGAIHAKU/${Shisetsu}/${Tateya}/RIYOUSHA_NYUUINGAIHAKU > $tmp-riyousha_nyuuingaihaku_all
 ##
 ##    if [ -s $tmp-riyousha_nyuuingaihaku_all ] ; then
 ##      cat $tmp-riyousha_nyuuingaihaku_all       |
 ##      awk '$(NF-2)!="9"&&$7<="'$ZENNENDAY'"&&"'$ZENNENDAY'"<=$8{print $3,$1}'            |
 ##      LANG=C sort -u  > $tmp-nyuuingaihaku_riyousha_before_${ZENNENDAY}
 ##      # 1:施設 2:利用者(入居者)ID
 ##    else
 ##      :
 ##    fi
 ##
 ##    if [ -s $tmp-nyuuingaihaku_riyousha_before_${ZENNENDAY} ] ; then
 ##      cat $tmp-nyuukyosha_all_${ZENNENDAY} |
 ##      self 1 6                       |
 ##      LANG=C sort -u                 |
 ##      cjoin1 key=1/2 $tmp-nyuuingaihaku_riyousha_before_${ZENNENDAY} - > $tmp-nyuuingaihaku_riyousha_${ZENNENDAY}
 ##    else
 ##      :
 ##    fi
 ##
 ##    if [ -s $tmp-second_riyousha_${ZENNENDAY} ] ; then
 ##      cat $tmp-second_riyousha_${ZENNENDAY}          |
 ##      self 1 2                                 |
 ##      if [ -s $tmp-nyuuingaihaku_riyousha_${ZENNENDAY} ] ; then
 ##        cat - $tmp-nyuuingaihaku_riyousha_${ZENNENDAY}
 ##      else
 ##        cat -
 ##      fi |
 ##      if [ -s $tmp-taikennyuukyo_${ZENNENDAY} ] ; then
 ##        cat - $tmp-taikennyuukyo_${ZENNENDAY}
 ##      else
 ##        cat -
 ##      fi |
 ##      LANG=C sort -u                           |
 ##      tee $tmp-jyogai_riyousha                 |
 ##      awk '{print "'${ZENNENDAY}'",$1,"-1"}'         |
 ##       sm2 1 2 3 3                             |
 ##       # 1:年月日  2:施設ID  3:カウントしない人数(マイナスで人数)
 ##       cat $tmp-nyuukyosha_suu_${ZENNENDAY} -
 ##    elif [ -s $tmp-nyuuingaihaku_riyousha_${ZENNENDAY} ] ; then
 ##      cat $tmp-nyuuingaihaku_riyousha_${ZENNENDAY}   |
 ##      if [ -s $tmp-taikennyuukyo_${ZENNENDAY} ] ; then
 ##        cat - $tmp-taikennyuukyo_${ZENNENDAY}
 ##      else
 ##        cat -
 ##      fi |
 ##      LANG=C sort -u                           |
 ##      tee $tmp-jyogai_riyousha                 |
 ##      awk '{print "'${ZENNENDAY}'",$1,"-1"}'         |
 ##      sm2 1 2 3 3                              |
 ##    # 1:年月日  2:施設ID  3:カウントしない人数(マイナスで人数)
 ##      cat $tmp-nyuukyosha_suu_${ZENNENDAY} -
 ##    elif [ -s $tmp-taikennyuukyo_${ZENNENDAY} ] ; then
 ##      cat $tmp-taikennyuukyo_${ZENNENDAY}            |
 ##      LANG=C sort -u                           |
 ##      tee $tmp-jyogai_riyousha                 |
 ##      awk '{print "'${ZENNENDAY}'",$1,"-1"}'         |
 ##      sm2 1 2 3 3                              |
 ##    # 1:年月日  2:施設ID  3:カウントしない人数(マイナスで人数)
 ##      cat $tmp-nyuukyosha_suu_${ZENNENDAY} -
 ##    else
 ##      cat $tmp-nyuukyosha_suu_${ZENNENDAY}
 ##    fi  |
 ##    LANG=C sort                                |
 ##    sm2 1 2 3 3                                >> $tmp-zennen_taishou_ninsu
 ##    # 1:年月日  2:施設ID 3:人数
 ##  # 前年実績がなかったら対象者計算しない
 ##  else
 ##    :
 ##  fi
 ##done

if [ -s $tmp-taishou_ninsu ] ; then
  cat $tmp-taishou_ninsu    |
#  awk '$2=="'${Shisetsu}'"' |
#  LANG=C sort               |
#  sm2 2 2 3 3               |
  tee $tmp-taishouninsu_keisanyou |
  # 1:対象人数
  lcalc ''${ASASHOKUSUU}' / $1 * 100' |
  marume 1.1                          > $tmp-asa_kisshoku

  cat $tmp-taishouninsu_keisanyou      |
  lcalc ''${HIRUSHOKUSUU}' / $1 * 100' |
  marume 1.1                           > $tmp-hiru_kisshoku

  cat $tmp-taishouninsu_keisanyou      |
  lcalc ''${YORUSHOKUSUU}' / $1 * 100' |
  marume 1.1                           > $tmp-yoru_kisshoku

  ASAKISSHOKU_kazu=$(cat $tmp-asa_kisshoku  | awk '{print $1}')
  HIRUKISSHOKU_kazu=$(cat $tmp-hiru_kisshoku  | awk '{print $1}')
  YORUKISSHOKU_kazu=$(cat $tmp-yoru_kisshoku  | awk '{print $1}')

  [ ! -z "${ASAKISSHOKU_kazu}" ] && ASAKISSHOKU=$(echo "${ASAKISSHOKU_kazu}%")
  [ ! -z "${HIRUKISSHOKU_kazu}" ] && HIRUKISSHOKU=$(echo "${HIRUKISSHOKU_kazu}%")
  [ ! -z "${YORUKISSHOKU_kazu}" ] && YORUKISSHOKU=$(echo "${YORUKISSHOKU_kazu}%")
else
  ASAKISSHOKU="-"
  HIRUKISSHOKU="-"
  YORUKISSHOKU="-"
fi

if [ -s $tmp-zennen_taishou_ninsu ] ; then
#$tmp-zennen_riyousha_shokuji
# 1:食事（朝昼夜おやつ他）2:前年数量合計

  ZENNENASASHOKUSUU="$(awk '$1=="1"{print $2}' $tmp-zennen_riyousha_shokuji)"
  ZENNENHIRUSHOKUSUU="$(awk '$1=="2"{print $2}' $tmp-zennen_riyousha_shokuji)"
  ZENNENYORUSHOKUSUU="$(awk '$1=="3"{print $2}' $tmp-zennen_riyousha_shokuji)"

  cat $tmp-zennen_taishou_ninsu |
#  awk '$2=="'${Shisetsu}'"' |
#  LANG=C sort               |
#  sm2 2 2 3 3               |
  tee $tmp-zennen_taishouninsu_keisanyou |
  # 1:対象人数
  lcalc ''${ZENNENASASHOKUSUU}' / $1 * 100'    |
  marume 1.1                          > $tmp-zennen_asa_kisshoku
  cat $tmp-zennen_taishouninsu_keisanyou      |
  lcalc ''${ZENNENHIRUSHOKUSUU}' / $1 * 100' |
  marume 1.1                           > $tmp-zennen_hiru_kisshoku

  cat $tmp-zennen_taishouninsu_keisanyou      |
  lcalc ''${ZENNENYORUSHOKUSUU}' / $1 * 100' |
  marume 1.1                           > $tmp-zennen_yoru_kisshoku

  ASAKISSHOKUTAIZEN=$(cat $tmp-zennen_asa_kisshoku | lcalc ' '${ASAKISSHOKU_kazu}' / $1 * 100' | marume 1.1 | awk '{print $1"%"}')
  HIRUKISSHOKUTAIZEN=$(cat $tmp-zennen_hiru_kisshoku | lcalc ' '${HIRUKISSHOKU_kazu}' / $1 * 100' | marume 1.1 | awk '{print $1"%"}')
  YORUKISSHOKUTAIZEN=$(cat $tmp-zennen_yoru_kisshoku | lcalc ' '${YORUKISSHOKU_kazu}' / $1 * 100' | marume 1.1 | awk '{print $1"%"}')

  [ -z "${ASAKISSHOKUTAIZEN}" ] && ASAKISSHOKUTAIZEN="-"
  [ -z "${HIRUKISSHOKUTAIZEN}" ] && HIRUKISSHOKUTAIZEN="-"
  [ -z "${YORUKISSHOKUTAIZEN}" ] && YORUKISSHOKUTAIZEN="-"

else
  ASAKISSHOKUTAIZEN="-"
  HIRUKISSHOKUTAIZEN="-"
  YORUKISSHOKUTAIZEN="-"
fi

#----------------
# ゲスト食
#----------------

#cat /DATA/E-LIFE/SEIKYU/SHISETSU/SHOKUJI/${Shisetsu}/${Tateya}/${lastmonth}/RIYOUSHA_SHOKUJI_JISSEKI_SEIKYUDATA |
## 1:利用者ID    2:施設ID                 3:建屋            4:居室                  5:入居者ゲストフラグ
## 6:日付        7:食事（朝昼夜おやつ他） 8:食事ID          9:食事メニューID        10:食事メニュー名称
## 11:食事種類ID 12:税区分                13:税率           14:単価(税抜き)         15:税額
## 16:税込価格   17:数量                  18:合計金額(税抜) 19:合計税金額(税額のみ) 20:合計金額(税込)
## 21:予備項目1  22:予備項目2             23:予備項目3      24:予備項目4            25:予備項目5
## 26:削除フラグ 27:更新時間              28:更新者
#cjoin1 key=9 $tmp-shokuji_menu -           |
#awk '$5!="1"&&$(NF-2)!="9"{print $0}'      |
#self 7 17                                  |
#LANG=C sort                                |
## 1:食事（朝昼夜おやつ他）2:数量
#sm2 0 0 2 2                                > $tmp-guest_shokuji


#cat /DATA/E-LIFE/SEIKYU/SHISETSU/SHOKUJI/${Shisetsu}/${Tateya}/${zennenlastmonth}/RIYOUSHA_SHOKUJI_JISSEKI_SEIKYUDATA |
## 1:利用者ID    2:施設ID                 3:建屋            4:居室                  5:入居者ゲストフラグ
## 6:日付        7:食事（朝昼夜おやつ他） 8:食事ID          9:食事メニューID        10:食事メニュー名称
## 11:食事種類ID 12:税区分                13:税率           14:単価(税抜き)         15:税額
## 16:税込価格   17:数量                  18:合計金額(税抜) 19:合計税金額(税額のみ) 20:合計金額(税込)
## 21:予備項目1  22:予備項目2             23:予備項目3      24:予備項目4            25:予備項目5
## 26:削除フラグ 27:更新時間              28:更新者
#cjoin1 key=9 $tmp-shokuji_menu -           |
#awk '$5!="1"&&$(NF-2)!="9"{print $0}'      |
#self 7 17                                  |
#LANG=C sort                                |
## 1:食事（朝昼夜おやつ他）2:数量
#sm2 0 0 2 2                                > $tmp-zennen_guest_shokuji

 if [ -s $tmp-guest_shokuji ] ; then
   GUESTSHOKUSUU=$(cat $tmp-guest_shokuji)
   if [ -s $tmp-zennen_guest_shokuji ] ; then
     GUESTSHOKUSUUTAIZEN=$(cat $tmp-zennen_guest_shokuji | lcalc ' '${GUESTSHOKUSUU}' / $1 * 100' |  marume 1.1 | awk '{print $1"%"}')
   else
     GUESTSHOKUSUUTAIZEN="前年実績なし"
   fi
 else
   GUESTSHOKUSUU="0"
   GUESTSHOKUSUUTAIZEN="0%"
 fi
#---------------------------------------------------------------------

if [ -z ${downloadfile} ];then
  FILE_NAME="null"
elif [ $(cat ${downloadfile}) == "zero" ];then
  FILE_NAME="null"
  # 検索結果がゼロであればメッセージ表示
cat <<- FIN > $tmp-html2
  <script type="text/javascript" language="javascript">
    alert('抽出データがありません');
  </script>
FIN
else
  file=$(cat ${downloadfile})
  FILE_NAME="/E-LIFE/UNEI/DOWNLOAD/${file}"
fi
#---------------------------------------------------------------------

# calsedファイル
cat << FIN > $tmp-calsed_data
###USERID###       ${userid}      
###USERNAME###     ${USERNAME}
###SHISETSUID### ${shisetsu}
###SHISETSUNAME### ${SHISETSUNAME}
###TATEYANAME### ${TATEYANAME}
###ERROR_MESSAGE### ${error_message}
###SELECT_SHISETSU### $select_shisetsu
###RIYOUSHAID###   ${RIYOUSHAID}
###RIYOUSHANAME### ${RIYOUSHANAME}
###RIYOUSHNAMEKANA### ${RIYOUSHNAMEKANA}
###RIYOUSHASEIBETSU### ${RIYOUSHASEIBETSU}
###DROPDOWN_ACTIVE1### @
###LI_UNEI14### active
###FILE_NAME### ${FILE_NAME}
FIN
# calsedファイル2
cat << FINN > $tmp-calsed_data2
###KOUSHINBI### ${KOUSHINBI}
###KOUSHINSHA### ${KOUSHINSHA}
###RIYOUSHABIRTHGENGOU### ${RIYOUSHABIRTHGENGOU}
###RIYOUSHABIRTHYEAER### ${RIYOUSHABIRTHYEAER}
###RIYOUSHABIRTHMONTH### ${RIYOUSHABIRTHMONTH}
###HANBAIKANOUKOSUUBIKOU### ${HANBAIKANOUKOSUUBIKOU}
###HANBAIKANOUKOSUU### ${HANBAIKANOUKOSUU}
###nyukyokosu### ${nyukyokosu}
###nyukyoritsu### ${nyukyoritsu}%
###HonnyuukyoMale### ${HonnyuukyoMale}
###HonnyuukyoFemale### ${HonnyuukyoFemale}
###HonnyuukyoAll### ${HonnyuukyoAll}
###HonnyuukyoMaleNenrei### ${HonnyuukyoMaleNenrei}
###HonnyuukyoFemaleNenrei### ${HonnyuukyoFemaleNenrei}
###HonnyuukyoMalePercent### ${HonnyuukyoMalePercent}%
###HonnyuukyoFemalePercent### ${HonnyuukyoFemalePercent}%
###HonnyuukyoAllNenrei### ${HonnyuukyoAllNenrei}
###KosuuNyuukyoNinsuu### ${KosuuNyuukyoNinsuu}
###KosuuTaikyoNinsuu### ${KosuuTaikyoNinsuu}
###HonnyuukyoAllNyuukyoNinsuu### ${HonnyuukyoAllNyuukyoNinsuu}
###HonnyuukyoAllTaikyoNinsuu### ${HonnyuukyoAllTaikyoNinsuu}
###HonnyuukyoMaleNyuukyoNinsuu### ${HonnyuukyoMaleNyuukyoNinsuu}
###HonnyuukyoMaleTaikyoNinsuu### ${HonnyuukyoMaleTaikyoNinsuu}
###HonnyuukyoFemaleNyuukyoNinsuu### ${HonnyuukyoFemaleNyuukyoNinsuu}
###HonnyuukyoFemaleTaikyoNinsuu### ${HonnyuukyoFemaleTaikyoNinsuu}
###ShienGoukeiNinsuu### ${ShienGoukeiNinsuu}
###ShienGoukeiPersent### ${ShienGoukeiPersent}
###ShienGoukeiTaizen### ${ShienGoukeiTaizen}
###Kaigo1Ninsuu### ${Kaigo1Ninsuu}
###Kaigo1Persent### ${Kaigo1Persent}
###Kaigo1Taizen### ${Kaigo1Taizen}
###Kaigo2Ninsuu### ${Kaigo2Ninsuu}
###Kaigo2Persent### ${Kaigo2Persent}
###Kaigo2Taizen### ${Kaigo2Taizen}
###Kaigo3Ninsuu### ${Kaigo3Ninsuu}
###Kaigo3Persent### ${Kaigo3Persent}
###Kaigo3Taizen### ${Kaigo3Taizen}
###Kaigo4Ninsuu### ${Kaigo4Ninsuu}
###Kaigo4Persent### ${Kaigo4Persent}
###Kaigo4Taizen### ${Kaigo4Taizen}
###Kaigo5Ninsuu### ${Kaigo5Ninsuu}
###Kaigo5Persent### ${Kaigo5Persent}
###Kaigo5Taizen### ${Kaigo5Taizen}
###HeikinKaigodo### ${HeikinKaigodo}
###NYUKTODOUKOUBIKOU1### ${NYUKTODOUKOUBIKOU1}
###NYUKTODOUKOUCOL### ${NYUKTODOUKOUCOL}
###SHOKUINNINZUU### ${SHOKUINNINZUU}
###ASASHOKUSUU### ${ASASHOKUSUU}
###ASASHOKUSUUTAIZEN### ${ASASHOKUSUUTAIZEN}
###ASAKISSHOKU### ${ASAKISSHOKU}
###ASAKISSHOKUTAIZEN### ${ASAKISSHOKUTAIZEN}
###HIRUSHOKUSUU### ${HIRUSHOKUSUU}
###HIRUSHOKUSUUTAIZEN### ${HIRUSHOKUSUUTAIZEN}
###HIRUKISSHOKU### ${HIRUKISSHOKU}
###HIRUKISSHOKUTAIZEN### ${HIRUKISSHOKUTAIZEN}
###YORUSHOKUSUU### ${YORUSHOKUSUU}
###YORUSHOKUSUUTAIZEN### ${YORUSHOKUSUUTAIZEN}
###YORUKISSHOKU### ${YORUKISSHOKU}
###YORUKISSHOKUTAIZEN### ${YORUKISSHOKUTAIZEN}
###GUESTSHOKUSUU### ${GUESTSHOKUSUU}
###GUESTSHOKUSUUTAIZEN### ${GUESTSHOKUSUUTAIZEN}
FINN

# formhame 前の実体参照変換
calsed "&" "&amp;" ${namedata} |
calsed "<" "&lt;"              |
calsed ">" "&gt;"              |
calsed "\"" "&quot;"           > $tmp-namedata

#------------------------------------------------------------------
#cp -p $tmp-* /home/hands/work/okuda
#-----------------------------------------------------------
# 登録・印刷ボタンの表示
# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN    |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME
# 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
awk '$7=="BUTYO_SHIRYO.CGI"{print $2,$9}' |
LANG=C sort > $tmp-dispkengen_all
# 1:施設ID 2:STATUS

cat $tmp-dispkengen_all |
if [ -s $tmp-dispkengen_all -a $(self 1 $tmp-dispkengen_all |head -1) = "0000" ] ; then
  awk '{print $2}' |
  head -1
else
  awk '$1=="'${shisetsu}'"{print $0}' |
  LANG=C sort |
  getlast 1 1 |
  self 2
fi > $tmp-dispkengen


# 権限がない人は新規登録や出力が出来ない
if [ $(cat $tmp-dispkengen) = "3" ] ;then
  echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed_data
  echo "###TOUROKUDISP### @" >> $tmp-calsed_data
  echo "###PRINTDISP### @"   >> $tmp-calsed_data
elif [ $(cat $tmp-dispkengen) = "2" ] ;then
  echo "###SHINKITOUROKUDISP### @" >> $tmp-calsed_data
  echo "###TOUROKUDISP### @" >> $tmp-calsed_data
  echo "###PRINTDISP### none"   >> $tmp-calsed_data
else
  echo "###SHINKITOUROKUDISP### none" >> $tmp-calsed_data
  echo "###TOUROKUDISP### none" >> $tmp-calsed_data
  echo "###PRINTDISP### none"   >> $tmp-calsed_data
fi

if [ "${MODE}" = "init" ] ; then
  echo "###INITDISP### @" >> $tmp-calsed_data
  echo "###SEARCHDISP### none" >> $tmp-calsed_data  
else
  echo "###INITDISP### none" >> $tmp-calsed_data
  echo "###SEARCHDISP### @" >> $tmp-calsed_data  
fi

#----------------------------------

echo "BUTYO_SHIRYO.CGI" > $tmp-cgi
echo "${shisetsu}" > $tmp-shisetsu

# 施設名はログインユーザーの権限のある施設を取得
cat ${kengen_dir}/USER_KENGEN/${userid}.USER_KENGEN        |
LANG=C sort -k7,7                                          |
join0 key=7 $tmp-cgi                                       |
# 1:userid 2:SHISETSU_ID 3:KENGEN_GROUP 4:appID 5:MENU_NAME 6:DROPDOWN_STATUS 7:CGI_NAME 8:RINK_STATUS 9:CGI_STATUS 10:登録日時
LANG=C sort -u -k2,2n                                      |
self 1 2                                                   > ${tmp}-kengen
self 1 2 ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON |
join0 key=1 $tmp-shisetsu > $tmp-shisetsu_list


#-------------------------------------------------------------
# プルダウンの準備

## 施設
# -----
# 権限のある施設
if [ "$(self 2 ${tmp}-kengen | head -1)" = "0000" ] ; then
  cat ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON |
#  self 1 2          |
  awk '$1!~/^1/'    |
  awk '{if($1=="'${Shisetsu}'"){print $1,$2,"selected"}
      else{print $1,$2,"@"}
     }'
else
  cat ${tmp}-kengen |
  self 2            |
  awk '$1!~/^1/'    |
  LANG=C sort -u    |
  cjoin1 key=1 - ${home_dir}/TBL/SHISETSU_MASTER/SHISETSU_KIHON |
  self 1 2          |
  awk '{if($1=="'${Shisetsu}'"){print $0,"selected"}
      else{print $0,"@"}
     }'
fi >$tmp-shisetsu_name


## 建屋取得
#--
cat ${tbl_dir}/SHISETSU_MASTER/SHISETSU_TATEYA_FLOOR  |
# 1:施設ID 2:建屋ID 3:フロア
awk '$1=="'${Shisetsu}'"{print $2}'                   |
LANG=C sort |
uniq |
join1 key=1 ${tbl_dir}/SHISETSU_MASTER/TATEYA_NAME -           |
self 1 3                                                > $tmp-tateya_kari
# 1:建屋ID 2:建屋名
#-

  cat $tmp-tateya_kari |
# 建屋が選択されていたらselected
awk '{if($1=="'${Tateya}'"){print $0,"selected"}
        else{print $0,"@"}
       }'    > $tmp-tateya_name


## 年月
#-------------
# 年号の用意
echo "2003"  > $tmp-years
startyear="2003"
# 2013年はイーライフ設立年。これより前の請求年月は発生しない
thisyear="$(date +%Y)"

# 2003年から来年まえでの西暦年号を取得
while [ "${startyear}" -le "${thisyear}" ] ; do
# echo "${startyear}"
 startyear=$((startyear+1))
 echo "${startyear}"
done   >> $tmp-years

[ -z "${TaishouYear}" -o "${TaishouYear}" = "_" ] && TaishouYear="$(date +%Y)"
cat $tmp-years |
LANG=C sort -k1,1nr |
awk '{if($1=="'${TaishouYear}'"){print $1,$1,"selected"}
     else{print $1,$1,"@"}}' > $tmp-years_data

# 月用意
echo "1 2 3 4 5 6 7 8 9 10 11 12" |
tarr > $tmp-month

[ -z "${TaishouMonth}" -o "${TaishouMonth}" = "_" ] && TaishouMonth="$(date +%-m)"

TaishouMonthMaezero="$(echo "${TaishouMonth}" | maezero 1.2)"

cat $tmp-month      |
awk '{print $1,$1}' |
maezero 1.2         |
awk '{if($1=="'${TaishouMonthMaezero}'"){print $0,"selected"}
     else{print $0,"@"}}' > $tmp-month_data

echo "###TaishouMonth### ${TaishouMonth}" >> $tmp-calsed_data2
echo "###TaishouYear### ${TaishouYear}" >> $tmp-calsed_data2
#--------------------------------------------------------------
# initの時は入居動向、入居者動向を空にする
if [ "${MODE}" = "init" ] ; then
  : > $tmp-nyuukyodoukou_bikou_result
  : > $tmp-nyuutaiinjyoukyou_result
else
  :
fi
#--------------------------------------------------------------

cat $tmp-calsed_data2      |

if [ "${MODE}" = "init" ] ; then
  awk '{print $1,"@"}'
else
  cat -
fi |

sed 's/###KARA###//g' -    |
sed 's/_/###SPACE###/g' -  |
cat $tmp-calsed_data -     |
cat ${checkfile} -          > $tmp-calsed_data_result
#--------------------------------------------------------------
#cp -p $tmp-* /home/hands/work/okuda
#--------------------------------------------------------------
# データのはめ込み
#cat ${html_dir}/UNEIJYOUKYOU_HOUKOKUSHO.html    |
cat ${html_dir}/UNEIJYOUKYOU_HOUKOKUSHO1.html   |
  cat -\
      ${home_dir}/KYOUTSU/HTML/MENUBAR.html\
      ${html_dir}/UNEIJYOUKYOU_HOUKOKUSHO2.html |
calsed -f $tmp-calsed_data_result -                     |
mojihame -l###USER__NAME### - ${tmp}-usermei            |
mojihame -l###SHISETSU_TAISHOU### - ${tmp}-shisetsu_taishou |
mojihame -lshisetsu_select - $tmp-shisetsu_name         |
mojihame -ltateya_select - $tmp-tateya_name             |
mojihame -lyear_select - $tmp-years_data                |
mojihame -lmonth_select - $tmp-month_data               |
mojihame -lnyuukyosha_select - $tmp-nyuukyosha_name     |
mojihame -lshozoku_shisetsu - $tmp-shozoku_shisetsu     |
mojihame -lnyuukyodoukou - $tmp-nyuukyodoukou_bikou_result     |
mojihame -lnyuuin_gaihaku - $tmp-nyuutaiinjyoukyou_result      |
sed 's/###SPACE###/ /g'                                 |
sed 's/\\n/\n/g'                                        |
sed 's/###KAIGYO###/\n/g'                               |
#--------------------------------------------------------------

#--------------------------------------------------------------
if [ -e $tmp-html2 ] ; then
  cat - $tmp-html2
else
  cat -
fi |
cat -
#--------------------------------------------------------------
## 終了
rm -f $tmp-*
exit 0
